{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e Crystal \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e Crystal \u306e\u8a00\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u3088\u3046\u3053\u305d\uff01 Crystal \u306f\u6b21\u306e\u76ee\u6a19\u3092\u63b2\u3052\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002 Ruby\u306e\u3088\u3046\u306a\u69cb\u6587\u3092\u6301\u3064 (\u3057\u304b\u3057\u4e92\u63db\u6027\u306f\u76ee\u6a19\u3067\u306f\u306a\u3044)\u3002 \u9759\u7684\u306b\u578b\u30c1\u30a7\u30c3\u30af\u304c\u3055\u308c\u308b\u3002\u3057\u304b\u3057\u5909\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u578b\u3092\u660e\u793a\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002 Crystal\u3067\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u66f8\u304f\u3053\u3068\u3067C\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3092\u547c\u3073\u51fa\u305b\u308b\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8a55\u4fa1\u304c\u51fa\u6765\u3066\u3001\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u6d88\u3057\u53bb\u308b\u305f\u3081\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30b3\u30fc\u30c9\u751f\u6210\u304c\u3067\u304d\u308b\u3002 \u52b9\u7387\u7684\u306a\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3002 \u3053\u3053\u304b\u3089\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5185\u306e\u3069\u306e\u30da\u30fc\u30b8\u3078\u79fb\u52d5\u3057\u3066\u3082\u3088\u3044\u3067\u3059\u3002\u3067\u3059\u304c\u3001\u3082\u3057 Crystal \u3092\u3053\u308c\u304b\u3089\u59cb\u3081\u308b\u306e\u3067\u3042\u308c\u3070\u3001 Getting Started \u306e\u7ae0\u3092\u307e\u305a\u8aad\u3080\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 Crystal \u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306b\u3042\u308a\u307e\u3059\u3002","title":"\u5c0e\u5165"},{"location":"index.html#crystal","text":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e Crystal \u306e\u8a00\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u3088\u3046\u3053\u305d\uff01 Crystal \u306f\u6b21\u306e\u76ee\u6a19\u3092\u63b2\u3052\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002 Ruby\u306e\u3088\u3046\u306a\u69cb\u6587\u3092\u6301\u3064 (\u3057\u304b\u3057\u4e92\u63db\u6027\u306f\u76ee\u6a19\u3067\u306f\u306a\u3044)\u3002 \u9759\u7684\u306b\u578b\u30c1\u30a7\u30c3\u30af\u304c\u3055\u308c\u308b\u3002\u3057\u304b\u3057\u5909\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u578b\u3092\u660e\u793a\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002 Crystal\u3067\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u66f8\u304f\u3053\u3068\u3067C\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3092\u547c\u3073\u51fa\u305b\u308b\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8a55\u4fa1\u304c\u51fa\u6765\u3066\u3001\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u6d88\u3057\u53bb\u308b\u305f\u3081\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30b3\u30fc\u30c9\u751f\u6210\u304c\u3067\u304d\u308b\u3002 \u52b9\u7387\u7684\u306a\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3002 \u3053\u3053\u304b\u3089\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5185\u306e\u3069\u306e\u30da\u30fc\u30b8\u3078\u79fb\u52d5\u3057\u3066\u3082\u3088\u3044\u3067\u3059\u3002\u3067\u3059\u304c\u3001\u3082\u3057 Crystal \u3092\u3053\u308c\u304b\u3089\u59cb\u3081\u308b\u306e\u3067\u3042\u308c\u3070\u3001 Getting Started \u306e\u7ae0\u3092\u307e\u305a\u8aad\u3080\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 Crystal \u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306b\u3042\u308a\u307e\u3059\u3002","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e Crystal"},{"location":"SUMMARY.html","text":"Summary \u5c0e\u5165 Getting Started * HTTP \u30b5\u30fc\u30d0\u30fc * \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4f7f\u3044\u65b9 shards \u30b3\u30de\u30f3\u30c9 \u3053\u306e\u30ac\u30a4\u30c9\u306b\u3064\u3044\u3066 \u69cb\u6587\u3068\u305d\u306e\u610f\u5473 * \u30b3\u30e1\u30f3\u30c8 * \u30ea\u30c6\u30e9\u30eb * Nil * \u771f\u507d\u5024 (Bool) * \u6574\u6570 (Integer) * \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (Float) * \u6587\u5b57 (Char) * \u6587\u5b57\u5217 (String) * \u30b7\u30f3\u30dc\u30eb (Symbol) * \u914d\u5217 (Array) * \u30cf\u30c3\u30b7\u30e5 (Hash) * \u7bc4\u56f2 (Range) * \u6b63\u898f\u8868\u73fe (Regex) * \u30bf\u30d7\u30eb (Tuple) * \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb (NamedTuple) * Proc * \u30b3\u30de\u30f3\u30c9 (Command) * \u4ee3\u5165 * \u30ed\u30fc\u30ab\u30eb\u5909\u6570 * \u5236\u5fa1\u5f0f * \u771f\u306b\u306a\u308b\u5024\u3068\u507d\u306b\u306a\u308b\u5024 * if * \u5f8c\u7f6e if * \u5f0f\u3068\u3057\u3066\u306e if * 3\u9805\u6f14\u7b97\u5b50 * if var * if var.is_a?(...) * if var.responds_to?(...) * if var.nil? * if ! * unless * case * while * break * next * until * && * || * \u30d5\u30a1\u30a4\u30eb\u306e require * \u578b\u3068\u30e1\u30bd\u30c3\u30c9 * \u3059\u3079\u3066\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 * \u30d7\u30ed\u30b0\u30e9\u30e0 * \u30af\u30e9\u30b9\u3068\u30e1\u30bd\u30c3\u30c9 * new/initialize/allocate * \u30e1\u30bd\u30c3\u30c9\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 * \u578b\u63a8\u8ad6 * \u30e6\u30cb\u30aa\u30f3\u578b * \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 * \u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u3068\u540d\u524d\u4ed8\u304d\u5f15\u6570 * \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u30bf\u30d7\u30eb * \u578b\u5236\u7d04 * \u623b\u308a\u5024\u306e\u578b * \u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570 * \u6f14\u7b97\u5b50 * \u53ef\u8996\u6027 * \u7d99\u627f * virtual \u578b\u3068 abstract \u578b * \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 * \u30af\u30e9\u30b9\u5909\u6570 * finalize * \u30e2\u30b8\u30e5\u30fc\u30eb * \u30b8\u30a7\u30cd\u30ea\u30af\u30b9 * \u69cb\u9020\u4f53 (Struct) * \u5b9a\u6570 * \u5217\u6319\u578b (Enum) * \u30d6\u30ed\u30c3\u30af\u3068 Proc * \u30d6\u30ed\u30c3\u30af\u306e\u6355\u6349 * Proc \u30ea\u30c6\u30e9\u30eb * \u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0 * \u30af\u30ed\u30fc\u30b8\u30e3 * \u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias) * \u4f8b\u5916\u306e\u51e6\u7406 * \u578b\u306e\u6587\u6cd5 * \u578b\u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3 * is_a? * nil? * responds_to? * as * as? * typeof * \u30de\u30af\u30ed * \u30de\u30af\u30ed\u30e1\u30bd\u30c3\u30c9 * \u30d5\u30c3\u30af * \u30d5\u30ec\u30c3\u30b7\u30e5\u5909\u6570 * \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3 * \u7d44\u307f\u8fbc\u307f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3 * \u4f4e\u30ec\u30d9\u30eb\u30d7\u30ea\u30df\u30c6\u30a3\u30d6 * pointerof * sizeof * instance_sizeof * offsetof * \u521d\u671f\u5316\u3057\u306a\u3044\u5909\u6570\u5ba3\u8a00 * \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0 * \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb * C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 * lib * fun * out * to_unsafe * struct * union * enum * \u5909\u6570 * \u5b9a\u6570 * type * \u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias) * \u30b3\u30fc\u30eb\u30d0\u30c3\u30af * \u5b89\u5168\u3067\u306a\u3044 (unsafe) \u30b3\u30fc\u30c9 \u898f\u7d04 * \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb * \u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 * \u63a5\u7d9a * \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb * \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3 \u30ac\u30a4\u30c9 * \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 * \u4e26\u5217\u6027 * \u30c6\u30b9\u30c8 * shard \u306e\u4f5c\u308a\u65b9 * GitHub \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5 * GitLab \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5 * \u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 (CI) * GitHub Actions * Travis CI * CircleCI * \u9759\u7684\u30ea\u30f3\u30af Platform Support","title":"Summary"},{"location":"SUMMARY.html#summary","text":"\u5c0e\u5165 Getting Started * HTTP \u30b5\u30fc\u30d0\u30fc * \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4f7f\u3044\u65b9 shards \u30b3\u30de\u30f3\u30c9 \u3053\u306e\u30ac\u30a4\u30c9\u306b\u3064\u3044\u3066 \u69cb\u6587\u3068\u305d\u306e\u610f\u5473 * \u30b3\u30e1\u30f3\u30c8 * \u30ea\u30c6\u30e9\u30eb * Nil * \u771f\u507d\u5024 (Bool) * \u6574\u6570 (Integer) * \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (Float) * \u6587\u5b57 (Char) * \u6587\u5b57\u5217 (String) * \u30b7\u30f3\u30dc\u30eb (Symbol) * \u914d\u5217 (Array) * \u30cf\u30c3\u30b7\u30e5 (Hash) * \u7bc4\u56f2 (Range) * \u6b63\u898f\u8868\u73fe (Regex) * \u30bf\u30d7\u30eb (Tuple) * \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb (NamedTuple) * Proc * \u30b3\u30de\u30f3\u30c9 (Command) * \u4ee3\u5165 * \u30ed\u30fc\u30ab\u30eb\u5909\u6570 * \u5236\u5fa1\u5f0f * \u771f\u306b\u306a\u308b\u5024\u3068\u507d\u306b\u306a\u308b\u5024 * if * \u5f8c\u7f6e if * \u5f0f\u3068\u3057\u3066\u306e if * 3\u9805\u6f14\u7b97\u5b50 * if var * if var.is_a?(...) * if var.responds_to?(...) * if var.nil? * if ! * unless * case * while * break * next * until * && * || * \u30d5\u30a1\u30a4\u30eb\u306e require * \u578b\u3068\u30e1\u30bd\u30c3\u30c9 * \u3059\u3079\u3066\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 * \u30d7\u30ed\u30b0\u30e9\u30e0 * \u30af\u30e9\u30b9\u3068\u30e1\u30bd\u30c3\u30c9 * new/initialize/allocate * \u30e1\u30bd\u30c3\u30c9\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 * \u578b\u63a8\u8ad6 * \u30e6\u30cb\u30aa\u30f3\u578b * \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 * \u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u3068\u540d\u524d\u4ed8\u304d\u5f15\u6570 * \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u30bf\u30d7\u30eb * \u578b\u5236\u7d04 * \u623b\u308a\u5024\u306e\u578b * \u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570 * \u6f14\u7b97\u5b50 * \u53ef\u8996\u6027 * \u7d99\u627f * virtual \u578b\u3068 abstract \u578b * \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 * \u30af\u30e9\u30b9\u5909\u6570 * finalize * \u30e2\u30b8\u30e5\u30fc\u30eb * \u30b8\u30a7\u30cd\u30ea\u30af\u30b9 * \u69cb\u9020\u4f53 (Struct) * \u5b9a\u6570 * \u5217\u6319\u578b (Enum) * \u30d6\u30ed\u30c3\u30af\u3068 Proc * \u30d6\u30ed\u30c3\u30af\u306e\u6355\u6349 * Proc \u30ea\u30c6\u30e9\u30eb * \u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0 * \u30af\u30ed\u30fc\u30b8\u30e3 * \u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias) * \u4f8b\u5916\u306e\u51e6\u7406 * \u578b\u306e\u6587\u6cd5 * \u578b\u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3 * is_a? * nil? * responds_to? * as * as? * typeof * \u30de\u30af\u30ed * \u30de\u30af\u30ed\u30e1\u30bd\u30c3\u30c9 * \u30d5\u30c3\u30af * \u30d5\u30ec\u30c3\u30b7\u30e5\u5909\u6570 * \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3 * \u7d44\u307f\u8fbc\u307f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3 * \u4f4e\u30ec\u30d9\u30eb\u30d7\u30ea\u30df\u30c6\u30a3\u30d6 * pointerof * sizeof * instance_sizeof * offsetof * \u521d\u671f\u5316\u3057\u306a\u3044\u5909\u6570\u5ba3\u8a00 * \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0 * \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb * C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 * lib * fun * out * to_unsafe * struct * union * enum * \u5909\u6570 * \u5b9a\u6570 * type * \u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias) * \u30b3\u30fc\u30eb\u30d0\u30c3\u30af * \u5b89\u5168\u3067\u306a\u3044 (unsafe) \u30b3\u30fc\u30c9 \u898f\u7d04 * \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb * \u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 * \u63a5\u7d9a * \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb * \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3 \u30ac\u30a4\u30c9 * \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 * \u4e26\u5217\u6027 * \u30c6\u30b9\u30c8 * shard \u306e\u4f5c\u308a\u65b9 * GitHub \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5 * GitLab \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5 * \u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 (CI) * GitHub Actions * Travis CI * CircleCI * \u9759\u7684\u30ea\u30f3\u30af Platform Support","title":"Summary"},{"location":"platform_support.html","text":"Crystal Platform Support The Crystal compiler runs on, and compiles to, a great number of platforms, though not all platforms are equally supported. Crystal\u2019s support levels are organized into three tiers, each with a different set of guarantees. Platforms are identified by their \u201ctarget triple\u201d which is the string to inform the compiler what kind of output should be produced. The columns below indicate whether the corresponding component works on the specified platform. Tier 1 Tier 1 platforms can be thought of as \u201cguaranteed to work\u201d. Specifically they will each satisfy the following requirements: Official binary releases are provided for the platform. Automated testing is set up to run tests for the platform. Documentation for how to use and how to build the platform is available. Target \u30b3\u30f3\u30d1\u30a4\u30e9 Std \u8aac\u660e x86_64-darwin \u2713 \u2713 64-bit OSX (10.7+, Lion+) x86_64-linux-gnu \u2713 \u2713 64-bit Linux (2.6.18+) i386-linux-gnu \u2713 \u2713 32-bit Linux (2.6.18+) Tier 2 Tier 2 platforms can be thought of as \u201cexpected to build\u201d. Automated tests are not run so it\u2019s not guaranteed to produce a working build, but platforms often work to quite a good degree and patches are always welcome! Target \u30b3\u30f3\u30d1\u30a4\u30e9 Std \u8aac\u660e aarch64-linux-gnu \u2713 \u2713 ARM 64-bit Linux (GNU, hardfloat) aarch64-linux-musl \u2713 \u2713 ARM 64-bit Linux (MUSL, hardfloat) arm-linux-gnueabihf \u2713 \u2713 ARM 32-bit Linux (GNU, hardfloat) i386-linux-musl \u2713 \u2713 32-bit Linux (MUSL) x86_64-linux-musl \u2713 \u2713 64-bit Linux (MUSL) x86_64-openbsd \u2713 \u2713 64-bit OpenBSD (6.x) x86_64-freebsd \u2713 \u2713 64-bit FreeBSD (11.x) Tier 3 Tier 3 platforms are those which the Crystal codebase has some sort of support for, but which are not built or tested automatically, and may not work. Official builds are not available. Target \u30b3\u30f3\u30d1\u30a4\u30e9 Std \u8aac\u660e x86_64-windows-msvc 64-bit MSVC (Windows 7+) aarch64-darwin ARM 64-bit OSX (Apple Silicon) x86_64-unknown-dragonfly 64-bit DragonFlyBSD x86_64-unknown-netbsd 64-bit NetBSD Note: big thanks go to the Rust team for putting together such a clear doc on Rust's platform support. We felt it was so close to what we were needing in Crystal, that we basically copied many chunks of their document. See https://forge.rust-lang.org/platform-support.html .","title":"Platform Support"},{"location":"platform_support.html#crystal-platform-support","text":"The Crystal compiler runs on, and compiles to, a great number of platforms, though not all platforms are equally supported. Crystal\u2019s support levels are organized into three tiers, each with a different set of guarantees. Platforms are identified by their \u201ctarget triple\u201d which is the string to inform the compiler what kind of output should be produced. The columns below indicate whether the corresponding component works on the specified platform.","title":"Crystal Platform Support"},{"location":"platform_support.html#tier-1","text":"Tier 1 platforms can be thought of as \u201cguaranteed to work\u201d. Specifically they will each satisfy the following requirements: Official binary releases are provided for the platform. Automated testing is set up to run tests for the platform. Documentation for how to use and how to build the platform is available. Target \u30b3\u30f3\u30d1\u30a4\u30e9 Std \u8aac\u660e x86_64-darwin \u2713 \u2713 64-bit OSX (10.7+, Lion+) x86_64-linux-gnu \u2713 \u2713 64-bit Linux (2.6.18+) i386-linux-gnu \u2713 \u2713 32-bit Linux (2.6.18+)","title":"Tier 1"},{"location":"platform_support.html#tier-2","text":"Tier 2 platforms can be thought of as \u201cexpected to build\u201d. Automated tests are not run so it\u2019s not guaranteed to produce a working build, but platforms often work to quite a good degree and patches are always welcome! Target \u30b3\u30f3\u30d1\u30a4\u30e9 Std \u8aac\u660e aarch64-linux-gnu \u2713 \u2713 ARM 64-bit Linux (GNU, hardfloat) aarch64-linux-musl \u2713 \u2713 ARM 64-bit Linux (MUSL, hardfloat) arm-linux-gnueabihf \u2713 \u2713 ARM 32-bit Linux (GNU, hardfloat) i386-linux-musl \u2713 \u2713 32-bit Linux (MUSL) x86_64-linux-musl \u2713 \u2713 64-bit Linux (MUSL) x86_64-openbsd \u2713 \u2713 64-bit OpenBSD (6.x) x86_64-freebsd \u2713 \u2713 64-bit FreeBSD (11.x)","title":"Tier 2"},{"location":"platform_support.html#tier-3","text":"Tier 3 platforms are those which the Crystal codebase has some sort of support for, but which are not built or tested automatically, and may not work. Official builds are not available. Target \u30b3\u30f3\u30d1\u30a4\u30e9 Std \u8aac\u660e x86_64-windows-msvc 64-bit MSVC (Windows 7+) aarch64-darwin ARM 64-bit OSX (Apple Silicon) x86_64-unknown-dragonfly 64-bit DragonFlyBSD x86_64-unknown-netbsd 64-bit NetBSD Note: big thanks go to the Rust team for putting together such a clear doc on Rust's platform support. We felt it was so close to what we were needing in Crystal, that we basically copied many chunks of their document. See https://forge.rust-lang.org/platform-support.html .","title":"Tier 3"},{"location":"conventions/index.html","text":"\u898f\u7d04 \u4ed6\u306e\u958b\u767a\u8005\u304c\u5229\u7528\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3001\u4ee5\u4e0b\u306e\u898f\u7d04\u306b\u6cbf\u3063\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 \u6a19\u6e96\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb \u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3046\u3059\u308c\u3070\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u4ed6\u306e\u4eba\u306b\u3068\u3063\u3066\u8ffd\u3044\u304b\u3051\u3084\u3059\u304f\u8aad\u307f\u3084\u3059\u3044\u3082\u306e\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 \u30b3\u30fc\u30c9\u306e\u76ee\u7684\u3092\u8aac\u660e\u3059\u308b\u305f\u3081\u306e \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066 crystal docs \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3057\u3087\u3046\u3002","title":"\u898f\u7d04"},{"location":"conventions/index.html#_1","text":"\u4ed6\u306e\u958b\u767a\u8005\u304c\u5229\u7528\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3001\u4ee5\u4e0b\u306e\u898f\u7d04\u306b\u6cbf\u3063\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 \u6a19\u6e96\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb \u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3046\u3059\u308c\u3070\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u4ed6\u306e\u4eba\u306b\u3068\u3063\u3066\u8ffd\u3044\u304b\u3051\u3084\u3059\u304f\u8aad\u307f\u3084\u3059\u3044\u3082\u306e\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 \u30b3\u30fc\u30c9\u306e\u76ee\u7684\u3092\u8aac\u660e\u3059\u308b\u305f\u3081\u306e \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066 crystal docs \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3057\u3087\u3046\u3002","title":"\u898f\u7d04"},{"location":"conventions/coding_style.html","text":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb \u3053\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u3059\u3002\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3082\u3053\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u4ed6\u306e\u958b\u767a\u8005\u306b\u89aa\u3057\u307f\u3084\u3059\u3044\u3082\u306e\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002 \u547d\u540d \u578b\u306e\u540d\u524d \u306f\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u3068\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class ParseError < Exception end module HTTP class RequestHandler end end alias NumericValue = Float32 | Float64 | Int32 | Int64 lib LibYAML end struct TagDirective end enum Time:: DayOfWeek end \u30e1\u30bd\u30c3\u30c9\u540d \u306f\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u533a\u5207\u308a\u3068\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Person def first_name end def date_of_birth end def homepage_url end end \u5909\u6570\u540d \u306f\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u533a\u5207\u308a\u3068\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Greeting @@default_greeting = \"Hello world\" def initialize ( @custom_greeting = nil ) end def print_greeting greeting = @custom_greeting || @@default_greeting puts greeting end end \u5b9a\u6570 \u306f\u3059\u3079\u3066\u5927\u6587\u5b57\u3068\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 LUCKY_NUMBERS = [ 3 , 7 , 11 ] DOCUMENTATION_URL = \"http://crystal-lang.org/docs\" \u982d\u5b57\u8a9e (Acronyms) \u30af\u30e9\u30b9\u540d\u3067\u306f\u3001\u982d\u5b57\u8a9e\u306f \u3059\u3079\u3066\u5927\u6587\u5b57 \u3068\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 HTTP \u3084 LibXML \u306a\u3069\u3067\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u540d\u3067\u306f\u3001\u982d\u5b57\u8a9e\u306f \u3059\u3079\u3066\u5c0f\u6587\u5b57 \u3068\u3057\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 #from_json \u3084 #to_io \u306a\u3069\u3067\u3059\u3002 \u30e9\u30a4\u30d6\u30e9\u30ea (Lib) \u30e9\u30a4\u30d6\u30e9\u30ea( Lib )\u306e\u540d\u524d\u306f\u5148\u982d\u306b Lib \u3092\u3064\u3051\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 LibC \u3084 LibEvent2 \u306a\u3069\u3067\u3059\u3002 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30d5\u30a1\u30a4\u30eb\u540d \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 / \u306b\u306f README \u3084\u3001 (CI \u3084 editor config \u306a\u3069\u306e) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3001\u305d\u3057\u3066 (CHANGELOG \u3084 CONTRIBUTING \u30ac\u30a4\u30c9\u306a\u3069\u306e) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 src/ \u306b\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 spec/ \u306b\u306f crystal spec \u306b\u3088\u3063\u3066\u5b9f\u884c\u3067\u304d\u308b\u3001 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e spec \u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 bin/ \u306b\u306f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306f\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306e\u540d\u524d\u7a7a\u9593\u3068\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u3001\u305d\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u30af\u30e9\u30b9\u540d\u3084\u540d\u524d\u7a7a\u9593\u306b\u3057\u305f\u304c\u3063\u3066\u3001 \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u533a\u5207\u308a \u3067\u547d\u540d\u3057\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 HTTP::WebSocket \u306f src/http/web_socket.cr \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u7a7a\u767d (Whitespace) \u540d\u524d\u7a7a\u9593\u3084\u30e1\u30bd\u30c3\u30c9\u3001\u30d6\u30ed\u30c3\u30af\u3084\u305d\u306e\u4ed6\u306e\u30cd\u30b9\u30c8\u3055\u308c\u305f\u5185\u5bb9\u3092\u30a4\u30f3\u30c7\u30f3\u30c8\u3059\u308b\u306b\u306f \u30b9\u30da\u30fc\u30b92\u3064 \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 module Scorecard class Parser def parse ( score_text ) begin score_text . scan ( SCORE_PATTERN ) do | match | handle_match ( match ) end rescue err : ParseError # \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u2026 end end end end \u30af\u30e9\u30b9\u5185\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u3084\u5b9a\u6570\u3001\u305d\u3057\u3066\u5185\u90e8\u306e\u30af\u30e9\u30b9\u5b9a\u7fa9\u306f \u9593\u30921\u884c\u7a7a\u3051\u308b \u3053\u3068\u3067\u5206\u5272\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 module Money CURRENCIES = { \"EUR\" => 1.0 , \"ARS\" => 10.55 , \"USD\" => 1.12 , \"JPY\" => 134.15 , } class Amount getter :currency , :value def initialize ( @currency , @value ) end end class CurrencyConversion def initialize ( @amount , @target_currency ) end def amount # \u5909\u63db\u306e\u5b9f\u88c5\u2026 end end end","title":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb"},{"location":"conventions/coding_style.html#_1","text":"\u3053\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u3059\u3002\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3082\u3053\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u4ed6\u306e\u958b\u767a\u8005\u306b\u89aa\u3057\u307f\u3084\u3059\u3044\u3082\u306e\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002","title":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb"},{"location":"conventions/coding_style.html#_2","text":"\u578b\u306e\u540d\u524d \u306f\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u3068\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class ParseError < Exception end module HTTP class RequestHandler end end alias NumericValue = Float32 | Float64 | Int32 | Int64 lib LibYAML end struct TagDirective end enum Time:: DayOfWeek end \u30e1\u30bd\u30c3\u30c9\u540d \u306f\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u533a\u5207\u308a\u3068\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Person def first_name end def date_of_birth end def homepage_url end end \u5909\u6570\u540d \u306f\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u533a\u5207\u308a\u3068\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Greeting @@default_greeting = \"Hello world\" def initialize ( @custom_greeting = nil ) end def print_greeting greeting = @custom_greeting || @@default_greeting puts greeting end end \u5b9a\u6570 \u306f\u3059\u3079\u3066\u5927\u6587\u5b57\u3068\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 LUCKY_NUMBERS = [ 3 , 7 , 11 ] DOCUMENTATION_URL = \"http://crystal-lang.org/docs\"","title":"\u547d\u540d"},{"location":"conventions/coding_style.html#acronyms","text":"\u30af\u30e9\u30b9\u540d\u3067\u306f\u3001\u982d\u5b57\u8a9e\u306f \u3059\u3079\u3066\u5927\u6587\u5b57 \u3068\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 HTTP \u3084 LibXML \u306a\u3069\u3067\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u540d\u3067\u306f\u3001\u982d\u5b57\u8a9e\u306f \u3059\u3079\u3066\u5c0f\u6587\u5b57 \u3068\u3057\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 #from_json \u3084 #to_io \u306a\u3069\u3067\u3059\u3002","title":"\u982d\u5b57\u8a9e (Acronyms)"},{"location":"conventions/coding_style.html#lib","text":"\u30e9\u30a4\u30d6\u30e9\u30ea( Lib )\u306e\u540d\u524d\u306f\u5148\u982d\u306b Lib \u3092\u3064\u3051\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 LibC \u3084 LibEvent2 \u306a\u3069\u3067\u3059\u3002","title":"\u30e9\u30a4\u30d6\u30e9\u30ea (Lib)"},{"location":"conventions/coding_style.html#_3","text":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 / \u306b\u306f README \u3084\u3001 (CI \u3084 editor config \u306a\u3069\u306e) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3001\u305d\u3057\u3066 (CHANGELOG \u3084 CONTRIBUTING \u30ac\u30a4\u30c9\u306a\u3069\u306e) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 src/ \u306b\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 spec/ \u306b\u306f crystal spec \u306b\u3088\u3063\u3066\u5b9f\u884c\u3067\u304d\u308b\u3001 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e spec \u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 bin/ \u306b\u306f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306f\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306e\u540d\u524d\u7a7a\u9593\u3068\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u3001\u305d\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u30af\u30e9\u30b9\u540d\u3084\u540d\u524d\u7a7a\u9593\u306b\u3057\u305f\u304c\u3063\u3066\u3001 \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u533a\u5207\u308a \u3067\u547d\u540d\u3057\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 HTTP::WebSocket \u306f src/http/web_socket.cr \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30d5\u30a1\u30a4\u30eb\u540d"},{"location":"conventions/coding_style.html#whitespace","text":"\u540d\u524d\u7a7a\u9593\u3084\u30e1\u30bd\u30c3\u30c9\u3001\u30d6\u30ed\u30c3\u30af\u3084\u305d\u306e\u4ed6\u306e\u30cd\u30b9\u30c8\u3055\u308c\u305f\u5185\u5bb9\u3092\u30a4\u30f3\u30c7\u30f3\u30c8\u3059\u308b\u306b\u306f \u30b9\u30da\u30fc\u30b92\u3064 \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 module Scorecard class Parser def parse ( score_text ) begin score_text . scan ( SCORE_PATTERN ) do | match | handle_match ( match ) end rescue err : ParseError # \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u2026 end end end end \u30af\u30e9\u30b9\u5185\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u3084\u5b9a\u6570\u3001\u305d\u3057\u3066\u5185\u90e8\u306e\u30af\u30e9\u30b9\u5b9a\u7fa9\u306f \u9593\u30921\u884c\u7a7a\u3051\u308b \u3053\u3068\u3067\u5206\u5272\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 module Money CURRENCIES = { \"EUR\" => 1.0 , \"ARS\" => 10.55 , \"USD\" => 1.12 , \"JPY\" => 134.15 , } class Amount getter :currency , :value def initialize ( @currency , @value ) end end class CurrencyConversion def initialize ( @amount , @target_currency ) end def amount # \u5909\u63db\u306e\u5b9f\u88c5\u2026 end end end","title":"\u7a7a\u767d (Whitespace)"},{"location":"conventions/documenting_code.html","text":"\u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 Documentation for API features can be written in code comments directly preceding the definition of the respective feature. By default, all public methods, macros, types and constants are considered part of the API documentation. Tip The compiler command crystal docs automatically extracts the API documentation and generates a website to present it. Association Doc comments must be positioned directly above the definition of the documented feature. Consecutive comment lines are combined into a single comment block. Any empty line breaks the association to the documented feature. # This comment is not associated with the class. # First line of documentation for class Unicorn. # Second line of documentation for class Unicorn. class Unicorn end Format Doc comments support Markdown formatting. The first paragraph of a doc comment is considered its summary. It should concisely define the purpose and functionality. Supplementary details and usages instructions should follow in subsequent paragraphs. \u4f8b\u3048\u3070\u3001 # Returns the number of horns this unicorn has. # # Always returns `1`. def horns 1 end Tip It is generally advised to use descriptive, third person present tense: Returns the number of horns this unicorn has (instead of an imperative Return the number of horns this unicorn has ). Markup Linking References to other API features can be enclosed in single backticks. They are automatically resolved and converted into links to the respective feature. class Unicorn # Creates a new `Unicorn` instance. def initialize end end The same lookup rules apply as in Crystal code. Features in the currently documented namespace can be accessed with relative names: Instance methods are referenced with a hash prefix: #horns . Class methods are referenced with a dot prefix: .new . Constants and types are referenced by their name: Unicorn . Features in other namespaces are referenced with the fully-qualified type path: Unicorn#horns , Unicorn.new , Unicorn::CONST . Different overloads of a method can be identified by the full signature .new(name) , ,new(name, age) . Parameters When refering to parameters, it is recommended to write their name italicized ( *italicized* ): # Creates a unicorn with the specified number of *horns*. def initialize ( @horns = 1 ) raise \"Not a unicorn\" if @horns != 1 end Code Examples Code examples can be placed in Markdown code blocks. If no language tag is given, the code block is considered to be Crystal code. # Example: # ``` # unicorn = Unicorn.new # unicorn.horns # => 1 # ``` class Unicorn end To designate a code block as plain text, it must be explicitly tagged. # Output: # ```plain # \"I'm a unicorn\" # ``` def say puts \"I'm a unicorn\" end Other language tags can also be used. \u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u5f0f\u306e\u5024\u3092\u793a\u3057\u305f\u3044\u5834\u5408\u306f\u3001 # => \u3092\u4f7f\u3044\u307e\u3059\u3002 1 + 2 # => 3 Unicorn . new . speak # => \"I'm a unicorn\" Admonitions Several admonition keywords are supported to visually highlight problems, notes and/or possible issues. BUG DEPRECATED FIXME NOTE OPTIMIZE TODO Admonition keywords must be the first word in their respective line and must be in all caps. \u53ef\u8aad\u6027\u306e\u305f\u3081\u306b\u30b3\u30ed\u30f3\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002 # Makes the unicorn speak to STDOUT # # NOTE: Although unicorns don't normally talk, this one is special # TODO: Check if unicorn is asleep and raise exception if not able to speak # TODO: Create another `speak` method that takes and prints a string def speak puts \"I'm a unicorn\" end # Makes the unicorn talk to STDOUT # # DEPRECATED: Use `speak` def talk puts \"I'm a unicorn\" end The compiler implicitly adds some admonitions to doc comments: The @[Deprecated] annotation adds a DEPRECATED admonition. The @[Experimental] annotation adds an EXPERIMENTAL admonition. Directives Directives tell the documentation generator how to treat documentation for a specific feature. ditto If two consecutively defined features have the same documentation, :ditto: can be used to copy the same doc comment from the previous definition. # Returns the number of horns. def horns horns end # :ditto: def number_of_horns horns end The directive needs to be on a separate line but further documentation can be added in other lines. The :ditto: directive is simply replaced by the content of the previous doc comment. nodoc Public features can be hidden from the API docs with the :nodoc: directive. Private and protected features are always hidden. # :nodoc: class InternalHelper end This directive needs to be the first line in a doc comment. Leading whitespace if optional. Following comment lines can be used for internal documentation. inherit See Inheriting Documentation . \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u7d99\u627f \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u304c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30b3\u30e1\u30f3\u30c8\u3092\u6301\u305f\u306a\u3044\u304c\u3001\u89aa\u30af\u30e9\u30b9\u3067\u540c\u3058\u30b7\u30b0\u30cd\u30c1\u30e3\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3068\u304d\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u89aa\u30af\u30e9\u30b9\u306e\u3082\u306e\u304b\u3089\u7d99\u627f\u3055\u308c\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 abstract class Animal # Returns the name of `self`. abstract def name : String end class Unicorn < Animal def name : String \"unicorn\" end end Unicorn#name \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Description copied from class `Animal` Returns the name of `self`. \u5b50\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u89aa\u30af\u30e9\u30b9\u304b\u3089\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3053\u3068\u3092\u660e\u793a\u3059\u308b\u305f\u3081\u306b :inherit: \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5834\u5408 Description copied from ... \u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u751f\u6210\u3055\u308c\u307e\u305b\u3093\u3002 :inherit: \u3092\u5b50\u30af\u30e9\u30b9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u89aa\u30af\u30e9\u30b9\u306e\u3082\u306e\u3092\u633f\u5165\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 abstract class Parent # Some documentation common to every *id*. abstract def id : Int32 end class Child < Parent # Some documentation specific to *id*'s usage within `Child`. # # :inherit: def id : Int32 - 1 end end Child#id \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Some documentation specific to *id*'s usage within `Child`. Some documentation common to every *id*. Note \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u7d99\u627f\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u306a\u304f\u3001 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9 \u3067\u306e\u307f\u6a5f\u80fd\u3057\u307e\u3059\u3002 \u5168\u4f53\u306e\u4f8b # A unicorn is a **legendary animal** (see the `Legendary` module) that has been # described since antiquity as a beast with a large, spiraling horn projecting # from its forehead. # # To create a unicorn: # # ``` # unicorn = Unicorn.new # unicorn.speak # ``` # # The above produces: # # ```text # \"I'm a unicorn\" # ``` # # Check the number of horns with `#horns`. class Unicorn include Legendary # Creates a unicorn with the specified number of *horns*. def initialize ( @horns = 1 ) raise \"Not a unicorn\" if @horns != 1 end # Returns the number of horns this unicorn has # # ``` # Unicorn.new.horns # => 1 # ``` def horns @horns end # :ditto: def number_of_horns horns end # Makes the unicorn speak to STDOUT def speak puts \"I'm a unicorn\" end # :nodoc: class Helper end end","title":"\u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316"},{"location":"conventions/documenting_code.html#_1","text":"Documentation for API features can be written in code comments directly preceding the definition of the respective feature. By default, all public methods, macros, types and constants are considered part of the API documentation. Tip The compiler command crystal docs automatically extracts the API documentation and generates a website to present it.","title":"\u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316"},{"location":"conventions/documenting_code.html#association","text":"Doc comments must be positioned directly above the definition of the documented feature. Consecutive comment lines are combined into a single comment block. Any empty line breaks the association to the documented feature. # This comment is not associated with the class. # First line of documentation for class Unicorn. # Second line of documentation for class Unicorn. class Unicorn end","title":"Association"},{"location":"conventions/documenting_code.html#format","text":"Doc comments support Markdown formatting. The first paragraph of a doc comment is considered its summary. It should concisely define the purpose and functionality. Supplementary details and usages instructions should follow in subsequent paragraphs. \u4f8b\u3048\u3070\u3001 # Returns the number of horns this unicorn has. # # Always returns `1`. def horns 1 end Tip It is generally advised to use descriptive, third person present tense: Returns the number of horns this unicorn has (instead of an imperative Return the number of horns this unicorn has ).","title":"Format"},{"location":"conventions/documenting_code.html#markup","text":"","title":"Markup"},{"location":"conventions/documenting_code.html#linking","text":"References to other API features can be enclosed in single backticks. They are automatically resolved and converted into links to the respective feature. class Unicorn # Creates a new `Unicorn` instance. def initialize end end The same lookup rules apply as in Crystal code. Features in the currently documented namespace can be accessed with relative names: Instance methods are referenced with a hash prefix: #horns . Class methods are referenced with a dot prefix: .new . Constants and types are referenced by their name: Unicorn . Features in other namespaces are referenced with the fully-qualified type path: Unicorn#horns , Unicorn.new , Unicorn::CONST . Different overloads of a method can be identified by the full signature .new(name) , ,new(name, age) .","title":"Linking"},{"location":"conventions/documenting_code.html#parameters","text":"When refering to parameters, it is recommended to write their name italicized ( *italicized* ): # Creates a unicorn with the specified number of *horns*. def initialize ( @horns = 1 ) raise \"Not a unicorn\" if @horns != 1 end","title":"Parameters"},{"location":"conventions/documenting_code.html#code-examples","text":"Code examples can be placed in Markdown code blocks. If no language tag is given, the code block is considered to be Crystal code. # Example: # ``` # unicorn = Unicorn.new # unicorn.horns # => 1 # ``` class Unicorn end To designate a code block as plain text, it must be explicitly tagged. # Output: # ```plain # \"I'm a unicorn\" # ``` def say puts \"I'm a unicorn\" end Other language tags can also be used. \u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u5f0f\u306e\u5024\u3092\u793a\u3057\u305f\u3044\u5834\u5408\u306f\u3001 # => \u3092\u4f7f\u3044\u307e\u3059\u3002 1 + 2 # => 3 Unicorn . new . speak # => \"I'm a unicorn\"","title":"Code Examples"},{"location":"conventions/documenting_code.html#admonitions","text":"Several admonition keywords are supported to visually highlight problems, notes and/or possible issues. BUG DEPRECATED FIXME NOTE OPTIMIZE TODO Admonition keywords must be the first word in their respective line and must be in all caps. \u53ef\u8aad\u6027\u306e\u305f\u3081\u306b\u30b3\u30ed\u30f3\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002 # Makes the unicorn speak to STDOUT # # NOTE: Although unicorns don't normally talk, this one is special # TODO: Check if unicorn is asleep and raise exception if not able to speak # TODO: Create another `speak` method that takes and prints a string def speak puts \"I'm a unicorn\" end # Makes the unicorn talk to STDOUT # # DEPRECATED: Use `speak` def talk puts \"I'm a unicorn\" end The compiler implicitly adds some admonitions to doc comments: The @[Deprecated] annotation adds a DEPRECATED admonition. The @[Experimental] annotation adds an EXPERIMENTAL admonition.","title":"Admonitions"},{"location":"conventions/documenting_code.html#directives","text":"Directives tell the documentation generator how to treat documentation for a specific feature.","title":"Directives"},{"location":"conventions/documenting_code.html#ditto","text":"If two consecutively defined features have the same documentation, :ditto: can be used to copy the same doc comment from the previous definition. # Returns the number of horns. def horns horns end # :ditto: def number_of_horns horns end The directive needs to be on a separate line but further documentation can be added in other lines. The :ditto: directive is simply replaced by the content of the previous doc comment.","title":"ditto"},{"location":"conventions/documenting_code.html#nodoc","text":"Public features can be hidden from the API docs with the :nodoc: directive. Private and protected features are always hidden. # :nodoc: class InternalHelper end This directive needs to be the first line in a doc comment. Leading whitespace if optional. Following comment lines can be used for internal documentation.","title":"nodoc"},{"location":"conventions/documenting_code.html#inherit","text":"See Inheriting Documentation .","title":"inherit"},{"location":"conventions/documenting_code.html#_2","text":"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u304c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30b3\u30e1\u30f3\u30c8\u3092\u6301\u305f\u306a\u3044\u304c\u3001\u89aa\u30af\u30e9\u30b9\u3067\u540c\u3058\u30b7\u30b0\u30cd\u30c1\u30e3\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3068\u304d\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u89aa\u30af\u30e9\u30b9\u306e\u3082\u306e\u304b\u3089\u7d99\u627f\u3055\u308c\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 abstract class Animal # Returns the name of `self`. abstract def name : String end class Unicorn < Animal def name : String \"unicorn\" end end Unicorn#name \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Description copied from class `Animal` Returns the name of `self`. \u5b50\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u89aa\u30af\u30e9\u30b9\u304b\u3089\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3053\u3068\u3092\u660e\u793a\u3059\u308b\u305f\u3081\u306b :inherit: \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5834\u5408 Description copied from ... \u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u751f\u6210\u3055\u308c\u307e\u305b\u3093\u3002 :inherit: \u3092\u5b50\u30af\u30e9\u30b9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u89aa\u30af\u30e9\u30b9\u306e\u3082\u306e\u3092\u633f\u5165\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 abstract class Parent # Some documentation common to every *id*. abstract def id : Int32 end class Child < Parent # Some documentation specific to *id*'s usage within `Child`. # # :inherit: def id : Int32 - 1 end end Child#id \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Some documentation specific to *id*'s usage within `Child`. Some documentation common to every *id*. Note \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u7d99\u627f\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u306a\u304f\u3001 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9 \u3067\u306e\u307f\u6a5f\u80fd\u3057\u307e\u3059\u3002","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u7d99\u627f"},{"location":"conventions/documenting_code.html#_3","text":"# A unicorn is a **legendary animal** (see the `Legendary` module) that has been # described since antiquity as a beast with a large, spiraling horn projecting # from its forehead. # # To create a unicorn: # # ``` # unicorn = Unicorn.new # unicorn.speak # ``` # # The above produces: # # ```text # \"I'm a unicorn\" # ``` # # Check the number of horns with `#horns`. class Unicorn include Legendary # Creates a unicorn with the specified number of *horns*. def initialize ( @horns = 1 ) raise \"Not a unicorn\" if @horns != 1 end # Returns the number of horns this unicorn has # # ``` # Unicorn.new.horns # => 1 # ``` def horns @horns end # :ditto: def number_of_horns horns end # Makes the unicorn speak to STDOUT def speak puts \"I'm a unicorn\" end # :nodoc: class Helper end end","title":"\u5168\u4f53\u306e\u4f8b"},{"location":"database/index.html","text":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u4f7f\u7528\u3057\u305f\u3044\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc\u7528\u306b\u8a2d\u8a08\u3055\u308c\u305f Shard \u304c\u5fc5\u8981\u3067\u3059\u3002 crystal-lang/crystal-db \u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u7570\u306a\u308b\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u5bfe\u3057\u3066\u7d71\u4e00\u3055\u308c\u305f API \u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u6b21\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u7fa4\u306f crystal-db \u306b\u6e96\u62e0\u3057\u3066\u3044\u307e\u3059\u3002 crystal-lang/crystal-sqlite3 sqlite\u7528 crystal-lang/crystal-mysql mysql \u3068 mariadb \u7528 will/crystal-pg postgres \u7528 \u3053\u306e\u30ac\u30a4\u30c9\u3067\u306f\u3001crystal-db \u306e API \u3092\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u304c\u3001 postgres \u3001 mysql \u3001 sqlite \u306e\u9055\u3044\u306b\u3088\u308a\u3001\u5177\u4f53\u7684\u306a\u30c9\u30e9\u30a4\u30d0\u306b\u5408\u308f\u305b\u3066sql\u30b3\u30de\u30f3\u30c9\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 \u307e\u305f\u3001\u3044\u304f\u3064\u304b\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u306f postgres \u306e LISTEN / NOTIFY \u306e\u3088\u3046\u306b\u8ffd\u52a0\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 shard \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u4e0a\u306e\u30ea\u30b9\u30c8\u304b\u3089\u9069\u5207\u306a\u30c9\u30e9\u30a4\u30d0\u3092\u9078\u629e\u3057\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e shard.yml \u306b\u4efb\u610f\u306e shard \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 crystal-lang/crystal-db \u3092\u660e\u793a\u7684\u306b\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u30ac\u30a4\u30c9\u3092\u901a\u3057\u3066 crystal-lang/crystal-mysql \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 dependencies : mysql : github : crystal-lang/crystal-mysql \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30aa\u30fc\u30d7\u30f3 DB.open \u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3 uri \u3092\u7528\u3044\u3066\u5bb9\u6613\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u63a5\u7d9a\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002uri \u306e\u30b9\u30ad\u30fc\u30de\u306f\u671f\u5f85\u3055\u308c\u308b\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001root \u30e6\u30fc\u30b6\u30fc\u3092\u7a7a\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u3001 test \u3068\u3044\u3046\u540d\u524d\u306e\u30ed\u30fc\u30ab\u30eb\u306e mysql \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3066\u3044\u307e\u3059\u3002 require \"db\" require \"mysql\" DB . open \"mysql://root@localhost/test\" do | db | # ... \u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b db \u3092\u5229\u7528\u3057\u307e\u3059 end \u305d\u306e\u4ed6\u306e\u63a5\u7d9a uri \u3067\u3059\u3002 sqlite3:///path/to/data.db mysql://user:password@server:port/database postgres://server:port/database \u3042\u308b\u3044\u306f\u3001\u6700\u5f8c\u306b Database#close \u304c\u547c\u3070\u308c\u308b\u307e\u3067\u7d42\u4e86\u3057\u306a\u3044 yield \u3092\u7528\u3044\u306a\u3044 DB.open \u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 require \"db\" require \"mysql\" db = DB . open \"mysql://root@localhost/test\" begin # ... \u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b db \u3092\u5229\u7528\u3057\u307e\u3059 ensure db . close end \u5b9f\u884c sql \u6587\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f Database#exec \u3092\u5229\u7528\u3057\u307e\u3059\u3002 db . exec \"create table contacts (name varchar(30), age int)\" SQL \u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3 \u3092\u907f\u3051\u308b\u305f\u3081\u3001\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u5024\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u69cb\u6587\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30c9\u30e9\u30a4\u30d0\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u305d\u308c\u3089\u306f\u901a\u5e38\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u6e21\u3055\u308c\u308b\u3060\u3051\u3060\u304b\u3089\u3067\u3059\u3002MySQL \u3067\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5c55\u958b\u306b ? \u3092\u4f7f\u7528\u3057\u3001\u4ee3\u5165\u306f\u5f15\u6570\u306e\u9806\u5e8f\u306b\u57fa\u3065\u3044\u3066\u884c\u308f\u308c\u307e\u3059\u3002PostgreSQL \u3067\u306f $n \u3092\u4f7f\u7528\u3057\u3001 n \u306f1\u304b\u3089\u59cb\u307e\u308b\u5f15\u6570\u306e\u9806\u5e8f\u3067\u3059\u3002 # MySQL db . exec \"insert into contacts values (?, ?)\" , \"John\" , 30 # Postgres db . exec \"insert into contacts values ($1, $2)\" , \"Sarah\" , 33 \u30af\u30a8\u30ea \u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u7d50\u679c\u30bb\u30c3\u30c8\u3092\u5f97\u308b\u305f\u3081\u306b Database#query \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u5f15\u6570\u306f Database#exec \u3068\u540c\u69d8\u3067\u3059\u3002 Database#query \u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u5fc5\u8981\u306e\u3042\u308b ResultSet \u3092\u8fd4\u3057\u307e\u3059\u3002 Database#open \u306e\u3088\u3046\u306b\u3001 \u30d6\u30ed\u30c3\u30af\u3068\u3068\u3082\u306b\u547c\u3073\u51fa\u3057\u305f\u5834\u5408\u306f\u3001 ResultSet \u306f\u6697\u9ed9\u306e\u3046\u3061\u306b\u30af\u30ed\u30fc\u30ba\u3055\u308c\u307e\u3059\u3002 db . query \"select name, age from contacts order by age desc\" do | rs | rs . each do # ... ResultSet \u306e\u5404\u884c\u304c\u5b9f\u884c\u3055\u308c\u308b end end \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u5024\u3092\u8aad\u307f\u8fbc\u3080\u969b\u306b\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b crystal \u304c\u4f7f\u7528\u3067\u304d\u308b\u578b\u60c5\u5831\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3059\u308b\u3068\u3055\u308c\u308b\u30bf\u30a4\u30d7 T \u3068\u5171\u306b rs.read(T) \u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 db . query \"select name, age from contacts order by age desc\" do | rs | rs . each do name = rs . read ( String ) age = rs . read ( Int32 ) puts \" #{ name } ( #{ age } )\" # => Sarah (33) # => John Doe (30) end end \u6700\u4e0a\u4f4d\u306e #query \u306b\u306f\u3001\u591a\u304f\u306e\u4fbf\u5229\u306a\u30af\u30a8\u30ea\u30e1\u30bd\u30c3\u30c9\u304c\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4e00\u5ea6\u306b\u8907\u6570\u306e\u5217\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059: name , age = rs . read ( String , Int32 ) \uff11\u884c\u3067\u8aad\u307f\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059: name , age = db . query_one \"select name, age from contacts order by age desc limit 1\" , as : { String , Int32 } \u307e\u305f\u3001ResultSet \u3092\u660e\u793a\u7684\u306b\u53d6\u308a\u6271\u308f\u305a\u306b\u30b9\u30ab\u30e9\u5024\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059: max_age = db . scalar \"select max(age) from contacts\" \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u3067\u6587\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u3059\u3079\u3066\u306e\u5229\u7528\u53ef\u80fd\u306a\u30e1\u30bd\u30c3\u30c9\u306f DB::QueryMethods \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9"},{"location":"database/index.html#_1","text":"\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u4f7f\u7528\u3057\u305f\u3044\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc\u7528\u306b\u8a2d\u8a08\u3055\u308c\u305f Shard \u304c\u5fc5\u8981\u3067\u3059\u3002 crystal-lang/crystal-db \u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u7570\u306a\u308b\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u5bfe\u3057\u3066\u7d71\u4e00\u3055\u308c\u305f API \u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u6b21\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u7fa4\u306f crystal-db \u306b\u6e96\u62e0\u3057\u3066\u3044\u307e\u3059\u3002 crystal-lang/crystal-sqlite3 sqlite\u7528 crystal-lang/crystal-mysql mysql \u3068 mariadb \u7528 will/crystal-pg postgres \u7528 \u3053\u306e\u30ac\u30a4\u30c9\u3067\u306f\u3001crystal-db \u306e API \u3092\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u304c\u3001 postgres \u3001 mysql \u3001 sqlite \u306e\u9055\u3044\u306b\u3088\u308a\u3001\u5177\u4f53\u7684\u306a\u30c9\u30e9\u30a4\u30d0\u306b\u5408\u308f\u305b\u3066sql\u30b3\u30de\u30f3\u30c9\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 \u307e\u305f\u3001\u3044\u304f\u3064\u304b\u306e\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u306f postgres \u306e LISTEN / NOTIFY \u306e\u3088\u3046\u306b\u8ffd\u52a0\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9"},{"location":"database/index.html#shard","text":"\u4e0a\u306e\u30ea\u30b9\u30c8\u304b\u3089\u9069\u5207\u306a\u30c9\u30e9\u30a4\u30d0\u3092\u9078\u629e\u3057\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e shard.yml \u306b\u4efb\u610f\u306e shard \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 crystal-lang/crystal-db \u3092\u660e\u793a\u7684\u306b\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u30ac\u30a4\u30c9\u3092\u901a\u3057\u3066 crystal-lang/crystal-mysql \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 dependencies : mysql : github : crystal-lang/crystal-mysql","title":"shard \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"database/index.html#_2","text":"DB.open \u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3 uri \u3092\u7528\u3044\u3066\u5bb9\u6613\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u63a5\u7d9a\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002uri \u306e\u30b9\u30ad\u30fc\u30de\u306f\u671f\u5f85\u3055\u308c\u308b\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001root \u30e6\u30fc\u30b6\u30fc\u3092\u7a7a\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u3001 test \u3068\u3044\u3046\u540d\u524d\u306e\u30ed\u30fc\u30ab\u30eb\u306e mysql \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3066\u3044\u307e\u3059\u3002 require \"db\" require \"mysql\" DB . open \"mysql://root@localhost/test\" do | db | # ... \u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b db \u3092\u5229\u7528\u3057\u307e\u3059 end \u305d\u306e\u4ed6\u306e\u63a5\u7d9a uri \u3067\u3059\u3002 sqlite3:///path/to/data.db mysql://user:password@server:port/database postgres://server:port/database \u3042\u308b\u3044\u306f\u3001\u6700\u5f8c\u306b Database#close \u304c\u547c\u3070\u308c\u308b\u307e\u3067\u7d42\u4e86\u3057\u306a\u3044 yield \u3092\u7528\u3044\u306a\u3044 DB.open \u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 require \"db\" require \"mysql\" db = DB . open \"mysql://root@localhost/test\" begin # ... \u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b db \u3092\u5229\u7528\u3057\u307e\u3059 ensure db . close end","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30aa\u30fc\u30d7\u30f3"},{"location":"database/index.html#_3","text":"sql \u6587\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f Database#exec \u3092\u5229\u7528\u3057\u307e\u3059\u3002 db . exec \"create table contacts (name varchar(30), age int)\" SQL \u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3 \u3092\u907f\u3051\u308b\u305f\u3081\u3001\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u5024\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u69cb\u6587\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30c9\u30e9\u30a4\u30d0\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u305d\u308c\u3089\u306f\u901a\u5e38\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u6e21\u3055\u308c\u308b\u3060\u3051\u3060\u304b\u3089\u3067\u3059\u3002MySQL \u3067\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5c55\u958b\u306b ? \u3092\u4f7f\u7528\u3057\u3001\u4ee3\u5165\u306f\u5f15\u6570\u306e\u9806\u5e8f\u306b\u57fa\u3065\u3044\u3066\u884c\u308f\u308c\u307e\u3059\u3002PostgreSQL \u3067\u306f $n \u3092\u4f7f\u7528\u3057\u3001 n \u306f1\u304b\u3089\u59cb\u307e\u308b\u5f15\u6570\u306e\u9806\u5e8f\u3067\u3059\u3002 # MySQL db . exec \"insert into contacts values (?, ?)\" , \"John\" , 30 # Postgres db . exec \"insert into contacts values ($1, $2)\" , \"Sarah\" , 33","title":"\u5b9f\u884c"},{"location":"database/index.html#_4","text":"\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u7d50\u679c\u30bb\u30c3\u30c8\u3092\u5f97\u308b\u305f\u3081\u306b Database#query \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u5f15\u6570\u306f Database#exec \u3068\u540c\u69d8\u3067\u3059\u3002 Database#query \u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u5fc5\u8981\u306e\u3042\u308b ResultSet \u3092\u8fd4\u3057\u307e\u3059\u3002 Database#open \u306e\u3088\u3046\u306b\u3001 \u30d6\u30ed\u30c3\u30af\u3068\u3068\u3082\u306b\u547c\u3073\u51fa\u3057\u305f\u5834\u5408\u306f\u3001 ResultSet \u306f\u6697\u9ed9\u306e\u3046\u3061\u306b\u30af\u30ed\u30fc\u30ba\u3055\u308c\u307e\u3059\u3002 db . query \"select name, age from contacts order by age desc\" do | rs | rs . each do # ... ResultSet \u306e\u5404\u884c\u304c\u5b9f\u884c\u3055\u308c\u308b end end \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u5024\u3092\u8aad\u307f\u8fbc\u3080\u969b\u306b\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b crystal \u304c\u4f7f\u7528\u3067\u304d\u308b\u578b\u60c5\u5831\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3059\u308b\u3068\u3055\u308c\u308b\u30bf\u30a4\u30d7 T \u3068\u5171\u306b rs.read(T) \u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 db . query \"select name, age from contacts order by age desc\" do | rs | rs . each do name = rs . read ( String ) age = rs . read ( Int32 ) puts \" #{ name } ( #{ age } )\" # => Sarah (33) # => John Doe (30) end end \u6700\u4e0a\u4f4d\u306e #query \u306b\u306f\u3001\u591a\u304f\u306e\u4fbf\u5229\u306a\u30af\u30a8\u30ea\u30e1\u30bd\u30c3\u30c9\u304c\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4e00\u5ea6\u306b\u8907\u6570\u306e\u5217\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059: name , age = rs . read ( String , Int32 ) \uff11\u884c\u3067\u8aad\u307f\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059: name , age = db . query_one \"select name, age from contacts order by age desc limit 1\" , as : { String , Int32 } \u307e\u305f\u3001ResultSet \u3092\u660e\u793a\u7684\u306b\u53d6\u308a\u6271\u308f\u305a\u306b\u30b9\u30ab\u30e9\u5024\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059: max_age = db . scalar \"select max(age) from contacts\" \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u3067\u6587\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u3059\u3079\u3066\u306e\u5229\u7528\u53ef\u80fd\u306a\u30e1\u30bd\u30c3\u30c9\u306f DB::QueryMethods \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u30af\u30a8\u30ea"},{"location":"database/connection.html","text":"Connection A connection is one of the key parts when working with databases. It represents the runway through which statements travel from our application to the database. In Crystal we have two ways of building this connection. And so, coming up next, we are going to present examples with some advice on when to use each one. DB module Give me a place to stand, and I shall move the earth. Archimedes The DB module, is our place to stand when working with databases in Crystal. As written in the documentation: is a unified interface for database access . One of the methods implemented in this module is DB#connect . Using this method is the first way for creating a connection. Let's see how to use it. DB#connect When using DB#connect we are indeed opening a connection to the database. The uri passed as the argument is used by the module to determine which driver to use (for example: mysql:// , postgres:// , sqlite:// , etc.) i.e. we do not need to specify which database we are using. The uri for this example is mysql://root:root@localhost/test , and so the module will use the mysql driver to connect to the MySQL database. Here is the example: require \"mysql\" cnn = DB . connect ( \"mysql://root:root@localhost/test\" ) puts typeof ( cnn ) # => DB::Connection cnn . close It's worth mentioning that the method returns a DB::Connection object. Although more specifically, it returns a MySql::Connection object, it doesn't matter because all types of connections should be polymorphic. So hereinafter we will work with a DB::Connection instance, helping us to abstract from specific issues of each database engine. When creating a connection manually (as we are doing here) we are responsible for managing this resource, and so we must close the connection when we are done using it. Regarding the latter, this little details can be the cause of huge bugs! Crystal, being a language for humans , give us a more safe way of manually creating a connection using blocks, like this: require \"mysql\" DB . connect \"mysql://root:root@localhost/test\" do | cnn | puts typeof ( cnn ) # => DB::Connection end # the connection will be closed here Ok, now we have a connection, let's use it! require \"mysql\" DB . connect \"mysql://root:root@localhost/test\" do | cnn | puts typeof ( cnn ) # => DB::Connection puts \"Connection closed: #{ cnn . closed? } \" # => false result = cnn . exec ( \"drop table if exists contacts\" ) puts result result = cnn . exec ( \"create table contacts (name varchar(30), age int)\" ) puts result cnn . transaction do | tx | cnn2 = tx . connection puts \"Yep, it is the same connection! #{ cnn == cnn2 } \" cnn2 . exec ( \"insert into contacts values ('Joe', 42)\" ) cnn2 . exec ( \"insert into contacts values (?, ?)\" , \"Sarah\" , 43 ) end cnn . query_each \"select * from contacts\" do | rs | puts \"name: #{ rs . read } , age: #{ rs . read } \" end end First, in this example, we are using a transaction (check the transactions section for more information on this topic) Second, it's important to notice that the connection given by the transaction is the same connection that we were working with, before the transaction begin. That is, there is only one connection at all times in our program. And last, we are using the method #exec and #query . You may read more about executing queries in the database section. Now that we have a good idea about creating a connection, let's present the second way for creating one: DB#open DB#open require \"mysql\" db = DB . open ( \"mysql://root:root@localhost/test\" ) puts typeof ( db ) # DB::Database db . close As with a connection, we should close the database once we don't need it anymore. Or instead, we could use a block and let Crystal close the database for us! But, where is the connection? Well, we should be asking for the connections . When a database is created, a pool of connections is created with connections to the database prepared and ready to use! (Do you want to read more about pool of connections ? In the connection pool section you may read all about this interesting topic!) How do we use a connection from the database object? For this, we could ask the database for a connection using the method Database#checkout . But, doing this will require to explicitly return the connection to the pool using Connection#release . Here is an example: require \"mysql\" DB . open \"mysql://root:root@localhost/test\" do | db | cnn = db . checkout puts typeof ( cnn ) puts \"Connection closed: #{ cnn . closed? } \" # => false cnn . release puts \"Connection closed: #{ cnn . closed? } \" # => false end And we want a safe way (i.e. no need for us to release the connection) to request and use a connection from the database , we could use Database#using_connection : require \"mysql\" DB . open \"mysql://root:root@localhost/test\" do | db | db . using_connection do | cnn | puts typeof ( cnn ) # use cnn end end In the next example we will let the database object to manage the connections by itself , like this: require \"mysql\" DB . open \"mysql://root:root@localhost/test\" do | db | db . exec ( \"drop table if exists contacts\" ) db . exec ( \"create table contacts (name varchar(30), age int)\" ) db . transaction do | tx | cnn = tx . connection cnn . exec ( \"insert into contacts values ('Joe', 42)\" ) cnn . exec ( \"insert into contacts values (?, ?)\" , \"Sarah\" , 43 ) end db . query_each \"select * from contacts\" do | rs | puts \"name: #{ rs . read } , age: #{ rs . read } \" end end As we may notice, the database is polymorphic with a connection object with regard to the #exec / #query / #transaction methods. The database is responsible for the use of the connections. \u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002 When to use one or the other? Given the examples, it may come to our attention that the number of connections is relevant . If we are programming a short living application with only one user starting requests to the database then a single connection managed by us (i.e. a DB::Connection object) should be enough (think of a command line application that receives parameters, then starts a request to the database and finally displays the result to the user) On the other hand, if we are building a system with many concurrent users and with heavy database access, then we should use a DB::Database object; which by using a connection pool will have a number of connections already prepared and ready to use (no bootstrap/initialization-time penalizations). Or imagine that you are building a long-living application (like a background job) then a connection pool will free you from the responsibility of monitoring the state of the connection: is it alive or does it need to reconnect?","title":"\u63a5\u7d9a"},{"location":"database/connection.html#connection","text":"A connection is one of the key parts when working with databases. It represents the runway through which statements travel from our application to the database. In Crystal we have two ways of building this connection. And so, coming up next, we are going to present examples with some advice on when to use each one.","title":"Connection"},{"location":"database/connection.html#db-module","text":"Give me a place to stand, and I shall move the earth. Archimedes The DB module, is our place to stand when working with databases in Crystal. As written in the documentation: is a unified interface for database access . One of the methods implemented in this module is DB#connect . Using this method is the first way for creating a connection. Let's see how to use it.","title":"DB module"},{"location":"database/connection.html#dbconnect","text":"When using DB#connect we are indeed opening a connection to the database. The uri passed as the argument is used by the module to determine which driver to use (for example: mysql:// , postgres:// , sqlite:// , etc.) i.e. we do not need to specify which database we are using. The uri for this example is mysql://root:root@localhost/test , and so the module will use the mysql driver to connect to the MySQL database. Here is the example: require \"mysql\" cnn = DB . connect ( \"mysql://root:root@localhost/test\" ) puts typeof ( cnn ) # => DB::Connection cnn . close It's worth mentioning that the method returns a DB::Connection object. Although more specifically, it returns a MySql::Connection object, it doesn't matter because all types of connections should be polymorphic. So hereinafter we will work with a DB::Connection instance, helping us to abstract from specific issues of each database engine. When creating a connection manually (as we are doing here) we are responsible for managing this resource, and so we must close the connection when we are done using it. Regarding the latter, this little details can be the cause of huge bugs! Crystal, being a language for humans , give us a more safe way of manually creating a connection using blocks, like this: require \"mysql\" DB . connect \"mysql://root:root@localhost/test\" do | cnn | puts typeof ( cnn ) # => DB::Connection end # the connection will be closed here Ok, now we have a connection, let's use it! require \"mysql\" DB . connect \"mysql://root:root@localhost/test\" do | cnn | puts typeof ( cnn ) # => DB::Connection puts \"Connection closed: #{ cnn . closed? } \" # => false result = cnn . exec ( \"drop table if exists contacts\" ) puts result result = cnn . exec ( \"create table contacts (name varchar(30), age int)\" ) puts result cnn . transaction do | tx | cnn2 = tx . connection puts \"Yep, it is the same connection! #{ cnn == cnn2 } \" cnn2 . exec ( \"insert into contacts values ('Joe', 42)\" ) cnn2 . exec ( \"insert into contacts values (?, ?)\" , \"Sarah\" , 43 ) end cnn . query_each \"select * from contacts\" do | rs | puts \"name: #{ rs . read } , age: #{ rs . read } \" end end First, in this example, we are using a transaction (check the transactions section for more information on this topic) Second, it's important to notice that the connection given by the transaction is the same connection that we were working with, before the transaction begin. That is, there is only one connection at all times in our program. And last, we are using the method #exec and #query . You may read more about executing queries in the database section. Now that we have a good idea about creating a connection, let's present the second way for creating one: DB#open","title":"DB#connect"},{"location":"database/connection.html#dbopen","text":"require \"mysql\" db = DB . open ( \"mysql://root:root@localhost/test\" ) puts typeof ( db ) # DB::Database db . close As with a connection, we should close the database once we don't need it anymore. Or instead, we could use a block and let Crystal close the database for us! But, where is the connection? Well, we should be asking for the connections . When a database is created, a pool of connections is created with connections to the database prepared and ready to use! (Do you want to read more about pool of connections ? In the connection pool section you may read all about this interesting topic!) How do we use a connection from the database object? For this, we could ask the database for a connection using the method Database#checkout . But, doing this will require to explicitly return the connection to the pool using Connection#release . Here is an example: require \"mysql\" DB . open \"mysql://root:root@localhost/test\" do | db | cnn = db . checkout puts typeof ( cnn ) puts \"Connection closed: #{ cnn . closed? } \" # => false cnn . release puts \"Connection closed: #{ cnn . closed? } \" # => false end And we want a safe way (i.e. no need for us to release the connection) to request and use a connection from the database , we could use Database#using_connection : require \"mysql\" DB . open \"mysql://root:root@localhost/test\" do | db | db . using_connection do | cnn | puts typeof ( cnn ) # use cnn end end In the next example we will let the database object to manage the connections by itself , like this: require \"mysql\" DB . open \"mysql://root:root@localhost/test\" do | db | db . exec ( \"drop table if exists contacts\" ) db . exec ( \"create table contacts (name varchar(30), age int)\" ) db . transaction do | tx | cnn = tx . connection cnn . exec ( \"insert into contacts values ('Joe', 42)\" ) cnn . exec ( \"insert into contacts values (?, ?)\" , \"Sarah\" , 43 ) end db . query_each \"select * from contacts\" do | rs | puts \"name: #{ rs . read } , age: #{ rs . read } \" end end As we may notice, the database is polymorphic with a connection object with regard to the #exec / #query / #transaction methods. The database is responsible for the use of the connections. \u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002","title":"DB#open"},{"location":"database/connection.html#when-to-use-one-or-the-other","text":"Given the examples, it may come to our attention that the number of connections is relevant . If we are programming a short living application with only one user starting requests to the database then a single connection managed by us (i.e. a DB::Connection object) should be enough (think of a command line application that receives parameters, then starts a request to the database and finally displays the result to the user) On the other hand, if we are building a system with many concurrent users and with heavy database access, then we should use a DB::Database object; which by using a connection pool will have a number of connections already prepared and ready to use (no bootstrap/initialization-time penalizations). Or imagine that you are building a long-living application (like a background job) then a connection pool will free you from the responsibility of monitoring the state of the connection: is it alive or does it need to reconnect?","title":"When to use one or the other?"},{"location":"database/connection_pool.html","text":"Connection pool When a connection is established it usually means opening a TCP connection or Socket. The socket will handle one statement at a time. If a program needs to perform many queries simultaneously, or if it handles concurrent requests that aim to use a database, it will need more than one active connection. Since databases are separate services from the application using them, the connections might go down, the services might be restarted, and other sort of things the program might not want to care about. To address this issues usually a connection pool is a neat solution. When a database is opened with crystal-db there is already a connection pool working. DB.open returns a DB::Database object which manages the whole connection pool and not just a single connection. DB . open ( \"mysql://root@localhost/test\" ) do | db | # db is a DB::Database end When executing statements using db.query , db.exec , db.scalar , etc. the algorithm goes: Find an available connection in the pool. Create one if needed and possible. If the pool is not allowed to create a new connection, wait a for a connection to become available. 1. But this wait should be aborted if it takes too long. Checkout that connection from the pool. Execute the SQL command. If there is no DB::ResultSet yielded, return the connection to the pool. Otherwise, the connection will be returned to the pool when the ResultSet is closed. Return the statement result. If a connection can't be created, or if a connection loss occurs while the statement is performed the above process is repeated. The retry logic only happens when the statement is sent through the DB::Database . If it is sent through a DB::Connection or DB::Transaction no retry is performed since the code will state that certain connection object was expected to be used. \u8a2d\u5b9a The behavior of the pool can be configured from a set of parameters that can appear as query string in the connection URI. \u540d\u524d Default value initial_pool_size 1 max_pool_size 0 (unlimited) max_idle_pool_size 1 checkout_timeout 5.0 (seconds) retry_attempts 1 retry_delay 1.0 (seconds) When DB::Database is opened an initial number of initial_pool_size connections will be created. The pool will never hold more than max_pool_size connections. When returning/releasing a connection to the pool it will be closed if there are already max_idle_pool_size idle connections. If the max_pool_size was reached and a connection is needed, wait up to checkout_timeout seconds for an existing connection to become available. If a connection is lost or can't be established retry at most retry_attempts times waiting retry_delay seconds between each try. Sample The following program will print the current time from MySQL but if the connection is lost or the whole server is down for a few seconds the program will still run without raising exceptions. sample.cr require \"mysql\" DB . open \"mysql://root@localhost?retry_attempts=8&retry_delay=3\" do | db | loop do pp db . scalar ( \"SELECT NOW()\" ) sleep 0.5 end end ``` ``` console $ crystal sample . cr db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:57 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:57 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:58 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:58 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:59 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:59 # stop mysql server for some seconds db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:37:06 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:37:06 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:37:07","title":"\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb"},{"location":"database/connection_pool.html#connection-pool","text":"When a connection is established it usually means opening a TCP connection or Socket. The socket will handle one statement at a time. If a program needs to perform many queries simultaneously, or if it handles concurrent requests that aim to use a database, it will need more than one active connection. Since databases are separate services from the application using them, the connections might go down, the services might be restarted, and other sort of things the program might not want to care about. To address this issues usually a connection pool is a neat solution. When a database is opened with crystal-db there is already a connection pool working. DB.open returns a DB::Database object which manages the whole connection pool and not just a single connection. DB . open ( \"mysql://root@localhost/test\" ) do | db | # db is a DB::Database end When executing statements using db.query , db.exec , db.scalar , etc. the algorithm goes: Find an available connection in the pool. Create one if needed and possible. If the pool is not allowed to create a new connection, wait a for a connection to become available. 1. But this wait should be aborted if it takes too long. Checkout that connection from the pool. Execute the SQL command. If there is no DB::ResultSet yielded, return the connection to the pool. Otherwise, the connection will be returned to the pool when the ResultSet is closed. Return the statement result. If a connection can't be created, or if a connection loss occurs while the statement is performed the above process is repeated. The retry logic only happens when the statement is sent through the DB::Database . If it is sent through a DB::Connection or DB::Transaction no retry is performed since the code will state that certain connection object was expected to be used.","title":"Connection pool"},{"location":"database/connection_pool.html#_1","text":"The behavior of the pool can be configured from a set of parameters that can appear as query string in the connection URI. \u540d\u524d Default value initial_pool_size 1 max_pool_size 0 (unlimited) max_idle_pool_size 1 checkout_timeout 5.0 (seconds) retry_attempts 1 retry_delay 1.0 (seconds) When DB::Database is opened an initial number of initial_pool_size connections will be created. The pool will never hold more than max_pool_size connections. When returning/releasing a connection to the pool it will be closed if there are already max_idle_pool_size idle connections. If the max_pool_size was reached and a connection is needed, wait up to checkout_timeout seconds for an existing connection to become available. If a connection is lost or can't be established retry at most retry_attempts times waiting retry_delay seconds between each try.","title":"\u8a2d\u5b9a"},{"location":"database/connection_pool.html#sample","text":"The following program will print the current time from MySQL but if the connection is lost or the whole server is down for a few seconds the program will still run without raising exceptions. sample.cr require \"mysql\" DB . open \"mysql://root@localhost?retry_attempts=8&retry_delay=3\" do | db | loop do pp db . scalar ( \"SELECT NOW()\" ) sleep 0.5 end end ``` ``` console $ crystal sample . cr db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:57 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:57 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:58 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:58 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:59 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:36:59 # stop mysql server for some seconds db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:37:06 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:37:06 db . scalar ( \"SELECT NOW()\" ) # => 2016-12-16 16:37:07","title":"Sample"},{"location":"database/transactions.html","text":"Transactions When working with databases, it is common to need to group operations in such a way that if one fails, then we can go back to the latest safe state. This solution is described in the transaction paradigm , and is implemented by most database engines as it is necessary to meet ACID properties (Atomicity, Consistency, Isolation, Durability) [^ACID] With this in mind, we present the following example: We have two accounts (each represented by a name and an amount of money). db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 In one moment a transfer is made from one account to the other. For example, John transfers $50 to Sarah We have two accounts (each represented by a name and an amount of money). deposit db , \"Sarah\" , 50 withdraw db , \"John\" , 50 It is important to have in mind that if one of the operations fails then the final state would be inconsistent. So we need to execute the two operations (deposit and withdraw) as one operation . And if an error occurs then we would like to go back in time as if that one operation was never executed. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 db . transaction do | tx | cnn = tx . connection transfer_amount = 1000 deposit cnn , \"Sarah\" , transfer_amount withdraw cnn , \"John\" , transfer_amount end In the above example, we start a transaction simply by calling the method Database#transaction (how we get the database object is encapsulated in the method get_bank_db and is out of the scope of this document). The block is the body of the transaction. When the block gets executed (without any error) then an implicit commit is finally executed to persist the changes in the database. If an exception is raised by one of the operations, then an implicit rollback is executed, bringing the database to the state before the transaction started. Exception handling and rolling back As we mentioned early, an implicit rollback gets executed when an exception is raised, and it\u2019s worth mentioning that the exception may be rescued by us. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 begin db . transaction do | tx | cnn = tx . connection transfer_amount = 1000 deposit ( cnn , \"Sarah\" , transfer_amount ) # John does not have enough money in his account! withdraw ( cnn , \"John\" , transfer_amount ) end rescue ex puts \"Transfer has been rolled back due to: #{ ex } \" end We may also raise an exception in the body of the transaction: db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 begin db . transaction do | tx | cnn = tx . connection transfer_amount = 50 deposit ( cnn , \"Sarah\" , transfer_amount ) withdraw ( cnn , \"John\" , transfer_amount ) raise Exception . new \"Because ...\" end rescue ex puts \"Transfer has been rolled back due to: #{ ex } \" end As the previous example, the exception cause the transaction to rollback and then is rescued by us. There is one exception with a different behaviour. If a DB::Rollback is raised within the block, the implicit rollback will happen, but the exception will not be raised outside the block. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 begin db . transaction do | tx | cnn = tx . connection transfer_amount = 50 deposit ( cnn , \"Sarah\" , transfer_amount ) withdraw ( cnn , \"John\" , transfer_amount ) # rollback exception raise DB :: Rollback . new end rescue ex # ex is never a DB::Rollback end Explicit commit and rollback In all the previous examples, the rolling back is implicit , but we can also tell the transaction to rollback: db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 begin db . transaction do | tx | cnn = tx . connection transfer_amount = 50 deposit ( cnn , \"Sarah\" , transfer_amount ) withdraw ( cnn , \"John\" , transfer_amount ) tx . rollback puts \"Rolling Back the changes!\" end rescue ex # Notice that no exception is used in this case. end And we can also use the commit method: db = get_bank_db db . transaction do | tx | cnn = tx . connection transfer_amount = 50 deposit ( cnn , \"Sarah\" , transfer_amount ) withdraw ( cnn , \"John\" , transfer_amount ) tx . commit end Note After commit or rollback are used, the transaction is no longer usable. The connection is still open but any statement will be performed outside the context of the terminated transaction. Nested transactions As the name suggests, a nested transaction is a transaction created inside the scope of another transaction. Here is an example: db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) end end rescue ex puts \"Exception raised due to: #{ ex } \" end Some observations from the above example: the inner_tx works with the values updated although the outer_tx is pending the commit. The connection used by outer_tx and inner_tx is the same connection . This is because the inner_tx inherits the connection from the outer_tx when created. Rollback nested transactions As we\u2019ve already seen, a rollback may be fired at any time (by an exception or by sending the message rollback explicitly) So let\u2019s present an example with a rollback fired by an exception placed at the outer-transaction : db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) end raise Exception . new ( \"Rollback all the things!\" ) end rescue ex puts \"Exception raised due to: #{ ex } \" end The rollback place in the outer_tx block, rolled back all the changes including the ones in the inner_tx block (the same happens if we use an explicit rollback). If the rollback is fired by an exception at the inner_tx block all the changes including the ones in the outer_tx are rollbacked. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) raise Exception . new ( \"Rollback all the things!\" ) end end rescue ex puts \"Exception raised due to: #{ ex } \" end There is a way to rollback the changes in the inner-transaction but keep the ones in the outer-transaction . Use rollback in the inner_tx object. This will rollback only then inner-transaction. Here is the example: db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) inner_tx . rollback end end rescue ex puts \"Exception raised due to: #{ ex } \" end The same happens if a DB::Rollback exception is raised in the inner-transaction block. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) # Rollback exception raise DB :: Rollback . new end end rescue ex puts \"Exception raised due to: #{ ex } \" end [^ACID]: Theo Haerder and Andreas Reuter. 1983. Principles of transaction-oriented database recovery. ACM Comput. Surv. 15, 4 (December 1983), 287-317. DOI= http://dx.doi.org/10.1145/289.291","title":"\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3"},{"location":"database/transactions.html#transactions","text":"When working with databases, it is common to need to group operations in such a way that if one fails, then we can go back to the latest safe state. This solution is described in the transaction paradigm , and is implemented by most database engines as it is necessary to meet ACID properties (Atomicity, Consistency, Isolation, Durability) [^ACID] With this in mind, we present the following example: We have two accounts (each represented by a name and an amount of money). db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 In one moment a transfer is made from one account to the other. For example, John transfers $50 to Sarah We have two accounts (each represented by a name and an amount of money). deposit db , \"Sarah\" , 50 withdraw db , \"John\" , 50 It is important to have in mind that if one of the operations fails then the final state would be inconsistent. So we need to execute the two operations (deposit and withdraw) as one operation . And if an error occurs then we would like to go back in time as if that one operation was never executed. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 db . transaction do | tx | cnn = tx . connection transfer_amount = 1000 deposit cnn , \"Sarah\" , transfer_amount withdraw cnn , \"John\" , transfer_amount end In the above example, we start a transaction simply by calling the method Database#transaction (how we get the database object is encapsulated in the method get_bank_db and is out of the scope of this document). The block is the body of the transaction. When the block gets executed (without any error) then an implicit commit is finally executed to persist the changes in the database. If an exception is raised by one of the operations, then an implicit rollback is executed, bringing the database to the state before the transaction started.","title":"Transactions"},{"location":"database/transactions.html#exception-handling-and-rolling-back","text":"As we mentioned early, an implicit rollback gets executed when an exception is raised, and it\u2019s worth mentioning that the exception may be rescued by us. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 begin db . transaction do | tx | cnn = tx . connection transfer_amount = 1000 deposit ( cnn , \"Sarah\" , transfer_amount ) # John does not have enough money in his account! withdraw ( cnn , \"John\" , transfer_amount ) end rescue ex puts \"Transfer has been rolled back due to: #{ ex } \" end We may also raise an exception in the body of the transaction: db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 begin db . transaction do | tx | cnn = tx . connection transfer_amount = 50 deposit ( cnn , \"Sarah\" , transfer_amount ) withdraw ( cnn , \"John\" , transfer_amount ) raise Exception . new \"Because ...\" end rescue ex puts \"Transfer has been rolled back due to: #{ ex } \" end As the previous example, the exception cause the transaction to rollback and then is rescued by us. There is one exception with a different behaviour. If a DB::Rollback is raised within the block, the implicit rollback will happen, but the exception will not be raised outside the block. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 begin db . transaction do | tx | cnn = tx . connection transfer_amount = 50 deposit ( cnn , \"Sarah\" , transfer_amount ) withdraw ( cnn , \"John\" , transfer_amount ) # rollback exception raise DB :: Rollback . new end rescue ex # ex is never a DB::Rollback end","title":"Exception handling and rolling back"},{"location":"database/transactions.html#explicit-commit-and-rollback","text":"In all the previous examples, the rolling back is implicit , but we can also tell the transaction to rollback: db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 begin db . transaction do | tx | cnn = tx . connection transfer_amount = 50 deposit ( cnn , \"Sarah\" , transfer_amount ) withdraw ( cnn , \"John\" , transfer_amount ) tx . rollback puts \"Rolling Back the changes!\" end rescue ex # Notice that no exception is used in this case. end And we can also use the commit method: db = get_bank_db db . transaction do | tx | cnn = tx . connection transfer_amount = 50 deposit ( cnn , \"Sarah\" , transfer_amount ) withdraw ( cnn , \"John\" , transfer_amount ) tx . commit end Note After commit or rollback are used, the transaction is no longer usable. The connection is still open but any statement will be performed outside the context of the terminated transaction.","title":"Explicit commit and rollback"},{"location":"database/transactions.html#nested-transactions","text":"As the name suggests, a nested transaction is a transaction created inside the scope of another transaction. Here is an example: db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) end end rescue ex puts \"Exception raised due to: #{ ex } \" end Some observations from the above example: the inner_tx works with the values updated although the outer_tx is pending the commit. The connection used by outer_tx and inner_tx is the same connection . This is because the inner_tx inherits the connection from the outer_tx when created.","title":"Nested transactions"},{"location":"database/transactions.html#rollback-nested-transactions","text":"As we\u2019ve already seen, a rollback may be fired at any time (by an exception or by sending the message rollback explicitly) So let\u2019s present an example with a rollback fired by an exception placed at the outer-transaction : db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) end raise Exception . new ( \"Rollback all the things!\" ) end rescue ex puts \"Exception raised due to: #{ ex } \" end The rollback place in the outer_tx block, rolled back all the changes including the ones in the inner_tx block (the same happens if we use an explicit rollback). If the rollback is fired by an exception at the inner_tx block all the changes including the ones in the outer_tx are rollbacked. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) raise Exception . new ( \"Rollback all the things!\" ) end end rescue ex puts \"Exception raised due to: #{ ex } \" end There is a way to rollback the changes in the inner-transaction but keep the ones in the outer-transaction . Use rollback in the inner_tx object. This will rollback only then inner-transaction. Here is the example: db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) inner_tx . rollback end end rescue ex puts \"Exception raised due to: #{ ex } \" end The same happens if a DB::Rollback exception is raised in the inner-transaction block. db = get_bank_db create_account db , \"John\" , amount : 100 create_account db , \"Sarah\" , amount : 100 create_account db , \"Jack\" , amount : 0 begin db . transaction do | outer_tx | outer_cnn = outer_tx . connection transfer_amount = 50 deposit ( outer_cnn , \"Sarah\" , transfer_amount ) withdraw ( outer_cnn , \"John\" , transfer_amount ) outer_tx . transaction do | inner_tx | inner_cnn = inner_tx . connection # John => 50 (pending commit) # Sarah => 150 (pending commit) # Jack => 0 another_transfer_amount = 150 deposit ( inner_cnn , \"Jack\" , another_transfer_amount ) withdraw ( inner_cnn , \"Sarah\" , another_transfer_amount ) # Rollback exception raise DB :: Rollback . new end end rescue ex puts \"Exception raised due to: #{ ex } \" end [^ACID]: Theo Haerder and Andreas Reuter. 1983. Principles of transaction-oriented database recovery. ACM Comput. Surv. 15, 4 (December 1983), 287-317. DOI= http://dx.doi.org/10.1145/289.291","title":"Rollback nested transactions"},{"location":"getting_started/index.html","text":"Getting Started Crystal \u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u3088\u3046\u3053\u305d\uff01 \u306f\u3058\u3081\u306b\u3001\u6b63\u3057\u304f \u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3057\u3066\u3001\u305d\u308c\u304b\u3089\u4ee5\u964d\u306e\u4f8b\u306b\u81e8\u3093\u3067\u304f\u3060\u3055\u3044\u3002 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u6e08\u3093\u3067\u3044\u308c\u3070\u3001 crystal \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 Crystal \u306e\u30d0\u30fc\u30b8\u30e7\u30f3 \u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\u3082\u3057\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u3066\u3044\u308c\u3070\u3001\u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002 $ crystal --version --8<-- \"crystal-version.txt\" \u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002 Crystal \u306e\u30d8\u30eb\u30d7 \u3055\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6e21\u3059\u3053\u3068\u306e\u3067\u304d\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30ea\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b\u306b\u306f\u3001 crystal \u30b3\u30de\u30f3\u30c9\u306b\u4f55\u3082\u5f15\u6570\u3092\u6e21\u3055\u305a\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002 $ crystal Usage: crystal [command] [switches] [program file] [--] [arguments] Command: init generate a new project build build an executable docs generate documentation env print Crystal environment information eval eval code from args or standard input play starts Crystal playground server run (default) build and run program spec build and run specs (in spec directory) tool run a tool help, --help, -h show this help version, --version, -v show version Run a command followed by --help to see command specific information, ex: crystal <command> --help \u3088\u308a\u8a73\u7d30\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4f7f\u3044\u65b9\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001 man crystal \u3092\u5b9f\u884c\u3057\u3066 man \u30da\u30fc\u30b8\u3092\u898b\u308b\u304b\u3001\u3053\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e \u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30de\u30cb\u30e5\u30a2\u30eb \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Hello Crystal \u6b21\u306e\u4f8b\u306f\u5178\u578b\u7684\u306a Hello World \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002Crystal \u3067\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 hello_world.cr puts \"Hello World!\" \u3053\u308c\u3092\u3001\u3053\u306e\u3088\u3046\u306b\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 $ crystal hello_world.cr Hello World! Note \u30e1\u30a4\u30f3\u306e\u51e6\u7406\u306f\u5358\u7d14\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u81ea\u8eab\u3068\u306a\u308a\u307e\u3059\u3002\"main\" \u95a2\u6570\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u6700\u521d\u306e Crystal \u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u3001\u6b21\u306e2\u3064\u306e\u4f8b\u3092\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3059\u3002 HTTP \u30b5\u30fc\u30d0\u30fc \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3","title":"Getting Started"},{"location":"getting_started/index.html#getting-started","text":"Crystal \u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u3088\u3046\u3053\u305d\uff01 \u306f\u3058\u3081\u306b\u3001\u6b63\u3057\u304f \u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3057\u3066\u3001\u305d\u308c\u304b\u3089\u4ee5\u964d\u306e\u4f8b\u306b\u81e8\u3093\u3067\u304f\u3060\u3055\u3044\u3002 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u6e08\u3093\u3067\u3044\u308c\u3070\u3001 crystal \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","title":"Getting Started"},{"location":"getting_started/index.html#crystal","text":"\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\u3082\u3057\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u3066\u3044\u308c\u3070\u3001\u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002 $ crystal --version --8<-- \"crystal-version.txt\" \u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002","title":"Crystal \u306e\u30d0\u30fc\u30b8\u30e7\u30f3"},{"location":"getting_started/index.html#crystal_1","text":"\u3055\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6e21\u3059\u3053\u3068\u306e\u3067\u304d\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30ea\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b\u306b\u306f\u3001 crystal \u30b3\u30de\u30f3\u30c9\u306b\u4f55\u3082\u5f15\u6570\u3092\u6e21\u3055\u305a\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002 $ crystal Usage: crystal [command] [switches] [program file] [--] [arguments] Command: init generate a new project build build an executable docs generate documentation env print Crystal environment information eval eval code from args or standard input play starts Crystal playground server run (default) build and run program spec build and run specs (in spec directory) tool run a tool help, --help, -h show this help version, --version, -v show version Run a command followed by --help to see command specific information, ex: crystal <command> --help \u3088\u308a\u8a73\u7d30\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4f7f\u3044\u65b9\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001 man crystal \u3092\u5b9f\u884c\u3057\u3066 man \u30da\u30fc\u30b8\u3092\u898b\u308b\u304b\u3001\u3053\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e \u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30de\u30cb\u30e5\u30a2\u30eb \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Crystal \u306e\u30d8\u30eb\u30d7"},{"location":"getting_started/index.html#hello-crystal","text":"\u6b21\u306e\u4f8b\u306f\u5178\u578b\u7684\u306a Hello World \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002Crystal \u3067\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 hello_world.cr puts \"Hello World!\" \u3053\u308c\u3092\u3001\u3053\u306e\u3088\u3046\u306b\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 $ crystal hello_world.cr Hello World! Note \u30e1\u30a4\u30f3\u306e\u51e6\u7406\u306f\u5358\u7d14\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u81ea\u8eab\u3068\u306a\u308a\u307e\u3059\u3002\"main\" \u95a2\u6570\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u6700\u521d\u306e Crystal \u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u3001\u6b21\u306e2\u3064\u306e\u4f8b\u3092\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3059\u3002 HTTP \u30b5\u30fc\u30d0\u30fc \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3","title":"Hello Crystal"},{"location":"getting_started/cli.html","text":"CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 (CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3) \u306e\u958b\u767a\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u30bf\u30b9\u30af\u306e\u4e2d\u3067\u6700\u3082\u6109\u5feb\u306a\u3082\u306e\u306e1\u3064\u3067\u3059\u3002\u305d\u308c\u3067\u306f\u3001Crystal \u3067\u306e\u6700\u521d\u306e CLI \u306e\u958b\u767a\u3092\u697d\u3057\u307f\u307e\u3057\u3087\u3046\u3002 CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u306f\u3001\u4e3b\u306a\u30c8\u30d4\u30c3\u30af\u304c2\u3064\u3042\u308a\u307e\u3059\u3002 \u5165\u529b \u51fa\u529b \u5165\u529b \u3053\u306e\u30c8\u30d4\u30c3\u30af\u3067\u306f\u3001\u6b21\u306e\u8a71\u984c\u306b\u95a2\u9023\u3059\u308b\u3053\u3068\u3092\u6271\u3063\u3066\u3044\u304d\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3055\u308c\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u51e6\u7406 \u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u306e\u8981\u6c42 \u30aa\u30d7\u30b7\u30e7\u30f3 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6e21\u3059\u3053\u3068\u306f\u3068\u3066\u3082\u4e00\u822c\u7684\u3067\u3059\u3002\u4f8b\u3048\u3070 crystal -v \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Crystal \u306f\u6b21\u306e\u3088\u3046\u306b\u8868\u793a\u3057\u307e\u3059\u3002 $ crystal -v --8<-- \"crystal-version.txt\" \u305d\u3057\u3066 crystal -h \u3068\u5b9f\u884c\u3059\u308b\u3068\u3001Crystal \u306f\u81ea\u8eab\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u305d\u308c\u3089\u306e\u5229\u7528\u65b9\u6cd5\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u300c \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u89e3\u6790\u90e8\u5206\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff1f \u300d\u3068\u7591\u554f\u3092\u6301\u3064\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002Crystal \u3067\u306f OptionParser \u304c\u305d\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u3053\u306e\u30d1\u30fc\u30b5\u30fc\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002 CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u3092\u59cb\u3081\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u307e\u305a\u6b21\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002 -v / --version : \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a\u3059\u308b\u3002 -h / --help : \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5229\u7528\u65b9\u6cd5\u3092\u8868\u793a\u3059\u308b\u3002 help.cr require \"option_parser\" OptionParser . parse do | parser | parser . banner = \"Welcome to The Beatles App!\" parser . on \"-v\" , \"--version\" , \"Show version\" do puts \"version 1.0\" exit end parser . on \"-h\" , \"--help\" , \"Show help\" do puts parser exit end end ``` \u3055\u3066\u3001\u3053\u308c\u304c\u3069\u3046\u3084\u3063\u3066\u52d5\u4f5c\u3059\u308b\u3068\u3044\u3046\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u3000\u305d\u308c\u306f\u2026\u2026\u9b54\u6cd5\u306e\u3088\u3046\u306b\uff01\u3000\u3044\u3048\u3044\u3048\u3001\u5b9f\u306e\u3068\u3053\u308d\u9b54\u6cd5\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u3002\u5b9f\u88c5\u304c\u7c21\u5358\u306b\u306a\u3063\u305f\u306e\u306f Crystal \u306e\u304a\u304b\u3052\u3067\u3059\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u958b\u59cb\u3059\u308b\u3068\u3001\u307e\u305a` OptionParser #parse`\u306b\u6e21\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30d6\u30ed\u30c3\u30af\u3067\u3059\u3079\u3066\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u305f\u306e\u3061\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u30d1\u30fc\u30b5\u30fc\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3055\u308c\u305f\u5f15\u6570\u3092\u51e6\u7406\u3057\u3066\u3001\u5b9a\u7fa9\u3057\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u30de\u30c3\u30c1\u3059\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u30de\u30c3\u30c1\u3057\u305f\u3068\u304d\u306b\u3001`parser#on`\u306b\u6e21\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002 `OptionParser` \u306e\u3059\u3079\u3066\u3092 [ \u516c\u5f0f\u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 ] ( https : // crystal - lang . org / api / latest / OptionParser . html ) \u306b\u3088\u3063\u3066\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u3053\u304b\u30891\u30af\u30ea\u30c3\u30af\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u2026\u2026\u3053\u308c\u304c\u9b54\u6cd5\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u306e\u8a3c\u660e\u3067\u3059\u3002 \u3055\u3066\u3001\u305d\u308c\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 [ \u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5b9f\u884c\u65b9\u6cd5 ] ( ../ using_the_compiler / README . md ) \u306f2\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002 1 . [ \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9 ] ( ../ using_the_compiler / README . md #crystal-build)\u3092\u3057\u3066\u3001\u305d\u308c\u3092\u5b9f\u884c\u3059\u308b\u3002 2 . \u30b3\u30f3\u30d1\u30a4\u30eb\u3068 [ \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c ] ( ../ using_the_compiler / README . md #crystal-run)\u3092\u30011\u5ea6\u306e\u30b3\u30de\u30f3\u30c9\u3067\u307e\u3068\u3081\u3066\u884c\u3046\u3002 \u4eca\u56de\u306f2\u756a\u76ee\u306e\u65b9\u6cd5\u3067\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 ```console $ crystal run ./help.cr -- -h Welcome to The Beatles App! -v, --version Show version -h, --help Show help \u7d9a\u3051\u3066\u3001\u3053\u3093\u306a\u6a5f\u80fd\u3092\u6301\u3064_\u30d5\u30a1\u30d3\u30e5\u30e9\u30b9\u306a_\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046: \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f (\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4e0e\u3048\u3089\u308c\u306a\u304b\u3063\u305f\u3068\u304d\u306b) The Fab Four \u306e\u30e1\u30f3\u30d0\u30fc\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u3001 -t \u3082\u3057\u304f\u306f --twist \u304c\u6e21\u3055\u308c\u305f\u3068\u304d\u306b\u306f\u3001\u540d\u524d\u3092\u5927\u6587\u5b57\u306b\u3057\u307e\u3059\u3002 twist_and_shout.cr require \"option_parser\" the_beatles = [ \"John Lennon\" , \"Paul McCartney\" , \"George Harrison\" , \"Ringo Starr\" ] shout = false option_parser = OptionParser . parse do | parser | parser . banner = \"Welcome to The Beatles App!\" parser . on \"-v\" , \"--version\" , \"Show version\" do puts \"version 1.0\" exit end parser . on \"-h\" , \"--help\" , \"Show help\" do puts parser exit end parser . on \"-t\" , \"--twist\" , \"Twist and SHOUT\" do shout = true end end members = the_beatles members = the_beatles . map &. upcase if shout puts \"\" puts \"Group members:\" puts \"==============\" members . each do | member | puts member end ``` ` - t ` \u3092\u3064\u3051\u3066\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u3002 ``` console $ crystal run . / twist_and_shout . cr -- - t Group members : ============== JOHN LENNON PAUL MCCARTNEY GEORGE HARRISON RINGO STARR ``` #### \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc \u6b21\u306f\u3053\u3093\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002_` - g ` / ` -- goodbye_hello `\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306b\u3001**\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc**\u3068\u3057\u3066\u6e21\u3055\u308c\u305f\u540d\u524d\u306b\u6328\u62f6\u3092\u3059\u308b_\u3002 !!!example \"hello_goodbye.cr\" ``` crystal require \"option_parser\" the_beatles = [ \"John Lennon\" , \"Paul McCartney\" , \"George Harrison\" , \"Ringo Starr\" ] say_hi_to = \"\" option_parser = OptionParser . parse do | parser | parser . banner = \"Welcome to The Beatles App!\" parser . on \"-v\" , \"--version\" , \"Show version\" do puts \"version 1.0\" exit end parser . on \"-h\" , \"--help\" , \"Show help\" do puts parser exit end parser . on \"-g NAME\" , \"--goodbye_hello=NAME\" , \"Say hello to whoever you want\" do | name | say_hi_to = name end end unless say_hi_to . empty? puts \"\" puts \"You say goodbye, and #{ the_beatles . sample } says hello to #{ say_hi_to } !\" end ``` \u3053\u306e\u5834\u5408\u3001\u30d6\u30ed\u30c3\u30af\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u4e0e\u3048\u3089\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u5024\u304c\u6e21\u3055\u308c\u307e\u3059\u3002 \u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 ``` console $ crystal run . / hello_goodbye . cr -- - g \"Penny Lane\" You say goodbye , and Ringo Starr say hello to Penny Lane! \u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u6bb5\u3005\u3068\u3044\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u3067\u3059\u304c\u3001 \u6e21\u3055\u308c\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5ba3\u8a00\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u3069\u3046\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f \u3000\u4f8b\u3048\u3070 -n \u3092\u6e21\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 $ crystal run ./hello_goodbye.cr -- -n Unhandled exception: Invalid option: -n (OptionParser::InvalidOption) from ... \u306a\u3093\u3066\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u306f\u58ca\u308c\u3066\u3044\u307e\u3059\u306d\u3002 \u7121\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3 \u3068 \u7121\u52b9\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc \u304c\u6e21\u3055\u308c\u305f\u3068\u304d\u306e\u51e6\u7406\u3092\u3059\u308b\u5fc5\u8981\u3059\u308b\u304c\u3042\u308a\u307e\u3059\u30022\u3064\u306e\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u3001 OptionParser \u30af\u30e9\u30b9\u306f #invalid_option \u3068 #missing_option \u3068\u3044\u30462\u3064\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u305d\u308c\u3067\u306f\u3001\u3053\u308c\u3089\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3001\u3055\u3089\u306b\u3053\u308c\u307e\u3067\u306b\u4f5c\u3063\u305f2\u3064\u306eCLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u307e\u3068\u3081\u3066\u30011\u3064\u306e\u30d5\u30a1\u30d3\u30e5\u30e9\u30b9\u306a CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3057\u307e\u3057\u3087\u3046\u3002 All My CLI: \u5b8c\u6210\u3057\u305f CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u3053\u308c\u304c\u3001\u7121\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3/\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u3066\u3001\u65b0\u3057\u3044\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u305f\u3001\u6700\u7d42\u7684\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002 all_my_cli.cr require \"option_parser\" the_beatles = [ \"John Lennon\" , \"Paul McCartney\" , \"George Harrison\" , \"Ringo Starr\" ] shout = false say_hi_to = \"\" strawberry = false option_parser = OptionParser . parse do | parser | parser . banner = \"Welcome to The Beatles App!\" parser . on \"-v\" , \"--version\" , \"Show version\" do puts \"version 1.0\" exit end parser . on \"-h\" , \"--help\" , \"Show help\" do puts parser exit end parser . on \"-t\" , \"--twist\" , \"Twist and SHOUT\" do shout = true end parser . on \"-g NAME\" , \"--goodbye_hello=NAME\" , \"Say hello to whoever you want\" do | name | say_hi_to = name end parser . on \"-r\" , \"--random_goodbye_hello\" , \"Say hello to one random member\" do say_hi_to = the_beatles . sample end parser . on \"-s\" , \"--strawberry\" , \"Strawberry fields forever mode ON\" do strawberry = true end parser . missing_option do | option_flag | STDERR . puts \"ERROR: #{ option_flag } is missing something.\" STDERR . puts \"\" STDERR . puts parser exit ( 1 ) end parser . invalid_option do | option_flag | STDERR . puts \"ERROR: #{ option_flag } is not a valid option.\" STDERR . puts parser exit ( 1 ) end end members = the_beatles members = the_beatles . map &. upcase if shout puts \"Strawberry fields forever mode ON\" if strawberry puts \"\" puts \"Group members:\" puts \"==============\" members . each do | member | puts \" #{ strawberry ?\" \ud83c\udf53 \" : \" - \"} #{ member } \" end unless say_hi_to . empty? puts \"\" puts \"You say goodbye, and I say hello to #{ say_hi_to } !\" end ``` ### \u30e6\u30fc\u30b6\u30fc\u3078\u306e\u5165\u529b\u306e\u8981\u6c42 \u3057\u3070\u3057\u3070\u30e6\u30fc\u30b6\u30fc\u306b\u5024\u3092\u5165\u529b\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u5024\u3092_\u8aad\u3080_\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u3000 \u7c21\u5358\u3067\u3059\uff01The Fab Four \u304c\u671b\u3080\u30d5\u30ec\u30fc\u30ba\u3092\u5504\u3063\u3066\u304f\u308c\u308b\u3001\u3068\u3044\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u30d5\u30ec\u30fc\u30ba\u3092\u8981\u6c42\u3057\u3066\u3001\u305d\u3057\u3066\u9b54\u6cd5\u304c\u8d77\u3053\u308a\u307e\u3059\uff01 !!!example \"let_it_cli.cr\" ``` crystal puts \"Welcome to The Beatles Sing Along version 1.0!\" puts \"Enter a phrase you want The Beatles to sing\" print \"> \" user_input = gets puts \"The Beatles are singing: \ud83c\udfb5 #{ user_input } \ud83c\udfb6\ud83c\udfb8\ud83e\udd41\" gets \u30e1\u30bd\u30c3\u30c9\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u3092\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u304c\u7d42\u4e86\u3059\u308b ( Enter \u304c\u62bc\u3055\u308c\u308b) \u307e\u3067 \u505c\u6b62 \u3055\u305b\u307e\u3059\u3002 \u30e6\u30fc\u30b6\u30fc\u304c Enter \u3092\u62bc\u3059\u3068\u3001\u5b9f\u884c\u304c\u518d\u958b\u3057\u3066 user_input \u306b\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3057\u305f\u5024\u304c\u5165\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u3053\u3053\u3067\u30e6\u30fc\u30b6\u30fc\u304c\u4f55\u3082\u5165\u529b\u3057\u306a\u304b\u3063\u305f\u3089\u3069\u3046\u306a\u308b\u306e\u3067\u3057\u3087\u3046\uff1f\u3000\u3053\u306e\u5834\u5408\u306f\u3001\u7a7a\u6587\u5b57\u5217 (\u30e6\u30fc\u30b6\u30fc\u304c Enter \u3092\u62bc\u3057\u305f\u5834\u5408) \u3082\u3057\u304f\u306f Nil \u5024 ( Ctrl+D \u306b\u3088\u3063\u3066\u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u9589\u3058\u305f\u5834\u5408) \u304c\u8fd4\u308a\u307e\u3059\u3002 \u3053\u308c\u304c\u3069\u3046\u3044\u3046\u554f\u984c\u306a\u306e\u304b\u8aac\u660e\u3059\u308b\u305f\u3081\u306b\u3001\u5165\u529b\u3055\u308c\u305f\u5024\u3092\u53eb\u3070\u305b\u3066 (\u5927\u6587\u5b57\u306b\u3057\u3066\u8868\u793a\u3057\u3066) \u307f\u307e\u3057\u3087\u3046\u3002 let_it_cli.cr puts \"Welcome to The Beatles Sing Along version 1.0!\" puts \"Enter a phrase you want The Beatles to sing\" print \"> \" user_input = gets puts \"The Beatles are singing: \ud83c\udfb5 #{ user_input . upcase } \ud83c\udfb6\ud83c\udfb8\ud83e\udd41\" \u3053\u308c\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3057\u3066\u307f\u308b\u3068\u3001 Crystal \u306f\u3053\u3093\u306a\u98a8\u306b\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3059\u308b\u3067\u3057\u3087\u3046\u3002 $ crystal run ./let_it_cli.cr Showing last frame. Use --error-trace for full trace. In let_it_cli.cr:5:46 5 | puts \"The Beatles are singing: \ud83c\udfb5#{user_input.upper_case} ^--------- Error: undefined method 'upper_case' for Nil (compile-time type is (String | Nil)) \u3064\u307e\u308a\u3001\u3053\u3046\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3057\u305f\u5024\u306e\u578b\u306f String | Nil \u3068\u3044\u3046 \u30e6\u30cb\u30aa\u30f3\u578b \u306a\u306e\u3067\u3059\u3002 \u3068\u3044\u3046\u308f\u3051\u3067\u3001 Nil \u3082\u3057\u304f\u306f \"\" (\u7a7a\u6587\u5b57\u5217) \u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u81ea\u7136\u306b\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 let_it_cli.cr puts \"Welcome to The Beatles Sing Along version 1.0!\" puts \"Enter a phrase you want The Beatles to sing\" print \"> \" user_input = gets exit if user_input . nil? # Ctrl+D default_lyrics = \"Na, na, na, na-na-na na\" \\ \" / \" \\ \"Na-na-na na, hey Jude\" lyrics = user_input . presence || default_lyrics puts \"The Beatles are singing: \ud83c\udfb5 #{ lyrics . upcase } \ud83c\udfb6\ud83c\udfb8\ud83e\udd41\" ``` ## \u51fa\u529b \u3053\u3053\u304b\u3089\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u51fa\u529b\u3068\u3044\u3046\u30012\u3064\u76ee\u306e\u30c8\u30d4\u30c3\u30af\u306b\u53d6\u308a\u304b\u304b\u3063\u3066\u3044\u304d\u307e\u3059\u3002 \u306f\u3058\u3081\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u73fe\u6642\u70b9\u3067\u3082\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u306f\u3044\u308b\u3051\u3069\u3001\u305d\u3053\u307e\u3067\u826f\u3044\u8868\u793a\u3060\u3068\u306f\u8a00\u3048\u307e\u305b\u3093\u3002\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u51fa\u529b\u3092 _\u8272\u4ed8\u3051_ \u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u3053\u308c\u3092\u9054\u6210\u3059\u308b\u305f\u3081\u306b [` Colorize `](https://crystal-lang.org/api/latest/Colorize.html) \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 \u8272\u4ed8\u3044\u305f\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u3001\u5358\u7d14\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u9ed2\u3044\u80cc\u666f\u306b\u9ec4\u8272\u306e\u6587\u5b57\u3067\u8868\u793a\u3057\u307e\u3059\u3002 !!!example \"yellow_cli.cr\" ``` crystal require \"colorize\" puts \" #{ \"The Beatles\" . colorize ( :yellow ) . on ( :black ) } App\" ``` \u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002\u7c21\u5358\u3067\u3057\u3087\u3046\u3002\u30a4\u30de\u30b8\u30f3 (\u60f3\u50cf) \u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3001All My CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30ca\u30fc\u306b\u3053\u306e\u6587\u5b57\u5217\u3092\u4f7f\u3046\u3053\u3068\u3092\u3002\u307b\u3089\u3001\u7c21\u5358\u3067\u3057\u3087\u3046\uff1f (it's easy if you try?) ``` crystal parser . banner = \" #{ \"The Beatles\" . colorize ( :yellow ) . on ( :black ) } App\" \u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\u65b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u4eca\u56de\u306f blink (\u70b9\u6ec5)\u3068\u3044\u3046 \u30c6\u30ad\u30b9\u30c8\u306e\u88c5\u98fe \u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 let_it_cli.cr ```crystal require \"colorize\" puts \"Welcome to The Beatles Sing Along version 1.0!\" puts \"Enter a phrase you want The Beatles to sing\" print \"> \" user_input = gets exit if user_input.nil?# Ctrl+D default_lyrics = \"Na, na, na, na-na-na na\" \\ \" / \" \\ \"Na-na-na na, hey Jude\" lyrics = user_input.presence || default_lyrics puts \"The Beatles are singing: #{\"\ud83c\udfb5#{lyrics}\ud83c\udfb6\ud83c\udfb8\ud83e\udd41\".colorize.mode(:blink)}\" ``` \u751f\u307e\u308c\u5909\u308f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u2026\u2026\u305d\u3057\u3066\u3001\u9055\u3044\u3092_\u8074\u304d\u53d6\u3063\u3066_\u304f\u3060\u3055\u3044\u3002 \u4eca \u3001\u79c1\u305f\u3061\u306f2\u3064\u306e\u30d5\u30a1\u30d3\u30e5\u30e9\u30b9\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u305f\u306e\u3067\u3059\u3002 \u5229\u7528\u3067\u304d\u308b\u8272 \u3084 \u30c6\u30ad\u30b9\u30c8\u306e\u88c5\u98fe \u306e\u4e00\u89a7\u306f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u30c6\u30b9\u30c8 \u4ed6\u306e\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u305d\u3046\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u7570\u306a\u308b\u6a5f\u80fd\u3054\u3068\u306b \u30c6\u30b9\u30c8\u3092\u66f8\u304d\u305f\u3044 \u3082\u306e\u3067\u3059\u3002 \u73fe\u6642\u70b9\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5404\u30ed\u30b8\u30c3\u30af\u306f OptionParser \u306e\u5185\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u3001\u90e8\u5206\u7684\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u308a\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3002\u3088\u3063\u3066\u3001\u307e\u305a\u306f\u3058\u3081\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u89e3\u6790\u90e8\u5206\u3068\u5b9f\u969b\u306e\u30ed\u30b8\u30c3\u30af\u3092\u5206\u96e2\u3059\u308b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u304c\u6e08\u3081\u3070\u3001\u3042\u308b\u30ed\u30b8\u30c3\u30af\u306e\u30c6\u30b9\u30c8\u306b\u5fc5\u8981\u306a\u30b3\u30fc\u30c9\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3092\u30c6\u30b9\u30c8\u306e\u30b3\u30fc\u30c9\u306b\u53d6\u308a\u8fbc\u3093\u3067\u3001\u30ed\u30b8\u30c3\u30af\u306e\u30c6\u30b9\u30c8\u3092\u306f\u3058\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u3092\u8aad\u8005\u306e\u8ab2\u984c\u3068\u3057\u307e\u3059\u3002. Readline \u3068 NCurses \u306e\u5229\u7528 \u3088\u308a\u30ea\u30c3\u30c1\u306aCLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u3068\u304d\u3001\u3053\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u52a9\u3051\u306b\u306a\u308a\u307e\u3059\u3002 Readline \u3068 NCurses \u3068\u3044\u3046\u30012\u3064\u306e\u3088\u304f\u77e5\u3089\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002 GNU Readline Library \u3067\u8ff0\u3079\u3089\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001 Readline \u306f\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u7de8\u96c6\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 Readline \u306f\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u88dc\u5b8c\u306a\u3069\u306e\u81ea\u52d5\u88dc\u5b8c\u3001\u30ad\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306a\u3069\u3001\u69d8\u3005\u306a\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3089\u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u306e\u3067\u3042\u308c\u3070 crystal-lang/crystal-readline shard \u304c Readline \u3092\u7c21\u5358\u306b\u6271\u3046\u305f\u3081\u306e API \u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002 \u7d9a\u3044\u3066\u3001 NCurses (New Curses) \u306e\u7d39\u4ecb\u3067\u3059\u3002\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u7aef\u672b\u3067_\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u306a_\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u958b\u767a\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\u305d\u306e\u540d\u524d\u304c\u6697\u306b\u793a\u3059\u3088\u3046\u306b\u3001\u3053\u308c\u306f Curses \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6539\u826f\u7248\u3067\u3059\u3002 Curses \u306f Rouge \u3068\u3044\u3046\u30c6\u30ad\u30b9\u30c8\u30d9\u30fc\u30b9\u306e\u30c0\u30f3\u30b8\u30e7\u30f3\u63a2\u7d22\u30a2\u30c9\u30d9\u30f3\u30c1\u30e3\u30fc\u30b2\u30fc\u30e0\u306e\u305f\u3081\u306b\u958b\u767a\u3055\u308c\u307e\u3057\u305f\u3002 \u60f3\u50cf\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 NCurses Crystal \u3067\u4f7f\u3046\u306b\u306f \u3044\u304f\u3064\u3082\u306e shardls \u304c\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306b\u306f\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3067\u3053\u306e\u6587\u7ae0\u306f\u304a\u3057\u307e\u3044\u3067\u3059 \ud83d\ude0e\ud83c\udfb6","title":"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3"},{"location":"getting_started/cli.html#cli","text":"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 (CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3) \u306e\u958b\u767a\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u30bf\u30b9\u30af\u306e\u4e2d\u3067\u6700\u3082\u6109\u5feb\u306a\u3082\u306e\u306e1\u3064\u3067\u3059\u3002\u305d\u308c\u3067\u306f\u3001Crystal \u3067\u306e\u6700\u521d\u306e CLI \u306e\u958b\u767a\u3092\u697d\u3057\u307f\u307e\u3057\u3087\u3046\u3002 CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u306f\u3001\u4e3b\u306a\u30c8\u30d4\u30c3\u30af\u304c2\u3064\u3042\u308a\u307e\u3059\u3002 \u5165\u529b \u51fa\u529b","title":"CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3"},{"location":"getting_started/cli.html#_1","text":"\u3053\u306e\u30c8\u30d4\u30c3\u30af\u3067\u306f\u3001\u6b21\u306e\u8a71\u984c\u306b\u95a2\u9023\u3059\u308b\u3053\u3068\u3092\u6271\u3063\u3066\u3044\u304d\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3055\u308c\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u51e6\u7406 \u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u306e\u8981\u6c42","title":"\u5165\u529b"},{"location":"getting_started/cli.html#_2","text":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6e21\u3059\u3053\u3068\u306f\u3068\u3066\u3082\u4e00\u822c\u7684\u3067\u3059\u3002\u4f8b\u3048\u3070 crystal -v \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Crystal \u306f\u6b21\u306e\u3088\u3046\u306b\u8868\u793a\u3057\u307e\u3059\u3002 $ crystal -v --8<-- \"crystal-version.txt\" \u305d\u3057\u3066 crystal -h \u3068\u5b9f\u884c\u3059\u308b\u3068\u3001Crystal \u306f\u81ea\u8eab\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u305d\u308c\u3089\u306e\u5229\u7528\u65b9\u6cd5\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u300c \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u89e3\u6790\u90e8\u5206\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff1f \u300d\u3068\u7591\u554f\u3092\u6301\u3064\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002Crystal \u3067\u306f OptionParser \u304c\u305d\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u3053\u306e\u30d1\u30fc\u30b5\u30fc\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002 CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u3092\u59cb\u3081\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u307e\u305a\u6b21\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002 -v / --version : \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a\u3059\u308b\u3002 -h / --help : \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5229\u7528\u65b9\u6cd5\u3092\u8868\u793a\u3059\u308b\u3002 help.cr require \"option_parser\" OptionParser . parse do | parser | parser . banner = \"Welcome to The Beatles App!\" parser . on \"-v\" , \"--version\" , \"Show version\" do puts \"version 1.0\" exit end parser . on \"-h\" , \"--help\" , \"Show help\" do puts parser exit end end ``` \u3055\u3066\u3001\u3053\u308c\u304c\u3069\u3046\u3084\u3063\u3066\u52d5\u4f5c\u3059\u308b\u3068\u3044\u3046\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u3000\u305d\u308c\u306f\u2026\u2026\u9b54\u6cd5\u306e\u3088\u3046\u306b\uff01\u3000\u3044\u3048\u3044\u3048\u3001\u5b9f\u306e\u3068\u3053\u308d\u9b54\u6cd5\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u3002\u5b9f\u88c5\u304c\u7c21\u5358\u306b\u306a\u3063\u305f\u306e\u306f Crystal \u306e\u304a\u304b\u3052\u3067\u3059\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u958b\u59cb\u3059\u308b\u3068\u3001\u307e\u305a` OptionParser #parse`\u306b\u6e21\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30d6\u30ed\u30c3\u30af\u3067\u3059\u3079\u3066\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u305f\u306e\u3061\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u30d1\u30fc\u30b5\u30fc\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3055\u308c\u305f\u5f15\u6570\u3092\u51e6\u7406\u3057\u3066\u3001\u5b9a\u7fa9\u3057\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u30de\u30c3\u30c1\u3059\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u30de\u30c3\u30c1\u3057\u305f\u3068\u304d\u306b\u3001`parser#on`\u306b\u6e21\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002 `OptionParser` \u306e\u3059\u3079\u3066\u3092 [ \u516c\u5f0f\u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 ] ( https : // crystal - lang . org / api / latest / OptionParser . html ) \u306b\u3088\u3063\u3066\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u3053\u304b\u30891\u30af\u30ea\u30c3\u30af\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u2026\u2026\u3053\u308c\u304c\u9b54\u6cd5\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u306e\u8a3c\u660e\u3067\u3059\u3002 \u3055\u3066\u3001\u305d\u308c\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 [ \u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u5b9f\u884c\u65b9\u6cd5 ] ( ../ using_the_compiler / README . md ) \u306f2\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002 1 . [ \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9 ] ( ../ using_the_compiler / README . md #crystal-build)\u3092\u3057\u3066\u3001\u305d\u308c\u3092\u5b9f\u884c\u3059\u308b\u3002 2 . \u30b3\u30f3\u30d1\u30a4\u30eb\u3068 [ \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c ] ( ../ using_the_compiler / README . md #crystal-run)\u3092\u30011\u5ea6\u306e\u30b3\u30de\u30f3\u30c9\u3067\u307e\u3068\u3081\u3066\u884c\u3046\u3002 \u4eca\u56de\u306f2\u756a\u76ee\u306e\u65b9\u6cd5\u3067\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 ```console $ crystal run ./help.cr -- -h Welcome to The Beatles App! -v, --version Show version -h, --help Show help \u7d9a\u3051\u3066\u3001\u3053\u3093\u306a\u6a5f\u80fd\u3092\u6301\u3064_\u30d5\u30a1\u30d3\u30e5\u30e9\u30b9\u306a_\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046: \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f (\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4e0e\u3048\u3089\u308c\u306a\u304b\u3063\u305f\u3068\u304d\u306b) The Fab Four \u306e\u30e1\u30f3\u30d0\u30fc\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u3001 -t \u3082\u3057\u304f\u306f --twist \u304c\u6e21\u3055\u308c\u305f\u3068\u304d\u306b\u306f\u3001\u540d\u524d\u3092\u5927\u6587\u5b57\u306b\u3057\u307e\u3059\u3002 twist_and_shout.cr require \"option_parser\" the_beatles = [ \"John Lennon\" , \"Paul McCartney\" , \"George Harrison\" , \"Ringo Starr\" ] shout = false option_parser = OptionParser . parse do | parser | parser . banner = \"Welcome to The Beatles App!\" parser . on \"-v\" , \"--version\" , \"Show version\" do puts \"version 1.0\" exit end parser . on \"-h\" , \"--help\" , \"Show help\" do puts parser exit end parser . on \"-t\" , \"--twist\" , \"Twist and SHOUT\" do shout = true end end members = the_beatles members = the_beatles . map &. upcase if shout puts \"\" puts \"Group members:\" puts \"==============\" members . each do | member | puts member end ``` ` - t ` \u3092\u3064\u3051\u3066\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u3002 ``` console $ crystal run . / twist_and_shout . cr -- - t Group members : ============== JOHN LENNON PAUL MCCARTNEY GEORGE HARRISON RINGO STARR ``` #### \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc \u6b21\u306f\u3053\u3093\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002_` - g ` / ` -- goodbye_hello `\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306b\u3001**\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc**\u3068\u3057\u3066\u6e21\u3055\u308c\u305f\u540d\u524d\u306b\u6328\u62f6\u3092\u3059\u308b_\u3002 !!!example \"hello_goodbye.cr\" ``` crystal require \"option_parser\" the_beatles = [ \"John Lennon\" , \"Paul McCartney\" , \"George Harrison\" , \"Ringo Starr\" ] say_hi_to = \"\" option_parser = OptionParser . parse do | parser | parser . banner = \"Welcome to The Beatles App!\" parser . on \"-v\" , \"--version\" , \"Show version\" do puts \"version 1.0\" exit end parser . on \"-h\" , \"--help\" , \"Show help\" do puts parser exit end parser . on \"-g NAME\" , \"--goodbye_hello=NAME\" , \"Say hello to whoever you want\" do | name | say_hi_to = name end end unless say_hi_to . empty? puts \"\" puts \"You say goodbye, and #{ the_beatles . sample } says hello to #{ say_hi_to } !\" end ``` \u3053\u306e\u5834\u5408\u3001\u30d6\u30ed\u30c3\u30af\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u4e0e\u3048\u3089\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u5024\u304c\u6e21\u3055\u308c\u307e\u3059\u3002 \u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 ``` console $ crystal run . / hello_goodbye . cr -- - g \"Penny Lane\" You say goodbye , and Ringo Starr say hello to Penny Lane! \u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u6bb5\u3005\u3068\u3044\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u3067\u3059\u304c\u3001 \u6e21\u3055\u308c\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5ba3\u8a00\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u3069\u3046\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f \u3000\u4f8b\u3048\u3070 -n \u3092\u6e21\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 $ crystal run ./hello_goodbye.cr -- -n Unhandled exception: Invalid option: -n (OptionParser::InvalidOption) from ... \u306a\u3093\u3066\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u306f\u58ca\u308c\u3066\u3044\u307e\u3059\u306d\u3002 \u7121\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3 \u3068 \u7121\u52b9\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc \u304c\u6e21\u3055\u308c\u305f\u3068\u304d\u306e\u51e6\u7406\u3092\u3059\u308b\u5fc5\u8981\u3059\u308b\u304c\u3042\u308a\u307e\u3059\u30022\u3064\u306e\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u3001 OptionParser \u30af\u30e9\u30b9\u306f #invalid_option \u3068 #missing_option \u3068\u3044\u30462\u3064\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u305d\u308c\u3067\u306f\u3001\u3053\u308c\u3089\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3001\u3055\u3089\u306b\u3053\u308c\u307e\u3067\u306b\u4f5c\u3063\u305f2\u3064\u306eCLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u307e\u3068\u3081\u3066\u30011\u3064\u306e\u30d5\u30a1\u30d3\u30e5\u30e9\u30b9\u306a CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3057\u307e\u3057\u3087\u3046\u3002","title":"\u30aa\u30d7\u30b7\u30e7\u30f3"},{"location":"getting_started/cli.html#all-my-cli-cli","text":"\u3053\u308c\u304c\u3001\u7121\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3/\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u3066\u3001\u65b0\u3057\u3044\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u305f\u3001\u6700\u7d42\u7684\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002 all_my_cli.cr require \"option_parser\" the_beatles = [ \"John Lennon\" , \"Paul McCartney\" , \"George Harrison\" , \"Ringo Starr\" ] shout = false say_hi_to = \"\" strawberry = false option_parser = OptionParser . parse do | parser | parser . banner = \"Welcome to The Beatles App!\" parser . on \"-v\" , \"--version\" , \"Show version\" do puts \"version 1.0\" exit end parser . on \"-h\" , \"--help\" , \"Show help\" do puts parser exit end parser . on \"-t\" , \"--twist\" , \"Twist and SHOUT\" do shout = true end parser . on \"-g NAME\" , \"--goodbye_hello=NAME\" , \"Say hello to whoever you want\" do | name | say_hi_to = name end parser . on \"-r\" , \"--random_goodbye_hello\" , \"Say hello to one random member\" do say_hi_to = the_beatles . sample end parser . on \"-s\" , \"--strawberry\" , \"Strawberry fields forever mode ON\" do strawberry = true end parser . missing_option do | option_flag | STDERR . puts \"ERROR: #{ option_flag } is missing something.\" STDERR . puts \"\" STDERR . puts parser exit ( 1 ) end parser . invalid_option do | option_flag | STDERR . puts \"ERROR: #{ option_flag } is not a valid option.\" STDERR . puts parser exit ( 1 ) end end members = the_beatles members = the_beatles . map &. upcase if shout puts \"Strawberry fields forever mode ON\" if strawberry puts \"\" puts \"Group members:\" puts \"==============\" members . each do | member | puts \" #{ strawberry ?\" \ud83c\udf53 \" : \" - \"} #{ member } \" end unless say_hi_to . empty? puts \"\" puts \"You say goodbye, and I say hello to #{ say_hi_to } !\" end ``` ### \u30e6\u30fc\u30b6\u30fc\u3078\u306e\u5165\u529b\u306e\u8981\u6c42 \u3057\u3070\u3057\u3070\u30e6\u30fc\u30b6\u30fc\u306b\u5024\u3092\u5165\u529b\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u5024\u3092_\u8aad\u3080_\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u3000 \u7c21\u5358\u3067\u3059\uff01The Fab Four \u304c\u671b\u3080\u30d5\u30ec\u30fc\u30ba\u3092\u5504\u3063\u3066\u304f\u308c\u308b\u3001\u3068\u3044\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u30d5\u30ec\u30fc\u30ba\u3092\u8981\u6c42\u3057\u3066\u3001\u305d\u3057\u3066\u9b54\u6cd5\u304c\u8d77\u3053\u308a\u307e\u3059\uff01 !!!example \"let_it_cli.cr\" ``` crystal puts \"Welcome to The Beatles Sing Along version 1.0!\" puts \"Enter a phrase you want The Beatles to sing\" print \"> \" user_input = gets puts \"The Beatles are singing: \ud83c\udfb5 #{ user_input } \ud83c\udfb6\ud83c\udfb8\ud83e\udd41\" gets \u30e1\u30bd\u30c3\u30c9\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u3092\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u304c\u7d42\u4e86\u3059\u308b ( Enter \u304c\u62bc\u3055\u308c\u308b) \u307e\u3067 \u505c\u6b62 \u3055\u305b\u307e\u3059\u3002 \u30e6\u30fc\u30b6\u30fc\u304c Enter \u3092\u62bc\u3059\u3068\u3001\u5b9f\u884c\u304c\u518d\u958b\u3057\u3066 user_input \u306b\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3057\u305f\u5024\u304c\u5165\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u3053\u3053\u3067\u30e6\u30fc\u30b6\u30fc\u304c\u4f55\u3082\u5165\u529b\u3057\u306a\u304b\u3063\u305f\u3089\u3069\u3046\u306a\u308b\u306e\u3067\u3057\u3087\u3046\uff1f\u3000\u3053\u306e\u5834\u5408\u306f\u3001\u7a7a\u6587\u5b57\u5217 (\u30e6\u30fc\u30b6\u30fc\u304c Enter \u3092\u62bc\u3057\u305f\u5834\u5408) \u3082\u3057\u304f\u306f Nil \u5024 ( Ctrl+D \u306b\u3088\u3063\u3066\u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u9589\u3058\u305f\u5834\u5408) \u304c\u8fd4\u308a\u307e\u3059\u3002 \u3053\u308c\u304c\u3069\u3046\u3044\u3046\u554f\u984c\u306a\u306e\u304b\u8aac\u660e\u3059\u308b\u305f\u3081\u306b\u3001\u5165\u529b\u3055\u308c\u305f\u5024\u3092\u53eb\u3070\u305b\u3066 (\u5927\u6587\u5b57\u306b\u3057\u3066\u8868\u793a\u3057\u3066) \u307f\u307e\u3057\u3087\u3046\u3002 let_it_cli.cr puts \"Welcome to The Beatles Sing Along version 1.0!\" puts \"Enter a phrase you want The Beatles to sing\" print \"> \" user_input = gets puts \"The Beatles are singing: \ud83c\udfb5 #{ user_input . upcase } \ud83c\udfb6\ud83c\udfb8\ud83e\udd41\" \u3053\u308c\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3057\u3066\u307f\u308b\u3068\u3001 Crystal \u306f\u3053\u3093\u306a\u98a8\u306b\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3059\u308b\u3067\u3057\u3087\u3046\u3002 $ crystal run ./let_it_cli.cr Showing last frame. Use --error-trace for full trace. In let_it_cli.cr:5:46 5 | puts \"The Beatles are singing: \ud83c\udfb5#{user_input.upper_case} ^--------- Error: undefined method 'upper_case' for Nil (compile-time type is (String | Nil)) \u3064\u307e\u308a\u3001\u3053\u3046\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3057\u305f\u5024\u306e\u578b\u306f String | Nil \u3068\u3044\u3046 \u30e6\u30cb\u30aa\u30f3\u578b \u306a\u306e\u3067\u3059\u3002 \u3068\u3044\u3046\u308f\u3051\u3067\u3001 Nil \u3082\u3057\u304f\u306f \"\" (\u7a7a\u6587\u5b57\u5217) \u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u81ea\u7136\u306b\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 let_it_cli.cr puts \"Welcome to The Beatles Sing Along version 1.0!\" puts \"Enter a phrase you want The Beatles to sing\" print \"> \" user_input = gets exit if user_input . nil? # Ctrl+D default_lyrics = \"Na, na, na, na-na-na na\" \\ \" / \" \\ \"Na-na-na na, hey Jude\" lyrics = user_input . presence || default_lyrics puts \"The Beatles are singing: \ud83c\udfb5 #{ lyrics . upcase } \ud83c\udfb6\ud83c\udfb8\ud83e\udd41\" ``` ## \u51fa\u529b \u3053\u3053\u304b\u3089\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u51fa\u529b\u3068\u3044\u3046\u30012\u3064\u76ee\u306e\u30c8\u30d4\u30c3\u30af\u306b\u53d6\u308a\u304b\u304b\u3063\u3066\u3044\u304d\u307e\u3059\u3002 \u306f\u3058\u3081\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u73fe\u6642\u70b9\u3067\u3082\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u306f\u3044\u308b\u3051\u3069\u3001\u305d\u3053\u307e\u3067\u826f\u3044\u8868\u793a\u3060\u3068\u306f\u8a00\u3048\u307e\u305b\u3093\u3002\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u51fa\u529b\u3092 _\u8272\u4ed8\u3051_ \u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u3053\u308c\u3092\u9054\u6210\u3059\u308b\u305f\u3081\u306b [` Colorize `](https://crystal-lang.org/api/latest/Colorize.html) \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 \u8272\u4ed8\u3044\u305f\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u3001\u5358\u7d14\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u9ed2\u3044\u80cc\u666f\u306b\u9ec4\u8272\u306e\u6587\u5b57\u3067\u8868\u793a\u3057\u307e\u3059\u3002 !!!example \"yellow_cli.cr\" ``` crystal require \"colorize\" puts \" #{ \"The Beatles\" . colorize ( :yellow ) . on ( :black ) } App\" ``` \u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002\u7c21\u5358\u3067\u3057\u3087\u3046\u3002\u30a4\u30de\u30b8\u30f3 (\u60f3\u50cf) \u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3001All My CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30ca\u30fc\u306b\u3053\u306e\u6587\u5b57\u5217\u3092\u4f7f\u3046\u3053\u3068\u3092\u3002\u307b\u3089\u3001\u7c21\u5358\u3067\u3057\u3087\u3046\uff1f (it's easy if you try?) ``` crystal parser . banner = \" #{ \"The Beatles\" . colorize ( :yellow ) . on ( :black ) } App\" \u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\u65b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u4eca\u56de\u306f blink (\u70b9\u6ec5)\u3068\u3044\u3046 \u30c6\u30ad\u30b9\u30c8\u306e\u88c5\u98fe \u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 let_it_cli.cr ```crystal require \"colorize\" puts \"Welcome to The Beatles Sing Along version 1.0!\" puts \"Enter a phrase you want The Beatles to sing\" print \"> \" user_input = gets exit if user_input.nil?# Ctrl+D default_lyrics = \"Na, na, na, na-na-na na\" \\ \" / \" \\ \"Na-na-na na, hey Jude\" lyrics = user_input.presence || default_lyrics puts \"The Beatles are singing: #{\"\ud83c\udfb5#{lyrics}\ud83c\udfb6\ud83c\udfb8\ud83e\udd41\".colorize.mode(:blink)}\" ``` \u751f\u307e\u308c\u5909\u308f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u2026\u2026\u305d\u3057\u3066\u3001\u9055\u3044\u3092_\u8074\u304d\u53d6\u3063\u3066_\u304f\u3060\u3055\u3044\u3002 \u4eca \u3001\u79c1\u305f\u3061\u306f2\u3064\u306e\u30d5\u30a1\u30d3\u30e5\u30e9\u30b9\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u305f\u306e\u3067\u3059\u3002 \u5229\u7528\u3067\u304d\u308b\u8272 \u3084 \u30c6\u30ad\u30b9\u30c8\u306e\u88c5\u98fe \u306e\u4e00\u89a7\u306f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002","title":"All My CLI: \u5b8c\u6210\u3057\u305f CLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3"},{"location":"getting_started/cli.html#_3","text":"\u4ed6\u306e\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u305d\u3046\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u7570\u306a\u308b\u6a5f\u80fd\u3054\u3068\u306b \u30c6\u30b9\u30c8\u3092\u66f8\u304d\u305f\u3044 \u3082\u306e\u3067\u3059\u3002 \u73fe\u6642\u70b9\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5404\u30ed\u30b8\u30c3\u30af\u306f OptionParser \u306e\u5185\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u3001\u90e8\u5206\u7684\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u308a\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3002\u3088\u3063\u3066\u3001\u307e\u305a\u306f\u3058\u3081\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u89e3\u6790\u90e8\u5206\u3068\u5b9f\u969b\u306e\u30ed\u30b8\u30c3\u30af\u3092\u5206\u96e2\u3059\u308b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u304c\u6e08\u3081\u3070\u3001\u3042\u308b\u30ed\u30b8\u30c3\u30af\u306e\u30c6\u30b9\u30c8\u306b\u5fc5\u8981\u306a\u30b3\u30fc\u30c9\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3092\u30c6\u30b9\u30c8\u306e\u30b3\u30fc\u30c9\u306b\u53d6\u308a\u8fbc\u3093\u3067\u3001\u30ed\u30b8\u30c3\u30af\u306e\u30c6\u30b9\u30c8\u3092\u306f\u3058\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u3092\u8aad\u8005\u306e\u8ab2\u984c\u3068\u3057\u307e\u3059\u3002.","title":"\u30c6\u30b9\u30c8"},{"location":"getting_started/cli.html#readlinencurses","text":"\u3088\u308a\u30ea\u30c3\u30c1\u306aCLI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u3068\u304d\u3001\u3053\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u52a9\u3051\u306b\u306a\u308a\u307e\u3059\u3002 Readline \u3068 NCurses \u3068\u3044\u3046\u30012\u3064\u306e\u3088\u304f\u77e5\u3089\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002 GNU Readline Library \u3067\u8ff0\u3079\u3089\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001 Readline \u306f\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u7de8\u96c6\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 Readline \u306f\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u88dc\u5b8c\u306a\u3069\u306e\u81ea\u52d5\u88dc\u5b8c\u3001\u30ad\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306a\u3069\u3001\u69d8\u3005\u306a\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3089\u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u306e\u3067\u3042\u308c\u3070 crystal-lang/crystal-readline shard \u304c Readline \u3092\u7c21\u5358\u306b\u6271\u3046\u305f\u3081\u306e API \u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002 \u7d9a\u3044\u3066\u3001 NCurses (New Curses) \u306e\u7d39\u4ecb\u3067\u3059\u3002\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u7aef\u672b\u3067_\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u306a_\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u958b\u767a\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\u305d\u306e\u540d\u524d\u304c\u6697\u306b\u793a\u3059\u3088\u3046\u306b\u3001\u3053\u308c\u306f Curses \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6539\u826f\u7248\u3067\u3059\u3002 Curses \u306f Rouge \u3068\u3044\u3046\u30c6\u30ad\u30b9\u30c8\u30d9\u30fc\u30b9\u306e\u30c0\u30f3\u30b8\u30e7\u30f3\u63a2\u7d22\u30a2\u30c9\u30d9\u30f3\u30c1\u30e3\u30fc\u30b2\u30fc\u30e0\u306e\u305f\u3081\u306b\u958b\u767a\u3055\u308c\u307e\u3057\u305f\u3002 \u60f3\u50cf\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 NCurses Crystal \u3067\u4f7f\u3046\u306b\u306f \u3044\u304f\u3064\u3082\u306e shardls \u304c\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306b\u306f\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3067\u3053\u306e\u6587\u7ae0\u306f\u304a\u3057\u307e\u3044\u3067\u3059 \ud83d\ude0e\ud83c\udfb6","title":"Readline\u3068NCurses\u306e\u5229\u7528"},{"location":"getting_started/http_server.html","text":"HTTP Server \u3082\u3046\u5c11\u3057\u8208\u5473\u6df1\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u3061\u3089\u306f HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u4f8b\u306b\u306a\u308a\u307e\u3059\u3002 require \"http/server\" server = HTTP :: Server . new do | context | context . response . content_type = \"text/plain\" context . response . print \"Hello world!The time is #{ Time . local } \" end address = server . bind_tcp 8080 puts \"Listening on http:// #{ address } \" server . listen \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u3059\u3079\u3066\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u306f\u3053\u306e\u8a00\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u5168\u4f53\u3092\u8aad\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u3044\u304f\u3064\u304b\u306e\u70b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u3066\u304a\u304d\u307e\u3059\u3002 require \u3067\u3001\u4ed6\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059 require \"http/server\" \u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306a\u304f \u30ed\u30fc\u30ab\u30eb\u5909\u6570 \u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 server = HTTP :: Server . new ... HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u306f HTTP::Server \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e bind_tcp \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059 (\u30dd\u30fc\u30c8\u756a\u53f7\u3092 8080 \u306b\u30bb\u30c3\u30c8) address = server . bind_tcp 8080 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066 \u30e1\u30bd\u30c3\u30c9 \u3092\u5b9f\u884c (\u307e\u305f\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1) \u3059\u308b\u3053\u3068\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u69cb\u7bc9\u3057\u307e\u3059 HTTP :: Server . new ... ... Time . local ... address = server . bind_tcp 8080 ... puts \"Listening on http:// #{ address } \" ... server . listen \u30d6\u30ed\u30c3\u30af \u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u30b3\u30fc\u30c9\u3092\u518d\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u307e\u305f\u3001\u95a2\u6570\u578b\u306e\u4e16\u754c\u306b\u3042\u308b\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059 HTTP :: Server . new do | context | ... end \u6587\u5b57\u5217\u57cb\u3081\u8fbc\u307f (string interpolation) \u3092\u4f7f\u3046\u3068\u3001\u7c21\u5358\u306b\u6587\u5b57\u5217\u306b\u5f0f\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Crystal\u306f\u305d\u306e\u4ed6\u306b\u3082\u591a\u304f\u306e \u30b7\u30f3\u30bf\u30c3\u30af\u30b9 \u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u914d\u5217\u3084\u30cf\u30c3\u30b7\u30e5\u3001\u305d\u3057\u3066\u7bc4\u56f2\u3084\u30bf\u30d7\u30eb\u306a\u3069\u3067\u3059 \"Hello world!The time is #{ Time . local } \"","title":"HTTP \u30b5\u30fc\u30d0\u30fc"},{"location":"getting_started/http_server.html#http-server","text":"\u3082\u3046\u5c11\u3057\u8208\u5473\u6df1\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u3061\u3089\u306f HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u4f8b\u306b\u306a\u308a\u307e\u3059\u3002 require \"http/server\" server = HTTP :: Server . new do | context | context . response . content_type = \"text/plain\" context . response . print \"Hello world!The time is #{ Time . local } \" end address = server . bind_tcp 8080 puts \"Listening on http:// #{ address } \" server . listen \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u3059\u3079\u3066\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u306f\u3053\u306e\u8a00\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u5168\u4f53\u3092\u8aad\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u3044\u304f\u3064\u304b\u306e\u70b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u3066\u304a\u304d\u307e\u3059\u3002 require \u3067\u3001\u4ed6\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059 require \"http/server\" \u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306a\u304f \u30ed\u30fc\u30ab\u30eb\u5909\u6570 \u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 server = HTTP :: Server . new ... HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u306f HTTP::Server \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e bind_tcp \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059 (\u30dd\u30fc\u30c8\u756a\u53f7\u3092 8080 \u306b\u30bb\u30c3\u30c8) address = server . bind_tcp 8080 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066 \u30e1\u30bd\u30c3\u30c9 \u3092\u5b9f\u884c (\u307e\u305f\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1) \u3059\u308b\u3053\u3068\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u69cb\u7bc9\u3057\u307e\u3059 HTTP :: Server . new ... ... Time . local ... address = server . bind_tcp 8080 ... puts \"Listening on http:// #{ address } \" ... server . listen \u30d6\u30ed\u30c3\u30af \u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u30b3\u30fc\u30c9\u3092\u518d\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u307e\u305f\u3001\u95a2\u6570\u578b\u306e\u4e16\u754c\u306b\u3042\u308b\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059 HTTP :: Server . new do | context | ... end \u6587\u5b57\u5217\u57cb\u3081\u8fbc\u307f (string interpolation) \u3092\u4f7f\u3046\u3068\u3001\u7c21\u5358\u306b\u6587\u5b57\u5217\u306b\u5f0f\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Crystal\u306f\u305d\u306e\u4ed6\u306b\u3082\u591a\u304f\u306e \u30b7\u30f3\u30bf\u30c3\u30af\u30b9 \u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u914d\u5217\u3084\u30cf\u30c3\u30b7\u30e5\u3001\u305d\u3057\u3066\u7bc4\u56f2\u3084\u30bf\u30d7\u30eb\u306a\u3069\u3067\u3059 \"Hello world!The time is #{ Time . local } \"","title":"HTTP Server"},{"location":"guides/index.html","text":"\u30ac\u30a4\u30c9 Crystal \u306e\u529b\u3092\u6700\u9ad8\u306b\u5f15\u304d\u51fa\u3059\u306b\u306f\u3053\u306e\u30ac\u30a4\u30c9\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002","title":"\u30ac\u30a4\u30c9"},{"location":"guides/index.html#_1","text":"Crystal \u306e\u529b\u3092\u6700\u9ad8\u306b\u5f15\u304d\u51fa\u3059\u306b\u306f\u3053\u306e\u30ac\u30a4\u30c9\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002","title":"\u30ac\u30a4\u30c9"},{"location":"guides/concurrency.html","text":"\u4e26\u884c\u51e6\u7406 \u4e26\u884c\u51e6\u7406\uff08Concurrency\uff09 vs. \u4e26\u5217\u51e6\u7406\uff08Parallelism\uff09 \u3057\u3070\u3057\u3070\u6df7\u540c\u3055\u308c\u307e\u3059\u304c\u3001\u300c\u4e26\u884c\u51e6\u7406\uff08concurrency\uff09\u300d\u3068\u300c\u4e26\u5217\u51e6\u7406\uff08parallelism\uff09\u300d\u3068\u3044\u3046\u8a00\u8449\u306e\u5b9a\u7fa9\u306f\u540c\u3058\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u4e26\u884c\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\uff08concarrent system\uff09\u306f\u3044\u304f\u3064\u3082\u306e\u30bf\u30b9\u30af\u3092\u6271\u3048\u308b\u30b7\u30b9\u30c6\u30e0\u306e1\u7a2e\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u5fc5\u305a\u3057\u3082\u305d\u308c\u3089\u306e\u30bf\u30b9\u30af\u304c\u540c\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30ad\u30c3\u30c1\u30f3\u3067\u6599\u7406\u3092\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3042\u306a\u305f\u306f\u7389\u306d\u304e\u3092\u304d\u3056\u3093\u3067\u30d5\u30e9\u30a4\u30d1\u30f3\u306b\u653e\u308a\u8fbc\u307f\u3001\u305d\u308c\u304c\u7092\u3081\u4e0a\u304c\u308b\u307e\u3067\u306e\u9593\u306b\u30c8\u30de\u30c8\u3092\u5207\u3063\u305f\u308a\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u3059\u3079\u3066\u306e\u52d5\u4f5c\u3092\u540c\u6642\u306b\u884c\u3046\u306e\u3067\u306f\u306a\u304f\u3001\u305d\u308c\u305e\u308c\u306e\u30bf\u30b9\u30af\u306b\u3042\u306a\u305f\u306e\u6642\u9593\u3092\u5272\u308a\u632f\u3063\u3066\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u4e26\u5217\u51e6\u7406\uff08parallelism\uff09\u3068\u3044\u3046\u306e\u306f\u3001\u7247\u624b\u3067\u7389\u306d\u304e\u306e\u5165\u3063\u305f\u30d5\u30e9\u30a4\u30d1\u30f3\u3092\u632f\u308a\u306a\u304c\u3089\u3082\u3046\u7247\u65b9\u306e\u624b\u3067\u30c8\u30de\u30c8\u3092\u5207\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002 \u3053\u308c\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u70b9\u3067\u306f\uff0cCrystal \u306f\u300c\u4e26\u884c\u51e6\u7406\u300d\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u300c\u4e26\u5217\u51e6\u7406\u300d\u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u3001\u3044\u304f\u3064\u3082\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30bf\u30b9\u30af\u306b\u5c11\u3057\u305a\u3064\u6642\u9593\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u5b8c\u5168\u306b\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u30672\u3064\u306e\u30b3\u30fc\u30c9\u30d1\u30b9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30ab\u30ec\u30f3\u30c8\u30fb\u30de\u30fc\u30af\uff06\u30b9\u30a4\u30fc\u30d7\u65b9\u5f0f\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30bf\uff08GC\uff09\uff08\u73fe\u6642\u70b9\u3067\u306f Boehm GC ) \u3092\u9664\u3044\u3066\u3001Crystal \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5358\u4e00\u306e OS \u30b9\u30ec\u30c3\u30c9\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30d0\uff08Fiber\uff09 \u4e26\u884c\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306b\u3001Crystal \u306f\u30d5\u30a1\u30a4\u30d0\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30d0\u306fOS\u30b9\u30ec\u30c3\u30c9\u3068\u3088\u304f\u4f3c\u3066\u3044\u307e\u3059\u304c\u3088\u308a\u8efd\u91cf\u3067\u3001\u305d\u306e\u5b9f\u884c\u306f\u30d7\u30ed\u30bb\u30b9\u306b\u3088\u3063\u3066\u5185\u90e8\u7684\u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001Crystal\u306f\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u305d\u308c\u3089\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002 \u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7 I/O\u306b\u95a2\u4fc2\u3059\u308b\u3082\u306e\u3067\u3042\u308c\u3070\u306a\u3093\u3067\u3082\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306e\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u304a\u304b\u3052\u3067\u3001\u305f\u3068\u3048\u6642\u9593\u306e\u304b\u304b\u308b\u51e6\u7406\u304cI/O\u306b\u5bfe\u3057\u3066\u884c\u308f\u308c\u3066\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u304c\u305d\u306e\u7d42\u4e86\u3092\u5f85\u3063\u3066\u3044\u308b\u72b6\u614b\u3067\u3082\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5225\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30bd\u30b1\u30c3\u30c8\u7d4c\u7531\u3067\u306e\u30c7\u30fc\u30bf\u306e\u53d7\u4fe1\u64cd\u4f5c\u306a\u3069\u306f\u3001\u3053\u3046\u3057\u305f\u6642\u9593\u304c\u304b\u304b\u308b\u51e6\u7406\u306e\u4e00\u4f8b\u3067\u3059\u3002 \u30c1\u30e3\u30cd\u30eb\uff08Channel\uff09 Crystal \u306f CSP \u3092\u53c2\u8003\u306b\u3057\u305f\u30c1\u30e3\u30cd\u30eb\u3092\u6709\u3057\u3066\u3044\u307e\u3059\u3002\u30c1\u30e3\u30cd\u30eb\u306b\u3088\u3063\u3066\u3001\u30e1\u30e2\u30ea\u306e\u5171\u6709\u3084\u30ed\u30c3\u30af\u3084\u30bb\u30de\u30d5\u30a9\u306a\u3069\u3068\u3044\u3063\u305f\u7279\u5225\u306a\u6a5f\u69cb\u3092\u6c17\u306b\u304b\u3051\u308b\u3053\u3068\u306a\u304f\u3001\u7570\u306a\u308b\u30d5\u30a1\u30a4\u30d0\u9593\u3067\u306e\u30c7\u30fc\u30bf\u306e\u3084\u308a\u3068\u308a\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u958b\u59cb\u3055\u308c\u308b\u3068\u3001\u307e\u305a\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u306e\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306f\u3001\u3055\u3089\u306b\u591a\u304f\u306e\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u69cb\u6210\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 \u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u300c\u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u300d \u30d5\u30a1\u30a4\u30eb\u3084\u30bd\u30b1\u30c3\u30c8\u3001\u30d1\u30a4\u30d7\u3001\u30b7\u30b0\u30ca\u30eb\u3001\u30bf\u30a4\u30de\uff08 sleep \u3057\u305f\u3068\u304d\u306a\u3069\uff09\u306b\u3088\u308b\u975e\u540c\u671f\u30bf\u30b9\u30af\u3092\u6271\u3046\u305f\u3081\u306e\u300c\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u300d\uff08\u3053\u308c\u3082\u30d5\u30a1\u30a4\u30d0\u306e1\u7a2e\uff09 \u30d5\u30a1\u30a4\u30d0\u9593\u3067\u30c7\u30fc\u30bf\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u300c\u30c1\u30e3\u30cd\u30eb\u300d\u30e9\u30a4\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306f\u30c7\u30fc\u30bf\u3092\u3084\u308a\u3068\u308b\u3059\u308b\u305f\u3081\u306b\u30d5\u30a1\u30a4\u30d0\u3068\u30c1\u30e3\u30cd\u30eb\u306e\u9593\u3092\u8abf\u6574\u3057\u307e\u3059\u3002 \"\u3082\u3046\u4f7f\u7528\u3055\u308c\u306a\u3044\" \u30e1\u30e2\u30ea\u3092\u6383\u9664\u3059\u308b\u300c\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30bf\u300d \u30d5\u30a1\u30a4\u30d0\u5358\u4f53 \u5358\u4e00\u306e\u30d5\u30a1\u30a4\u30d0\u306f\u3001\u30b9\u30ec\u30c3\u30c9\u3068\u6bd4\u3079\u308b\u3068\u3088\u308a\u8efd\u91cf\u306a\u51e6\u7406\u306e\u5b9f\u884c\u5358\u4f4d\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30d0\u306f\u3001\u901a\u5e38 OS \u30b9\u30ec\u30c3\u30c9\u4e0a\u306e \u30b9\u30bf\u30c3\u30af\u30e1\u30e2\u30ea \u4e0a\u306b8MB\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u5c0f\u3055\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002 \u30d5\u30a1\u30a4\u30d0\u306f\u30b9\u30ec\u30c3\u30c9\u3068\u9055\u3063\u3066\u5354\u8abf\u7684\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002\u30b9\u30ec\u30c3\u30c9\u306f\u30d7\u30ea\u30a8\u30f3\u30d7\u30c6\u30a3\u30d6\uff08\u975e\u540c\u671f\u30de\u30eb\u30c1\u30bf\u30b9\u30af\uff09\u306a\u306e\u3067\uff0cOS\u306f\u3044\u3064\u3067\u3082\u30b9\u30ec\u30c3\u30c9\u306b\u5272\u308a\u8fbc\u3093\u3067\u5225\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30d0\u306f\u30e9\u30a4\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u5bfe\u3057\u3066\u3001\u660e\u793a\u7684\u306b\u300c\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3078\u51e6\u7406\u3092\u5207\u308a\u66ff\u3048\u3066\u826f\u3044\u300d\u3068\u4f1d\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070I/O \u306b\u3088\u308b\u5f85\u3061\u304c\u767a\u751f\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30d0\u306f\u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u5bfe\u3057\u3066\u300c\u304a\u30fc\u3044\uff0c\u81ea\u5206\u306fI/O\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u5f85\u305f\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3089\u3001\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u3066\u3044\u3044\u3088\u3002I/O\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u3089\u5e30\u3063\u3066\u304d\u3066\u306d\u300d\u3068\u544a\u3052\u307e\u3059\u3002 \u3053\u3046\u3057\u305f\u5354\u8abf\u52d5\u4f5c\u306e\u5229\u70b9\u306f\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5207\u308a\u66ff\u3048\uff08\u30b9\u30ec\u30c3\u30c9\u9593\u306e\u5207\u308a\u66ff\u3048\uff09\u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306e\u5927\u90e8\u5206\u3092\u306a\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002 \u30d5\u30a1\u30a4\u30d0\u306f\u30b9\u30ec\u30c3\u30c9\u3068\u6bd4\u3079\u3066\u8efd\u91cf\u3067\u30018MB\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u3066\u3082\u305d\u306e\u958b\u59cb\u6642\u306b\u306f4KB\u3068\u3044\u3046\u5c0f\u3055\u306a\u30b9\u30bf\u30c3\u30af\u9818\u57df\u3057\u304b\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002 64\u30d3\u30c3\u30c8\u30de\u30b7\u30f3\u3067\u306f\u6570\u767e\u4e07\u3082\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u300232\u30d3\u30c3\u30c8\u30de\u30b7\u30f3\u306e\u5834\u5408\u306f\u305d\u308c\u307b\u3069\u591a\u304f\u306f\u306a\u304f\u3001\u751f\u6210\u3067\u304d\u308b\u30d5\u30a1\u30a4\u30d0\u306f512\u500b\u3060\u3051\u3067\u3059\u3002\u3057\u304b\u3057\u300132\u30d3\u30c3\u30c8\u30de\u30b7\u30f3\u306f\u3082\u306f\u3084\u4f7f\u7528\u3055\u308c\u306a\u304f\u306a\u308a\u3064\u3064\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u6211\u3005\u306f\u5c06\u6765\u3092\u898b\u636e\u3048\u306664\u30d3\u30c3\u30c8\u30de\u30b7\u30f3\u306b\u3088\u308a\u6ce8\u529b\u3057\u3066\u3044\u307e\u3059\u3002 \u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9 \u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306f\u4ee5\u4e0b\u306e\u30ad\u30e5\u30fc\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u5b9f\u884c\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30d0\uff08\u4f8b\u3048\u3070\uff0c\u65b0\u3057\u304f\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30d0\u306f\u5b9f\u884c\u53ef\u80fd\u306a\u72b6\u614b\u3067\u3059\uff09 \u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\uff08\u5225\u306e\u30d5\u30a1\u30a4\u30d0\uff09\u4ed6\u306b\u5b9f\u884c\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30d0\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306f\u6e96\u5099\u304c\u5b8c\u4e86\u3057\u3066\u3044\u308b\u306a\u975e\u540c\u671f\u51e6\u7406\u304c\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001\u305d\u306e\u51e6\u7406\u3092\u5f85\u3063\u3066\u3044\u305f\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u73fe\u6642\u70b9\u3067\u306f\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306f epoll \u3084 kqueue \u3068\u8a00\u3063\u305f\u30a4\u30d9\u30f3\u30c8\u65b9\u5f0f\u3092\u62bd\u8c61\u5316\u3057\u305f libevent \u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u81ea\u4e3b\u7684\u306b\u5f85\u6a5f\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30d0\uff08 Fiber.yield \u306b\u3088\u3063\u3066\u300c\u7d9a\u3051\u3066\u5b9f\u884c\u3067\u304d\u308b\u3051\u308c\u3069\u3001\u4ed6\u306b\u5b9f\u884c\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30d0\u304c\u3042\u308c\u3070\u3001\u305d\u3063\u3061\u3092\u5b9f\u884c\u3057\u3066\u3066\u3044\u3044\u3088\u300d\u3068\u5ba3\u8a00\u3057\u305f\u3082\u306e\uff09 \u30c7\u30fc\u30bf\u306e\u3084\u308a\u53d6\u308a \u73fe\u6642\u70b9\u3067\u306f\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3067\u3057\u304b\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3067\u304d\u306a\u305f\u3081\u3001\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30d0\u304b\u3089\u540c\u3058\u30af\u30e9\u30b9\u5909\u6570\u3092\u53c2\u7167\u3084\u5909\u66f4\u3057\u3066\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u4e00\u65e6\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\uff08\u4e26\u5217\u51e6\u7406\uff09\u304c\u8a00\u8a9e\u306b\u5c0e\u5165\u3055\u308c\u308b\u3068\u3001\u305d\u3046\u3044\u3046\u8a33\u306b\u3082\u3044\u304b\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u304c\u3001\u30c7\u30fc\u30bf\u306e\u3084\u308a\u3068\u308a\u306b\u30c1\u30e3\u30cd\u30eb\u3092\u4f7f\u3044\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30c1\u30e3\u30cd\u30eb\u7d4c\u7531\u3067\u9001\u53d7\u4fe1\u3059\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u308b\u7406\u7531\u3067\u3059\u3002\u30c1\u30e3\u30cd\u30eb\u306f\u5185\u90e8\u7684\u306b\u30c7\u30fc\u30bf\u7af6\u5408\u3092\u907f\u3051\u308b\u305f\u3081\u306e\u30ed\u30c3\u30af\u6a5f\u69cb\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u5916\u304b\u3089\u4f7f\u3046\u5206\u306b\u306f\u30ed\u30c3\u30af\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u306e\u306a\u3044\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u624b\u6cd5\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9 \u30d5\u30a1\u30a4\u30d0\u306e\u751f\u6210 \u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u30d6\u30ed\u30c3\u30af\u4ed8\u304d\u3067 spawn \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 spawn do # ... socket . gets # ... end spawn do # ... sleep 5 . seconds # ... end \u3053\u3053\u306b\u306f\u30012\u3064\u306e\u30d5\u30a1\u30a4\u30d0\u304c\u3042\u308a\u307e\u3059\u30021\u3064\u76ee\u306f\u30bd\u30b1\u30c3\u30c8\u304b\u3089\u4f55\u304b\u3092\u8aad\u307f\u51fa\u3059\u3082\u306e\u3067\u3001\u3082\u3046\u4e00\u3064\u306f sleep \u3059\u308b\u3082\u306e\u3067\u3059\u30021\u3064\u3081\u306e\u30d5\u30a1\u30a4\u30d0\u306f socket.gets \u306e\u884c\u306b\u5230\u9054\u3059\u308b\u3068\u4e00\u65e6\u4e2d\u65ad\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306b\u30bd\u30b1\u30c3\u30c8\u306b\u30c7\u30fc\u30bf\u304c\u6e96\u5099\u3067\u304d\u305f\u6642\u70b9\u3067\u3053\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u518d\u958b\u3059\u308b\u3088\u3046\u306b\u4f1d\u3048\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f2\u3064\u3081\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u3061\u3089\u306e\u30d5\u30a1\u30a4\u30d0\u306f5\u79d2\u9593\u30b9\u30ea\u30fc\u30d7\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306b5\u79d2\u7d4c\u3063\u305f\u3089\u3053\u3061\u3089\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u518d\u958b\u3059\u308b\u3088\u3046\u4f1d\u3048\u307e\u3059\u3002\u3082\u3057\u4ed6\u306b\u5b9f\u884c\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30d0\u304c\u3044\u306a\u3051\u308c\u3070\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306f\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306fCPU\u3092\u6d88\u8cbb\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u3069\u3061\u3089\u304b\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002 socket.gets \u3084 sleep \u304c\u3053\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u7406\u7531\u306f\u3001\u305d\u308c\u3089\u304c\u30e9\u30a4\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3084\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u3068\u76f4\u63a5\u4f1a\u8a71\u3067\u304d\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3001\u9b54\u6cd5\u3067\u3082\u306a\u3093\u3067\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u57fa\u672c\u7684\u306b\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4f7f\u7528\u8005\u304c\u305d\u3046\u3057\u305f\u4e00\u5207\u3092\u6c17\u306b\u304b\u3051\u308b\u5fc5\u8981\u304c\u306a\u3044\u3088\u3046\u306b\u914d\u616e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u305f\u3060\u3057\u3001\u30d5\u30a1\u30a4\u30d0\u304c\uff08\u751f\u6210\u5f8c\uff09\u5373\u5ea7\u306b\u5b9f\u884c\u3055\u308c\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 spawn do loop do puts \"Hello!\" end end \u4e0a\u8a18\u30b3\u30fc\u30c9\u306f\u4f55\u3082\u51fa\u529b\u305b\u305a\u5373\u5ea7\u306b\u7d42\u4e86\u3057\u307e\u3059\u3002 \u305d\u306e\u7406\u7531\u306f\u3001\u30d5\u30a1\u30a4\u30d0\u30fc\u304c\u751f\u6210\u3055\u308c\u305f\u6642\u70b9\u3067\u5373\u5ea7\u306b\u5b9f\u884c\u3055\u308c\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u305f\u3081\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u4e0a\u306e\u4f8b\u3067\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3057\u305f\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306f\u305d\u306e\u307e\u307e\u7d42\u308f\u308a\u306b\u9054\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002 \u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u7559\u5b88\u65b9\u6cd5\u306e\u4e00\u3064\u306f\u3001 sleep \u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\u3002 spawn do loop do puts \"Hello!\" end end sleep 1 . second \u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f1\u79d2\u9593 \"Hello!\" \u3068\u51fa\u529b\u3057\u7d9a\u3051\u3066\u304b\u3089\u7d42\u4e86\u3057\u307e\u3059\u3002\u3053\u308c\u306f sleep \u306b\u3088\u3063\u3066\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u304c1\u79d2\u5f8c\u306b\u518d\u958b\u3059\u308b\u3088\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3055\u308c\u3001\u305d\u306e\u9593\u306b\u4ed6\u306e \"\u5b9f\u884c\u53ef\u80fd\u306a\" \uff08\u3053\u306e\u5834\u5408\u306f\u3059\u3050\u4e0a\u3067\u751f\u6210\u3055\u308c\u3066\u3044\u305f\uff09\u30d5\u30a1\u30a4\u30d0\u304c\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002 \u4ed6\u306b\u306f\u3053\u3093\u306a\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002 spawn do loop do puts \"Hello!\" end end Fiber . yield \u4eca\u5ea6\u306f Fiber.yield \u304c\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u5bfe\u3057\u3066\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u3066\u826f\u3044\u3068\u4f1d\u3048\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u7d50\u679c\u3001\u6a19\u6e96\u51fa\u529b\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u308b\uff08\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u304c\u6a19\u6e96\u51fa\u529b\u306e\u6e96\u5099\u304c\u3067\u304d\u308b\u307e\u3067\u5f85\u3064\u3088\u3046\u4f1d\u3048\u3066\u304f\u308b\uff09\u307e\u3067 \"Hello!\" \u3068\u51fa\u529b\u3057\u7d9a\u3051\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u6a19\u6e96\u51fa\u529b\u306f\u30d6\u30ed\u30c3\u30af\u3055\u308c\u306a\u3044 \u304b\u3082\u3057\u308c\u307e\u305b\u3093 \u3002 \u3082\u3057\u3001\u751f\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3055\u305b\u7d9a\u3051\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u5f15\u6570\u306a\u3057\u306e sleep \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 spawn do loop do puts \"Hello!\" end end sleep \u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5358\u7d14\u306b\u30eb\u30fc\u30d7\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306e\u3067\u3001\u3082\u3061\u308d\u3093 spawn \u3092\u4f7f\u308f\u305a\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 sleep \u306f\u3001\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u5834\u5408\u306b\u306f\u3055\u3089\u306b\u6709\u7528\u3067\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u30d5\u30a1\u30a4\u30d0\u3068\u3057\u3066\u751f\u6210\u3059\u308b \u30d6\u30ed\u30c3\u30af\u3092\u4e0e\u3048\u308b\u4ee3\u308f\u308a\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3092\u6e21\u3057\u3066\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u306a\u305c\u3053\u308c\u304c\u4fbf\u5229\u306a\u306e\u304b\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001\u6b21\u306e\u4f8b\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002 i = 0 while i < 10 spawn do puts ( i ) end i += 1 end Fiber . yield \u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f \"10\" \u309210\u56de\u51fa\u529b\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306e\u554f\u984c\u306f\u30011\u3064\u306e\u5909\u6570 i \u3092\u5168\u3066\u306e\u30d5\u30a1\u30a4\u30d0\u304c\u53c2\u7167\u3057\u3066\u3044\u3066\u3001 Fiber.yield \u304c\u5b9f\u884c\u3055\u308c\u305f\u9803\u306b\u306f\u305d\u306e\u5024\u304c10\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u70b9\u3067\u3059\u3002 \u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f\u3053\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 i = 0 while i < 10 proc = -> ( x : Int32 ) do spawn do puts ( x ) end end proc . call ( i ) i += 1 end Fiber . yield \u4eca\u5ea6\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\u306a\u305c\u304b\u3068\u3044\u3046\u3068 Proc \u3092\u751f\u6210\u3057\u3066\u3001\u305d\u308c\u306b i \u3092\u6e21\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067 i \u306e\u5024\u304c\u30b3\u30d4\u30fc\u3055\u308c\u3001\u751f\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30d0\u304c\u4f7f\u7528\u3059\u308b\u306e\u306f\u305d\u306e\u30b3\u30d4\u30fc\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0a\u8a18\u306e\u3088\u3046\u306a\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u30b3\u30fc\u30c9\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5f0f\u306e\u547c\u3073\u51fa\u3057\u3092\u53d7\u3051\u53d6\u3063\u3066\u4e0a\u8a18\u30b3\u30fc\u30c9\u306b\u5c55\u958b\u3059\u308b spawn \u30de\u30af\u30ed\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3092\u4f7f\u3044\u3001\u6700\u7d42\u7684\u306b\u306f\u3053\u3046\u306a\u308a\u307e\u3057\u305f\u3002 i = 0 while i < 10 spawn puts ( i ) i += 1 end Fiber . yield \u3053\u306e\u65b9\u6cd5\u306f\u3001\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u306e\u4e2d\u3067\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306e\u5024\u304c\u5909\u5316\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u306f\u4fbf\u5229\u306a\u65b9\u6cd5\u3067\u3059\u3002\u3002\u3053\u3046\u3057\u305f\u554f\u984c\u306f\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3067\u306f\u767a\u751f\u3057\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u60f3\u5b9a\u3057\u305f\u901a\u308a\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002 10 . times do | i | spawn do puts i end end Fiber . yield \u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3057\u3066\u305d\u306e\u7d42\u4e86\u3092\u5f85\u3064 \u305d\u306e\u3088\u3046\u306a\u6642\u306b\u3082\u30c1\u30e3\u30cd\u30eb\u304c\u4f7f\u3048\u307e\u3059\u3002 channel = Channel ( Nil ) . new spawn do puts \"Before send\" channel . send ( nil ) puts \"After send\" end puts \"Before receive\" channel . receive puts \"After receive\" \u3053\u306e\u30b3\u30fc\u30c9\u306e\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 Before receive Before send After receive \u307e\u305a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3057\u307e\u3059\u304c\u3001\u307e\u3060\u305d\u306e\u30d5\u30a1\u30a4\u30d0\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002 channel.receive \u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u70b9\u3067\u3001\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u3001\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u79fb\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001 channel.send(nil) \u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u5024\u304c\u6e21\u3055\u308c\u308b\u306e\u3092\u5f85\u3063\u3066\u3044\u305f channel.receive \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306f\u5b9f\u884c\u3092\u7d9a\u3051\u3066\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f \"After send\" \u3092\u51fa\u529b\u3059\u308b\u6a5f\u4f1a\u306e\u306a\u3044\u307e\u307e\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u4e0a\u306e\u4f8b\u3067\u306f\u5358\u306b\u30d5\u30a1\u30a4\u30d0\u304c\u7d42\u4e86\u3057\u305f\u3053\u3068\u3092\u4f1d\u3048\u308b\u3060\u3051\u306e\u76ee\u7684\u3067 nil \u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u30c1\u30e3\u30cd\u30eb\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30d0\u9593\u3067\u5024\u3092\u53d7\u3051\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 channel = Channel ( Int32 ) . new spawn do puts \"Before first send\" channel . send ( 1 ) puts \"Before second send\" channel . send ( 2 ) end puts \"Before first receive\" value = channel . receive puts value # => 1 puts \"Before second receive\" value = channel . receive puts value # => 2 \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 Before first receive Before first send 1 Before second receive Before second send 2 \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3044\u3064 receive \u3092\u5b9f\u884c\u3057\u305f\u304b\u3001\u3064\u307e\u308a\u3044\u3064\u305d\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u30d6\u30ed\u30c3\u30af\u3057\u3066\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u306b\u5b9f\u884c\u304c\u5207\u308a\u66ff\u308f\u3063\u305f\u304b\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002 send \u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u305d\u306e\u30c1\u30e3\u30cd\u30eb\u3092\u5f85\u3061\u53d7\u3051\u3066\u3044\u305f\u30d5\u30a1\u30a4\u30d0\u306e\u5b9f\u884c\u304c\u518d\u958b\u3055\u308c\u307e\u3059\u3002 \u4eca\u56de\u306f\u30ea\u30c6\u30e9\u30eb\u5024\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30d0\u306f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3001\u30bd\u30b1\u30c3\u30c8\u304b\u3089\u5024\u3092\u53d6\u5f97\u3057\u305f\u308a\u3057\u3066\u3001\u3053\u306e\u5024\u3092\u8a08\u7b97\u3059\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30d0\u304cI/O\u3092\u5f85\u305f\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u3001I/O\u306e\u6e96\u5099\u304c\u3067\u304d\u308b\u307e\u3067\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u3001\u5024\u304c\u5230\u7740\u3057\u30c1\u30e3\u30cd\u30eb\u3092\u901a\u3058\u3066\u305d\u308c\u304c\u9001\u4fe1\u3055\u308c\u308b\u3068\u3001\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u304c\u305d\u306e\u5024\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 require \"socket\" channel = Channel ( String ) . new spawn do server = TCPServer . new ( \"0.0.0.0\" , 8080 ) socket = server . accept while line = socket . gets channel . send ( line ) end end spawn do while line = gets channel . send ( line ) end end 3 . times do puts channel . receive end \u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f2\u3064\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u30021\u3064\u76ee\u306e\u30d5\u30a1\u30a4\u30d0\u306fTCP\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u3066\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30921\u3064\u53d7\u3051\u5165\u308c\u3001\u305d\u3053\u304b\u3089\u884c\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30c1\u30e3\u30cd\u30eb\u306b\u6e21\u3059\u3082\u306e\u30022\u3064\u76ee\u306e\u30d5\u30a1\u30a4\u30d0\u306f\u6a19\u6e96\u5165\u529b\u304b\u3089\u884c\u3092\u8aad\u307f\u8fbc\u3080\u3082\u306e\u3067\u3059\u3002\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306f\u3001\u30bd\u30b1\u30c3\u30c8\u304b\u3089\u8aad\u307f\u8fbc\u307e\u308c\u305f\u306e\u304b\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u307e\u308c\u305f\u306e\u304b\u306b\u304b\u304b\u308f\u3089\u305a\u3001\u30c1\u30e3\u30cd\u30eb\u306b\u6e21\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u30923\u56de\u8aad\u307f\u8fbc\u3093\u3060\u3089\u7d42\u4e86\u3057\u307e\u3059\u3002 gets \u306e\u547c\u3073\u51fa\u3057\u306f\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u30d6\u30ed\u30c3\u30af\u3057\u3066\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306b\u8aad\u307f\u51fa\u3059\u5024\u304c\u5230\u7740\u3057\u305f\u3089\u518d\u958b\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u4f1d\u3048\u307e\u3059\u3002 \u540c\u69d8\u306b\u3001\u51e6\u7406\u3092\u5b8c\u4e86\u3059\u308b\u305f\u3081\u306b\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5f85\u3061\u53d7\u3051\u3066\u3001\u305d\u308c\u3089\u306e\u5024\u3092\u96c6\u7d04\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 channel = Channel ( Int32 ) . new 10 . times do | i | spawn do channel . send ( i * 2 ) end end sum = 0 10 . times do sum += channel . receive end puts sum # => 90 \u3082\u3061\u308d\u3093\u3001\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30d0\u5185\u3067 receive \u3092\u4f7f\u3046\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 channel = Channel ( Int32 ) . new spawn do puts \"Before send\" channel . send ( 1 ) puts \"After send\" end spawn do puts \"Before receive\" puts channel . receive puts \"After receive\" end puts \"Before yield\" Fiber . yield puts \"After yield\" \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 Before yield Before send Before receive 1 After receive After send After yield \u3053\u3053\u3067\u306f\u3001\u307e\u305a channel.send \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u304c\u3001\u307e\u3060\u3060\u308c\u3082\u305d\u306e\u5024\u3092\u5f85\u3063\u3066\u3044\u308b\u4eba\u304c\u3044\u306a\u3044\u306e\u3067\u3001\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u307e\u3059\u30022\u3064\u76ee\u306e\u30d5\u30a1\u30a4\u30d0\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u30c1\u30e3\u30cd\u30eb\u306b\u3059\u3067\u306b\u5024\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3092\u53d7\u3051\u53d6\u3063\u3066\u5b9f\u884c\u3092\u7d9a\u3051\u3001\u305d\u306e\u5f8c\u307e\u305a1\u3064\u76ee\u306e\u30d5\u30a1\u30a4\u30d0\u304c\u5b9f\u884c\u3055\u308c\u3001\u6700\u5f8c\u306b\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u9806\u5e8f\u306b\u306a\u308b\u7406\u7531\u306f\u3001 Fiber.yield \u304c\u305d\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u30ad\u30e5\u30fc\u306e\u6700\u5f8c\u306b\u7f6e\u304f\u305f\u3081\u3067\u3059\u3002 \u30d0\u30c3\u30d5\u30a1\u4ed8\u304d\u30c1\u30e3\u30cd\u30eb \u4e0a\u306e\u4f8b\u3067\u306f\u30d0\u30c3\u30d5\u30a1\u306e\u306a\u3044\u30c1\u30e3\u30cd\u30eb\u3001\u3064\u307e\u308a\u5024\u3092\u9001\u4fe1\u3057\u305f\u969b\u306b\u305d\u306e\u30c1\u30e3\u30cd\u30eb\u306e\u5024\u3092\u5f85\u3063\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30d0\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u306b\u51e6\u7406\u304c\u79fb\u308b\u3082\u306e\u3001\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002 \u30d0\u30c3\u30d5\u30a1\u4ed8\u304d\u306e\u30c1\u30e3\u30cd\u30eb\u3092\u4f7f\u3063\u305f\u5834\u5408\u3001 send \u304c\u5b9f\u884c\u3055\u308c\u3066\u3082\u30d0\u30c3\u30d5\u30a1\u304c\u4e00\u676f\u306b\u306a\u308b\u307e\u3067\u306f\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u5207\u308a\u66ff\u308f\u308a\u307e\u305b\u3093\u3002 # \u5bb9\u91cf\u304c2\u306e\u30d0\u30c3\u30d5\u30a1\u4ed8\u304d\u30c1\u30e3\u30cd\u30eb channel = Channel ( Int32 ) . new ( 2 ) spawn do puts \"Before send 1\" channel . send ( 1 ) puts \"Before send 2\" channel . send ( 2 ) puts \"Before send 3\" channel . send ( 3 ) puts \"After send\" end 3 . times do | i | puts channel . receive end \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 Before send 1 Before send 2 Before send 3 1 2 After send 3 \u6700\u521d\u306e\uff12\u56de\u306esend\u304c\u5b9f\u884c\u3055\u308c\u305f\u969b\u306b\u3001\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u5207\u308a\u66ff\u308f\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3057\u304b\u3057\u30013\u56de\u76ee\u306esend\u3067\u306f\u30c1\u30e3\u30cd\u30eb\u306e\u30d0\u30c3\u30d5\u30a1\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u79fb\u308a\u307e\u3059\u3002\u3053\u3053\u30672\u3064\u306e\u5024\u304c\u53d6\u308a\u51fa\u3055\u308c\u3066\u30c1\u30e3\u30cd\u30eb\u304c\u7a7a\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u30013\u56de\u76ee\u306e receive \u306f\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u3092\u30d6\u30ed\u30c3\u30af\u3055\u308c\u3066\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u79fb\u308a\u3001\u3055\u3089\u306b\u5024\u304c\u9001\u4fe1\u3055\u308c\u305f\u308a\u3001\u7d42\u4e86\u3057\u305f\u308a\u3057\u307e\u3059\u3002","title":"\u4e26\u5217\u6027"},{"location":"guides/concurrency.html#_1","text":"","title":"\u4e26\u884c\u51e6\u7406"},{"location":"guides/concurrency.html#concurrency-vs-parallelism","text":"\u3057\u3070\u3057\u3070\u6df7\u540c\u3055\u308c\u307e\u3059\u304c\u3001\u300c\u4e26\u884c\u51e6\u7406\uff08concurrency\uff09\u300d\u3068\u300c\u4e26\u5217\u51e6\u7406\uff08parallelism\uff09\u300d\u3068\u3044\u3046\u8a00\u8449\u306e\u5b9a\u7fa9\u306f\u540c\u3058\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u4e26\u884c\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\uff08concarrent system\uff09\u306f\u3044\u304f\u3064\u3082\u306e\u30bf\u30b9\u30af\u3092\u6271\u3048\u308b\u30b7\u30b9\u30c6\u30e0\u306e1\u7a2e\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u5fc5\u305a\u3057\u3082\u305d\u308c\u3089\u306e\u30bf\u30b9\u30af\u304c\u540c\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30ad\u30c3\u30c1\u30f3\u3067\u6599\u7406\u3092\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3042\u306a\u305f\u306f\u7389\u306d\u304e\u3092\u304d\u3056\u3093\u3067\u30d5\u30e9\u30a4\u30d1\u30f3\u306b\u653e\u308a\u8fbc\u307f\u3001\u305d\u308c\u304c\u7092\u3081\u4e0a\u304c\u308b\u307e\u3067\u306e\u9593\u306b\u30c8\u30de\u30c8\u3092\u5207\u3063\u305f\u308a\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u3059\u3079\u3066\u306e\u52d5\u4f5c\u3092\u540c\u6642\u306b\u884c\u3046\u306e\u3067\u306f\u306a\u304f\u3001\u305d\u308c\u305e\u308c\u306e\u30bf\u30b9\u30af\u306b\u3042\u306a\u305f\u306e\u6642\u9593\u3092\u5272\u308a\u632f\u3063\u3066\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u4e26\u5217\u51e6\u7406\uff08parallelism\uff09\u3068\u3044\u3046\u306e\u306f\u3001\u7247\u624b\u3067\u7389\u306d\u304e\u306e\u5165\u3063\u305f\u30d5\u30e9\u30a4\u30d1\u30f3\u3092\u632f\u308a\u306a\u304c\u3089\u3082\u3046\u7247\u65b9\u306e\u624b\u3067\u30c8\u30de\u30c8\u3092\u5207\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002 \u3053\u308c\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u70b9\u3067\u306f\uff0cCrystal \u306f\u300c\u4e26\u884c\u51e6\u7406\u300d\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u300c\u4e26\u5217\u51e6\u7406\u300d\u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u3001\u3044\u304f\u3064\u3082\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30bf\u30b9\u30af\u306b\u5c11\u3057\u305a\u3064\u6642\u9593\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u5b8c\u5168\u306b\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u30672\u3064\u306e\u30b3\u30fc\u30c9\u30d1\u30b9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30ab\u30ec\u30f3\u30c8\u30fb\u30de\u30fc\u30af\uff06\u30b9\u30a4\u30fc\u30d7\u65b9\u5f0f\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30bf\uff08GC\uff09\uff08\u73fe\u6642\u70b9\u3067\u306f Boehm GC ) \u3092\u9664\u3044\u3066\u3001Crystal \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5358\u4e00\u306e OS \u30b9\u30ec\u30c3\u30c9\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002","title":"\u4e26\u884c\u51e6\u7406\uff08Concurrency\uff09 vs. \u4e26\u5217\u51e6\u7406\uff08Parallelism\uff09"},{"location":"guides/concurrency.html#fiber","text":"\u4e26\u884c\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306b\u3001Crystal \u306f\u30d5\u30a1\u30a4\u30d0\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30d0\u306fOS\u30b9\u30ec\u30c3\u30c9\u3068\u3088\u304f\u4f3c\u3066\u3044\u307e\u3059\u304c\u3088\u308a\u8efd\u91cf\u3067\u3001\u305d\u306e\u5b9f\u884c\u306f\u30d7\u30ed\u30bb\u30b9\u306b\u3088\u3063\u3066\u5185\u90e8\u7684\u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001Crystal\u306f\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u305d\u308c\u3089\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002","title":"\u30d5\u30a1\u30a4\u30d0\uff08Fiber\uff09"},{"location":"guides/concurrency.html#_2","text":"I/O\u306b\u95a2\u4fc2\u3059\u308b\u3082\u306e\u3067\u3042\u308c\u3070\u306a\u3093\u3067\u3082\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306e\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u304a\u304b\u3052\u3067\u3001\u305f\u3068\u3048\u6642\u9593\u306e\u304b\u304b\u308b\u51e6\u7406\u304cI/O\u306b\u5bfe\u3057\u3066\u884c\u308f\u308c\u3066\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u304c\u305d\u306e\u7d42\u4e86\u3092\u5f85\u3063\u3066\u3044\u308b\u72b6\u614b\u3067\u3082\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5225\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30bd\u30b1\u30c3\u30c8\u7d4c\u7531\u3067\u306e\u30c7\u30fc\u30bf\u306e\u53d7\u4fe1\u64cd\u4f5c\u306a\u3069\u306f\u3001\u3053\u3046\u3057\u305f\u6642\u9593\u304c\u304b\u304b\u308b\u51e6\u7406\u306e\u4e00\u4f8b\u3067\u3059\u3002","title":"\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7"},{"location":"guides/concurrency.html#channel","text":"Crystal \u306f CSP \u3092\u53c2\u8003\u306b\u3057\u305f\u30c1\u30e3\u30cd\u30eb\u3092\u6709\u3057\u3066\u3044\u307e\u3059\u3002\u30c1\u30e3\u30cd\u30eb\u306b\u3088\u3063\u3066\u3001\u30e1\u30e2\u30ea\u306e\u5171\u6709\u3084\u30ed\u30c3\u30af\u3084\u30bb\u30de\u30d5\u30a9\u306a\u3069\u3068\u3044\u3063\u305f\u7279\u5225\u306a\u6a5f\u69cb\u3092\u6c17\u306b\u304b\u3051\u308b\u3053\u3068\u306a\u304f\u3001\u7570\u306a\u308b\u30d5\u30a1\u30a4\u30d0\u9593\u3067\u306e\u30c7\u30fc\u30bf\u306e\u3084\u308a\u3068\u308a\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002","title":"\u30c1\u30e3\u30cd\u30eb\uff08Channel\uff09"},{"location":"guides/concurrency.html#_3","text":"\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u958b\u59cb\u3055\u308c\u308b\u3068\u3001\u307e\u305a\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u306e\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306f\u3001\u3055\u3089\u306b\u591a\u304f\u306e\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u69cb\u6210\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 \u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u300c\u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u300d \u30d5\u30a1\u30a4\u30eb\u3084\u30bd\u30b1\u30c3\u30c8\u3001\u30d1\u30a4\u30d7\u3001\u30b7\u30b0\u30ca\u30eb\u3001\u30bf\u30a4\u30de\uff08 sleep \u3057\u305f\u3068\u304d\u306a\u3069\uff09\u306b\u3088\u308b\u975e\u540c\u671f\u30bf\u30b9\u30af\u3092\u6271\u3046\u305f\u3081\u306e\u300c\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u300d\uff08\u3053\u308c\u3082\u30d5\u30a1\u30a4\u30d0\u306e1\u7a2e\uff09 \u30d5\u30a1\u30a4\u30d0\u9593\u3067\u30c7\u30fc\u30bf\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u300c\u30c1\u30e3\u30cd\u30eb\u300d\u30e9\u30a4\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306f\u30c7\u30fc\u30bf\u3092\u3084\u308a\u3068\u308b\u3059\u308b\u305f\u3081\u306b\u30d5\u30a1\u30a4\u30d0\u3068\u30c1\u30e3\u30cd\u30eb\u306e\u9593\u3092\u8abf\u6574\u3057\u307e\u3059\u3002 \"\u3082\u3046\u4f7f\u7528\u3055\u308c\u306a\u3044\" \u30e1\u30e2\u30ea\u3092\u6383\u9664\u3059\u308b\u300c\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30bf\u300d","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c"},{"location":"guides/concurrency.html#_4","text":"\u5358\u4e00\u306e\u30d5\u30a1\u30a4\u30d0\u306f\u3001\u30b9\u30ec\u30c3\u30c9\u3068\u6bd4\u3079\u308b\u3068\u3088\u308a\u8efd\u91cf\u306a\u51e6\u7406\u306e\u5b9f\u884c\u5358\u4f4d\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30d0\u306f\u3001\u901a\u5e38 OS \u30b9\u30ec\u30c3\u30c9\u4e0a\u306e \u30b9\u30bf\u30c3\u30af\u30e1\u30e2\u30ea \u4e0a\u306b8MB\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u5c0f\u3055\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002 \u30d5\u30a1\u30a4\u30d0\u306f\u30b9\u30ec\u30c3\u30c9\u3068\u9055\u3063\u3066\u5354\u8abf\u7684\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002\u30b9\u30ec\u30c3\u30c9\u306f\u30d7\u30ea\u30a8\u30f3\u30d7\u30c6\u30a3\u30d6\uff08\u975e\u540c\u671f\u30de\u30eb\u30c1\u30bf\u30b9\u30af\uff09\u306a\u306e\u3067\uff0cOS\u306f\u3044\u3064\u3067\u3082\u30b9\u30ec\u30c3\u30c9\u306b\u5272\u308a\u8fbc\u3093\u3067\u5225\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30d0\u306f\u30e9\u30a4\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u5bfe\u3057\u3066\u3001\u660e\u793a\u7684\u306b\u300c\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3078\u51e6\u7406\u3092\u5207\u308a\u66ff\u3048\u3066\u826f\u3044\u300d\u3068\u4f1d\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070I/O \u306b\u3088\u308b\u5f85\u3061\u304c\u767a\u751f\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30d0\u306f\u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u5bfe\u3057\u3066\u300c\u304a\u30fc\u3044\uff0c\u81ea\u5206\u306fI/O\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u5f85\u305f\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3089\u3001\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u3066\u3044\u3044\u3088\u3002I/O\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u3089\u5e30\u3063\u3066\u304d\u3066\u306d\u300d\u3068\u544a\u3052\u307e\u3059\u3002 \u3053\u3046\u3057\u305f\u5354\u8abf\u52d5\u4f5c\u306e\u5229\u70b9\u306f\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5207\u308a\u66ff\u3048\uff08\u30b9\u30ec\u30c3\u30c9\u9593\u306e\u5207\u308a\u66ff\u3048\uff09\u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306e\u5927\u90e8\u5206\u3092\u306a\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002 \u30d5\u30a1\u30a4\u30d0\u306f\u30b9\u30ec\u30c3\u30c9\u3068\u6bd4\u3079\u3066\u8efd\u91cf\u3067\u30018MB\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u3066\u3082\u305d\u306e\u958b\u59cb\u6642\u306b\u306f4KB\u3068\u3044\u3046\u5c0f\u3055\u306a\u30b9\u30bf\u30c3\u30af\u9818\u57df\u3057\u304b\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002 64\u30d3\u30c3\u30c8\u30de\u30b7\u30f3\u3067\u306f\u6570\u767e\u4e07\u3082\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u300232\u30d3\u30c3\u30c8\u30de\u30b7\u30f3\u306e\u5834\u5408\u306f\u305d\u308c\u307b\u3069\u591a\u304f\u306f\u306a\u304f\u3001\u751f\u6210\u3067\u304d\u308b\u30d5\u30a1\u30a4\u30d0\u306f512\u500b\u3060\u3051\u3067\u3059\u3002\u3057\u304b\u3057\u300132\u30d3\u30c3\u30c8\u30de\u30b7\u30f3\u306f\u3082\u306f\u3084\u4f7f\u7528\u3055\u308c\u306a\u304f\u306a\u308a\u3064\u3064\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u6211\u3005\u306f\u5c06\u6765\u3092\u898b\u636e\u3048\u306664\u30d3\u30c3\u30c8\u30de\u30b7\u30f3\u306b\u3088\u308a\u6ce8\u529b\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u30d5\u30a1\u30a4\u30d0\u5358\u4f53"},{"location":"guides/concurrency.html#_5","text":"\u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306f\u4ee5\u4e0b\u306e\u30ad\u30e5\u30fc\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u5b9f\u884c\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30d0\uff08\u4f8b\u3048\u3070\uff0c\u65b0\u3057\u304f\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30d0\u306f\u5b9f\u884c\u53ef\u80fd\u306a\u72b6\u614b\u3067\u3059\uff09 \u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\uff08\u5225\u306e\u30d5\u30a1\u30a4\u30d0\uff09\u4ed6\u306b\u5b9f\u884c\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30d0\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306f\u6e96\u5099\u304c\u5b8c\u4e86\u3057\u3066\u3044\u308b\u306a\u975e\u540c\u671f\u51e6\u7406\u304c\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001\u305d\u306e\u51e6\u7406\u3092\u5f85\u3063\u3066\u3044\u305f\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u73fe\u6642\u70b9\u3067\u306f\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306f epoll \u3084 kqueue \u3068\u8a00\u3063\u305f\u30a4\u30d9\u30f3\u30c8\u65b9\u5f0f\u3092\u62bd\u8c61\u5316\u3057\u305f libevent \u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u81ea\u4e3b\u7684\u306b\u5f85\u6a5f\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30d0\uff08 Fiber.yield \u306b\u3088\u3063\u3066\u300c\u7d9a\u3051\u3066\u5b9f\u884c\u3067\u304d\u308b\u3051\u308c\u3069\u3001\u4ed6\u306b\u5b9f\u884c\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30d0\u304c\u3042\u308c\u3070\u3001\u305d\u3063\u3061\u3092\u5b9f\u884c\u3057\u3066\u3066\u3044\u3044\u3088\u300d\u3068\u5ba3\u8a00\u3057\u305f\u3082\u306e\uff09","title":"\u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9"},{"location":"guides/concurrency.html#_6","text":"\u73fe\u6642\u70b9\u3067\u306f\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3067\u3057\u304b\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3067\u304d\u306a\u305f\u3081\u3001\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30d0\u304b\u3089\u540c\u3058\u30af\u30e9\u30b9\u5909\u6570\u3092\u53c2\u7167\u3084\u5909\u66f4\u3057\u3066\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u4e00\u65e6\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\uff08\u4e26\u5217\u51e6\u7406\uff09\u304c\u8a00\u8a9e\u306b\u5c0e\u5165\u3055\u308c\u308b\u3068\u3001\u305d\u3046\u3044\u3046\u8a33\u306b\u3082\u3044\u304b\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u304c\u3001\u30c7\u30fc\u30bf\u306e\u3084\u308a\u3068\u308a\u306b\u30c1\u30e3\u30cd\u30eb\u3092\u4f7f\u3044\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30c1\u30e3\u30cd\u30eb\u7d4c\u7531\u3067\u9001\u53d7\u4fe1\u3059\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u308b\u7406\u7531\u3067\u3059\u3002\u30c1\u30e3\u30cd\u30eb\u306f\u5185\u90e8\u7684\u306b\u30c7\u30fc\u30bf\u7af6\u5408\u3092\u907f\u3051\u308b\u305f\u3081\u306e\u30ed\u30c3\u30af\u6a5f\u69cb\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u5916\u304b\u3089\u4f7f\u3046\u5206\u306b\u306f\u30ed\u30c3\u30af\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u306e\u306a\u3044\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u624b\u6cd5\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002","title":"\u30c7\u30fc\u30bf\u306e\u3084\u308a\u53d6\u308a"},{"location":"guides/concurrency.html#_7","text":"","title":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9"},{"location":"guides/concurrency.html#_8","text":"\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u30d6\u30ed\u30c3\u30af\u4ed8\u304d\u3067 spawn \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 spawn do # ... socket . gets # ... end spawn do # ... sleep 5 . seconds # ... end \u3053\u3053\u306b\u306f\u30012\u3064\u306e\u30d5\u30a1\u30a4\u30d0\u304c\u3042\u308a\u307e\u3059\u30021\u3064\u76ee\u306f\u30bd\u30b1\u30c3\u30c8\u304b\u3089\u4f55\u304b\u3092\u8aad\u307f\u51fa\u3059\u3082\u306e\u3067\u3001\u3082\u3046\u4e00\u3064\u306f sleep \u3059\u308b\u3082\u306e\u3067\u3059\u30021\u3064\u3081\u306e\u30d5\u30a1\u30a4\u30d0\u306f socket.gets \u306e\u884c\u306b\u5230\u9054\u3059\u308b\u3068\u4e00\u65e6\u4e2d\u65ad\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306b\u30bd\u30b1\u30c3\u30c8\u306b\u30c7\u30fc\u30bf\u304c\u6e96\u5099\u3067\u304d\u305f\u6642\u70b9\u3067\u3053\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u518d\u958b\u3059\u308b\u3088\u3046\u306b\u4f1d\u3048\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f2\u3064\u3081\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u3061\u3089\u306e\u30d5\u30a1\u30a4\u30d0\u306f5\u79d2\u9593\u30b9\u30ea\u30fc\u30d7\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306b5\u79d2\u7d4c\u3063\u305f\u3089\u3053\u3061\u3089\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u518d\u958b\u3059\u308b\u3088\u3046\u4f1d\u3048\u307e\u3059\u3002\u3082\u3057\u4ed6\u306b\u5b9f\u884c\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30d0\u304c\u3044\u306a\u3051\u308c\u3070\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306f\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306fCPU\u3092\u6d88\u8cbb\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u3069\u3061\u3089\u304b\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002 socket.gets \u3084 sleep \u304c\u3053\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u7406\u7531\u306f\u3001\u305d\u308c\u3089\u304c\u30e9\u30a4\u30f3\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3084\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u3068\u76f4\u63a5\u4f1a\u8a71\u3067\u304d\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3001\u9b54\u6cd5\u3067\u3082\u306a\u3093\u3067\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u57fa\u672c\u7684\u306b\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4f7f\u7528\u8005\u304c\u305d\u3046\u3057\u305f\u4e00\u5207\u3092\u6c17\u306b\u304b\u3051\u308b\u5fc5\u8981\u304c\u306a\u3044\u3088\u3046\u306b\u914d\u616e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u305f\u3060\u3057\u3001\u30d5\u30a1\u30a4\u30d0\u304c\uff08\u751f\u6210\u5f8c\uff09\u5373\u5ea7\u306b\u5b9f\u884c\u3055\u308c\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 spawn do loop do puts \"Hello!\" end end \u4e0a\u8a18\u30b3\u30fc\u30c9\u306f\u4f55\u3082\u51fa\u529b\u305b\u305a\u5373\u5ea7\u306b\u7d42\u4e86\u3057\u307e\u3059\u3002 \u305d\u306e\u7406\u7531\u306f\u3001\u30d5\u30a1\u30a4\u30d0\u30fc\u304c\u751f\u6210\u3055\u308c\u305f\u6642\u70b9\u3067\u5373\u5ea7\u306b\u5b9f\u884c\u3055\u308c\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u305f\u3081\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u4e0a\u306e\u4f8b\u3067\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3057\u305f\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306f\u305d\u306e\u307e\u307e\u7d42\u308f\u308a\u306b\u9054\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002 \u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u7559\u5b88\u65b9\u6cd5\u306e\u4e00\u3064\u306f\u3001 sleep \u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\u3002 spawn do loop do puts \"Hello!\" end end sleep 1 . second \u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f1\u79d2\u9593 \"Hello!\" \u3068\u51fa\u529b\u3057\u7d9a\u3051\u3066\u304b\u3089\u7d42\u4e86\u3057\u307e\u3059\u3002\u3053\u308c\u306f sleep \u306b\u3088\u3063\u3066\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u304c1\u79d2\u5f8c\u306b\u518d\u958b\u3059\u308b\u3088\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3055\u308c\u3001\u305d\u306e\u9593\u306b\u4ed6\u306e \"\u5b9f\u884c\u53ef\u80fd\u306a\" \uff08\u3053\u306e\u5834\u5408\u306f\u3059\u3050\u4e0a\u3067\u751f\u6210\u3055\u308c\u3066\u3044\u305f\uff09\u30d5\u30a1\u30a4\u30d0\u304c\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002 \u4ed6\u306b\u306f\u3053\u3093\u306a\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002 spawn do loop do puts \"Hello!\" end end Fiber . yield \u4eca\u5ea6\u306f Fiber.yield \u304c\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u5bfe\u3057\u3066\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u3066\u826f\u3044\u3068\u4f1d\u3048\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u7d50\u679c\u3001\u6a19\u6e96\u51fa\u529b\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u308b\uff08\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u304c\u6a19\u6e96\u51fa\u529b\u306e\u6e96\u5099\u304c\u3067\u304d\u308b\u307e\u3067\u5f85\u3064\u3088\u3046\u4f1d\u3048\u3066\u304f\u308b\uff09\u307e\u3067 \"Hello!\" \u3068\u51fa\u529b\u3057\u7d9a\u3051\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u6a19\u6e96\u51fa\u529b\u306f\u30d6\u30ed\u30c3\u30af\u3055\u308c\u306a\u3044 \u304b\u3082\u3057\u308c\u307e\u305b\u3093 \u3002 \u3082\u3057\u3001\u751f\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3055\u305b\u7d9a\u3051\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u5f15\u6570\u306a\u3057\u306e sleep \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 spawn do loop do puts \"Hello!\" end end sleep \u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5358\u7d14\u306b\u30eb\u30fc\u30d7\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306e\u3067\u3001\u3082\u3061\u308d\u3093 spawn \u3092\u4f7f\u308f\u305a\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 sleep \u306f\u3001\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u5834\u5408\u306b\u306f\u3055\u3089\u306b\u6709\u7528\u3067\u3059\u3002","title":"\u30d5\u30a1\u30a4\u30d0\u306e\u751f\u6210"},{"location":"guides/concurrency.html#_9","text":"\u30d6\u30ed\u30c3\u30af\u3092\u4e0e\u3048\u308b\u4ee3\u308f\u308a\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3092\u6e21\u3057\u3066\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u306a\u305c\u3053\u308c\u304c\u4fbf\u5229\u306a\u306e\u304b\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001\u6b21\u306e\u4f8b\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002 i = 0 while i < 10 spawn do puts ( i ) end i += 1 end Fiber . yield \u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f \"10\" \u309210\u56de\u51fa\u529b\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306e\u554f\u984c\u306f\u30011\u3064\u306e\u5909\u6570 i \u3092\u5168\u3066\u306e\u30d5\u30a1\u30a4\u30d0\u304c\u53c2\u7167\u3057\u3066\u3044\u3066\u3001 Fiber.yield \u304c\u5b9f\u884c\u3055\u308c\u305f\u9803\u306b\u306f\u305d\u306e\u5024\u304c10\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u70b9\u3067\u3059\u3002 \u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f\u3053\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 i = 0 while i < 10 proc = -> ( x : Int32 ) do spawn do puts ( x ) end end proc . call ( i ) i += 1 end Fiber . yield \u4eca\u5ea6\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\u306a\u305c\u304b\u3068\u3044\u3046\u3068 Proc \u3092\u751f\u6210\u3057\u3066\u3001\u305d\u308c\u306b i \u3092\u6e21\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067 i \u306e\u5024\u304c\u30b3\u30d4\u30fc\u3055\u308c\u3001\u751f\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30d0\u304c\u4f7f\u7528\u3059\u308b\u306e\u306f\u305d\u306e\u30b3\u30d4\u30fc\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0a\u8a18\u306e\u3088\u3046\u306a\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u30b3\u30fc\u30c9\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5f0f\u306e\u547c\u3073\u51fa\u3057\u3092\u53d7\u3051\u53d6\u3063\u3066\u4e0a\u8a18\u30b3\u30fc\u30c9\u306b\u5c55\u958b\u3059\u308b spawn \u30de\u30af\u30ed\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3092\u4f7f\u3044\u3001\u6700\u7d42\u7684\u306b\u306f\u3053\u3046\u306a\u308a\u307e\u3057\u305f\u3002 i = 0 while i < 10 spawn puts ( i ) i += 1 end Fiber . yield \u3053\u306e\u65b9\u6cd5\u306f\u3001\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u306e\u4e2d\u3067\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306e\u5024\u304c\u5909\u5316\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u306f\u4fbf\u5229\u306a\u65b9\u6cd5\u3067\u3059\u3002\u3002\u3053\u3046\u3057\u305f\u554f\u984c\u306f\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3067\u306f\u767a\u751f\u3057\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u60f3\u5b9a\u3057\u305f\u901a\u308a\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002 10 . times do | i | spawn do puts i end end Fiber . yield","title":"\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u30d5\u30a1\u30a4\u30d0\u3068\u3057\u3066\u751f\u6210\u3059\u308b"},{"location":"guides/concurrency.html#_10","text":"\u305d\u306e\u3088\u3046\u306a\u6642\u306b\u3082\u30c1\u30e3\u30cd\u30eb\u304c\u4f7f\u3048\u307e\u3059\u3002 channel = Channel ( Nil ) . new spawn do puts \"Before send\" channel . send ( nil ) puts \"After send\" end puts \"Before receive\" channel . receive puts \"After receive\" \u3053\u306e\u30b3\u30fc\u30c9\u306e\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 Before receive Before send After receive \u307e\u305a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3057\u307e\u3059\u304c\u3001\u307e\u3060\u305d\u306e\u30d5\u30a1\u30a4\u30d0\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002 channel.receive \u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u70b9\u3067\u3001\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u3001\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u79fb\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001 channel.send(nil) \u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u5024\u304c\u6e21\u3055\u308c\u308b\u306e\u3092\u5f85\u3063\u3066\u3044\u305f channel.receive \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306f\u5b9f\u884c\u3092\u7d9a\u3051\u3066\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f \"After send\" \u3092\u51fa\u529b\u3059\u308b\u6a5f\u4f1a\u306e\u306a\u3044\u307e\u307e\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u4e0a\u306e\u4f8b\u3067\u306f\u5358\u306b\u30d5\u30a1\u30a4\u30d0\u304c\u7d42\u4e86\u3057\u305f\u3053\u3068\u3092\u4f1d\u3048\u308b\u3060\u3051\u306e\u76ee\u7684\u3067 nil \u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u30c1\u30e3\u30cd\u30eb\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30d0\u9593\u3067\u5024\u3092\u53d7\u3051\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 channel = Channel ( Int32 ) . new spawn do puts \"Before first send\" channel . send ( 1 ) puts \"Before second send\" channel . send ( 2 ) end puts \"Before first receive\" value = channel . receive puts value # => 1 puts \"Before second receive\" value = channel . receive puts value # => 2 \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 Before first receive Before first send 1 Before second receive Before second send 2 \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3044\u3064 receive \u3092\u5b9f\u884c\u3057\u305f\u304b\u3001\u3064\u307e\u308a\u3044\u3064\u305d\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u30d6\u30ed\u30c3\u30af\u3057\u3066\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u306b\u5b9f\u884c\u304c\u5207\u308a\u66ff\u308f\u3063\u305f\u304b\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002 send \u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u305d\u306e\u30c1\u30e3\u30cd\u30eb\u3092\u5f85\u3061\u53d7\u3051\u3066\u3044\u305f\u30d5\u30a1\u30a4\u30d0\u306e\u5b9f\u884c\u304c\u518d\u958b\u3055\u308c\u307e\u3059\u3002 \u4eca\u56de\u306f\u30ea\u30c6\u30e9\u30eb\u5024\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30d0\u306f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3001\u30bd\u30b1\u30c3\u30c8\u304b\u3089\u5024\u3092\u53d6\u5f97\u3057\u305f\u308a\u3057\u3066\u3001\u3053\u306e\u5024\u3092\u8a08\u7b97\u3059\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30d0\u304cI/O\u3092\u5f85\u305f\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u3001I/O\u306e\u6e96\u5099\u304c\u3067\u304d\u308b\u307e\u3067\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u3001\u5024\u304c\u5230\u7740\u3057\u30c1\u30e3\u30cd\u30eb\u3092\u901a\u3058\u3066\u305d\u308c\u304c\u9001\u4fe1\u3055\u308c\u308b\u3068\u3001\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u304c\u305d\u306e\u5024\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 require \"socket\" channel = Channel ( String ) . new spawn do server = TCPServer . new ( \"0.0.0.0\" , 8080 ) socket = server . accept while line = socket . gets channel . send ( line ) end end spawn do while line = gets channel . send ( line ) end end 3 . times do puts channel . receive end \u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f2\u3064\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u30021\u3064\u76ee\u306e\u30d5\u30a1\u30a4\u30d0\u306fTCP\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u3066\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30921\u3064\u53d7\u3051\u5165\u308c\u3001\u305d\u3053\u304b\u3089\u884c\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30c1\u30e3\u30cd\u30eb\u306b\u6e21\u3059\u3082\u306e\u30022\u3064\u76ee\u306e\u30d5\u30a1\u30a4\u30d0\u306f\u6a19\u6e96\u5165\u529b\u304b\u3089\u884c\u3092\u8aad\u307f\u8fbc\u3080\u3082\u306e\u3067\u3059\u3002\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306f\u3001\u30bd\u30b1\u30c3\u30c8\u304b\u3089\u8aad\u307f\u8fbc\u307e\u308c\u305f\u306e\u304b\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u307e\u308c\u305f\u306e\u304b\u306b\u304b\u304b\u308f\u3089\u305a\u3001\u30c1\u30e3\u30cd\u30eb\u306b\u6e21\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u30923\u56de\u8aad\u307f\u8fbc\u3093\u3060\u3089\u7d42\u4e86\u3057\u307e\u3059\u3002 gets \u306e\u547c\u3073\u51fa\u3057\u306f\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u30d6\u30ed\u30c3\u30af\u3057\u3066\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u306b\u8aad\u307f\u51fa\u3059\u5024\u304c\u5230\u7740\u3057\u305f\u3089\u518d\u958b\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u4f1d\u3048\u307e\u3059\u3002 \u540c\u69d8\u306b\u3001\u51e6\u7406\u3092\u5b8c\u4e86\u3059\u308b\u305f\u3081\u306b\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5f85\u3061\u53d7\u3051\u3066\u3001\u305d\u308c\u3089\u306e\u5024\u3092\u96c6\u7d04\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 channel = Channel ( Int32 ) . new 10 . times do | i | spawn do channel . send ( i * 2 ) end end sum = 0 10 . times do sum += channel . receive end puts sum # => 90 \u3082\u3061\u308d\u3093\u3001\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30d0\u5185\u3067 receive \u3092\u4f7f\u3046\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 channel = Channel ( Int32 ) . new spawn do puts \"Before send\" channel . send ( 1 ) puts \"After send\" end spawn do puts \"Before receive\" puts channel . receive puts \"After receive\" end puts \"Before yield\" Fiber . yield puts \"After yield\" \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 Before yield Before send Before receive 1 After receive After send After yield \u3053\u3053\u3067\u306f\u3001\u307e\u305a channel.send \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u304c\u3001\u307e\u3060\u3060\u308c\u3082\u305d\u306e\u5024\u3092\u5f85\u3063\u3066\u3044\u308b\u4eba\u304c\u3044\u306a\u3044\u306e\u3067\u3001\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u3057\u307e\u3059\u30022\u3064\u76ee\u306e\u30d5\u30a1\u30a4\u30d0\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u30c1\u30e3\u30cd\u30eb\u306b\u3059\u3067\u306b\u5024\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3092\u53d7\u3051\u53d6\u3063\u3066\u5b9f\u884c\u3092\u7d9a\u3051\u3001\u305d\u306e\u5f8c\u307e\u305a1\u3064\u76ee\u306e\u30d5\u30a1\u30a4\u30d0\u304c\u5b9f\u884c\u3055\u308c\u3001\u6700\u5f8c\u306b\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u9806\u5e8f\u306b\u306a\u308b\u7406\u7531\u306f\u3001 Fiber.yield \u304c\u305d\u306e\u30d5\u30a1\u30a4\u30d0\u3092\u5b9f\u884c\u30ad\u30e5\u30fc\u306e\u6700\u5f8c\u306b\u7f6e\u304f\u305f\u3081\u3067\u3059\u3002","title":"\u30d5\u30a1\u30a4\u30d0\u3092\u751f\u6210\u3057\u3066\u305d\u306e\u7d42\u4e86\u3092\u5f85\u3064"},{"location":"guides/concurrency.html#_11","text":"\u4e0a\u306e\u4f8b\u3067\u306f\u30d0\u30c3\u30d5\u30a1\u306e\u306a\u3044\u30c1\u30e3\u30cd\u30eb\u3001\u3064\u307e\u308a\u5024\u3092\u9001\u4fe1\u3057\u305f\u969b\u306b\u305d\u306e\u30c1\u30e3\u30cd\u30eb\u306e\u5024\u3092\u5f85\u3063\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30d0\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u306b\u51e6\u7406\u304c\u79fb\u308b\u3082\u306e\u3001\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002 \u30d0\u30c3\u30d5\u30a1\u4ed8\u304d\u306e\u30c1\u30e3\u30cd\u30eb\u3092\u4f7f\u3063\u305f\u5834\u5408\u3001 send \u304c\u5b9f\u884c\u3055\u308c\u3066\u3082\u30d0\u30c3\u30d5\u30a1\u304c\u4e00\u676f\u306b\u306a\u308b\u307e\u3067\u306f\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u5207\u308a\u66ff\u308f\u308a\u307e\u305b\u3093\u3002 # \u5bb9\u91cf\u304c2\u306e\u30d0\u30c3\u30d5\u30a1\u4ed8\u304d\u30c1\u30e3\u30cd\u30eb channel = Channel ( Int32 ) . new ( 2 ) spawn do puts \"Before send 1\" channel . send ( 1 ) puts \"Before send 2\" channel . send ( 2 ) puts \"Before send 3\" channel . send ( 3 ) puts \"After send\" end 3 . times do | i | puts channel . receive end \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 Before send 1 Before send 2 Before send 3 1 2 After send 3 \u6700\u521d\u306e\uff12\u56de\u306esend\u304c\u5b9f\u884c\u3055\u308c\u305f\u969b\u306b\u3001\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u5207\u308a\u66ff\u308f\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3057\u304b\u3057\u30013\u56de\u76ee\u306esend\u3067\u306f\u30c1\u30e3\u30cd\u30eb\u306e\u30d0\u30c3\u30d5\u30a1\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u79fb\u308a\u307e\u3059\u3002\u3053\u3053\u30672\u3064\u306e\u5024\u304c\u53d6\u308a\u51fa\u3055\u308c\u3066\u30c1\u30e3\u30cd\u30eb\u304c\u7a7a\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u30013\u56de\u76ee\u306e receive \u306f\u30e1\u30a4\u30f3\u30d5\u30a1\u30a4\u30d0\u3092\u30d6\u30ed\u30c3\u30af\u3055\u308c\u3066\u4ed6\u306e\u30d5\u30a1\u30a4\u30d0\u306b\u51e6\u7406\u304c\u79fb\u308a\u3001\u3055\u3089\u306b\u5024\u304c\u9001\u4fe1\u3055\u308c\u305f\u308a\u3001\u7d42\u4e86\u3057\u305f\u308a\u3057\u307e\u3059\u3002","title":"\u30d0\u30c3\u30d5\u30a1\u4ed8\u304d\u30c1\u30e3\u30cd\u30eb"},{"location":"guides/performance.html","text":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 \u3053\u308c\u3089\u306eTips\u306b\u5f93\u3063\u3066\u3001\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u901f\u5ea6\u3068\u30e1\u30e2\u30ea\u4f7f\u7528\u306e\u4e21\u9762\u3067\u6700\u9ad8\u306e\u3082\u306e\u306b\u3057\u307e\u3057\u3087\u3046\u3002 \u65e9\u307e\u3063\u305f\u6700\u9069\u5316 \u304b\u3064\u3066\u30c9\u30ca\u30eb\u30c9\u30fb\u30af\u30cc\u30fc\u30b9\u306f\u8a00\u3044\u307e\u3057\u305f\u3002 \u5c0f\u3055\u306a\u52b9\u7387\u6027\u306b\u3064\u3044\u3066\u306f\u8003\u3048\u306a\u3044\u3088\u3046\u306b\u3059\u3079\u304d\u3067\u3042\u3063\u3066\u3001\u305d\u306e97\uff05\u306b\u304a\u3044\u3066\u3001\u65e9\u307e\u3063\u305f\u6700\u9069\u5316\u306f\u8af8\u60aa\u306e\u6839\u6e90\u3067\u3042\u308b\u3002\u305f\u3060\u3057\u3001\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306a3%\u306b\u3064\u3044\u3066\u307e\u3067\u305d\u306e\u6a5f\u4f1a\u3092\u9003\u3057\u3066\u306f\u3089\u306a\u3089\u3044\u3002 \u3068\u306f\u3044\u3048\u3001\u3082\u3057\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u308b\u969b\u306b\u300c\u610f\u5473\u7684\u306b\u540c\u3058\u5185\u5bb9\u3092\u3088\u308a\u65e9\u304f\u5b9f\u884c\u3067\u304d\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u300d\u304c\u3061\u3087\u3063\u3068\u3057\u305f\u5909\u66f4\u3067\u5b9f\u73fe\u3067\u304d\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u6a5f\u4f1a\u3092\u898b\u9003\u3059\u624b\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u305d\u3057\u3066\u3001\u5e38\u306b\u81ea\u5206\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u3057\u3066\u3001\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u304c\u3069\u3053\u306b\u3042\u308b\u306e\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u306b\u306f\u3001macOS\u4e0a\u3067\u3042\u308c\u3070XCode\u306b\u542b\u307e\u308c\u3066\u3044\u308b Instruments Time Profiler \u3082\u3057\u304f\u306f \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30d7\u30ed\u30d5\u30a1\u30a4\u30e9 \u306e1\u3064\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002Linux \u3067\u3042\u308c\u3070\u3001 perf \u3084 Callgrind \u306e\u3088\u3046\u306aC/C++ \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u53ef\u80fd\u306a\u4ed5\u7d44\u307f\u304c\u5927\u62b5\u306f\u52d5\u4f5c\u3059\u308b\u3067\u3057\u3087\u3046\u3002Linux \u3068 macOS \u306e\u3069\u3061\u3089\u306b\u3057\u3066\u3082\u3001\u30c7\u30d0\u30c3\u30ac\u30fc\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u6700\u4e2d\u306b \"ctrl+c\" \u3067\u5272\u308a\u8fbc\u3093\u3067\u3001 gdb \u306e backtrace \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u3082\u3063\u3068\u3082\u3088\u304f\u51fa\u73fe\u3059\u308b\u3068\u3053\u308d\u304c\u30db\u30c3\u30c8\u30b9\u30dd\u30c3\u30c8\u3060\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002(\u3082\u3057\u304f\u306f\u3001 gdb poor man's profiler \u3092\u4f7f\u3063\u3066\u540c\u69d8\u306e\u3053\u3068\u3092\u3057\u305f\u308a\u3001macOS \u3067\u306f sample \u30b3\u30de\u30f3\u30c9\u304c\u4f7f\u3048\u307e\u3059) \u306a\u304a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u3092\u884c\u3046\u969b\u306f\u3001\u5fc5\u305a\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u969b\u3084\u5b9f\u884c\u6642\u306b --release \u30d5\u30e9\u30b0\u3092\u3064\u3051\u3066\u6700\u9069\u5316\u3092\u6709\u52b9\u306b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u3092\u907f\u3051\u308b \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u3067\u5b9f\u65bd\u53ef\u80fd\u306a\u4e00\u756a\u826f\u3044\u6700\u9069\u5316\u306f\u3001\u4f59\u5206\u306a/\u7121\u7528\u306a\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u3092\u907f\u3051\u308b\u3053\u3068\u3067\u3059\u3002\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u306f \u30af\u30e9\u30b9 \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3067\u8d77\u304d\u3001\u7d50\u679c\u3068\u3057\u3066\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 \u69cb\u9020\u4f53 \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u30b9\u30bf\u30c3\u30af\u30e1\u30e2\u30ea \u304c\u4f7f\u7528\u3055\u308c\u308b\u306e\u3067\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u306e\u30da\u30ca\u30eb\u30c6\u30a3\u767a\u751f\u3057\u307e\u305b\u3093\u3002\u30b9\u30bf\u30c3\u30af\u30e1\u30e2\u30ea\u3068\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u306e\u9055\u3044\u304c\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001 \u3053\u3053\u3092\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044 \u3002 \u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u306f\u4f4e\u901f\u3067\u3001\u5f8c\u3005\u305d\u306e\u30e1\u30e2\u30ea\u3092\u89e3\u653e\u3059\u308b\u30ac\u30fc\u30d9\u30b8\u30b3\u30ec\u30af\u30bf\uff08GC\uff09\u306b\u8ca0\u8377\u3092\u304b\u3051\u307e\u3059\u3002 \u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u3092\u56de\u907f\u3059\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u305d\u306e\u3088\u3046\u306b\u30c7\u30b6\u30a4\u30f3\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u53c2\u8003\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 IO\u306b\u66f8\u304d\u8fbc\u3080\u969b\u306b\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u306a\u3044 \u6570\u5024\u3092\u6a19\u6e96\u51fa\u529b\u3078\u66f8\u304d\u51fa\u3059\u969b\u306b\u306f\u3053\u3046\u66f8\u304d\u307e\u3059\u3002 puts 123 \u3053\u3046\u3057\u305f\u969b\u3001\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u306f\u3001 to_s \u3084\u305d\u308c\u306b\u985e\u3059\u308b\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6587\u5b57\u5217\u8868\u73fe\u306b\u5909\u63db\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u300d\u3092\u5b9f\u884c\u3057\u3001\u305d\u306e\u6587\u5b57\u5217\u3092\u6a19\u6e96\u51fa\u529b\u3078\u66f8\u304d\u3093\u3067\u3044\u307e\u3059\u3002\u305d\u3046\u3057\u305f\u65b9\u6cd5\u3067\u3082\u52d5\u4f5c\u306f\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u305f\u3081\u306b\u306f\u66f8\u304d\u8fbc\u3093\u3060\u3089\u5ec3\u68c4\u3059\u308b\u3060\u3051\u306e\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u304c\u3001\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u4e0a\u306b\u751f\u6210\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u304c\u767a\u751f\u3057\u3001GC\u306b\u3061\u3087\u3063\u3068\u3057\u305f\u8ca0\u8377\u304c\u304b\u304b\u308a\u307e\u3059\u3002 Crystal\u3067\u306f\u3001 puts \u306f\u305d\u308c\u305e\u308c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e to_s(io) \u306b\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6587\u5b57\u5217\u8868\u73fe\u3092\u66f8\u304d\u51fa\u3057\u305f\u3044IO\u3092\u6e21\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002 \u3067\u3059\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u306f\u6c7a\u3057\u3066\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002 puts 123 . to_s \u3053\u308c\u3067\u306f\u3001\u308f\u3056\u308f\u3056\u4e2d\u9593\u6587\u5b57\u5217\u3092\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u5e38\u306bIO\u3078\u76f4\u63a5\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 \u72ec\u81ea\u306e\u578b\u3092\u66f8\u304f\u5834\u5408\u306f\u3001\u5fc5\u305a to_s \u3067\u306f\u306a\u304f to_s(io) \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3001\u305d\u306e\u4e2d\u3067\u3082\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class MyClass # \u826f\u3044\u65b9\u6cd5 def to_s ( io ) # \u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u305b\u305a\u306b \"1, 2\" \u3092 IO \u306b\u8ffd\u52a0\u3059\u308b x = 1 y = 2 io << x << \", \" << y end # \u826f\u304f\u306a\u3044\u65b9\u6cd5 def to_s ( io ) x = 1 y = 2 # \u6587\u5b57\u5217\u306e\u5f0f\u5c55\u958b\u306b\u3088\u308a\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u3066\u3044\u308b # \u3053\u308c\u306f\u907f\u3051\u308b\u3079\u304d io << \" #{ x } , #{ y } \" end end \u300c\u4e2d\u9593\u6587\u5b57\u5217\u3092\u8fd4\u3059\u306e\u3067\u306f\u306a\u304fIO\u306b\u8ffd\u52a0\u3059\u308b\u300d\u3068\u3044\u3046\u3053\u306e\u54f2\u5b66\u306f\u3001\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u6271\u3046\u3088\u308a\u3082\u7d50\u679c\u7684\u306b\u826f\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u6226\u7565\u3092\u3042\u306a\u305f\u81ea\u8eab\u306eAPI\u5b9a\u7fa9\u3067\u3082\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5b9f\u884c\u6642\u9593\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 io_benchmark.cr require \"benchmark\" io = IO :: Memory . new Benchmark . ips do | x | x . report ( \"without to_s\" ) do io << 123 io . clear end x . report ( \"with to_s\" ) do io << 123 . to_s io . clear end end ``` \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 ``` console $ crystal run -- release io_benchmark . cr without to_s 77.11 M ( 12.97 ns ) ( \u00b1 1.05 % ) fastest with to_s 18.15 M ( 55.09 ns ) ( \u00b1 7.99 % ) 4.25 \u00d7 slower \u5e38\u306b\u5fd8\u308c\u3066\u306a\u3089\u306a\u3044\u306e\u306f\u3001\u3053\u308c\u304c\u5358\u306b\u5b9f\u884c\u6642\u9593\u304c\u77ed\u7e2e\u3057\u305f\u3068\u3044\u3046\u3060\u3051\u3067\u306a\u304f\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u524a\u6e1b\u3068\u3044\u3046\u9762\u3067\u3082\u52b9\u679c\u304c\u3042\u308b\u3068\u8a00\u3046\u3053\u3068\u3067\u3059\u3002 \u6587\u5b57\u5217\u306e\u7d50\u5408\u3067\u306f\u306a\u304f\u5f0f\u5c55\u958b\u3092\u4f7f\u3046 \u3057\u3070\u3057\u3070\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3068\u4ed6\u306e\u5024\u3068\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u6587\u5b57\u5217\u3092\u76f4\u63a5\u69cb\u7bc9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u306e\u69cb\u7bc9\u3067\u306f\u3001 String#+(String) \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u6587\u5b57\u5217\u3092\u7d50\u5408\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u4e2d\u306b\u5f0f\u3092\u57cb\u3081\u8fbc\u3081\u308b \u6587\u5b57\u5217\u306e\u5f0f\u5c55\u958b \u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\u3002 \"Hello, #{name}\" \u306e\u65b9\u304c\u3001 \"Hello, \" + name.to_s \u3088\u308a\u3082\u826f\u3044\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002 \u5f0f\u5c55\u958b\u3092\u542b\u3080\u6587\u5b57\u5217\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066IO\u3078\u8ffd\u52a0\u3059\u308b\u5f62\u306b\u5909\u63db\u3055\u308c\u3001\u4e2d\u9593\u6587\u5b57\u5217\u306e\u751f\u6210\u3092\u81ea\u52d5\u7684\u306b\u56de\u907f\u3057\u307e\u3059\u3002\u4e0a\u306e\u4f8b\u306f\u3053\u306e\u3088\u3046\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 String . build do | io | io << \"Hello, \" << name end \u6587\u5b57\u5217\u306e\u69cb\u7bc9\u306bIO\u306e\u5272\u308a\u5f53\u3066\u3092\u907f\u3051\u308b \u6587\u5b57\u5217\u306e\u69cb\u7bc9\u306b\u306f\u3001\u4e2d\u9593\u7684\u306a IO::Memory \u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u6587\u5b57\u5217\u69cb\u7bc9\u306b\u6700\u9069\u5316\u3055\u308c\u305f String.build \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 require \"benchmark\" Benchmark . ips do | bm | bm . report ( \"String.build\" ) do String . build do | io | 99 . times do io << \"hello world\" end end end bm . report ( \"IO::Memory\" ) do io = IO :: Memory . new 99 . times do io << \"hello world\" end io . to_s end end \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 $ crystal run --release str_benchmark.cr String.build 597.57k ( 1.67\u00b5s) (\u00b1 5.52%) fastest IO::Memory 423.82k ( 2.36\u00b5s) (\u00b1 3.76%) 1.41\u00d7 slower \u4f55\u5ea6\u3082\u4f55\u5ea6\u3082\u4e00\u6642\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u306a\u3044 \u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 lines_with_language_reference = 0 while line = gets if [ \"crystal\" , \"ruby\" , \"java\" ]. any? { | string | line . includes? ( string ) } lines_with_language_reference += 1 end end puts \"Lines that mention crystal, ruby or java: #{ lines_with_language_reference } \" \u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3061\u3083\u3093\u3068\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u7e70\u308a\u8fd4\u3057\u306e\u305f\u3073\u306b [\"crystal\", \"ruby\", \"java\"] \u3092\u65b0\u3057\u3044\u914d\u5217\u3068\u3057\u3066\u751f\u6210\u3059\u308b\u3068\u3044\u3046\u5927\u304d\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u307e\u3059\u3002\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u65b0\u3057\u3044\u914d\u5217\u3092\u4f5c\u6210\u3057\u3066\u305d\u3053\u306b\u5024\u3092\u3044\u304f\u3064\u304b\u8ffd\u52a0\u3059\u308b\u3068\u3044\u3046\u51e6\u7406\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3067\u3057\u304b\u306a\u3044\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u305d\u306e\u305f\u3081\u3001\u3053\u3053\u3067\u306f\u4f55\u5ea6\u3082\u4f55\u5ea6\u3082\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f2\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 \u30bf\u30d7\u30eb\u3092\u4f7f\u3046\u3002\u4e0a\u8a18\u30d7\u30ed\u30b0\u30e9\u30e0\u3067 {\"crystal\", \"ruby\", \"java\"} \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u540c\u3058\u3088\u3046\u306b\u3061\u3083\u3093\u3068\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u30bf\u30d7\u30eb\u306f\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u3092\u3064\u304b\u308f\u306a\u3044\u305f\u3081\u3001\u3088\u308a\u9ad8\u901f\u3067\u30e1\u30e2\u30ea\u6d88\u8cbb\u304c\u5c11\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5bfe\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6700\u9069\u5316\u3059\u308b\u3088\u308a\u591a\u304f\u306e\u6a5f\u4f1a\u3092\u63d0\u4f9b\u3067\u304d\u307e\u3059\u3002 lines_with_language_reference = 0 while line = gets if { \"crystal\" , \"ruby\" , \"java\" } . any? { | string | line . includes? ( string ) } lines_with_language_reference += 1 end end puts \"Lines that mention crystal, ruby or java: #{ lines_with_language_reference } \" \u914d\u5217\u3092\u5b9a\u6570\u306b\u3059\u308b LANGS = [ \"crystal\" , \"ruby\" , \"java\" ] lines_with_language_reference = 0 while line = gets if LANGS . any? { | string | line . includes? ( string ) } lines_with_language_reference += 1 end end puts \"Lines that mention crystal, ruby or java: #{ lines_with_language_reference } \" \u30bf\u30d7\u30eb\u3092\u4f7f\u7528\u3059\u308b\u65b9\u304c\u63a8\u5968\u3055\u308c\u308b\u65b9\u6cd5\u3067\u3059\u3002 \u30eb\u30fc\u30d7\u5185\u3067\u306e\u660e\u793a\u7684\u306b\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3046\u3053\u3068\u306f\u3001\u4e00\u6642\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u751f\u6210\u3055\u308c\u308b\u72b6\u6cc1\u306e1\u3064\u306e\u3067\u3059\u304c\u3001\u4e00\u6642\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066\u3082\u751f\u6210\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 Hash#keys \u306f\u5b9f\u884c\u3055\u308c\u308b\u305f\u3073\u306b\u30ad\u30fc\u3092\u542b\u3080\u65b0\u3057\u3044\u914d\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b Hash#each_key \u3084 Hash#has_key? \u3068\u3044\u3063\u305f\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\u3002 \u53ef\u80fd\u306a\u5834\u5408\u306b\u306f\u69cb\u9020\u4f53\u3092\u4f7f\u7528\u3059\u308b \u72ec\u81ea\u306e\u578b\u3092 \u30af\u30e9\u30b9 \u3067\u306f\u306a\u304f \u69cb\u9020\u4f53 \u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u3088\u308a\u3082\u4f4e\u8ca0\u8377\u3067GC\u306b\u8ca0\u62c5\u3082\u304b\u3051\u306a\u3044\u30b9\u30bf\u30c3\u30af\u30e1\u30e2\u30ea\u4e0a\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u3044\u3064\u3067\u3082\u69cb\u9020\u4f53\u3092\u4f7f\u3048\u3070\u826f\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002struct \u306f\u5024\u6e21\u3057\u3055\u308c\u308b\u306e\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u305f\u69cb\u9020\u4f53\u304c\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u5909\u66f4\u3055\u308c\u305f\u5834\u5408\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u5074\u304c\u305d\u306e\u5909\u66f4\u3092\u611f\u77e5\u3067\u304d\u305a\u3001\u30d0\u30b0\u306e\u6e29\u5e8a\u3068\u306a\u308a\u3048\u307e\u3059\u3002\u69cb\u9020\u4f53\u306f\u4e0d\u5909\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u7279\u306b\u305d\u308c\u304c\u5c0f\u3055\u3044\u5834\u5408\u306b\u306e\u307f\u4f7f\u7528\u3059\u308b\u306e\u304c\u6700\u9069\u306a\u65b9\u6cd5\u3067\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 !!!example \"class_vs_struct.cr' require \"benchmark\" class PointClass getter x getter y def initialize ( @x : Int32 , @y : Int32 ) end end struct PointStruct getter x getter y def initialize ( @x : Int32 , @y : Int32 ) end end Benchmark . ips do | x | x . report ( \"class\" ) { PointClass . new ( 1 , 2 ) } x . report ( \"struct\" ) { PointStruct . new ( 1 , 2 ) } end ``` \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 ``` console $ crystal run -- release class_vs_struct . cr class 28.17 M ( \u00b1 2.86 % ) 15.29 \u00d7 slower struct 430.82 M ( \u00b1 6.58 % ) fastest \u6587\u5b57\u5217\u306b\u5bfe\u3059\u308b\u7e70\u308a\u8fd4\u3057\u51e6\u7406 Crystal\u306e\u6587\u5b57\u5217\u306fUTF-8\u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002UTF-8\u306f\u53ef\u5909\u9577\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3001\u30a2\u30b9\u30ad\u30fc\u6587\u5b57\u306e\u7bc4\u56f2\u3067\u306f1\u6587\u5b57\u30921\u30d0\u30a4\u30c8\u3067\u8868\u73fe\u3057\u307e\u3059\u304c\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u30701\u6587\u5b57\u3092\u8907\u6570\u30d0\u30a4\u30c8\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001 String#[] \u306f\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u793a\u3059\u5834\u6240\u306e\u6587\u5b57\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306b\u6bce\u56de\u30d0\u30a4\u30c8\u30c7\u30fc\u30bf\u3092\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u3053\u306e\u51e6\u7406\u306f O(1) \u30aa\u30fc\u30c0\u30fc\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u3046\u3057\u305f\u5834\u5408\u306bCrystal\u306e String \u306f\u6700\u9069\u5316\u3092\u884c\u3063\u3066\u3044\u3066\u3001\u6587\u5b57\u5217\u306bASCII\u6587\u5b57\u3057\u304b\u542b\u307e\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001 String#[] \u3092 O(1) \u30aa\u30fc\u30c0\u30fc\u3067\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u4e00\u822c\u7684\u306b\u305d\u3046\u3044\u3063\u305f\u72b6\u6cc1\u306f\u7a00\u3067\u3059\u3002 \u3053\u3046\u3057\u305f\u7406\u7531\u304b\u3089\u3001\u6587\u5b57\u5217\u306b\u5bfe\u3059\u308b\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u306f\u52b9\u7387\u7684\u3068\u306f\u3044\u3048\u305a\u3001\u5b9f\u969b O(n^2) \u30aa\u30fc\u30c0\u30fc\u306e\u8907\u96d1\u6027\u3092\u6709\u3057\u3066\u3044\u307e\u3059\u3002 string = \"foo\" while i < string . size char = string [ i ] # ... end \u5b9f\u306f\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3001\u300c\u6587\u5b57\u5217\u306e size \uff08\u6587\u5b57\u6570\uff09\u304c\u5358\u7d14\u306b bytesize \uff08\u30d0\u30a4\u30c8\u6570\uff09\u304b\u3089\u306f\u5f97\u3089\u308c\u306a\u3044\u305f\u3081\u3001\u305d\u306e\u8a08\u7b97\u306b\u3082\u6642\u9593\u304c\u304b\u304b\u308b\u300d\u3068\u3044\u30462\u3064\u76ee\u306e\u554f\u984c\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002 \u3057\u304b\u3057\u3001String\u306e\u6587\u5b57\u6570\u306f\u4e00\u5ea6\u8a08\u7b97\u3055\u308c\u308b\u3068\u305d\u306e\u5024\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\uff08\u306e\u3067\u7e70\u308a\u8fd4\u3057\u306b\u3088\u308b\u30c7\u30e1\u30ea\u30c3\u30c8\u306f\u9650\u5b9a\u7684\u3067\u3059\uff09\u3002 \u3053\u306e\u5834\u5408\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u624b\u6bb5\u306f\u3001\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u7528\u306e\u30e1\u30bd\u30c3\u30c9\uff08 each_char \u3084 each_byte \u3001 each_codepoint \u306a\u3069\uff09\u306e\u3044\u305a\u308c\u304b\u3092\u4f7f\u7528\u3059\u308b\u304b\u3001\u3088\u308a\u4f4e\u30ec\u30d9\u30eb\u306e Char::Reader \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3059\u3002 each_char \u3092\u4f7f\u7528\u3057\u305f\u4f8b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 string = \"foo\" string . each_char do | char | # ... end","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9"},{"location":"guides/performance.html#_1","text":"\u3053\u308c\u3089\u306eTips\u306b\u5f93\u3063\u3066\u3001\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u901f\u5ea6\u3068\u30e1\u30e2\u30ea\u4f7f\u7528\u306e\u4e21\u9762\u3067\u6700\u9ad8\u306e\u3082\u306e\u306b\u3057\u307e\u3057\u3087\u3046\u3002","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9"},{"location":"guides/performance.html#_2","text":"\u304b\u3064\u3066\u30c9\u30ca\u30eb\u30c9\u30fb\u30af\u30cc\u30fc\u30b9\u306f\u8a00\u3044\u307e\u3057\u305f\u3002 \u5c0f\u3055\u306a\u52b9\u7387\u6027\u306b\u3064\u3044\u3066\u306f\u8003\u3048\u306a\u3044\u3088\u3046\u306b\u3059\u3079\u304d\u3067\u3042\u3063\u3066\u3001\u305d\u306e97\uff05\u306b\u304a\u3044\u3066\u3001\u65e9\u307e\u3063\u305f\u6700\u9069\u5316\u306f\u8af8\u60aa\u306e\u6839\u6e90\u3067\u3042\u308b\u3002\u305f\u3060\u3057\u3001\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306a3%\u306b\u3064\u3044\u3066\u307e\u3067\u305d\u306e\u6a5f\u4f1a\u3092\u9003\u3057\u3066\u306f\u3089\u306a\u3089\u3044\u3002 \u3068\u306f\u3044\u3048\u3001\u3082\u3057\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u308b\u969b\u306b\u300c\u610f\u5473\u7684\u306b\u540c\u3058\u5185\u5bb9\u3092\u3088\u308a\u65e9\u304f\u5b9f\u884c\u3067\u304d\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u300d\u304c\u3061\u3087\u3063\u3068\u3057\u305f\u5909\u66f4\u3067\u5b9f\u73fe\u3067\u304d\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u6a5f\u4f1a\u3092\u898b\u9003\u3059\u624b\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u305d\u3057\u3066\u3001\u5e38\u306b\u81ea\u5206\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u3057\u3066\u3001\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u304c\u3069\u3053\u306b\u3042\u308b\u306e\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u306b\u306f\u3001macOS\u4e0a\u3067\u3042\u308c\u3070XCode\u306b\u542b\u307e\u308c\u3066\u3044\u308b Instruments Time Profiler \u3082\u3057\u304f\u306f \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30d7\u30ed\u30d5\u30a1\u30a4\u30e9 \u306e1\u3064\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002Linux \u3067\u3042\u308c\u3070\u3001 perf \u3084 Callgrind \u306e\u3088\u3046\u306aC/C++ \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u53ef\u80fd\u306a\u4ed5\u7d44\u307f\u304c\u5927\u62b5\u306f\u52d5\u4f5c\u3059\u308b\u3067\u3057\u3087\u3046\u3002Linux \u3068 macOS \u306e\u3069\u3061\u3089\u306b\u3057\u3066\u3082\u3001\u30c7\u30d0\u30c3\u30ac\u30fc\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u6700\u4e2d\u306b \"ctrl+c\" \u3067\u5272\u308a\u8fbc\u3093\u3067\u3001 gdb \u306e backtrace \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u3082\u3063\u3068\u3082\u3088\u304f\u51fa\u73fe\u3059\u308b\u3068\u3053\u308d\u304c\u30db\u30c3\u30c8\u30b9\u30dd\u30c3\u30c8\u3060\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002(\u3082\u3057\u304f\u306f\u3001 gdb poor man's profiler \u3092\u4f7f\u3063\u3066\u540c\u69d8\u306e\u3053\u3068\u3092\u3057\u305f\u308a\u3001macOS \u3067\u306f sample \u30b3\u30de\u30f3\u30c9\u304c\u4f7f\u3048\u307e\u3059) \u306a\u304a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u3092\u884c\u3046\u969b\u306f\u3001\u5fc5\u305a\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u969b\u3084\u5b9f\u884c\u6642\u306b --release \u30d5\u30e9\u30b0\u3092\u3064\u3051\u3066\u6700\u9069\u5316\u3092\u6709\u52b9\u306b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u65e9\u307e\u3063\u305f\u6700\u9069\u5316"},{"location":"guides/performance.html#_3","text":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u3067\u5b9f\u65bd\u53ef\u80fd\u306a\u4e00\u756a\u826f\u3044\u6700\u9069\u5316\u306f\u3001\u4f59\u5206\u306a/\u7121\u7528\u306a\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u3092\u907f\u3051\u308b\u3053\u3068\u3067\u3059\u3002\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u306f \u30af\u30e9\u30b9 \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3067\u8d77\u304d\u3001\u7d50\u679c\u3068\u3057\u3066\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 \u69cb\u9020\u4f53 \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u30b9\u30bf\u30c3\u30af\u30e1\u30e2\u30ea \u304c\u4f7f\u7528\u3055\u308c\u308b\u306e\u3067\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u306e\u30da\u30ca\u30eb\u30c6\u30a3\u767a\u751f\u3057\u307e\u305b\u3093\u3002\u30b9\u30bf\u30c3\u30af\u30e1\u30e2\u30ea\u3068\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u306e\u9055\u3044\u304c\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001 \u3053\u3053\u3092\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044 \u3002 \u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u306f\u4f4e\u901f\u3067\u3001\u5f8c\u3005\u305d\u306e\u30e1\u30e2\u30ea\u3092\u89e3\u653e\u3059\u308b\u30ac\u30fc\u30d9\u30b8\u30b3\u30ec\u30af\u30bf\uff08GC\uff09\u306b\u8ca0\u8377\u3092\u304b\u3051\u307e\u3059\u3002 \u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u3092\u56de\u907f\u3059\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u305d\u306e\u3088\u3046\u306b\u30c7\u30b6\u30a4\u30f3\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u53c2\u8003\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002","title":"\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u3092\u907f\u3051\u308b"},{"location":"guides/performance.html#io","text":"\u6570\u5024\u3092\u6a19\u6e96\u51fa\u529b\u3078\u66f8\u304d\u51fa\u3059\u969b\u306b\u306f\u3053\u3046\u66f8\u304d\u307e\u3059\u3002 puts 123 \u3053\u3046\u3057\u305f\u969b\u3001\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u306f\u3001 to_s \u3084\u305d\u308c\u306b\u985e\u3059\u308b\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6587\u5b57\u5217\u8868\u73fe\u306b\u5909\u63db\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u300d\u3092\u5b9f\u884c\u3057\u3001\u305d\u306e\u6587\u5b57\u5217\u3092\u6a19\u6e96\u51fa\u529b\u3078\u66f8\u304d\u3093\u3067\u3044\u307e\u3059\u3002\u305d\u3046\u3057\u305f\u65b9\u6cd5\u3067\u3082\u52d5\u4f5c\u306f\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u305f\u3081\u306b\u306f\u66f8\u304d\u8fbc\u3093\u3060\u3089\u5ec3\u68c4\u3059\u308b\u3060\u3051\u306e\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u304c\u3001\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u4e0a\u306b\u751f\u6210\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u304c\u767a\u751f\u3057\u3001GC\u306b\u3061\u3087\u3063\u3068\u3057\u305f\u8ca0\u8377\u304c\u304b\u304b\u308a\u307e\u3059\u3002 Crystal\u3067\u306f\u3001 puts \u306f\u305d\u308c\u305e\u308c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e to_s(io) \u306b\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6587\u5b57\u5217\u8868\u73fe\u3092\u66f8\u304d\u51fa\u3057\u305f\u3044IO\u3092\u6e21\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002 \u3067\u3059\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u306f\u6c7a\u3057\u3066\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002 puts 123 . to_s \u3053\u308c\u3067\u306f\u3001\u308f\u3056\u308f\u3056\u4e2d\u9593\u6587\u5b57\u5217\u3092\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u5e38\u306bIO\u3078\u76f4\u63a5\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 \u72ec\u81ea\u306e\u578b\u3092\u66f8\u304f\u5834\u5408\u306f\u3001\u5fc5\u305a to_s \u3067\u306f\u306a\u304f to_s(io) \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3001\u305d\u306e\u4e2d\u3067\u3082\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class MyClass # \u826f\u3044\u65b9\u6cd5 def to_s ( io ) # \u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u305b\u305a\u306b \"1, 2\" \u3092 IO \u306b\u8ffd\u52a0\u3059\u308b x = 1 y = 2 io << x << \", \" << y end # \u826f\u304f\u306a\u3044\u65b9\u6cd5 def to_s ( io ) x = 1 y = 2 # \u6587\u5b57\u5217\u306e\u5f0f\u5c55\u958b\u306b\u3088\u308a\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u3066\u3044\u308b # \u3053\u308c\u306f\u907f\u3051\u308b\u3079\u304d io << \" #{ x } , #{ y } \" end end \u300c\u4e2d\u9593\u6587\u5b57\u5217\u3092\u8fd4\u3059\u306e\u3067\u306f\u306a\u304fIO\u306b\u8ffd\u52a0\u3059\u308b\u300d\u3068\u3044\u3046\u3053\u306e\u54f2\u5b66\u306f\u3001\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u6271\u3046\u3088\u308a\u3082\u7d50\u679c\u7684\u306b\u826f\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u6226\u7565\u3092\u3042\u306a\u305f\u81ea\u8eab\u306eAPI\u5b9a\u7fa9\u3067\u3082\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5b9f\u884c\u6642\u9593\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 io_benchmark.cr require \"benchmark\" io = IO :: Memory . new Benchmark . ips do | x | x . report ( \"without to_s\" ) do io << 123 io . clear end x . report ( \"with to_s\" ) do io << 123 . to_s io . clear end end ``` \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 ``` console $ crystal run -- release io_benchmark . cr without to_s 77.11 M ( 12.97 ns ) ( \u00b1 1.05 % ) fastest with to_s 18.15 M ( 55.09 ns ) ( \u00b1 7.99 % ) 4.25 \u00d7 slower \u5e38\u306b\u5fd8\u308c\u3066\u306a\u3089\u306a\u3044\u306e\u306f\u3001\u3053\u308c\u304c\u5358\u306b\u5b9f\u884c\u6642\u9593\u304c\u77ed\u7e2e\u3057\u305f\u3068\u3044\u3046\u3060\u3051\u3067\u306a\u304f\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u524a\u6e1b\u3068\u3044\u3046\u9762\u3067\u3082\u52b9\u679c\u304c\u3042\u308b\u3068\u8a00\u3046\u3053\u3068\u3067\u3059\u3002","title":"IO\u306b\u66f8\u304d\u8fbc\u3080\u969b\u306b\u4e2d\u9593\u7684\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u306a\u3044"},{"location":"guides/performance.html#_4","text":"\u3057\u3070\u3057\u3070\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3068\u4ed6\u306e\u5024\u3068\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u6587\u5b57\u5217\u3092\u76f4\u63a5\u69cb\u7bc9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u306e\u69cb\u7bc9\u3067\u306f\u3001 String#+(String) \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u6587\u5b57\u5217\u3092\u7d50\u5408\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u4e2d\u306b\u5f0f\u3092\u57cb\u3081\u8fbc\u3081\u308b \u6587\u5b57\u5217\u306e\u5f0f\u5c55\u958b \u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\u3002 \"Hello, #{name}\" \u306e\u65b9\u304c\u3001 \"Hello, \" + name.to_s \u3088\u308a\u3082\u826f\u3044\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002 \u5f0f\u5c55\u958b\u3092\u542b\u3080\u6587\u5b57\u5217\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066IO\u3078\u8ffd\u52a0\u3059\u308b\u5f62\u306b\u5909\u63db\u3055\u308c\u3001\u4e2d\u9593\u6587\u5b57\u5217\u306e\u751f\u6210\u3092\u81ea\u52d5\u7684\u306b\u56de\u907f\u3057\u307e\u3059\u3002\u4e0a\u306e\u4f8b\u306f\u3053\u306e\u3088\u3046\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 String . build do | io | io << \"Hello, \" << name end","title":"\u6587\u5b57\u5217\u306e\u7d50\u5408\u3067\u306f\u306a\u304f\u5f0f\u5c55\u958b\u3092\u4f7f\u3046"},{"location":"guides/performance.html#io_1","text":"\u6587\u5b57\u5217\u306e\u69cb\u7bc9\u306b\u306f\u3001\u4e2d\u9593\u7684\u306a IO::Memory \u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u6587\u5b57\u5217\u69cb\u7bc9\u306b\u6700\u9069\u5316\u3055\u308c\u305f String.build \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 require \"benchmark\" Benchmark . ips do | bm | bm . report ( \"String.build\" ) do String . build do | io | 99 . times do io << \"hello world\" end end end bm . report ( \"IO::Memory\" ) do io = IO :: Memory . new 99 . times do io << \"hello world\" end io . to_s end end \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 $ crystal run --release str_benchmark.cr String.build 597.57k ( 1.67\u00b5s) (\u00b1 5.52%) fastest IO::Memory 423.82k ( 2.36\u00b5s) (\u00b1 3.76%) 1.41\u00d7 slower","title":"\u6587\u5b57\u5217\u306e\u69cb\u7bc9\u306bIO\u306e\u5272\u308a\u5f53\u3066\u3092\u907f\u3051\u308b"},{"location":"guides/performance.html#_5","text":"\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 lines_with_language_reference = 0 while line = gets if [ \"crystal\" , \"ruby\" , \"java\" ]. any? { | string | line . includes? ( string ) } lines_with_language_reference += 1 end end puts \"Lines that mention crystal, ruby or java: #{ lines_with_language_reference } \" \u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3061\u3083\u3093\u3068\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u7e70\u308a\u8fd4\u3057\u306e\u305f\u3073\u306b [\"crystal\", \"ruby\", \"java\"] \u3092\u65b0\u3057\u3044\u914d\u5217\u3068\u3057\u3066\u751f\u6210\u3059\u308b\u3068\u3044\u3046\u5927\u304d\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u307e\u3059\u3002\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u65b0\u3057\u3044\u914d\u5217\u3092\u4f5c\u6210\u3057\u3066\u305d\u3053\u306b\u5024\u3092\u3044\u304f\u3064\u304b\u8ffd\u52a0\u3059\u308b\u3068\u3044\u3046\u51e6\u7406\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3067\u3057\u304b\u306a\u3044\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u305d\u306e\u305f\u3081\u3001\u3053\u3053\u3067\u306f\u4f55\u5ea6\u3082\u4f55\u5ea6\u3082\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f2\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 \u30bf\u30d7\u30eb\u3092\u4f7f\u3046\u3002\u4e0a\u8a18\u30d7\u30ed\u30b0\u30e9\u30e0\u3067 {\"crystal\", \"ruby\", \"java\"} \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u540c\u3058\u3088\u3046\u306b\u3061\u3083\u3093\u3068\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u30bf\u30d7\u30eb\u306f\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u3092\u3064\u304b\u308f\u306a\u3044\u305f\u3081\u3001\u3088\u308a\u9ad8\u901f\u3067\u30e1\u30e2\u30ea\u6d88\u8cbb\u304c\u5c11\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5bfe\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6700\u9069\u5316\u3059\u308b\u3088\u308a\u591a\u304f\u306e\u6a5f\u4f1a\u3092\u63d0\u4f9b\u3067\u304d\u307e\u3059\u3002 lines_with_language_reference = 0 while line = gets if { \"crystal\" , \"ruby\" , \"java\" } . any? { | string | line . includes? ( string ) } lines_with_language_reference += 1 end end puts \"Lines that mention crystal, ruby or java: #{ lines_with_language_reference } \" \u914d\u5217\u3092\u5b9a\u6570\u306b\u3059\u308b LANGS = [ \"crystal\" , \"ruby\" , \"java\" ] lines_with_language_reference = 0 while line = gets if LANGS . any? { | string | line . includes? ( string ) } lines_with_language_reference += 1 end end puts \"Lines that mention crystal, ruby or java: #{ lines_with_language_reference } \" \u30bf\u30d7\u30eb\u3092\u4f7f\u7528\u3059\u308b\u65b9\u304c\u63a8\u5968\u3055\u308c\u308b\u65b9\u6cd5\u3067\u3059\u3002 \u30eb\u30fc\u30d7\u5185\u3067\u306e\u660e\u793a\u7684\u306b\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3046\u3053\u3068\u306f\u3001\u4e00\u6642\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u751f\u6210\u3055\u308c\u308b\u72b6\u6cc1\u306e1\u3064\u306e\u3067\u3059\u304c\u3001\u4e00\u6642\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066\u3082\u751f\u6210\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 Hash#keys \u306f\u5b9f\u884c\u3055\u308c\u308b\u305f\u3073\u306b\u30ad\u30fc\u3092\u542b\u3080\u65b0\u3057\u3044\u914d\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b Hash#each_key \u3084 Hash#has_key? \u3068\u3044\u3063\u305f\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\u3002","title":"\u4f55\u5ea6\u3082\u4f55\u5ea6\u3082\u4e00\u6642\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u306a\u3044"},{"location":"guides/performance.html#_6","text":"\u72ec\u81ea\u306e\u578b\u3092 \u30af\u30e9\u30b9 \u3067\u306f\u306a\u304f \u69cb\u9020\u4f53 \u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u3088\u308a\u3082\u4f4e\u8ca0\u8377\u3067GC\u306b\u8ca0\u62c5\u3082\u304b\u3051\u306a\u3044\u30b9\u30bf\u30c3\u30af\u30e1\u30e2\u30ea\u4e0a\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u3044\u3064\u3067\u3082\u69cb\u9020\u4f53\u3092\u4f7f\u3048\u3070\u826f\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002struct \u306f\u5024\u6e21\u3057\u3055\u308c\u308b\u306e\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u305f\u69cb\u9020\u4f53\u304c\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u5909\u66f4\u3055\u308c\u305f\u5834\u5408\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u5074\u304c\u305d\u306e\u5909\u66f4\u3092\u611f\u77e5\u3067\u304d\u305a\u3001\u30d0\u30b0\u306e\u6e29\u5e8a\u3068\u306a\u308a\u3048\u307e\u3059\u3002\u69cb\u9020\u4f53\u306f\u4e0d\u5909\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u7279\u306b\u305d\u308c\u304c\u5c0f\u3055\u3044\u5834\u5408\u306b\u306e\u307f\u4f7f\u7528\u3059\u308b\u306e\u304c\u6700\u9069\u306a\u65b9\u6cd5\u3067\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 !!!example \"class_vs_struct.cr' require \"benchmark\" class PointClass getter x getter y def initialize ( @x : Int32 , @y : Int32 ) end end struct PointStruct getter x getter y def initialize ( @x : Int32 , @y : Int32 ) end end Benchmark . ips do | x | x . report ( \"class\" ) { PointClass . new ( 1 , 2 ) } x . report ( \"struct\" ) { PointStruct . new ( 1 , 2 ) } end ``` \u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 ``` console $ crystal run -- release class_vs_struct . cr class 28.17 M ( \u00b1 2.86 % ) 15.29 \u00d7 slower struct 430.82 M ( \u00b1 6.58 % ) fastest","title":"\u53ef\u80fd\u306a\u5834\u5408\u306b\u306f\u69cb\u9020\u4f53\u3092\u4f7f\u7528\u3059\u308b"},{"location":"guides/performance.html#_7","text":"Crystal\u306e\u6587\u5b57\u5217\u306fUTF-8\u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002UTF-8\u306f\u53ef\u5909\u9577\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3001\u30a2\u30b9\u30ad\u30fc\u6587\u5b57\u306e\u7bc4\u56f2\u3067\u306f1\u6587\u5b57\u30921\u30d0\u30a4\u30c8\u3067\u8868\u73fe\u3057\u307e\u3059\u304c\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u30701\u6587\u5b57\u3092\u8907\u6570\u30d0\u30a4\u30c8\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001 String#[] \u306f\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u793a\u3059\u5834\u6240\u306e\u6587\u5b57\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306b\u6bce\u56de\u30d0\u30a4\u30c8\u30c7\u30fc\u30bf\u3092\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u3053\u306e\u51e6\u7406\u306f O(1) \u30aa\u30fc\u30c0\u30fc\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u3046\u3057\u305f\u5834\u5408\u306bCrystal\u306e String \u306f\u6700\u9069\u5316\u3092\u884c\u3063\u3066\u3044\u3066\u3001\u6587\u5b57\u5217\u306bASCII\u6587\u5b57\u3057\u304b\u542b\u307e\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001 String#[] \u3092 O(1) \u30aa\u30fc\u30c0\u30fc\u3067\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u4e00\u822c\u7684\u306b\u305d\u3046\u3044\u3063\u305f\u72b6\u6cc1\u306f\u7a00\u3067\u3059\u3002 \u3053\u3046\u3057\u305f\u7406\u7531\u304b\u3089\u3001\u6587\u5b57\u5217\u306b\u5bfe\u3059\u308b\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u306f\u52b9\u7387\u7684\u3068\u306f\u3044\u3048\u305a\u3001\u5b9f\u969b O(n^2) \u30aa\u30fc\u30c0\u30fc\u306e\u8907\u96d1\u6027\u3092\u6709\u3057\u3066\u3044\u307e\u3059\u3002 string = \"foo\" while i < string . size char = string [ i ] # ... end \u5b9f\u306f\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3001\u300c\u6587\u5b57\u5217\u306e size \uff08\u6587\u5b57\u6570\uff09\u304c\u5358\u7d14\u306b bytesize \uff08\u30d0\u30a4\u30c8\u6570\uff09\u304b\u3089\u306f\u5f97\u3089\u308c\u306a\u3044\u305f\u3081\u3001\u305d\u306e\u8a08\u7b97\u306b\u3082\u6642\u9593\u304c\u304b\u304b\u308b\u300d\u3068\u3044\u30462\u3064\u76ee\u306e\u554f\u984c\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002 \u3057\u304b\u3057\u3001String\u306e\u6587\u5b57\u6570\u306f\u4e00\u5ea6\u8a08\u7b97\u3055\u308c\u308b\u3068\u305d\u306e\u5024\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\uff08\u306e\u3067\u7e70\u308a\u8fd4\u3057\u306b\u3088\u308b\u30c7\u30e1\u30ea\u30c3\u30c8\u306f\u9650\u5b9a\u7684\u3067\u3059\uff09\u3002 \u3053\u306e\u5834\u5408\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u624b\u6bb5\u306f\u3001\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u7528\u306e\u30e1\u30bd\u30c3\u30c9\uff08 each_char \u3084 each_byte \u3001 each_codepoint \u306a\u3069\uff09\u306e\u3044\u305a\u308c\u304b\u3092\u4f7f\u7528\u3059\u308b\u304b\u3001\u3088\u308a\u4f4e\u30ec\u30d9\u30eb\u306e Char::Reader \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3059\u3002 each_char \u3092\u4f7f\u7528\u3057\u305f\u4f8b\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002 string = \"foo\" string . each_char do | char | # ... end","title":"\u6587\u5b57\u5217\u306b\u5bfe\u3059\u308b\u7e70\u308a\u8fd4\u3057\u51e6\u7406"},{"location":"guides/static_linking.html","text":"Static Linking Crystal supports static linking, i.e. it can link a binary with static libraries so that these libraries don't need to be available as runtime dependencies. Static linking can be enabled using the --static compiler flag. See the usage instructions in the language reference. When --static is given, linking static libraries is enabled, but it's not exclusive. The produced binary won't be fully static linked if the dynamic version of a library is higher in the compiler's library lookup chain than the static variant (or if the static library is entirely missing). In order to build a static binary you need to make sure that static versions of the linked libraries are available and the compiler can find them. \u30b3\u30f3\u30d1\u30a4\u30e9\u306f CRYSTAL_LIBRARY_PATH \u3068\u3044\u3046\u74b0\u5883\u5909\u6570\u3092\u3001\u9759\u7684\u3082\u3057\u304f\u306f\u52d5\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6700\u521d\u306b\u63a2\u7d22\u3059\u308b\u5834\u6240\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3082\u6709\u52b9\u306a\u3001\u9759\u7684\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u306b\u4f7f\u3048\u307e\u3059\u3002 Not all libraries work well with being statically linked, so there may be some issues. openssl for example is known for complications, as well as glibc (see Fully Static Linking ). Some package managers provide specific packages for static libraries, where foo provides the dynamic library and foo-static for example provides the static library. Sometimes static libraries are also included in development packages. Fully Static Linking A fully statically linked program has no dynamic library dependencies at all. Prominent examples of fully statically linked Crystal programs are the crystal and shards binaries from the official distribution packages. In order to link a program fully statically, all dependencies need to be available as static libraries at compiler time. This can be tricky sometimes, especially with common libc libraries. Linux glibc glibc is the most common libc implementation on Linux systems. Unfortunately, it doesn't play nicely with static linking and it's highly discouraged. Instead, static linking against musl-libc is the recommended option on Linux. Since it's statically linked, a binary linked against musl-libc will also run on a glibc system. That's the entire point of it. musl-libc musl-libc is a clean, efficient libc implementation with excellent static linking support. The recommended way to build a statically linked Crystal program is Alpine Linux , a minimal Linux distribution based on musl-libc . Official Docker Images based on Alpine Linux are available on Docker Hub at crystallang/crystal . The latest release is tagged as crystallang/crystal:latest-alpine . The Dockerfile source is available at crystal-lang/distribution-scripts . With pre-installed crystal compiler, shards , and static libraries of all of stdlib's dependencies these Docker images allow to easily build static Crystal binaries even from glibc -based systems. The official Crystal compiler builds for Linux are created using these images. Here's an example how the Docker image can be used to build a statically linked Hello World program: $ echo 'puts \"Hello World!\"' > hello-world.cr $ docker run --rm -it -v $( pwd ) :/workspace -w /workspace crystallang/crystal:latest-alpine \\ crystal build hello-world.cr --static $ ./hello-world Hello World! $ ldd hello-world statically linked Alpine\u2019s package manager APK is als easy to work with to install static libraries. Available packages can be found at pkgs.alpinelinux.org . macOS macOS doesn't officially support fully static linking because the required system libraries are not available as static libraries.","title":"\u9759\u7684\u30ea\u30f3\u30af"},{"location":"guides/static_linking.html#static-linking","text":"Crystal supports static linking, i.e. it can link a binary with static libraries so that these libraries don't need to be available as runtime dependencies. Static linking can be enabled using the --static compiler flag. See the usage instructions in the language reference. When --static is given, linking static libraries is enabled, but it's not exclusive. The produced binary won't be fully static linked if the dynamic version of a library is higher in the compiler's library lookup chain than the static variant (or if the static library is entirely missing). In order to build a static binary you need to make sure that static versions of the linked libraries are available and the compiler can find them. \u30b3\u30f3\u30d1\u30a4\u30e9\u306f CRYSTAL_LIBRARY_PATH \u3068\u3044\u3046\u74b0\u5883\u5909\u6570\u3092\u3001\u9759\u7684\u3082\u3057\u304f\u306f\u52d5\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6700\u521d\u306b\u63a2\u7d22\u3059\u308b\u5834\u6240\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3082\u6709\u52b9\u306a\u3001\u9759\u7684\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u306b\u4f7f\u3048\u307e\u3059\u3002 Not all libraries work well with being statically linked, so there may be some issues. openssl for example is known for complications, as well as glibc (see Fully Static Linking ). Some package managers provide specific packages for static libraries, where foo provides the dynamic library and foo-static for example provides the static library. Sometimes static libraries are also included in development packages.","title":"Static Linking"},{"location":"guides/static_linking.html#fully-static-linking","text":"A fully statically linked program has no dynamic library dependencies at all. Prominent examples of fully statically linked Crystal programs are the crystal and shards binaries from the official distribution packages. In order to link a program fully statically, all dependencies need to be available as static libraries at compiler time. This can be tricky sometimes, especially with common libc libraries.","title":"Fully Static Linking"},{"location":"guides/static_linking.html#linux","text":"","title":"Linux"},{"location":"guides/static_linking.html#glibc","text":"glibc is the most common libc implementation on Linux systems. Unfortunately, it doesn't play nicely with static linking and it's highly discouraged. Instead, static linking against musl-libc is the recommended option on Linux. Since it's statically linked, a binary linked against musl-libc will also run on a glibc system. That's the entire point of it.","title":"glibc"},{"location":"guides/static_linking.html#musl-libc","text":"musl-libc is a clean, efficient libc implementation with excellent static linking support. The recommended way to build a statically linked Crystal program is Alpine Linux , a minimal Linux distribution based on musl-libc . Official Docker Images based on Alpine Linux are available on Docker Hub at crystallang/crystal . The latest release is tagged as crystallang/crystal:latest-alpine . The Dockerfile source is available at crystal-lang/distribution-scripts . With pre-installed crystal compiler, shards , and static libraries of all of stdlib's dependencies these Docker images allow to easily build static Crystal binaries even from glibc -based systems. The official Crystal compiler builds for Linux are created using these images. Here's an example how the Docker image can be used to build a statically linked Hello World program: $ echo 'puts \"Hello World!\"' > hello-world.cr $ docker run --rm -it -v $( pwd ) :/workspace -w /workspace crystallang/crystal:latest-alpine \\ crystal build hello-world.cr --static $ ./hello-world Hello World! $ ldd hello-world statically linked Alpine\u2019s package manager APK is als easy to work with to install static libraries. Available packages can be found at pkgs.alpinelinux.org .","title":"musl-libc"},{"location":"guides/static_linking.html#macos","text":"macOS doesn't officially support fully static linking because the required system libraries are not available as static libraries.","title":"macOS"},{"location":"guides/testing.html","text":"Testing Crystal Code Crystal comes with a fully-featured spec library in the Spec module . It provides a structure for writing executable examples of how your code should behave. Inspired by Rspec , it includes a domain specific language (DSL) that allows you to write examples in a way similar to plain english. A basic spec looks something like this: require \"spec\" describe Array do describe \"#size\" do it \"correctly reports the number of elements in the Array\" do [ 1 , 2 , 3 ]. size . should eq 3 end end describe \"#empty?\" do it \"is true when no elements are in the array\" do ( [] of Int32 ) . empty? . should be_true end it \"is false if there are elements in the array\" do [ 1 ]. empty? . should be_false end end end Anatomy of a spec file To use the spec module and DSL, you need to add require \"spec\" to your spec files. Many projects use a custom spec helper which organizes these includes. Concrete test cases are defined in it blocks. An optional (but strongly recommended) descriptive string states it's purpose and a block contains the main logic performing the test. Test cases that have been defined or outlined but are not yet expected to work can be defined using pending instead of it . They will not be run but show up in the spec report as pending. An it block contains an example that should invoke the code to be tested and define what is expected of it. Each example can contain multiple expectations, but it should test only one specific behaviour. When spec is included, every object has the instance methods #should and #should_not . These methods are invoked on the value being tested with an expectation as argument. If the expectation is met, code execution continues. Otherwise the example has failed and other code in this block will not be executed. In test files, specs are structured by example groups which are defined by describe and context sections. Typically a top level describe defines the outer unit (such as a class) to be tested by the spec. Further describe sections can be nested within the outer unit to specify smaller units under test (such as individual methods). For unit tests, it is recommended to follow the conventions for method names: Outer describe is the name of the class, inner describe targets methods. Instance methods are prefixed with # , class methods with . . To establish certain contexts - think empty array versus array with elements - the context method may be used to communicate this to the reader. It has a different name, but behaves exactly like describe . describe and context take a description as argument (which should usually be a string) and a block containing the individual specs or nested groupings. Expectations Expectations define if the value being tested ( actual ) matches a certain value or specific criteria. Equivalence, Identity and Type There are methods to create expectations which test for equivalence ( eq ), identity ( be ), type ( be_a ), and nil ( be_nil ). Note that the identity expectation uses .same? which tests if #object_id are identical. This is only true if the expected value points to the same object instead of an equivalent one . This is only possible for reference types and won't work for value types like structs or numbers. actual . should eq ( expected ) # passes if actual == expected actual . should be ( expected ) # passes if actual.same?(expected) actual . should be_a ( expected ) # passes if actual.is_a?(expected) actual . should be_nil # passes if actual.nil? Truthiness actual . should be_true # passes if actual == true actual . should be_false # passes if actual == false actual . should be_truthy # passes if actual is truthy (neither nil nor false nor Pointer.null) actual . should be_falsey # passes if actual is falsey (nil, false or Pointer.null) Comparisons actual . should be < expected # passes if actual < expected actual . should be <= expected # passes if actual <= expected actual . should be > expected # passes if actual > expected actual . should be >= expected # passes if actual >= expected Other matchers actual . should be_close ( expected , delta ) # passes if actual is within delta of expected: # (actual - expected).abs <= delta actual . should contain ( expected ) # passes if actual.includes?(expected) actual . should match ( expected ) # passes if actual =~ expected Expecting errors These matchers run a block and pass if it raises a certain exception. expect_raises ( MyError ) do # Passes if this block raises an exception of type MyError. end expect_raises ( MyError , \"error message\" ) do # Passes if this block raises an exception of type MyError # and the error message contains \"error message\". end expect_raises ( MyError , /error \\w{7}/ ) do # Passes if this block raises an exception of type MyError # and the error message matches the regular expression. end They return the rescued exception so it can be used for further expectations, for example to verify specific properties of the exception. Focusing on a group of specs describe , context and it blocks can be marked with focus: true , like this: it \"adds\" , focus : true do ( 2 + 2 ) . should_not eq ( 5 ) end If any such thing is marked with focus: true then only those examples will run. Tagging specs Tags can be used to group specs, allowing to only run a subset of specs when providing a --tag argument to the spec runner (see Using the compiler ). describe , context and it blocks can be tagged, like this: it \"is slow\" , tags : \"slow\" do sleep 60 true . should be ( true ) end it \"is fast\" , tags : \"fast\" do true . should be ( true ) end Tagging an example group ( describe or context ) extends to all of the contained examples. Multiple tags can be specified by giving an Enumerable , such as Array or Set . Running specs The Crystal compiler has a spec command with tools to constrain which examples get run and tailor the output. All specs of a project are compiled and executed through the command crystal spec . By convention, specs live in the spec/ directory of a project. Spec files must end with _spec.cr to be recognizable as such by the compiler command. You can compile and run specs from folder trees, individual files, or specific lines in a file. If the specified line is the beginning of a describe or context section, all specs inside that group are run. The default formatter outputs the file and line style command for failing specs which makes it easy to rerun just this individual spec. You can turn off colors with the switch --no-color . Randomizing order of specs Specs, by default, run in the order defined, but can be run in a random order by passing --order random to crystal spec . Specs run in random order will display a seed value upon completion. This seed value can be used to rerun the specs in that same order by passing the seed value to --order . Examples # Run all specs in files matching spec/**/*_spec.cr crystal spec # Run all specs in files matching spec/**/*_spec.cr without colors crystal spec --no-color # Run all specs in files matching spec/my/test/**/*_spec.cr crystal spec spec/my/test/ # Run all specs in spec/my/test/file_spec.cr crystal spec spec/my/test/file_spec.cr # Run the spec or group defined in line 14 of spec/my/test/file_spec.cr crystal spec spec/my/test/file_spec.cr:14 # Run all specs tagged with \"fast\" crystal spec --tag 'fast' # Run all specs not tagged with \"slow\" crystal spec --tag '~slow' Spec helper Many projects use a custom spec helper file, usually named spec/spec_helper.cr . This file is used to require spec and other includes like code from the project needed for every spec file. This is also a good place to define global helper methods that make writing specs easier and avoid code duplication. spec/spec_helper.cr ```crystal require \"spec\" require \"../src/my_project.cr\" def create_test_object(name) project = MyProject.new(option: false) object = project.create_object(name) object end ``` spec/my_project_spec.cr ```crystal require \"./spec_helper\" describe \"MyProject::Object\" do it \"is created\" do object = create_test_object(name) object.should_not be_nil end end ```","title":"\u30c6\u30b9\u30c8"},{"location":"guides/testing.html#testing-crystal-code","text":"Crystal comes with a fully-featured spec library in the Spec module . It provides a structure for writing executable examples of how your code should behave. Inspired by Rspec , it includes a domain specific language (DSL) that allows you to write examples in a way similar to plain english. A basic spec looks something like this: require \"spec\" describe Array do describe \"#size\" do it \"correctly reports the number of elements in the Array\" do [ 1 , 2 , 3 ]. size . should eq 3 end end describe \"#empty?\" do it \"is true when no elements are in the array\" do ( [] of Int32 ) . empty? . should be_true end it \"is false if there are elements in the array\" do [ 1 ]. empty? . should be_false end end end","title":"Testing Crystal Code"},{"location":"guides/testing.html#anatomy-of-a-spec-file","text":"To use the spec module and DSL, you need to add require \"spec\" to your spec files. Many projects use a custom spec helper which organizes these includes. Concrete test cases are defined in it blocks. An optional (but strongly recommended) descriptive string states it's purpose and a block contains the main logic performing the test. Test cases that have been defined or outlined but are not yet expected to work can be defined using pending instead of it . They will not be run but show up in the spec report as pending. An it block contains an example that should invoke the code to be tested and define what is expected of it. Each example can contain multiple expectations, but it should test only one specific behaviour. When spec is included, every object has the instance methods #should and #should_not . These methods are invoked on the value being tested with an expectation as argument. If the expectation is met, code execution continues. Otherwise the example has failed and other code in this block will not be executed. In test files, specs are structured by example groups which are defined by describe and context sections. Typically a top level describe defines the outer unit (such as a class) to be tested by the spec. Further describe sections can be nested within the outer unit to specify smaller units under test (such as individual methods). For unit tests, it is recommended to follow the conventions for method names: Outer describe is the name of the class, inner describe targets methods. Instance methods are prefixed with # , class methods with . . To establish certain contexts - think empty array versus array with elements - the context method may be used to communicate this to the reader. It has a different name, but behaves exactly like describe . describe and context take a description as argument (which should usually be a string) and a block containing the individual specs or nested groupings.","title":"Anatomy of a spec file"},{"location":"guides/testing.html#expectations","text":"Expectations define if the value being tested ( actual ) matches a certain value or specific criteria.","title":"Expectations"},{"location":"guides/testing.html#equivalence-identity-and-type","text":"There are methods to create expectations which test for equivalence ( eq ), identity ( be ), type ( be_a ), and nil ( be_nil ). Note that the identity expectation uses .same? which tests if #object_id are identical. This is only true if the expected value points to the same object instead of an equivalent one . This is only possible for reference types and won't work for value types like structs or numbers. actual . should eq ( expected ) # passes if actual == expected actual . should be ( expected ) # passes if actual.same?(expected) actual . should be_a ( expected ) # passes if actual.is_a?(expected) actual . should be_nil # passes if actual.nil?","title":"Equivalence, Identity and Type"},{"location":"guides/testing.html#truthiness","text":"actual . should be_true # passes if actual == true actual . should be_false # passes if actual == false actual . should be_truthy # passes if actual is truthy (neither nil nor false nor Pointer.null) actual . should be_falsey # passes if actual is falsey (nil, false or Pointer.null)","title":"Truthiness"},{"location":"guides/testing.html#comparisons","text":"actual . should be < expected # passes if actual < expected actual . should be <= expected # passes if actual <= expected actual . should be > expected # passes if actual > expected actual . should be >= expected # passes if actual >= expected","title":"Comparisons"},{"location":"guides/testing.html#other-matchers","text":"actual . should be_close ( expected , delta ) # passes if actual is within delta of expected: # (actual - expected).abs <= delta actual . should contain ( expected ) # passes if actual.includes?(expected) actual . should match ( expected ) # passes if actual =~ expected","title":"Other matchers"},{"location":"guides/testing.html#expecting-errors","text":"These matchers run a block and pass if it raises a certain exception. expect_raises ( MyError ) do # Passes if this block raises an exception of type MyError. end expect_raises ( MyError , \"error message\" ) do # Passes if this block raises an exception of type MyError # and the error message contains \"error message\". end expect_raises ( MyError , /error \\w{7}/ ) do # Passes if this block raises an exception of type MyError # and the error message matches the regular expression. end They return the rescued exception so it can be used for further expectations, for example to verify specific properties of the exception.","title":"Expecting errors"},{"location":"guides/testing.html#focusing-on-a-group-of-specs","text":"describe , context and it blocks can be marked with focus: true , like this: it \"adds\" , focus : true do ( 2 + 2 ) . should_not eq ( 5 ) end If any such thing is marked with focus: true then only those examples will run.","title":"Focusing on a group of specs"},{"location":"guides/testing.html#tagging-specs","text":"Tags can be used to group specs, allowing to only run a subset of specs when providing a --tag argument to the spec runner (see Using the compiler ). describe , context and it blocks can be tagged, like this: it \"is slow\" , tags : \"slow\" do sleep 60 true . should be ( true ) end it \"is fast\" , tags : \"fast\" do true . should be ( true ) end Tagging an example group ( describe or context ) extends to all of the contained examples. Multiple tags can be specified by giving an Enumerable , such as Array or Set .","title":"Tagging specs"},{"location":"guides/testing.html#running-specs","text":"The Crystal compiler has a spec command with tools to constrain which examples get run and tailor the output. All specs of a project are compiled and executed through the command crystal spec . By convention, specs live in the spec/ directory of a project. Spec files must end with _spec.cr to be recognizable as such by the compiler command. You can compile and run specs from folder trees, individual files, or specific lines in a file. If the specified line is the beginning of a describe or context section, all specs inside that group are run. The default formatter outputs the file and line style command for failing specs which makes it easy to rerun just this individual spec. You can turn off colors with the switch --no-color .","title":"Running specs"},{"location":"guides/testing.html#randomizing-order-of-specs","text":"Specs, by default, run in the order defined, but can be run in a random order by passing --order random to crystal spec . Specs run in random order will display a seed value upon completion. This seed value can be used to rerun the specs in that same order by passing the seed value to --order .","title":"Randomizing order of specs"},{"location":"guides/testing.html#examples","text":"# Run all specs in files matching spec/**/*_spec.cr crystal spec # Run all specs in files matching spec/**/*_spec.cr without colors crystal spec --no-color # Run all specs in files matching spec/my/test/**/*_spec.cr crystal spec spec/my/test/ # Run all specs in spec/my/test/file_spec.cr crystal spec spec/my/test/file_spec.cr # Run the spec or group defined in line 14 of spec/my/test/file_spec.cr crystal spec spec/my/test/file_spec.cr:14 # Run all specs tagged with \"fast\" crystal spec --tag 'fast' # Run all specs not tagged with \"slow\" crystal spec --tag '~slow'","title":"Examples"},{"location":"guides/testing.html#spec-helper","text":"Many projects use a custom spec helper file, usually named spec/spec_helper.cr . This file is used to require spec and other includes like code from the project needed for every spec file. This is also a good place to define global helper methods that make writing specs easier and avoid code duplication. spec/spec_helper.cr ```crystal require \"spec\" require \"../src/my_project.cr\" def create_test_object(name) project = MyProject.new(option: false) object = project.create_object(name) object end ``` spec/my_project_spec.cr ```crystal require \"./spec_helper\" describe \"MyProject::Object\" do it \"is created\" do object = create_test_object(name) object.should_not be_nil end end ```","title":"Spec helper"},{"location":"guides/writing_shards.html","text":"shard \u306e\u4f5c\u308a\u65b9 \u3053\u3053\u3067\u306f Crystal \u306e shard \u306e\u4f5c\u308a\u65b9\u3068\u30ea\u30ea\u30fc\u30b9\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 shard \u3068\u306f\uff1f \u7c21\u5358\u306b\u8a00\u3046\u3068\u3001shard \u3068\u306f Crystal \u306e\u30b3\u30fc\u30c9\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3001\u4ed6\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u30b3\u30fc\u30c9\u3092\u5171\u6709\u3057\u305f\u308a\u4ed6\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u308a\u3067\u304d\u307e\u3059\u3002 \u8a73\u3057\u304f\u306f shards \u30b3\u30de\u30f3\u30c9 \u306e\u7ae0\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5c0e\u5165 \u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001 palindrome-example \u3068\u3044\u3046 Crystal \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308a\u307e\u3059\u3002 \u77e5\u3089\u306a\u3044\u65b9\u306e\u305f\u3081\u306b\u8aac\u660e\u3059\u308b\u3068\u3001palindrome (\u56de\u6587) \u3068\u3044\u3046\u306e\u306f\u524d\u304b\u3089\u8aad\u3093\u3067\u3082\u5f8c\u308d\u304b\u3089\u8aad\u3093\u3067\u3082\u540c\u3058\u306b\u306a\u308b\u3088\u3046\u306a\u8a9e\u306e\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 racecar \u3084 mom\u3001dad\u3001kayak\u3001madam \u306a\u3069\u306e\u5358\u8a9e\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 \u5fc5\u8981\u306a\u3082\u306e Crystal \u306e shard \u3092\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u305f\u3081\u306b\u3001\u305d\u3057\u3066\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u7d9a\u3051\u3066\u3044\u304f\u305f\u3081\u306b\u306f\u3001\u6b21\u306e\u3082\u306e\u304c\u5fc5\u8981\u3067\u3059\u3002 Crystal \u306e\u30b3\u30f3\u30d1\u30a4\u30e9 \u304c\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068 Git \u304c\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068 GitHub \u3082\u3057\u304f\u306f GitLab \u306e\u30a2\u30ab\u30a6\u30f3\u30c8 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210 Crystal \u306e\u30b3\u30f3\u30d1\u30a4\u30e9 \u306e init lib \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u6a19\u6e96\u7684\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3092\u6301\u3063\u305f Cryatal \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30bf\u30fc\u30df\u30ca\u30eb\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059: crystal init lib <YOUR-SHARD-NAME> \u4f8b: $ crystal init lib palindrome-example create palindrome-example/.gitignore create palindrome-example/.editorconfig create palindrome-example/LICENSE create palindrome-example/README.md create palindrome-example/.travis.yml create palindrome-example/shard.yml create palindrome-example/src/palindrome-example.cr create palindrome-example/src/palindrome-example/version.cr create palindrome-example/spec/spec_helper.cr create palindrome-example/spec/palindrome-example_spec.cr Initialized empty Git repository in /<YOUR-DIRECTORY>/.../palindrome-example/.git/ \u3053\u3046\u3057\u305f\u3089\u3001 cd \u3067\u4f5c\u3063\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4f8b: cd palindrome-example \u305d\u3057\u3066\u3001 add \u3068 commit \u3092\u3057\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u3092 Git \u306b\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 $ git add -A $ git commit -am \"First Commit\" [master (root-commit) 77bad84] First Commit 10 files changed, 102 insertions(+) create mode 100644 .editorconfig create mode 100644 .gitignore create mode 100644 .travis.yml create mode 100644 LICENSE create mode 100644 README.md create mode 100644 shard.yml create mode 100644 spec/palindrome-example_spec.cr create mode 100644 spec/spec_helper.cr create mode 100644 src/palindrome-example.cr create mode 100644 src/palindrome-example/version.cr \u30b3\u30fc\u30c9\u3092\u66f8\u304f \u3069\u3093\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3053\u3046\u3068\u3082\u81ea\u7531\u3067\u3059\u304c\u3001\u3069\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u304b\u306f\u3001\u305d\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u304a\u3046\u3068\u3057\u3066\u3044\u308b\u3001\u3082\u3057\u304f\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u4eba\u306b\u3068\u3063\u3066\u5f71\u97ff\u306e\u3042\u308b\u3053\u3068\u3067\u3059\u3002 \u30b3\u30fc\u30c9\u306e\u30c6\u30b9\u30c8 \u30b3\u30fc\u30c9\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002\u305d\u308c\u304c\u3059\u3079\u3066\u3067\u3059\u3002\u4eba\u3005 (\u3042\u306a\u305f\u3092\u542b\u3080) \u306b\u3068\u3063\u3066\u3001\u30c6\u30b9\u30c8\u3060\u3051\u304c\u3069\u306e\u3088\u3046\u306b\u6a5f\u80fd\u3059\u308b\u3082\u306e\u306a\u306e\u304b\u3092\u793a\u3059\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 Crystal \u306f \u30d3\u30eb\u30c8\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea \u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u30b3\u30e1\u30f3\u30c8\u3067\u30b3\u30fc\u30c9\u3092\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u308c\u304c\u3059\u3079\u3066\u3067\u3059\u3002private \u306a\u30e1\u30bd\u30c3\u30c9\u3067\u3082\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002 Crystal \u306f \u7d44\u307f\u8fbc\u307f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf \u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 crystal docs \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30fc\u30c9\u306e\u30b3\u30e1\u30f3\u30c8\u3092 API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002 /docs/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u3092 Web \u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304f\u3053\u3068\u3067\u3001\u751f\u6210\u3055\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u4ee5\u964d\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u751f\u6210\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092 GitHub \u3084 GitLab \u3067\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u65b9\u6cd5\u304c\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u305d\u306e\u5b58\u5728\u3092\u5831\u305b\u308b\u305f\u3081\u306b\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30d0\u30c3\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002GitLab \u3067\u306f\u4ee5\u964d\u3067\u8aac\u660e\u3059\u308b\u65b9\u6cd5\u3067\u3001\u3053\u306e\u30d0\u30c3\u30b8\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002GitHub \u3067\u306f README.md \u306b\u6b21\u306e\u3088\u3046\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 ( <LINK-TO-YOUR-DOCUMENTATION> \u3092\u81ea\u5206\u306e\u3082\u306e\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044 [![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](<LINK-TO-YOUR-DOCUMENTATION>) README \u3092\u66f8\u304f \u826f\u3044 README \u304c\u3042\u308b\u304b\u3069\u3046\u304b\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6210\u529f\u3092\u5de6\u53f3\u3057\u307e\u3059\u3002 Awesome README \u306f\u3053\u306e\u8a71\u984c\u306e\u7d20\u6674\u3089\u3057\u3044\u4f8b\u3084\u30ea\u30bd\u30fc\u30b9\u306e\u30ad\u30e5\u30ec\u30fc\u30c6\u30c3\u30c9\u30ea\u30b9\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u6700\u3082\u91cd\u8981\u306a\u3053\u3068\u3067\u3059\u304c\u3001README \u3067\u306f\u6b21\u306e\u3053\u3068\u304c\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002 \u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4f55\u306a\u306e\u304b \u4f55\u3092\u3059\u308b\u3082\u306e\u306a\u306e\u304b \u3069\u306e\u3088\u3046\u306b\u3057\u3066\u4f7f\u3046\u306e\u304b \u3053\u306e\u8aac\u660e\u306b\u306f\u3044\u304f\u3064\u304b\u306e\u4f8b\u3092\u9069\u5207\u306b\u7ae0\u7acb\u3066\u3057\u3066\u542b\u3081\u308b\u3079\u304d\u3067\u3059\u3002 Note Crystal \u306e\u751f\u6210\u3057\u305f README \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4e2d\u306e [your-github-name] \u3068\u3044\u3046\u90e8\u5206\u3092\u5b9f\u969b\u306e GitHub \u3082\u3057\u304f\u306fl GitLab \u306e\u30e6\u30fc\u30b6\u540d\u3067\u7f6e\u63db\u3059\u308b\u306e\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u307e\u305f GitLab \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001 github \u3092 gitlab \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb \u81ea\u8eab\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u6301\u3064\u3053\u3068\u306f\u826f\u3044\u3053\u3068\u3067\u3059\u304c\u3001 Crystal \u30c1\u30fc\u30e0\u306e\u6163\u7fd2\u7684\u306a\u30b9\u30bf\u30a4\u30eb \u306b\u5f93\u3046\u3053\u3068\u3067\u3001\u30b3\u30fc\u30c9\u306e\u4e00\u8cab\u6027\u3084\u53ef\u8aad\u6027\u3092\u4fdd\u3061\u3001\u4ed6\u306e\u958b\u767a\u8005\u306e\u7406\u89e3\u3057\u3084\u3059\u3044\u3082\u306e\u306b\u3067\u304d\u307e\u3059\u3002 Crystal \u7d44\u307f\u8fbc\u307f\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30bf \u3092\u6d3b\u7528\u3057\u3066\u3001\u3059\u3079\u3066\u306e .cr \u30d5\u30a1\u30a4\u30eb\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u307e\u3057\u3087\u3046\u3002 \u4f8b: crystal tool format --check \u3092\u30b3\u30de\u30f3\u30c9\u306e\u672b\u5c3e\u306b\u3064\u3051\u308b\u3053\u3068\u3067\u3001\u30b3\u30fc\u30c9\u304c\u6b63\u3057\u304f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\u3001\u8981\u3059\u308b\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u304c\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u306a\u3044\u3053\u3068\u3092\u78ba\u304b\u3081\u3089\u308c\u307e\u3059\u3002 \u4f8b: crystal tool format --check \u3053\u306e\u78ba\u8a8d\u3092 \u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 \u306e1\u30b9\u30c6\u30c3\u30d7\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 shard.yml \u3092\u66f8\u304f \u4ed5\u69d8\u66f8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306b\u5f93\u3044\u307e\u3057\u3087\u3046\u3002 \u540d\u524d shard.yml \u306e\u3067 name \u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u7c21\u6f54\u304b\u3064\u8aac\u660e\u7684\u306a\u3082\u306e\u306b\u3059\u3079\u304d\u3067\u3059\u3002 crystalshards.xyz \u3067\u691c\u7d22\u3057\u3066\u3001\u65e2\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u540d\u524d\u3067\u306a\u3044\u304b\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002 \u4f8b: name : palindrome-example \u8aac\u660e description \u3092 shard.yml \u306b\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002 description \u306f1\u884c\u306e\u8aac\u660e\u6587\u3067\u3001\u691c\u7d22\u306e\u969b\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002 description \u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u3079\u304d\u3067\u3059\u3002 \u6709\u76ca\u306a\u60c5\u5831\u3092\u542b\u3080 \u767a\u898b\u53ef\u80fd\u306a\u3082\u306e\u306b\u3059\u308b \u6700\u9069\u5316 \u898b\u3064\u3051\u3089\u308c\u308b\u3082\u306e\u3067\u306a\u3051\u308c\u3070\u3001\u8ab0\u3082\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5229\u7528\u3057\u306a\u3044\u3067\u3057\u3087\u3046\u3002 \u4eca\u306e\u3068\u3053\u308d\u3001 crystalshards.xyz \u306b Crystal \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u96c6\u7d04\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u3053\u3053\u306b\u5411\u3051\u3066\u6700\u9069\u5316\u3057\u307e\u3059\u3002 _\u7cbe\u78ba\u306a_\u6a5f\u80fd\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3059\u4eba\u3068\u3001_\u4e00\u822c\u7684\u306a_\u6a5f\u80fd\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3059\u4eba\u304c\u3044\u307e\u3059\u3002 \u4f8b\u3048\u3070 Bob \u306f\u56de\u6587\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5fc5\u8981\u3068\u3057\u3066\u3044\u3066\u3001\u4e00\u65b9\u3067 Felipe \u304c\u63a2\u3057\u3066\u3044\u308b\u306e\u306f\u30c6\u30ad\u30b9\u30c8\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001Susan \u304c\u63a2\u3057\u3066\u3044\u308b\u306e\u306f\u30b9\u30da\u30eb\u306b\u3064\u3044\u3066\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u3068\u3044\u3063\u305f\u3088\u3046\u306b\u3001\u3067\u3059\u3002 \u3053\u306e\u5834\u5408\u3001 name \u306b\u306f\u3059\u3067\u306b Bob \u306e\u63a2\u3057\u3066\u3044\u308b \"palindrome\" \u3068\u3044\u3046\u5358\u8a9e\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067 palindrome \u3068\u7e70\u308a\u8fd4\u3059\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u4ee3\u308f\u308a\u306b\u3001Susan \u306e\u63a2\u3057\u3066\u3044\u308b \"spelling\" \u3084 Felipe \u306e\u63a2\u3057\u3066\u3044\u308b \"text\" \u3068\u3044\u3063\u305f\u5358\u8a9e\u3092\u542b\u3081\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002 description : | A textual algorithm to tell if a word is spelled the same way forwards as it is backwards. \u30db\u30b9\u30c6\u30a3\u30f3\u30b0 \u3053\u3053\u304b\u3089\u306e\u30ac\u30a4\u30c9\u306f GitHub \u3067\u516c\u958b\u3059\u308b\u304b GitLab \u3067\u516c\u958b\u3059\u308b\u304b\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u304d\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u6240\u3067\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u305c\u3072\u30ac\u30a4\u30c9\u3092\u66f8\u3044\u3066\u3001\u3053\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u8ffd\u52a0\u3059\u308b\u3088\u3046\u8a00\u3063\u3066\u304f\u3060\u3055\u3044\u3002 GitHub \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5 GitLab \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5","title":"shard \u306e\u4f5c\u308a\u65b9"},{"location":"guides/writing_shards.html#shard","text":"\u3053\u3053\u3067\u306f Crystal \u306e shard \u306e\u4f5c\u308a\u65b9\u3068\u30ea\u30ea\u30fc\u30b9\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002","title":"shard \u306e\u4f5c\u308a\u65b9"},{"location":"guides/writing_shards.html#shard_1","text":"\u7c21\u5358\u306b\u8a00\u3046\u3068\u3001shard \u3068\u306f Crystal \u306e\u30b3\u30fc\u30c9\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3001\u4ed6\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u30b3\u30fc\u30c9\u3092\u5171\u6709\u3057\u305f\u308a\u4ed6\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u308a\u3067\u304d\u307e\u3059\u3002 \u8a73\u3057\u304f\u306f shards \u30b3\u30de\u30f3\u30c9 \u306e\u7ae0\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"shard \u3068\u306f\uff1f"},{"location":"guides/writing_shards.html#_1","text":"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001 palindrome-example \u3068\u3044\u3046 Crystal \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308a\u307e\u3059\u3002 \u77e5\u3089\u306a\u3044\u65b9\u306e\u305f\u3081\u306b\u8aac\u660e\u3059\u308b\u3068\u3001palindrome (\u56de\u6587) \u3068\u3044\u3046\u306e\u306f\u524d\u304b\u3089\u8aad\u3093\u3067\u3082\u5f8c\u308d\u304b\u3089\u8aad\u3093\u3067\u3082\u540c\u3058\u306b\u306a\u308b\u3088\u3046\u306a\u8a9e\u306e\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 racecar \u3084 mom\u3001dad\u3001kayak\u3001madam \u306a\u3069\u306e\u5358\u8a9e\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002","title":"\u5c0e\u5165"},{"location":"guides/writing_shards.html#_2","text":"Crystal \u306e shard \u3092\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u305f\u3081\u306b\u3001\u305d\u3057\u3066\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u7d9a\u3051\u3066\u3044\u304f\u305f\u3081\u306b\u306f\u3001\u6b21\u306e\u3082\u306e\u304c\u5fc5\u8981\u3067\u3059\u3002 Crystal \u306e\u30b3\u30f3\u30d1\u30a4\u30e9 \u304c\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068 Git \u304c\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068 GitHub \u3082\u3057\u304f\u306f GitLab \u306e\u30a2\u30ab\u30a6\u30f3\u30c8","title":"\u5fc5\u8981\u306a\u3082\u306e"},{"location":"guides/writing_shards.html#_3","text":"Crystal \u306e\u30b3\u30f3\u30d1\u30a4\u30e9 \u306e init lib \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u6a19\u6e96\u7684\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3092\u6301\u3063\u305f Cryatal \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30bf\u30fc\u30df\u30ca\u30eb\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059: crystal init lib <YOUR-SHARD-NAME> \u4f8b: $ crystal init lib palindrome-example create palindrome-example/.gitignore create palindrome-example/.editorconfig create palindrome-example/LICENSE create palindrome-example/README.md create palindrome-example/.travis.yml create palindrome-example/shard.yml create palindrome-example/src/palindrome-example.cr create palindrome-example/src/palindrome-example/version.cr create palindrome-example/spec/spec_helper.cr create palindrome-example/spec/palindrome-example_spec.cr Initialized empty Git repository in /<YOUR-DIRECTORY>/.../palindrome-example/.git/ \u3053\u3046\u3057\u305f\u3089\u3001 cd \u3067\u4f5c\u3063\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4f8b: cd palindrome-example \u305d\u3057\u3066\u3001 add \u3068 commit \u3092\u3057\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u3092 Git \u306b\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002 $ git add -A $ git commit -am \"First Commit\" [master (root-commit) 77bad84] First Commit 10 files changed, 102 insertions(+) create mode 100644 .editorconfig create mode 100644 .gitignore create mode 100644 .travis.yml create mode 100644 LICENSE create mode 100644 README.md create mode 100644 shard.yml create mode 100644 spec/palindrome-example_spec.cr create mode 100644 spec/spec_helper.cr create mode 100644 src/palindrome-example.cr create mode 100644 src/palindrome-example/version.cr","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210"},{"location":"guides/writing_shards.html#_4","text":"\u3069\u3093\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3053\u3046\u3068\u3082\u81ea\u7531\u3067\u3059\u304c\u3001\u3069\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u304b\u306f\u3001\u305d\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u304a\u3046\u3068\u3057\u3066\u3044\u308b\u3001\u3082\u3057\u304f\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u4eba\u306b\u3068\u3063\u3066\u5f71\u97ff\u306e\u3042\u308b\u3053\u3068\u3067\u3059\u3002","title":"\u30b3\u30fc\u30c9\u3092\u66f8\u304f"},{"location":"guides/writing_shards.html#_5","text":"\u30b3\u30fc\u30c9\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002\u305d\u308c\u304c\u3059\u3079\u3066\u3067\u3059\u3002\u4eba\u3005 (\u3042\u306a\u305f\u3092\u542b\u3080) \u306b\u3068\u3063\u3066\u3001\u30c6\u30b9\u30c8\u3060\u3051\u304c\u3069\u306e\u3088\u3046\u306b\u6a5f\u80fd\u3059\u308b\u3082\u306e\u306a\u306e\u304b\u3092\u793a\u3059\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 Crystal \u306f \u30d3\u30eb\u30c8\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea \u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30b3\u30fc\u30c9\u306e\u30c6\u30b9\u30c8"},{"location":"guides/writing_shards.html#_6","text":"\u30b3\u30e1\u30f3\u30c8\u3067\u30b3\u30fc\u30c9\u3092\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u308c\u304c\u3059\u3079\u3066\u3067\u3059\u3002private \u306a\u30e1\u30bd\u30c3\u30c9\u3067\u3082\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002 Crystal \u306f \u7d44\u307f\u8fbc\u307f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf \u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 crystal docs \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30fc\u30c9\u306e\u30b3\u30e1\u30f3\u30c8\u3092 API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002 /docs/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u3092 Web \u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304f\u3053\u3068\u3067\u3001\u751f\u6210\u3055\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u4ee5\u964d\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u751f\u6210\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092 GitHub \u3084 GitLab \u3067\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u65b9\u6cd5\u304c\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u305d\u306e\u5b58\u5728\u3092\u5831\u305b\u308b\u305f\u3081\u306b\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30d0\u30c3\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002GitLab \u3067\u306f\u4ee5\u964d\u3067\u8aac\u660e\u3059\u308b\u65b9\u6cd5\u3067\u3001\u3053\u306e\u30d0\u30c3\u30b8\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002GitHub \u3067\u306f README.md \u306b\u6b21\u306e\u3088\u3046\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 ( <LINK-TO-YOUR-DOCUMENTATION> \u3092\u81ea\u5206\u306e\u3082\u306e\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044 [![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](<LINK-TO-YOUR-DOCUMENTATION>)","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316"},{"location":"guides/writing_shards.html#readme","text":"\u826f\u3044 README \u304c\u3042\u308b\u304b\u3069\u3046\u304b\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6210\u529f\u3092\u5de6\u53f3\u3057\u307e\u3059\u3002 Awesome README \u306f\u3053\u306e\u8a71\u984c\u306e\u7d20\u6674\u3089\u3057\u3044\u4f8b\u3084\u30ea\u30bd\u30fc\u30b9\u306e\u30ad\u30e5\u30ec\u30fc\u30c6\u30c3\u30c9\u30ea\u30b9\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u6700\u3082\u91cd\u8981\u306a\u3053\u3068\u3067\u3059\u304c\u3001README \u3067\u306f\u6b21\u306e\u3053\u3068\u304c\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002 \u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4f55\u306a\u306e\u304b \u4f55\u3092\u3059\u308b\u3082\u306e\u306a\u306e\u304b \u3069\u306e\u3088\u3046\u306b\u3057\u3066\u4f7f\u3046\u306e\u304b \u3053\u306e\u8aac\u660e\u306b\u306f\u3044\u304f\u3064\u304b\u306e\u4f8b\u3092\u9069\u5207\u306b\u7ae0\u7acb\u3066\u3057\u3066\u542b\u3081\u308b\u3079\u304d\u3067\u3059\u3002 Note Crystal \u306e\u751f\u6210\u3057\u305f README \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4e2d\u306e [your-github-name] \u3068\u3044\u3046\u90e8\u5206\u3092\u5b9f\u969b\u306e GitHub \u3082\u3057\u304f\u306fl GitLab \u306e\u30e6\u30fc\u30b6\u540d\u3067\u7f6e\u63db\u3059\u308b\u306e\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u307e\u305f GitLab \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001 github \u3092 gitlab \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"README \u3092\u66f8\u304f"},{"location":"guides/writing_shards.html#_7","text":"\u81ea\u8eab\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u6301\u3064\u3053\u3068\u306f\u826f\u3044\u3053\u3068\u3067\u3059\u304c\u3001 Crystal \u30c1\u30fc\u30e0\u306e\u6163\u7fd2\u7684\u306a\u30b9\u30bf\u30a4\u30eb \u306b\u5f93\u3046\u3053\u3068\u3067\u3001\u30b3\u30fc\u30c9\u306e\u4e00\u8cab\u6027\u3084\u53ef\u8aad\u6027\u3092\u4fdd\u3061\u3001\u4ed6\u306e\u958b\u767a\u8005\u306e\u7406\u89e3\u3057\u3084\u3059\u3044\u3082\u306e\u306b\u3067\u304d\u307e\u3059\u3002 Crystal \u7d44\u307f\u8fbc\u307f\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30bf \u3092\u6d3b\u7528\u3057\u3066\u3001\u3059\u3079\u3066\u306e .cr \u30d5\u30a1\u30a4\u30eb\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u307e\u3057\u3087\u3046\u3002 \u4f8b: crystal tool format --check \u3092\u30b3\u30de\u30f3\u30c9\u306e\u672b\u5c3e\u306b\u3064\u3051\u308b\u3053\u3068\u3067\u3001\u30b3\u30fc\u30c9\u304c\u6b63\u3057\u304f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\u3001\u8981\u3059\u308b\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u304c\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u306a\u3044\u3053\u3068\u3092\u78ba\u304b\u3081\u3089\u308c\u307e\u3059\u3002 \u4f8b: crystal tool format --check \u3053\u306e\u78ba\u8a8d\u3092 \u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 \u306e1\u30b9\u30c6\u30c3\u30d7\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002","title":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb"},{"location":"guides/writing_shards.html#shardyml","text":"\u4ed5\u69d8\u66f8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306b\u5f93\u3044\u307e\u3057\u3087\u3046\u3002","title":"shard.yml \u3092\u66f8\u304f"},{"location":"guides/writing_shards.html#_8","text":"shard.yml \u306e\u3067 name \u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u7c21\u6f54\u304b\u3064\u8aac\u660e\u7684\u306a\u3082\u306e\u306b\u3059\u3079\u304d\u3067\u3059\u3002 crystalshards.xyz \u3067\u691c\u7d22\u3057\u3066\u3001\u65e2\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u540d\u524d\u3067\u306a\u3044\u304b\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002 \u4f8b: name : palindrome-example","title":"\u540d\u524d"},{"location":"guides/writing_shards.html#_9","text":"description \u3092 shard.yml \u306b\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002 description \u306f1\u884c\u306e\u8aac\u660e\u6587\u3067\u3001\u691c\u7d22\u306e\u969b\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002 description \u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u3079\u304d\u3067\u3059\u3002 \u6709\u76ca\u306a\u60c5\u5831\u3092\u542b\u3080 \u767a\u898b\u53ef\u80fd\u306a\u3082\u306e\u306b\u3059\u308b","title":"\u8aac\u660e"},{"location":"guides/writing_shards.html#_10","text":"\u898b\u3064\u3051\u3089\u308c\u308b\u3082\u306e\u3067\u306a\u3051\u308c\u3070\u3001\u8ab0\u3082\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5229\u7528\u3057\u306a\u3044\u3067\u3057\u3087\u3046\u3002 \u4eca\u306e\u3068\u3053\u308d\u3001 crystalshards.xyz \u306b Crystal \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u96c6\u7d04\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u3053\u3053\u306b\u5411\u3051\u3066\u6700\u9069\u5316\u3057\u307e\u3059\u3002 _\u7cbe\u78ba\u306a_\u6a5f\u80fd\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3059\u4eba\u3068\u3001_\u4e00\u822c\u7684\u306a_\u6a5f\u80fd\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3059\u4eba\u304c\u3044\u307e\u3059\u3002 \u4f8b\u3048\u3070 Bob \u306f\u56de\u6587\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5fc5\u8981\u3068\u3057\u3066\u3044\u3066\u3001\u4e00\u65b9\u3067 Felipe \u304c\u63a2\u3057\u3066\u3044\u308b\u306e\u306f\u30c6\u30ad\u30b9\u30c8\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001Susan \u304c\u63a2\u3057\u3066\u3044\u308b\u306e\u306f\u30b9\u30da\u30eb\u306b\u3064\u3044\u3066\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u3068\u3044\u3063\u305f\u3088\u3046\u306b\u3001\u3067\u3059\u3002 \u3053\u306e\u5834\u5408\u3001 name \u306b\u306f\u3059\u3067\u306b Bob \u306e\u63a2\u3057\u3066\u3044\u308b \"palindrome\" \u3068\u3044\u3046\u5358\u8a9e\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067 palindrome \u3068\u7e70\u308a\u8fd4\u3059\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u4ee3\u308f\u308a\u306b\u3001Susan \u306e\u63a2\u3057\u3066\u3044\u308b \"spelling\" \u3084 Felipe \u306e\u63a2\u3057\u3066\u3044\u308b \"text\" \u3068\u3044\u3063\u305f\u5358\u8a9e\u3092\u542b\u3081\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002 description : | A textual algorithm to tell if a word is spelled the same way forwards as it is backwards.","title":"\u6700\u9069\u5316"},{"location":"guides/writing_shards.html#_11","text":"\u3053\u3053\u304b\u3089\u306e\u30ac\u30a4\u30c9\u306f GitHub \u3067\u516c\u958b\u3059\u308b\u304b GitLab \u3067\u516c\u958b\u3059\u308b\u304b\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u304d\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u6240\u3067\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u305c\u3072\u30ac\u30a4\u30c9\u3092\u66f8\u3044\u3066\u3001\u3053\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u8ffd\u52a0\u3059\u308b\u3088\u3046\u8a00\u3063\u3066\u304f\u3060\u3055\u3044\u3002 GitHub \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5 GitLab \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5","title":"\u30db\u30b9\u30c6\u30a3\u30f3\u30b0"},{"location":"guides/ci/index.html","text":"Continuous Integration The ability of having immediate feedback on what we are working should be one of the most important characteristics in software development. Imagine making one change to our source code and having to wait 2 weeks to see if it broke something? oh! That would be a nightmare! For this, Continuous Integration will help a team to have immediate and frequent feedback about the status of what they are building. Martin Fowler defines Continuous Integration as a software development practice where members of a team integrate their work frequently, usually each person integrates at least daily - leading to multiple integrations per day. Each integration is verified by an automated build (including test) to detect integration errors as quickly as possible. Many teams find that this approach leads to significantly reduced integration problems and allows a team to develop cohesive software more rapidly. In the next subsections, we are going to present a few continuous integration tools: GitHub Actions , Travis CI and Circle CI and use them with a Crystal example application. These tools not only will let us build and test our code each time the source has changed but also deploy the result (if the build was successful) or use automatic builds, and maybe test against different platforms, to mention a few. The example application We are going to use Conway's Game of Life as the example application. More precisely, we are going to use only the first iterations in Conway's Game of Life Kata solution using TDD . Note that we won't be using TDD in the example itself, but we will mimic as if the example code is the result of the first iterations. Another important thing to mention is that we are using crystal init to create the application . And here's the implementation: src/game_of_life.cr ```crystal class Location getter x : Int32 getter y : Int32 def self.random Location.new(Random.rand(10), Random.rand(10)) end def initialize(@x, @y) end end class World @living_cells : Array(Location) def self.empty new end def initialize(living_cells = [] of Location) @living_cells = living_cells end def set_living_at(a_location) @living_cells << a_location end def is_empty? @living_cells.size == 0 end end ``` And the specs: spec/game_of_life_spec.cr ```crystal require \"./spec_helper\" describe \"a new world\" do it \"should be empty\" do world = World.new world.is_empty?.should be_true end end describe \"an empty world\" do it \"should not be empty after adding a cell\" do world = World.empty world.set_living_at(Location.random) world.is_empty?.should be_false end end ``` And this is all we need for our continuous integration examples! Let's start! Continuous Integration step by step Here's the list of items we want to achieve: Build and run specs using 3 different Crystal's versions: latest nightly 0.31.1 (using a Docker image) Install shards packages Install binary dependencies Use a database (for example MySQL) Cache dependencies to make the build run faster From here choose your next steps: I want to use GitHub Actions I want to use Travis CI I want to use CircleCI","title":"\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 (CI)"},{"location":"guides/ci/index.html#continuous-integration","text":"The ability of having immediate feedback on what we are working should be one of the most important characteristics in software development. Imagine making one change to our source code and having to wait 2 weeks to see if it broke something? oh! That would be a nightmare! For this, Continuous Integration will help a team to have immediate and frequent feedback about the status of what they are building. Martin Fowler defines Continuous Integration as a software development practice where members of a team integrate their work frequently, usually each person integrates at least daily - leading to multiple integrations per day. Each integration is verified by an automated build (including test) to detect integration errors as quickly as possible. Many teams find that this approach leads to significantly reduced integration problems and allows a team to develop cohesive software more rapidly. In the next subsections, we are going to present a few continuous integration tools: GitHub Actions , Travis CI and Circle CI and use them with a Crystal example application. These tools not only will let us build and test our code each time the source has changed but also deploy the result (if the build was successful) or use automatic builds, and maybe test against different platforms, to mention a few.","title":"Continuous Integration"},{"location":"guides/ci/index.html#the-example-application","text":"We are going to use Conway's Game of Life as the example application. More precisely, we are going to use only the first iterations in Conway's Game of Life Kata solution using TDD . Note that we won't be using TDD in the example itself, but we will mimic as if the example code is the result of the first iterations. Another important thing to mention is that we are using crystal init to create the application . And here's the implementation: src/game_of_life.cr ```crystal class Location getter x : Int32 getter y : Int32 def self.random Location.new(Random.rand(10), Random.rand(10)) end def initialize(@x, @y) end end class World @living_cells : Array(Location) def self.empty new end def initialize(living_cells = [] of Location) @living_cells = living_cells end def set_living_at(a_location) @living_cells << a_location end def is_empty? @living_cells.size == 0 end end ``` And the specs: spec/game_of_life_spec.cr ```crystal require \"./spec_helper\" describe \"a new world\" do it \"should be empty\" do world = World.new world.is_empty?.should be_true end end describe \"an empty world\" do it \"should not be empty after adding a cell\" do world = World.empty world.set_living_at(Location.random) world.is_empty?.should be_false end end ``` And this is all we need for our continuous integration examples! Let's start!","title":"The example application"},{"location":"guides/ci/index.html#continuous-integration-step-by-step","text":"Here's the list of items we want to achieve: Build and run specs using 3 different Crystal's versions: latest nightly 0.31.1 (using a Docker image) Install shards packages Install binary dependencies Use a database (for example MySQL) Cache dependencies to make the build run faster From here choose your next steps: I want to use GitHub Actions I want to use Travis CI I want to use CircleCI","title":"Continuous Integration step by step"},{"location":"guides/ci/circleci.html","text":"CircleCI In this section we are going to use CircleCI as our continuous-integration service. In a few words CircleCI automates your software builds, tests, and deployments. It supports different programming languages and for our particular case, it supports the Crystal language . In this section we are going to present some configuration examples to see how CircleCI implements some continuous integration concepts . CircleCI orbs Before showing some examples, it\u2019s worth mentioning CircleCI orbs . As defined in the official docs: Orbs define reusable commands, executors, and jobs so that commonly used pieces of configuration can be condensed into a single line of code. In our case, we are going to use Crystal\u2019s Orb Build and run specs Simple example using latest Let\u2019s start with a simple example. We are going to run the tests using latest Crystal release: .circleci/config.yml ```yaml workflows: version: 2 build: jobs: - crystal/test orbs: crystal: manastech/crystal@1.0 version: 2.1 ``` Yeah! That was simple! With Orbs an abstraction layer is built so that the configuration file is more readable and intuitive. In case we are wondering what the job crystal/test does, we always may see the source code. Using nightly Using nightly Crystal release is as easy as: .circleci/config.yml ```yaml workflows: version: 2 build: jobs: - crystal/test: name: test-on-nightly executor: name: crystal/default tag: nightly orbs: crystal: manastech/crystal@1.0 version: 2.1 ``` Using a specific Crystal release .circleci/config.yml ```yaml workflows: version: 2 build: jobs: - crystal/test: name: test-on-0.30 executor: name: crystal/default tag: 0.30.0 orbs: crystal: manastech/crystal@1.0 version: 2.1 ``` Installing shards packages You need not worry about it since the crystal/test job runs the crystal/shard-install orb command. Installing binary dependencies Our application or maybe some shards may require libraries and packages. This binary dependencies may be installed using the Apt command. Here is an example installing the libsqlite3 development package: .circleci/config.yml ```yaml workflows: version: 2 build: jobs: - crystal/test: pre-steps: - run: apt-get update && apt-get install -y libsqlite3-dev orbs: crystal: manastech/crystal@1.0 version: 2.1 ``` Using services Now, let\u2019s run specs using an external service (for example MySQL): .circleci/config.yml ```yaml executors: crystal_mysql: docker: - image: 'crystallang/crystal:latest' environment: DATABASE_URL: 'mysql://root@localhost/db' - image: 'mysql:5.7' environment: MYSQL_DATABASE: db MYSQL_ALLOW_EMPTY_PASSWORD: 'yes' workflows: version: 2 build: jobs: - crystal/test: executor: crystal_mysql pre-steps: - run: name: Waiting for service to start (check dockerize) command: sleep 1m - checkout - run: name: Install MySQL CLI; Import dummy data command: | apt-get update && apt-get install -y mysql-client mysql -h 127.0.0.1 -u root --password=\"\" db < test-data/setup.sql orbs: crystal: manastech/crystal@1.0 version: 2.1 ``` Note The explicit checkout in the pre-steps is to have the test-data/setup.sql file available. Caching Caching is enabled by default when using the job crystal/test , because internally it uses the command with-shards-cache","title":"CircleCI"},{"location":"guides/ci/circleci.html#circleci","text":"In this section we are going to use CircleCI as our continuous-integration service. In a few words CircleCI automates your software builds, tests, and deployments. It supports different programming languages and for our particular case, it supports the Crystal language . In this section we are going to present some configuration examples to see how CircleCI implements some continuous integration concepts .","title":"CircleCI"},{"location":"guides/ci/circleci.html#circleci-orbs","text":"Before showing some examples, it\u2019s worth mentioning CircleCI orbs . As defined in the official docs: Orbs define reusable commands, executors, and jobs so that commonly used pieces of configuration can be condensed into a single line of code. In our case, we are going to use Crystal\u2019s Orb","title":"CircleCI orbs"},{"location":"guides/ci/circleci.html#build-and-run-specs","text":"","title":"Build and run specs"},{"location":"guides/ci/circleci.html#simple-example-using-latest","text":"Let\u2019s start with a simple example. We are going to run the tests using latest Crystal release: .circleci/config.yml ```yaml workflows: version: 2 build: jobs: - crystal/test orbs: crystal: manastech/crystal@1.0 version: 2.1 ``` Yeah! That was simple! With Orbs an abstraction layer is built so that the configuration file is more readable and intuitive. In case we are wondering what the job crystal/test does, we always may see the source code.","title":"Simple example using latest"},{"location":"guides/ci/circleci.html#using-nightly","text":"Using nightly Crystal release is as easy as: .circleci/config.yml ```yaml workflows: version: 2 build: jobs: - crystal/test: name: test-on-nightly executor: name: crystal/default tag: nightly orbs: crystal: manastech/crystal@1.0 version: 2.1 ```","title":"Using nightly"},{"location":"guides/ci/circleci.html#using-a-specific-crystal-release","text":".circleci/config.yml ```yaml workflows: version: 2 build: jobs: - crystal/test: name: test-on-0.30 executor: name: crystal/default tag: 0.30.0 orbs: crystal: manastech/crystal@1.0 version: 2.1 ```","title":"Using a specific Crystal release"},{"location":"guides/ci/circleci.html#installing-shards-packages","text":"You need not worry about it since the crystal/test job runs the crystal/shard-install orb command.","title":"Installing shards packages"},{"location":"guides/ci/circleci.html#installing-binary-dependencies","text":"Our application or maybe some shards may require libraries and packages. This binary dependencies may be installed using the Apt command. Here is an example installing the libsqlite3 development package: .circleci/config.yml ```yaml workflows: version: 2 build: jobs: - crystal/test: pre-steps: - run: apt-get update && apt-get install -y libsqlite3-dev orbs: crystal: manastech/crystal@1.0 version: 2.1 ```","title":"Installing binary dependencies"},{"location":"guides/ci/circleci.html#using-services","text":"Now, let\u2019s run specs using an external service (for example MySQL): .circleci/config.yml ```yaml executors: crystal_mysql: docker: - image: 'crystallang/crystal:latest' environment: DATABASE_URL: 'mysql://root@localhost/db' - image: 'mysql:5.7' environment: MYSQL_DATABASE: db MYSQL_ALLOW_EMPTY_PASSWORD: 'yes' workflows: version: 2 build: jobs: - crystal/test: executor: crystal_mysql pre-steps: - run: name: Waiting for service to start (check dockerize) command: sleep 1m - checkout - run: name: Install MySQL CLI; Import dummy data command: | apt-get update && apt-get install -y mysql-client mysql -h 127.0.0.1 -u root --password=\"\" db < test-data/setup.sql orbs: crystal: manastech/crystal@1.0 version: 2.1 ``` Note The explicit checkout in the pre-steps is to have the test-data/setup.sql file available.","title":"Using services"},{"location":"guides/ci/circleci.html#caching","text":"Caching is enabled by default when using the job crystal/test , because internally it uses the command with-shards-cache","title":"Caching"},{"location":"guides/ci/gh-actions.html","text":"GitHub Actions Build and run specs To continuously test our example application -- both whenever a commit is pushed and when someone opens a pull request , add this minimal workflow file : .github/workflows/ci.yml on : push : pull_request : branches : [ master ] jobs : build : runs-on : ubuntu-latest steps : - name : Download source uses : actions/checkout@v2 - name : Install Crystal uses : oprypin/install-crystal@v1 - name : Run tests run : crystal spec To get started with GitHub Actions , commit this YAML file into your Git repository under the directory .github/workflows/ , push it to GitHub, and observe the Actions tab. Quickstart Check out Configurator for install-crystal action to quickly get a config with the CI features you need. Or continue reading for more details. This runs on GitHub's default \"latest Ubuntu\" container. It downloads the source code from the repository itself (directly into the current directory), installs Crystal via an external GitHub Action , then runs the specs, assuming they are there in the spec/ directory. If any step fails, the build will show up as failed, notify the author and, if it's a push, set the overall build status of the project to failing. Tip For a healthier codebase, consider these flags for crystal spec : --order=random --error-on-warnings No specs? If your test coverage isn't great, consider at least adding an example program, and building it as part of CI: For a library: - name : Build example run : crystal build examples/hello.cr For an application (very good to do even if you have specs): - name : Build run : crystal build src/game_of_life.cr Testing with different vesions of Crystal By default, the latest released version of Crystal is installed. But you may want to also test with the \"nightly\" build of Crystal, and perhaps some older versions that you still support for your project. Change the top of the workflow as follows: jobs : build : strategy : fail-fast : false matrix : crystal : [ 0.35.1 , latest , nightly ] runs-on : ubuntu-latest steps : - name : Download source uses : actions/checkout@v2 - name : Install Crystal uses : oprypin/install-crystal@v1 with : crystal : ${{ matrix.crystal }} - ... All those versions will be tested for in parallel . By specifying the version of Crystal you could even opt out of supporting the latest version (which is a moving target), and only support particular ones. Testing on multiple operating systems Typically, developers run tests only on Ubuntu, which is OK if there is no platform-sensitive code. But it's easy to add another system into the test matrix, just add the following near the top of your job definition: jobs : build : strategy : fail-fast : false matrix : os : [ ubuntu-latest , macos-latest ] runs-on : ${{ matrix.os }} steps : - ... Installing Shards packages Most projects will have external dependencies, \"shards\" . Having declared them in shard.yml , just add the installation step into your workflow (after install-crystal and before any testing): - name : Install shards run : shards install Latest or locked dependencies? If your repository has a checked in shard.lock file (typically good for applications), consider the effect that this has on CI: shards install will always install the exact versions specified in that file. But if you're developing a library, you probably want to be the first to find out in case a new version of a dependency breaks the installation of your library -- otherwise the users will, because the lock doesn't apply transitively. So, strongly consider running shards update instead of shards install , or don't check in shard.lock . And then it makes sense to add scheduled runs to your repository. Installing binary dependencies Our application or some shards may require external libraries. The approach to installing them can vary widely. The typical way is to install packages using the apt command in Ubuntu. Add the installation step somewhere near the beginning. For example, with libsqlite3 : - name : Install packages run : sudo apt-get -qy install libsqlite3-dev Enforcing code formatting If you want to verify that all your code has been formatted with crystal tool format , add the according check as a step near the end of the workflow. If someone pushes code that is not formatted correctly, this will break the build just like failing tests would. - name : Check formatting run : crystal tool format --check Consider also adding this check as a Git pre-commit hook for yourself. Using the official Docker image We have been using an \"action\" to install Crystal into the default OS image that GitHub provides. Which has multiple advantages . But you may instead choose to use Crystal's official Docker image(s), though that's applicable only to Linux. The base config becomes this instead: .github/workflows/ci.yml jobs : build : runs-on : ubuntu-latest container : image : crystallang/crystal:latest steps : - name : Download source uses : actions/checkout@v2 - name : Run tests run : crystal spec ``` Some [other options](https://hub.docker.com/r/crystallang/crystal/tags) for containers are `crystallang/crystal:nightly`, `crystallang/crystal:0.36.1`, `crystallang/crystal:latest-alpine`. ## Caching The process of downloading and installing dependencies (shards specifically) is done from scratch on every run. With caching in GitHub Actions, we can save some of that duplicated work. The safe approach is to add the [actions/cache](https://github.com/actions/cache) step (**before the step that uses `shards`**) defined as follows : ``` yaml - name : Cache shards uses : actions/cache@v2 with : path : ~/.cache/shards key : ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys : ${{ runner.os }}-shards- - name : Install shards run : shards update Important You must use the separate key and restore-keys . With just a static key, the cache would save only the state after the very first run and then keep reusing it forever, regardless of any changes. But this saves us only the time spent downloading the repositories initially. A \"braver\" approach is to cache the lib directory itself, but that works only if you fully rely on shard.lock (see Latest or locked dependencies? ): - name : Cache shards uses : actions/cache@v2 with : path : lib key : ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name : Install shards run : shards check || shards install Note that we also made the installation conditional on shards check . That saves even a little more time. Publishing executables If your project is an application, you likely want to distribute it as an executable (\"binary\") file. For the case of Linux x86_64, by far the most popular option is to build and link statically on Alpine Linux . This means that you cannot use GitHub's default Ubuntu container and the install action. Instead, just use the official container: .github/workflows/release.yml jobs : release_linux : runs-on : ubuntu-latest container : image : crystallang/crystal:latest-alpine steps : - uses : actions/checkout@v2 - run : shards build --production --release --static --no-debug These steps would be followed by some action to publish the produced executable ( bin/* ), in one of the two ways (or both of them): As part of a release: see complete example . Then in your README you can link to the latest release using a URL such as https://github.com/:username/:reponame/releases/latest As part of the CI done for every commit, via actions/upload-artifact . Then consider linking to the latest \"nightly\" build using the external service https://nightly.link/ Distributing executables for macOS ( search for examples ) and Windows ( search for examples ) is also possible.","title":"GitHub Actions"},{"location":"guides/ci/gh-actions.html#github-actions","text":"","title":"GitHub Actions"},{"location":"guides/ci/gh-actions.html#build-and-run-specs","text":"To continuously test our example application -- both whenever a commit is pushed and when someone opens a pull request , add this minimal workflow file : .github/workflows/ci.yml on : push : pull_request : branches : [ master ] jobs : build : runs-on : ubuntu-latest steps : - name : Download source uses : actions/checkout@v2 - name : Install Crystal uses : oprypin/install-crystal@v1 - name : Run tests run : crystal spec To get started with GitHub Actions , commit this YAML file into your Git repository under the directory .github/workflows/ , push it to GitHub, and observe the Actions tab. Quickstart Check out Configurator for install-crystal action to quickly get a config with the CI features you need. Or continue reading for more details. This runs on GitHub's default \"latest Ubuntu\" container. It downloads the source code from the repository itself (directly into the current directory), installs Crystal via an external GitHub Action , then runs the specs, assuming they are there in the spec/ directory. If any step fails, the build will show up as failed, notify the author and, if it's a push, set the overall build status of the project to failing. Tip For a healthier codebase, consider these flags for crystal spec : --order=random --error-on-warnings","title":"Build and run specs"},{"location":"guides/ci/gh-actions.html#no-specs","text":"If your test coverage isn't great, consider at least adding an example program, and building it as part of CI: For a library: - name : Build example run : crystal build examples/hello.cr For an application (very good to do even if you have specs): - name : Build run : crystal build src/game_of_life.cr","title":"No specs?"},{"location":"guides/ci/gh-actions.html#testing-with-different-vesions-of-crystal","text":"By default, the latest released version of Crystal is installed. But you may want to also test with the \"nightly\" build of Crystal, and perhaps some older versions that you still support for your project. Change the top of the workflow as follows: jobs : build : strategy : fail-fast : false matrix : crystal : [ 0.35.1 , latest , nightly ] runs-on : ubuntu-latest steps : - name : Download source uses : actions/checkout@v2 - name : Install Crystal uses : oprypin/install-crystal@v1 with : crystal : ${{ matrix.crystal }} - ... All those versions will be tested for in parallel . By specifying the version of Crystal you could even opt out of supporting the latest version (which is a moving target), and only support particular ones.","title":"Testing with different vesions of Crystal"},{"location":"guides/ci/gh-actions.html#testing-on-multiple-operating-systems","text":"Typically, developers run tests only on Ubuntu, which is OK if there is no platform-sensitive code. But it's easy to add another system into the test matrix, just add the following near the top of your job definition: jobs : build : strategy : fail-fast : false matrix : os : [ ubuntu-latest , macos-latest ] runs-on : ${{ matrix.os }} steps : - ...","title":"Testing on multiple operating systems"},{"location":"guides/ci/gh-actions.html#installing-shards-packages","text":"Most projects will have external dependencies, \"shards\" . Having declared them in shard.yml , just add the installation step into your workflow (after install-crystal and before any testing): - name : Install shards run : shards install","title":"Installing Shards packages"},{"location":"guides/ci/gh-actions.html#latest-or-locked-dependencies","text":"If your repository has a checked in shard.lock file (typically good for applications), consider the effect that this has on CI: shards install will always install the exact versions specified in that file. But if you're developing a library, you probably want to be the first to find out in case a new version of a dependency breaks the installation of your library -- otherwise the users will, because the lock doesn't apply transitively. So, strongly consider running shards update instead of shards install , or don't check in shard.lock . And then it makes sense to add scheduled runs to your repository.","title":"Latest or locked dependencies?"},{"location":"guides/ci/gh-actions.html#installing-binary-dependencies","text":"Our application or some shards may require external libraries. The approach to installing them can vary widely. The typical way is to install packages using the apt command in Ubuntu. Add the installation step somewhere near the beginning. For example, with libsqlite3 : - name : Install packages run : sudo apt-get -qy install libsqlite3-dev","title":"Installing binary dependencies"},{"location":"guides/ci/gh-actions.html#enforcing-code-formatting","text":"If you want to verify that all your code has been formatted with crystal tool format , add the according check as a step near the end of the workflow. If someone pushes code that is not formatted correctly, this will break the build just like failing tests would. - name : Check formatting run : crystal tool format --check Consider also adding this check as a Git pre-commit hook for yourself.","title":"Enforcing code formatting"},{"location":"guides/ci/gh-actions.html#using-the-official-docker-image","text":"We have been using an \"action\" to install Crystal into the default OS image that GitHub provides. Which has multiple advantages . But you may instead choose to use Crystal's official Docker image(s), though that's applicable only to Linux. The base config becomes this instead: .github/workflows/ci.yml jobs : build : runs-on : ubuntu-latest container : image : crystallang/crystal:latest steps : - name : Download source uses : actions/checkout@v2 - name : Run tests run : crystal spec ``` Some [other options](https://hub.docker.com/r/crystallang/crystal/tags) for containers are `crystallang/crystal:nightly`, `crystallang/crystal:0.36.1`, `crystallang/crystal:latest-alpine`. ## Caching The process of downloading and installing dependencies (shards specifically) is done from scratch on every run. With caching in GitHub Actions, we can save some of that duplicated work. The safe approach is to add the [actions/cache](https://github.com/actions/cache) step (**before the step that uses `shards`**) defined as follows : ``` yaml - name : Cache shards uses : actions/cache@v2 with : path : ~/.cache/shards key : ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys : ${{ runner.os }}-shards- - name : Install shards run : shards update Important You must use the separate key and restore-keys . With just a static key, the cache would save only the state after the very first run and then keep reusing it forever, regardless of any changes. But this saves us only the time spent downloading the repositories initially. A \"braver\" approach is to cache the lib directory itself, but that works only if you fully rely on shard.lock (see Latest or locked dependencies? ): - name : Cache shards uses : actions/cache@v2 with : path : lib key : ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name : Install shards run : shards check || shards install Note that we also made the installation conditional on shards check . That saves even a little more time.","title":"Using the official Docker image"},{"location":"guides/ci/gh-actions.html#publishing-executables","text":"If your project is an application, you likely want to distribute it as an executable (\"binary\") file. For the case of Linux x86_64, by far the most popular option is to build and link statically on Alpine Linux . This means that you cannot use GitHub's default Ubuntu container and the install action. Instead, just use the official container: .github/workflows/release.yml jobs : release_linux : runs-on : ubuntu-latest container : image : crystallang/crystal:latest-alpine steps : - uses : actions/checkout@v2 - run : shards build --production --release --static --no-debug These steps would be followed by some action to publish the produced executable ( bin/* ), in one of the two ways (or both of them): As part of a release: see complete example . Then in your README you can link to the latest release using a URL such as https://github.com/:username/:reponame/releases/latest As part of the CI done for every commit, via actions/upload-artifact . Then consider linking to the latest \"nightly\" build using the external service https://nightly.link/ Distributing executables for macOS ( search for examples ) and Windows ( search for examples ) is also possible.","title":"Publishing executables"},{"location":"guides/ci/travis.html","text":"Travis CI In this section we are going to use Travis CI as our continuous-integration service. Travis CI is mostly used for building and running tests for projects hosted at GitHub. It supports different programming languages and for our particular case, it supports the Crystal language . Note If you are new to continuous integration (or you want to refresh the basic concepts) we may start reading the core concepts guide . Now let's see some examples! Build and run specs Using latest and nightly A first (and very basic) Travis CI config file could be: .travis.yml language : crystal That's it! With this config file, Travis CI by default will run crystal spec . Now, we just need to go to Travis CI dashboard to add the GitHub repository . Let's see another example: .travis.yml language : crystal crystal : - latest - nightly script : - crystal spec - crystal tool format --check ``` With this configuration, Travis CI will run the tests using both Crystal `latest` and `nightly` releases on every push to a branch on your Github repository. !!!note When [creating a Crystal project](../../using_the_compiler/#creating-a-crystal-project) using `crystal init`, Crystal creates a `.travis.yml` file for us. ### Using a specific Crystal release Let's suppose we want to pin a specific Crystal release (maybe we want to make sure the shard compiles and works with that version) for example [Crystal 0.31.1](https://github.com/crystal-lang/crystal/releases/tag/0.31.1). Travis CI only provides _runners_ to `latest` and `nightly` releases directly and so, we need to install the requested Crystal release manually. For this we are going to use [Docker](https://www.docker.com/). First we need to add Docker as a service in `.travis.yml`, and then we can use `docker` commands in our build steps, like this : !!!example \".travis.yml\" ``` yaml language : minimal services : - docker script : - docker run -v $PWD:/src -w /src crystallang/crystal:0.31.1 crystal spec ``` !!!note We may read about different [languages](https://docs.travis-ci.com/user/languages/) supported by Travis CI, included [minimal](https://docs.travis-ci.com/user/languages/minimal-and-generic/). !!!note A list with the different official [Crystal docker images](https://hub.docker.com/r/crystallang/crystal/tags) is available at [DockerHub](https://hub.docker.com/r/crystallang/crystal). ### Using `latest`, `nightly` and a specific Crystal release all together! Supported _runners_ can be combined with Docker-based _runners_ using a [Build Matrix](https://docs.travis-ci.com/user/customizing-the-build#build-matrix). This will allow us to run tests against `latest` and `nightly` and pinned releases. Here is the example : !!!example \".travis.yml\" ``` yaml matrix : include : - language : crystal crystal : - latest script : - crystal spec - language : crystal crystal : - nightly script : - crystal spec - language : bash services : - docker script : - docker run -v $PWD:/src -w /src crystallang/crystal:0.31.1 crystal spec ``` ## Installing shards packages In native _runners_ (`language : crystal`), Travis CI already automatically installs shards dependencies using `shards install`. To improve build performance we may add [caching](#caching) on top of that. ### Using Docker In a Docker-based _runner_ we need to run `shards install` explicitly, like this : !!!example \".travis.yml\" ``` yaml language : bash services : - docker script : - docker run -v $PWD:/src -w /src crystallang/crystal:0.31.1 shards install - docker run -v $PWD:/src -w /src crystallang/crystal:0.31.1 crystal spec ``` !!!note Since the shards will be installed in `./lib/` folder, it will be preserved for the second docker run command. ## Installing binary dependencies Our application or maybe some shards may required libraries and packages. This binary dependencies may be installed using different methods. Here we are going to show an example using the [Apt](https://help.ubuntu.com/lts/serverguide/apt.html) command (since the Docker image we are using is based on Ubuntu) Here is a first example installing the `libsqlite3` development package using the [APT addon](https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-with-the-apt-addon) : !!!example \".travis.yml\" ``` yaml language : crystal crystal : - latest before_install : - sudo apt-get -y install libsqlite3-dev addons : apt : update : true script : - crystal spec ``` ### Using Docker We are going to build a new docker image based on [crystallang/crystal](https://hub.docker.com/r/crystallang/crystal/), and in this new image we will be installing the binary dependencies. To accomplish this we are going to use a [Dockerfile](https://docs.docker.com/engine/reference/builder/) : !!!example \"Dockerfile\" ``` dockerfile FROM crystallang/crystal:latest # install binary dependencies : RUN apt-get update && apt-get install -y libsqlite3-dev ``` And here is the Travis CI configuration file : !!!example \".travis.yml\" ``` yaml language : bash services : - docker before_install : # build image using Dockerfile: - docker build -t testing . script : # run specs in the container - docker run -v $PWD:/src -w /src testing crystal spec ``` !!!note Dockerfile arguments can be used to use the same Dockerfile for latest, nightly or a specific version. ## Using services Travis CI may start [services](https://docs.travis-ci.com/user/database-setup/) as requested. For example, we can start a [MySQL](https://docs.travis-ci.com/user/database-setup/#mysql) database service by adding a `services:` section to our `.travis.yml` : !!!example \".travis.yml\" ``` yaml language : crystal crystal : - latest services : - mysql script : - crystal spec ``` Here is the new test file for testing against the database : !!!example \"spec/simple_db_spec.cr\" ``` crystal require \"./spec_helper\" require \"mysql\" it \"connects to the database\" do DB.connect ENV[\"DATABASE_URL\"] do |cnn| cnn.query_one(\"SELECT 'foo'\", as : String).should eq \"foo\" end end ``` When pushing this changes Travis CI will report the following error : ` Unknown database 'test' (Exception)`, showing that we need to configure the MySQL service **and also setup the database** : !!!example \".travis.yml\" ``` yaml language : crystal crystal : - latest env : global : - DATABASE_NAME=test - DATABASE_URL=mysql://root@localhost/$DATABASE_NAME services : - mysql before_install : - mysql -e \"CREATE DATABASE IF NOT EXISTS $DATABASE_NAME;\" - mysql -u root --password=\"\" $DATABASE_NAME < db/schema.sql script : - crystal spec ``` We are [using a `schema.sql` script](https://andidittrich.de/2017/06/travisci-setup-mysql-tablesdata-before-running-tests.html) to create a more readable `.travis.yml`. The file `./db/schema.sql` looks like this : !!!example \"schema.sql\" ``` sql CREATE TABLE ... etc ... Pushing these changes will trigger Travis CI and the build should be successful! Caching If we read Travis CI job log, we will find that every time the job runs, Travis CI needs to fetch the libraries needed to run the application: Fetching https://github.com/crystal-lang/crystal-mysql.git Fetching https://github.com/crystal-lang/crystal-db.git This takes time and, on the other hand, these libraries might not change as often as our application, so it looks like we may cache them and save time. Travis CI uses caching to improve some parts of the building path. Here is the new configuration file with cache enabled : .travis.yml ```yaml language: crystal crystal: - latest cache: shards script: - crystal spec ``` Let's push these changes. Travis CI will run, and it will install dependencies, but then it will cache the shards cache folder which, usually, is ~/.cache/shards . The following runs will use the cached dependencies.","title":"Travis CI"},{"location":"guides/ci/travis.html#travis-ci","text":"In this section we are going to use Travis CI as our continuous-integration service. Travis CI is mostly used for building and running tests for projects hosted at GitHub. It supports different programming languages and for our particular case, it supports the Crystal language . Note If you are new to continuous integration (or you want to refresh the basic concepts) we may start reading the core concepts guide . Now let's see some examples!","title":"Travis CI"},{"location":"guides/ci/travis.html#build-and-run-specs","text":"","title":"Build and run specs"},{"location":"guides/ci/travis.html#using-latest-and-nightly","text":"A first (and very basic) Travis CI config file could be: .travis.yml language : crystal That's it! With this config file, Travis CI by default will run crystal spec . Now, we just need to go to Travis CI dashboard to add the GitHub repository . Let's see another example: .travis.yml language : crystal crystal : - latest - nightly script : - crystal spec - crystal tool format --check ``` With this configuration, Travis CI will run the tests using both Crystal `latest` and `nightly` releases on every push to a branch on your Github repository. !!!note When [creating a Crystal project](../../using_the_compiler/#creating-a-crystal-project) using `crystal init`, Crystal creates a `.travis.yml` file for us. ### Using a specific Crystal release Let's suppose we want to pin a specific Crystal release (maybe we want to make sure the shard compiles and works with that version) for example [Crystal 0.31.1](https://github.com/crystal-lang/crystal/releases/tag/0.31.1). Travis CI only provides _runners_ to `latest` and `nightly` releases directly and so, we need to install the requested Crystal release manually. For this we are going to use [Docker](https://www.docker.com/). First we need to add Docker as a service in `.travis.yml`, and then we can use `docker` commands in our build steps, like this : !!!example \".travis.yml\" ``` yaml language : minimal services : - docker script : - docker run -v $PWD:/src -w /src crystallang/crystal:0.31.1 crystal spec ``` !!!note We may read about different [languages](https://docs.travis-ci.com/user/languages/) supported by Travis CI, included [minimal](https://docs.travis-ci.com/user/languages/minimal-and-generic/). !!!note A list with the different official [Crystal docker images](https://hub.docker.com/r/crystallang/crystal/tags) is available at [DockerHub](https://hub.docker.com/r/crystallang/crystal). ### Using `latest`, `nightly` and a specific Crystal release all together! Supported _runners_ can be combined with Docker-based _runners_ using a [Build Matrix](https://docs.travis-ci.com/user/customizing-the-build#build-matrix). This will allow us to run tests against `latest` and `nightly` and pinned releases. Here is the example : !!!example \".travis.yml\" ``` yaml matrix : include : - language : crystal crystal : - latest script : - crystal spec - language : crystal crystal : - nightly script : - crystal spec - language : bash services : - docker script : - docker run -v $PWD:/src -w /src crystallang/crystal:0.31.1 crystal spec ``` ## Installing shards packages In native _runners_ (`language : crystal`), Travis CI already automatically installs shards dependencies using `shards install`. To improve build performance we may add [caching](#caching) on top of that. ### Using Docker In a Docker-based _runner_ we need to run `shards install` explicitly, like this : !!!example \".travis.yml\" ``` yaml language : bash services : - docker script : - docker run -v $PWD:/src -w /src crystallang/crystal:0.31.1 shards install - docker run -v $PWD:/src -w /src crystallang/crystal:0.31.1 crystal spec ``` !!!note Since the shards will be installed in `./lib/` folder, it will be preserved for the second docker run command. ## Installing binary dependencies Our application or maybe some shards may required libraries and packages. This binary dependencies may be installed using different methods. Here we are going to show an example using the [Apt](https://help.ubuntu.com/lts/serverguide/apt.html) command (since the Docker image we are using is based on Ubuntu) Here is a first example installing the `libsqlite3` development package using the [APT addon](https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-with-the-apt-addon) : !!!example \".travis.yml\" ``` yaml language : crystal crystal : - latest before_install : - sudo apt-get -y install libsqlite3-dev addons : apt : update : true script : - crystal spec ``` ### Using Docker We are going to build a new docker image based on [crystallang/crystal](https://hub.docker.com/r/crystallang/crystal/), and in this new image we will be installing the binary dependencies. To accomplish this we are going to use a [Dockerfile](https://docs.docker.com/engine/reference/builder/) : !!!example \"Dockerfile\" ``` dockerfile FROM crystallang/crystal:latest # install binary dependencies : RUN apt-get update && apt-get install -y libsqlite3-dev ``` And here is the Travis CI configuration file : !!!example \".travis.yml\" ``` yaml language : bash services : - docker before_install : # build image using Dockerfile: - docker build -t testing . script : # run specs in the container - docker run -v $PWD:/src -w /src testing crystal spec ``` !!!note Dockerfile arguments can be used to use the same Dockerfile for latest, nightly or a specific version. ## Using services Travis CI may start [services](https://docs.travis-ci.com/user/database-setup/) as requested. For example, we can start a [MySQL](https://docs.travis-ci.com/user/database-setup/#mysql) database service by adding a `services:` section to our `.travis.yml` : !!!example \".travis.yml\" ``` yaml language : crystal crystal : - latest services : - mysql script : - crystal spec ``` Here is the new test file for testing against the database : !!!example \"spec/simple_db_spec.cr\" ``` crystal require \"./spec_helper\" require \"mysql\" it \"connects to the database\" do DB.connect ENV[\"DATABASE_URL\"] do |cnn| cnn.query_one(\"SELECT 'foo'\", as : String).should eq \"foo\" end end ``` When pushing this changes Travis CI will report the following error : ` Unknown database 'test' (Exception)`, showing that we need to configure the MySQL service **and also setup the database** : !!!example \".travis.yml\" ``` yaml language : crystal crystal : - latest env : global : - DATABASE_NAME=test - DATABASE_URL=mysql://root@localhost/$DATABASE_NAME services : - mysql before_install : - mysql -e \"CREATE DATABASE IF NOT EXISTS $DATABASE_NAME;\" - mysql -u root --password=\"\" $DATABASE_NAME < db/schema.sql script : - crystal spec ``` We are [using a `schema.sql` script](https://andidittrich.de/2017/06/travisci-setup-mysql-tablesdata-before-running-tests.html) to create a more readable `.travis.yml`. The file `./db/schema.sql` looks like this : !!!example \"schema.sql\" ``` sql CREATE TABLE ... etc ... Pushing these changes will trigger Travis CI and the build should be successful!","title":"Using latest and nightly"},{"location":"guides/ci/travis.html#caching","text":"If we read Travis CI job log, we will find that every time the job runs, Travis CI needs to fetch the libraries needed to run the application: Fetching https://github.com/crystal-lang/crystal-mysql.git Fetching https://github.com/crystal-lang/crystal-db.git This takes time and, on the other hand, these libraries might not change as often as our application, so it looks like we may cache them and save time. Travis CI uses caching to improve some parts of the building path. Here is the new configuration file with cache enabled : .travis.yml ```yaml language: crystal crystal: - latest cache: shards script: - crystal spec ``` Let's push these changes. Travis CI will run, and it will install dependencies, but then it will cache the shards cache folder which, usually, is ~/.cache/shards . The following runs will use the cached dependencies.","title":"Caching"},{"location":"guides/hosting/github.html","text":"Hosting on GitHub Create a repository with the same name and description as specified in your shard.yml . Add and commit everything: $ git add -A && git commit -am \"shard complete\" Add the remote: (Be sure to replace <YOUR-GITHUB-USERNAME> and <YOUR-REPOSITORY-NAME> accordingly) !!!note If you like, feel free to replace public with origin , or a remote name of your choosing. $ git remote add public https://github.com/<YOUR-GITHUB-NAME>/<YOUR-REPOSITORY-NAME>.git Push it: $ git push public master GitHub Releases It's good practice to do GitHub Releases. Add the following markdown build badge below the description in your README to inform users what the most current release is: (Be sure to replace <YOUR-GITHUB-USERNAME> and <YOUR-REPOSITORY-NAME> accordingly) [![GitHub release](https://img.shields.io/github/release/<YOUR-GITHUB-USERNAME>/<YOUR-REPOSITORY-NAME>.svg)](https://github.com/<YOUR-GITHUB-USERNAME>/<YOUR-REPOSITORY-NAME>/releases) Start by navigating to your repository's releases page. This can be found at https://github.com/<YOUR-GITHUB-NAME>/<YOUR-REPOSITORY-NAME>/releases Click \"Create a new release\". According to the Crystal Shards README , When libraries are installed from Git repositories, the repository is expected to have version tags following a semver-like format, prefixed with a v . Examples: v1.2.3, v2.0.0-rc1 or v2017.04.1 Accordingly, in the input that says tag version , type v0.1.0 . Make sure this matches the version in shard.yml . Title it v0.1.0 and write a short description for the release. Click \"Publish release\" and you're done! You'll now notice that the GitHub Release badge has updated in your README. Follow Semantic Versioning and create a new release every time your push new code to master . Continuous integration GitHub Actions allows you to automatically test your project on every commit. Configure it according to the dedicated guide . You can also add a build status badge below the description in your README.md. Hosting your docs on GitHub Pages As an extension of the GitHub Actions config, you can add the steps to build the API doc site and then upload them, correspondingly: steps : - name : Build docs run : crystal docs - name : Deploy docs if : github.event_name == 'push' && github.ref == 'refs/heads/master' uses : ... with : ... -- where the latter ... placeholder is any of the generic GitHub Actions to push a directory to the gh-pages branch. Some options are: JamesIves/github-pages-deploy-action [ Search ] crazy-max/ghaction-github-pages [ Search ] peaceiris/actions-gh-pages [ Search ] oprypin/push-to-gh-pages [ Search ] This uses Crystal's built-in API doc generator to make a generic site based on your code and comments to the items in it. Rather than just publishing the generated API docs, consider also making a full textual manual of your project, for a well-rounded introduction. For one of the options for static site generation, mkdocs-material , there's a solution to tightly integrate API documentation into an overall documentation site: mkdocstrings-crystal . Consider it as an alternative to crystal docs .","title":"GitHub \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5"},{"location":"guides/hosting/github.html#hosting-on-github","text":"Create a repository with the same name and description as specified in your shard.yml . Add and commit everything: $ git add -A && git commit -am \"shard complete\" Add the remote: (Be sure to replace <YOUR-GITHUB-USERNAME> and <YOUR-REPOSITORY-NAME> accordingly) !!!note If you like, feel free to replace public with origin , or a remote name of your choosing. $ git remote add public https://github.com/<YOUR-GITHUB-NAME>/<YOUR-REPOSITORY-NAME>.git Push it: $ git push public master","title":"Hosting on GitHub"},{"location":"guides/hosting/github.html#github-releases","text":"It's good practice to do GitHub Releases. Add the following markdown build badge below the description in your README to inform users what the most current release is: (Be sure to replace <YOUR-GITHUB-USERNAME> and <YOUR-REPOSITORY-NAME> accordingly) [![GitHub release](https://img.shields.io/github/release/<YOUR-GITHUB-USERNAME>/<YOUR-REPOSITORY-NAME>.svg)](https://github.com/<YOUR-GITHUB-USERNAME>/<YOUR-REPOSITORY-NAME>/releases) Start by navigating to your repository's releases page. This can be found at https://github.com/<YOUR-GITHUB-NAME>/<YOUR-REPOSITORY-NAME>/releases Click \"Create a new release\". According to the Crystal Shards README , When libraries are installed from Git repositories, the repository is expected to have version tags following a semver-like format, prefixed with a v . Examples: v1.2.3, v2.0.0-rc1 or v2017.04.1 Accordingly, in the input that says tag version , type v0.1.0 . Make sure this matches the version in shard.yml . Title it v0.1.0 and write a short description for the release. Click \"Publish release\" and you're done! You'll now notice that the GitHub Release badge has updated in your README. Follow Semantic Versioning and create a new release every time your push new code to master .","title":"GitHub Releases"},{"location":"guides/hosting/github.html#continuous-integration","text":"GitHub Actions allows you to automatically test your project on every commit. Configure it according to the dedicated guide . You can also add a build status badge below the description in your README.md.","title":"Continuous integration"},{"location":"guides/hosting/github.html#hosting-your-docs-on-github-pages","text":"As an extension of the GitHub Actions config, you can add the steps to build the API doc site and then upload them, correspondingly: steps : - name : Build docs run : crystal docs - name : Deploy docs if : github.event_name == 'push' && github.ref == 'refs/heads/master' uses : ... with : ... -- where the latter ... placeholder is any of the generic GitHub Actions to push a directory to the gh-pages branch. Some options are: JamesIves/github-pages-deploy-action [ Search ] crazy-max/ghaction-github-pages [ Search ] peaceiris/actions-gh-pages [ Search ] oprypin/push-to-gh-pages [ Search ] This uses Crystal's built-in API doc generator to make a generic site based on your code and comments to the items in it. Rather than just publishing the generated API docs, consider also making a full textual manual of your project, for a well-rounded introduction. For one of the options for static site generation, mkdocs-material , there's a solution to tightly integrate API documentation into an overall documentation site: mkdocstrings-crystal . Consider it as an alternative to crystal docs .","title":"Hosting your docs on GitHub Pages"},{"location":"guides/hosting/gitlab.html","text":"Hosting on GitLab Go ahead and delete the default travis.yml that comes with the project. We won't be needing it. Add and commit everything: $ git add -A && git commit -am \"shard complete\" Create a GitLab project with the same name and description as specified in your shard.yml . Add the remote: (Be sure to replace <YOUR-GITLAB-USERNAME> and <YOUR-REPOSITORY-NAME> accordingly) $ git remote add origin https://gitlab.com/<YOUR-GITLAB-USERNAME>/<YOUR-REPOSITORY-NAME>.git or if you use SSH $ git remote add origin git@gitlab.com:<YOUR-GITLAB-USERNAME>/<YOUR-REPOSITORY-NAME>.git Push it: $ git push origin master Pipelines Next, let's setup a GitLab Pipeline that can run our tests and build/deploy the docs when we push code to the repo. Simply, you can just add the following file to the root of the repo and name it .gitlab-ci.yml image : \"crystallang/crystal:latest\" before_script : - shards install cache : paths : - lib/ spec & format : script : - crystal spec - crystal tool format --check pages : stage : deploy script : - crystal docs -o public src/palindrome-example.cr artifacts : paths : - public only : - master This creates two jobs. The first one is titled \"spec & format\" (you can use any name you like) and by default goes in the \"test\" stage of the pipeline. It just runs the array of commands in script on a brand new instance of the docker container specified by image . You'll probably want to lock that container to the version of crystal you're using (the one specified in your shard.yml) but for this example we'll just use the latest tag. The test stage of the pipeline will either pass (each element of the array returned a healthy exit code) or it will fail (one of the elements returned an error). If it passes, then the pipeline will move onto the second job we defined here which we must name \"pages\". This is a special job just for deploying content to your gitlab pages site! This one is executed after tests have passed because we specified that it should occur in the \"deploy\" stage. It again runs the commands in script (this time building the docs), but this time we tell it to preserve the path public (where we stashed the docs) as an artifact of the job. The result of naming this job pages and putting our docs in the public directory and specifying it as an artifact is that GitLab will deploy the site in that directory to the default URL https://<YOUR-GITLAB-USERNAME>.gitlab.io/<YOUR-REPOSITORY-NAME> . The before_script and cache keys in the file are for running the same script in every job ( shards install ) and for hanging onto the files that were created ( cache ). They're not necessary if your shard doesn't have any dependencies. If you commit the above file to your project and push, you'll trigger your first run of the new pipeline. $ git add -A && git commit -am 'Add .gitlab-ci.yml' && git push origin master Some Badges While that pipeline is running, let's attach some badges to the project to show off our docs and the (hopefully) successful state of our pipeline. (You might want to read the badges docs .) A badge is just a link with an image. So let's create a link to our pipeline and fetch a badge image from the Gitlab Pipeline Badges API . In the Badges section of the General settings, we'll first add a release badge. The link is: https://gitlab.com/<YOUR-GITLAB-USERNAME>/<YOUR-REPOSITORY-NAME>/pipelines and the Badge Image URL is: https://gitlab.com/<YOUR-GITLAB-USERNAME>/<YOUR-REPOSITORY-NAME>/badges/master/pipeline.svg . And now if the pipleline has finished we'll have docs and we can link to them with a generic badge from shields.io . Link: https://<YOUR-GITLAB-USERNAME>.gitlab.io/<YOUR-REPOSITORY-NAME> Image: https://img.shields.io/badge/docs-available-brightgreen.svg Releases A release is just a special commit in your history with a name (see tagging ). According to the Crystal Shards README , When libraries are installed from Git repositories, the repository is expected to have version tags following a semver-like format, prefixed with a v . Examples: v1.2.3, v2.0.0-rc1 or v2017.04.1 GitLab also has a releases feature that let's you associate files and a description with this tag. That way you can (for example) distribute binaries. As you'll see from the releases docs , you can either create an annotated tag along with release notes/files in the UI: or you can create the tag from the command line like so: $ git tag -a v0.1.0 -m \"Release v0.1.0\" push it up $ git push origin master --follow-tags and then use the UI to add/edit the release note and attach files. Best Practices Use the -a option to create an annotated tag for releases. Follow Semantic Versioning . Release Badge If you'd like you can also add a shields.io badge for the release. GitLab doesn't have full support for this kind of thing, and until someone adds a version badge for gitlab to shields.io, we'll have to just code in the version number in the URLs directly. Link: https://img.shields.io/badge/release-<VERSION>-brightgreen.svg Image: https://img.shields.io/badge/release-<VERSION>-brightgreen.svg where <VERSION> is the version number prefixed with a v like this: v0.1.0 . Mirror to GitHub At the moment, crystalshards.xyz only uses the GitHub API, so if you want your library to be indexed on that service you can set up a \"push mirror\" from GitLab to GitHub. Create a GitHub repository with the same name as your project. Follow the instructions here: https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core Edit your GitHub description. The first few words of this description will show up in the search results of crystalshards.xyz but not the whole string, so for example, you could use the following Description: Words that are the same forwards and backwards. This is a mirror of: Link: https://gitlab.com/ / / This is a push mirror and that means changes will only propagate one way. So be sure to let potential collaborators know that pull requests and issues should be submitted to your GitLab project.","title":"GitLab \u3067\u306e\u30db\u30b9\u30c8\u65b9\u6cd5"},{"location":"guides/hosting/gitlab.html#hosting-on-gitlab","text":"Go ahead and delete the default travis.yml that comes with the project. We won't be needing it. Add and commit everything: $ git add -A && git commit -am \"shard complete\" Create a GitLab project with the same name and description as specified in your shard.yml . Add the remote: (Be sure to replace <YOUR-GITLAB-USERNAME> and <YOUR-REPOSITORY-NAME> accordingly) $ git remote add origin https://gitlab.com/<YOUR-GITLAB-USERNAME>/<YOUR-REPOSITORY-NAME>.git or if you use SSH $ git remote add origin git@gitlab.com:<YOUR-GITLAB-USERNAME>/<YOUR-REPOSITORY-NAME>.git Push it: $ git push origin master","title":"Hosting on GitLab"},{"location":"guides/hosting/gitlab.html#pipelines","text":"Next, let's setup a GitLab Pipeline that can run our tests and build/deploy the docs when we push code to the repo. Simply, you can just add the following file to the root of the repo and name it .gitlab-ci.yml image : \"crystallang/crystal:latest\" before_script : - shards install cache : paths : - lib/ spec & format : script : - crystal spec - crystal tool format --check pages : stage : deploy script : - crystal docs -o public src/palindrome-example.cr artifacts : paths : - public only : - master This creates two jobs. The first one is titled \"spec & format\" (you can use any name you like) and by default goes in the \"test\" stage of the pipeline. It just runs the array of commands in script on a brand new instance of the docker container specified by image . You'll probably want to lock that container to the version of crystal you're using (the one specified in your shard.yml) but for this example we'll just use the latest tag. The test stage of the pipeline will either pass (each element of the array returned a healthy exit code) or it will fail (one of the elements returned an error). If it passes, then the pipeline will move onto the second job we defined here which we must name \"pages\". This is a special job just for deploying content to your gitlab pages site! This one is executed after tests have passed because we specified that it should occur in the \"deploy\" stage. It again runs the commands in script (this time building the docs), but this time we tell it to preserve the path public (where we stashed the docs) as an artifact of the job. The result of naming this job pages and putting our docs in the public directory and specifying it as an artifact is that GitLab will deploy the site in that directory to the default URL https://<YOUR-GITLAB-USERNAME>.gitlab.io/<YOUR-REPOSITORY-NAME> . The before_script and cache keys in the file are for running the same script in every job ( shards install ) and for hanging onto the files that were created ( cache ). They're not necessary if your shard doesn't have any dependencies. If you commit the above file to your project and push, you'll trigger your first run of the new pipeline. $ git add -A && git commit -am 'Add .gitlab-ci.yml' && git push origin master","title":"Pipelines"},{"location":"guides/hosting/gitlab.html#some-badges","text":"While that pipeline is running, let's attach some badges to the project to show off our docs and the (hopefully) successful state of our pipeline. (You might want to read the badges docs .) A badge is just a link with an image. So let's create a link to our pipeline and fetch a badge image from the Gitlab Pipeline Badges API . In the Badges section of the General settings, we'll first add a release badge. The link is: https://gitlab.com/<YOUR-GITLAB-USERNAME>/<YOUR-REPOSITORY-NAME>/pipelines and the Badge Image URL is: https://gitlab.com/<YOUR-GITLAB-USERNAME>/<YOUR-REPOSITORY-NAME>/badges/master/pipeline.svg . And now if the pipleline has finished we'll have docs and we can link to them with a generic badge from shields.io . Link: https://<YOUR-GITLAB-USERNAME>.gitlab.io/<YOUR-REPOSITORY-NAME> Image: https://img.shields.io/badge/docs-available-brightgreen.svg","title":"Some Badges"},{"location":"guides/hosting/gitlab.html#releases","text":"A release is just a special commit in your history with a name (see tagging ). According to the Crystal Shards README , When libraries are installed from Git repositories, the repository is expected to have version tags following a semver-like format, prefixed with a v . Examples: v1.2.3, v2.0.0-rc1 or v2017.04.1 GitLab also has a releases feature that let's you associate files and a description with this tag. That way you can (for example) distribute binaries. As you'll see from the releases docs , you can either create an annotated tag along with release notes/files in the UI: or you can create the tag from the command line like so: $ git tag -a v0.1.0 -m \"Release v0.1.0\" push it up $ git push origin master --follow-tags and then use the UI to add/edit the release note and attach files. Best Practices Use the -a option to create an annotated tag for releases. Follow Semantic Versioning .","title":"Releases"},{"location":"guides/hosting/gitlab.html#release-badge","text":"If you'd like you can also add a shields.io badge for the release. GitLab doesn't have full support for this kind of thing, and until someone adds a version badge for gitlab to shields.io, we'll have to just code in the version number in the URLs directly. Link: https://img.shields.io/badge/release-<VERSION>-brightgreen.svg Image: https://img.shields.io/badge/release-<VERSION>-brightgreen.svg where <VERSION> is the version number prefixed with a v like this: v0.1.0 .","title":"Release Badge"},{"location":"guides/hosting/gitlab.html#mirror-to-github","text":"At the moment, crystalshards.xyz only uses the GitHub API, so if you want your library to be indexed on that service you can set up a \"push mirror\" from GitLab to GitHub. Create a GitHub repository with the same name as your project. Follow the instructions here: https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core Edit your GitHub description. The first few words of this description will show up in the search results of crystalshards.xyz but not the whole string, so for example, you could use the following Description: Words that are the same forwards and backwards. This is a mirror of: Link: https://gitlab.com/ / / This is a push mirror and that means changes will only propagate one way. So be sure to let potential collaborators know that pull requests and issues should be submitted to your GitLab project.","title":"Mirror to GitHub"},{"location":"overview/index.html","text":"\u6982\u8981 \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u57fa\u672c\u7684\u306b\u6700\u521d\u304b\u3089\u9806\u756a\u306b\u8aad\u3093\u3067\u3044\u3051\u308b\u3088\u3046\u306b\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3001\u30b3\u30f3\u30bb\u30d7\u30c8\u306b\u3088\u3063\u3066\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u304c\u76f8\u4e92\u306b\u95a2\u9023\u3057\u3066\u3044\u3066\u3001\u3069\u3046\u3057\u3066\u3082\u5358\u72ec\u3067\u306f\u8aac\u660e\u304c\u96e3\u3057\u3044\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3044\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u9806\u756a\u306b\u3053\u3060\u308f\u3089\u305a\u3001\u5225\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u306a\u304c\u3089\u8aad\u307f\u9032\u3081\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002 \u30b3\u30fc\u30c9\u306e\u4f8b\u3067\u306f\u3001\u3042\u308b\u5f0f\u306e\u7d50\u679c\u3092\u793a\u3059\u305f\u3081\u306b #=> \u3068\u3044\u3046\u30b3\u30e1\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 + 2 a #=> 3 \u307e\u305f\u3001\u30b3\u30e1\u30f3\u30c8\u306e : \u306f\u5909\u6570\u306e\u578b\u3092\u793a\u3059\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002 s = \"hello\" # s : String \u305d\u308c\u3067\u306f\u3001\u307e\u305a\u306f\u3053\u308c\u304b\u3089\u7d39\u4ecb\u3059\u308b2\u3064\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\u3092\u898b\u306a\u304c\u3089\u3001Crystal \u306b\u89aa\u3057\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002","title":"\u3053\u306e\u30ac\u30a4\u30c9\u306b\u3064\u3044\u3066"},{"location":"overview/index.html#_1","text":"\u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u57fa\u672c\u7684\u306b\u6700\u521d\u304b\u3089\u9806\u756a\u306b\u8aad\u3093\u3067\u3044\u3051\u308b\u3088\u3046\u306b\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3001\u30b3\u30f3\u30bb\u30d7\u30c8\u306b\u3088\u3063\u3066\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u304c\u76f8\u4e92\u306b\u95a2\u9023\u3057\u3066\u3044\u3066\u3001\u3069\u3046\u3057\u3066\u3082\u5358\u72ec\u3067\u306f\u8aac\u660e\u304c\u96e3\u3057\u3044\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3044\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u9806\u756a\u306b\u3053\u3060\u308f\u3089\u305a\u3001\u5225\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u306a\u304c\u3089\u8aad\u307f\u9032\u3081\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002 \u30b3\u30fc\u30c9\u306e\u4f8b\u3067\u306f\u3001\u3042\u308b\u5f0f\u306e\u7d50\u679c\u3092\u793a\u3059\u305f\u3081\u306b #=> \u3068\u3044\u3046\u30b3\u30e1\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 + 2 a #=> 3 \u307e\u305f\u3001\u30b3\u30e1\u30f3\u30c8\u306e : \u306f\u5909\u6570\u306e\u578b\u3092\u793a\u3059\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002 s = \"hello\" # s : String \u305d\u308c\u3067\u306f\u3001\u307e\u305a\u306f\u3053\u308c\u304b\u3089\u7d39\u4ecb\u3059\u308b2\u3064\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\u3092\u898b\u306a\u304c\u3089\u3001Crystal \u306b\u89aa\u3057\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002","title":"\u6982\u8981"},{"location":"syntax_and_semantics/index.html","text":"\u69cb\u6587\u3068\u305d\u306e\u610f\u5473 \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f UTF-8 \u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u69cb\u6587\u3068\u305d\u306e\u610f\u5473"},{"location":"syntax_and_semantics/index.html#_1","text":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f UTF-8 \u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u69cb\u6587\u3068\u305d\u306e\u610f\u5473"},{"location":"syntax_and_semantics/alias.html","text":"\u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias) alias \u3092\u4f7f\u3046\u3068\u3001\u578b\u306b\u5225\u540d\u3092\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 alias PInt32 = Pointer ( Int32 ) ptr = PInt32 . malloc ( 1 ) # : Pointer(Int32) \u30a8\u30a4\u30ea\u30a2\u30b9\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u3001\u305d\u308c\u3089\u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u578b\u306b\u7f6e\u304d\u5909\u3048\u3089\u308c\u307e\u3059\u3002 \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u3046\u3068\u9577\u3044\u540d\u524d\u306e\u578b\u3092\u66f8\u304b\u305a\u306b\u6e08\u3080\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u518d\u5e30\u7684\u306a\u578b\u3092\u6271\u3046\u3068\u304d\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 alias RecArray = Array ( Int32 ) | Array ( RecArray ) ary = [] of RecArray ary . push [ 1 , 2 , 3 ] ary . push ary ary # => [[1, 2, 3], [...]] \u518d\u5e30\u7684\u306a\u578b\u3068\u3057\u3066\u5b9f\u969b\u306b\u6271\u3046\u3053\u3068\u306b\u306a\u308b\u4f8b\u306f JSON \u3067\u3057\u3087\u3046\u3002 module Json alias Type = Nil | Bool | Int64 | Float64 | String | Array ( Type ) | Hash ( String , Type ) end","title":"\u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias)"},{"location":"syntax_and_semantics/alias.html#alias","text":"alias \u3092\u4f7f\u3046\u3068\u3001\u578b\u306b\u5225\u540d\u3092\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 alias PInt32 = Pointer ( Int32 ) ptr = PInt32 . malloc ( 1 ) # : Pointer(Int32) \u30a8\u30a4\u30ea\u30a2\u30b9\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u3001\u305d\u308c\u3089\u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u578b\u306b\u7f6e\u304d\u5909\u3048\u3089\u308c\u307e\u3059\u3002 \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u3046\u3068\u9577\u3044\u540d\u524d\u306e\u578b\u3092\u66f8\u304b\u305a\u306b\u6e08\u3080\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u518d\u5e30\u7684\u306a\u578b\u3092\u6271\u3046\u3068\u304d\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 alias RecArray = Array ( Int32 ) | Array ( RecArray ) ary = [] of RecArray ary . push [ 1 , 2 , 3 ] ary . push ary ary # => [[1, 2, 3], [...]] \u518d\u5e30\u7684\u306a\u578b\u3068\u3057\u3066\u5b9f\u969b\u306b\u6271\u3046\u3053\u3068\u306b\u306a\u308b\u4f8b\u306f JSON \u3067\u3057\u3087\u3046\u3002 module Json alias Type = Nil | Bool | Int64 | Float64 | String | Array ( Type ) | Hash ( String , Type ) end","title":"\u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias)"},{"location":"syntax_and_semantics/and.html","text":"&& - \u8ad6\u7406\u7a4d (\u304b\u3064) \u6f14\u7b97\u5b50 && (\u304b\u3064) \u6f14\u7b97\u5b50\u306f\u307e\u305a\u5de6\u8fba\u306e\u5f0f\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u305d\u308c\u304c \u771f\u3068\u306a\u308b \u5024\u3067\u3042\u308c\u3070\u3001\u53f3\u8fba\u306e\u5024\u3092\u8a55\u4fa1\u3057\u3001\u305d\u306e\u5024\u3092\u7d50\u679c\u3068\u3057\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u7d50\u679c\u306f\u5de6\u8fba\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u578b\u306f\u4e21\u8fba\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b\uff09\u3067\u3059\u3002 \u3057\u305f\u304c\u3063\u3066 && \u306f if \u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306e\u3088\u3046\u306b\u8003\u3048\u3089\u308c\u307e\u3059\u3002 some_exp1 && some_exp2 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 tmp = some_exp1 if tmp some_exp2 else tmp end","title":"&&"},{"location":"syntax_and_semantics/and.html#-","text":"&& (\u304b\u3064) \u6f14\u7b97\u5b50\u306f\u307e\u305a\u5de6\u8fba\u306e\u5f0f\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u305d\u308c\u304c \u771f\u3068\u306a\u308b \u5024\u3067\u3042\u308c\u3070\u3001\u53f3\u8fba\u306e\u5024\u3092\u8a55\u4fa1\u3057\u3001\u305d\u306e\u5024\u3092\u7d50\u679c\u3068\u3057\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u7d50\u679c\u306f\u5de6\u8fba\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u578b\u306f\u4e21\u8fba\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b\uff09\u3067\u3059\u3002 \u3057\u305f\u304c\u3063\u3066 && \u306f if \u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306e\u3088\u3046\u306b\u8003\u3048\u3089\u308c\u307e\u3059\u3002 some_exp1 && some_exp2 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 tmp = some_exp1 if tmp some_exp2 else tmp end","title":"&amp;&amp; - \u8ad6\u7406\u7a4d (\u304b\u3064) \u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/as.html","text":"as as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f\u3042\u308b\u5f0f\u306e\u578b\u306b\u5bfe\u3057\u3066\u5236\u7d04\u3092\u4e0e\u3048\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 if some_condition a = 1 else a = \"hello\" end # a : Int32 | String \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3001 a \u306f Int32 | String \u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002\u4f55\u3089\u304b\u306e\u7406\u7531\u3067 if \u306e\u3042\u3068\u3067 a \u304c Int32 \u3067\u3042\u308b\u3068\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5f37\u5236\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 a_as_int = a . as ( Int32 ) a_as_int . abs # \u30b3\u30f3\u30d1\u30a4\u30e9\u304c a_as_int \u304c Int32 \u3067\u3042\u308b\u3068\u628a\u63e1\u3057\u3066\u3044\u308b\u306e\u3067\u52d5\u4f5c\u3057\u307e\u3059 as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u884c\u6642\u306b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u305f\u3081\u3001\u3082\u3057 a \u304c Int32 \u3067\u306f\u306a\u3044\u3068\u304d\u306b\u306f \u4f8b\u5916 \u304c\u767a\u751f\u3057\u307e\u3059\u3002 \u307e\u305f\u3001\u5f0f\u306b\u4e0e\u3048\u308b\u5f15\u6570\u306f \u578b \u3067\u3059\u3002 \u3042\u308b\u578b\u3092\u5225\u306e\u578b\u306b\u5f37\u5236\u3059\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002 1 . as ( String ) # \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30a8\u30e9\u30fc Note as \u3092\u4f7f\u3063\u3066\u3082\u3001\u95a2\u9023\u306e\u306a\u3044\u578b\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u306e\u70b9\u3067\u306f\u4ed6\u306e\u8a00\u8a9e\u306e cast \u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002\u6574\u6570\u3084\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3001\u305d\u3057\u3066\u6587\u5b57\u306b\u306f\u3053\u308c\u3089\u306e\u5909\u63db\u306e\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ee3\u66ff\u306b\u306a\u308b\u3082\u306e\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u3067\u8aac\u660e\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u30ad\u30e3\u30b9\u30c8\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30dd\u30a4\u30f3\u30bf\u578b\u540c\u58eb\u306e\u5909\u63db as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f\u30dd\u30a4\u30f3\u30bf\u578b\u540c\u58eb\u306e\u30ad\u30e3\u30b9\u30c8\u3082\u53ef\u80fd\u3067\u3059\u3002 ptr = Pointer ( Int32 ) . malloc ( 1 ) ptr . as ( Int8 * ) # :: Pointer(Int8) \u3053\u306e\u3068\u304d\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u30c1\u30a7\u30c3\u30af\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002\u30dd\u30a4\u30f3\u30bf\u306f\u5b89\u5168\u3067\u306a\u3044 (unsafe) \u305f\u3081\u3001\u901a\u5e38\u3001\u3053\u306e\u578b\u30ad\u30e3\u30b9\u30c8\u306f C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3084\u30ed\u30fc\u30ec\u30d9\u30eb\u306a\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306e\u307f\u5229\u7528\u3057\u307e\u3059\u3002 \u30dd\u30a4\u30f3\u30bf\u578b\u3068\u4ed6\u306e\u578b\u306e\u5909\u63db \u30dd\u30a4\u30f3\u30bf\u578b\u3068 Reference \u578b\u3092\u76f8\u4e92\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 array = [ 1 , 2 , 3 ] # object_id \u306f\u30e1\u30e2\u30ea\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u8fd4\u3059\u305f\u3081\u3001 # \u305d\u306e\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u30dd\u30a4\u30f3\u30bf\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b ptr = Pointer ( Void ) . new ( array . object_id ) # \u30dd\u30a4\u30f3\u30bf\u3092\u305d\u306e\u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3068\u3001 # \u540c\u4e00\u306e\u5024\u304c\u5f97\u3089\u308c\u308b array2 = ptr . as ( Array ( Int32 )) array2 . same? ( array ) # => true \u3053\u306e\u5834\u5408\u3082\u3001\u30dd\u30a4\u30f3\u30bf\u304c\u7d61\u3080\u51e6\u7406\u306b\u306a\u308b\u305f\u3081\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u30c1\u30a7\u30c3\u30af\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002\u3053\u306e\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u30b1\u30fc\u30b9\u306f\u524d\u8ff0\u306e\u3082\u306e\u3088\u308a\u3082\u7a00\u3067\u3059\u3002\u305f\u3060\u3001\u3053\u308c\u306b\u3088\u3063\u3066 (String \u306a\u3069\u306e) \u30b3\u30a2\u3068\u306a\u308b\u578b\u3092 Crystal \u81ea\u8eab\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u307e\u305f\u3001Reference \u578b\u3092 void \u30dd\u30a4\u30f3\u30bf\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3053\u3068\u3067 C \u306e\u95a2\u6570\u306b\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u5927\u304d\u306a\u578b\u3078\u306e\u30ad\u30e3\u30b9\u30c8\u306e\u5229\u7528\u65b9\u6cd5 as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u3042\u308b\u5f0f\u3092\u3088\u308a\u300c\u5927\u304d\u306a\u300d\u578b\u3078\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u305f\u3081\u306b\u4f7f\u3048\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 b = a . as ( Int32 | Float64 ) b # :: Int32 | Float64 \u4e0a\u8a18\u3067\u306f\u4e00\u4f53\u4f55\u304c\u5b09\u3057\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u914d\u5217\u306e\u8981\u7d20\u3092 map \u3059\u308b\u5834\u5408\u3067\u306f\u3069\u3046\u3067\u3057\u3087\u3046\uff1f ary = [ 1 , 2 , 3 ] # Int32 | Float64 \u578b\u306e\u914d\u5217 1, 2, 3 \u306b\u3057\u305f\u3044 ary2 = ary . map { | x | x . as ( Int32 | Float64 ) } ary2 # :: Array(Int32 | Float64) ary2 << 1.5 # OK Array#map \u30e1\u30bd\u30c3\u30c9\u306f\u30d6\u30ed\u30c3\u30af\u306e\u8fd4\u3059\u5024\u306e\u578b\u3092\u914d\u5217\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3068\u3057\u307e\u3059\u3002 as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3051\u308c\u3070\u3001\u63a8\u8ad6\u3055\u308c\u305f\u578b\u306f Int32 \u306a\u306e\u3067\u3001\u305d\u308c\u306b\u5bfe\u3057\u3066 Float64 \u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u30d6\u30ed\u30c3\u30af\u306e\u578b\u3092\u63a8\u8ad6\u3067\u304d\u306a\u3044\u3068\u304d\u306b\u4f7f\u3046 \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u30d6\u30ed\u30c3\u30af\u306e\u578b\u3092\u63a8\u8ad6\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u4e92\u3044\u306b\u4f9d\u5b58\u3057\u305f\u518d\u5e30\u7684\u306a\u547c\u3073\u51fa\u3057\u3067\u8d77\u3053\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u3059\u3079\u3066\u306e\u5834\u5408\u3067\u3001 as \u306f\u578b\u3092\u77e5\u3089\u305b\u308b\u305f\u3081\u306b\u4f7f\u3048\u307e\u3059\u3002 some_call { | v | v . method . as ( ExpectedType ) }","title":"as"},{"location":"syntax_and_semantics/as.html#as","text":"as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f\u3042\u308b\u5f0f\u306e\u578b\u306b\u5bfe\u3057\u3066\u5236\u7d04\u3092\u4e0e\u3048\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 if some_condition a = 1 else a = \"hello\" end # a : Int32 | String \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3001 a \u306f Int32 | String \u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002\u4f55\u3089\u304b\u306e\u7406\u7531\u3067 if \u306e\u3042\u3068\u3067 a \u304c Int32 \u3067\u3042\u308b\u3068\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5f37\u5236\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 a_as_int = a . as ( Int32 ) a_as_int . abs # \u30b3\u30f3\u30d1\u30a4\u30e9\u304c a_as_int \u304c Int32 \u3067\u3042\u308b\u3068\u628a\u63e1\u3057\u3066\u3044\u308b\u306e\u3067\u52d5\u4f5c\u3057\u307e\u3059 as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u884c\u6642\u306b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u305f\u3081\u3001\u3082\u3057 a \u304c Int32 \u3067\u306f\u306a\u3044\u3068\u304d\u306b\u306f \u4f8b\u5916 \u304c\u767a\u751f\u3057\u307e\u3059\u3002 \u307e\u305f\u3001\u5f0f\u306b\u4e0e\u3048\u308b\u5f15\u6570\u306f \u578b \u3067\u3059\u3002 \u3042\u308b\u578b\u3092\u5225\u306e\u578b\u306b\u5f37\u5236\u3059\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002 1 . as ( String ) # \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30a8\u30e9\u30fc Note as \u3092\u4f7f\u3063\u3066\u3082\u3001\u95a2\u9023\u306e\u306a\u3044\u578b\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u306e\u70b9\u3067\u306f\u4ed6\u306e\u8a00\u8a9e\u306e cast \u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002\u6574\u6570\u3084\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3001\u305d\u3057\u3066\u6587\u5b57\u306b\u306f\u3053\u308c\u3089\u306e\u5909\u63db\u306e\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ee3\u66ff\u306b\u306a\u308b\u3082\u306e\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u3067\u8aac\u660e\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u30ad\u30e3\u30b9\u30c8\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"as"},{"location":"syntax_and_semantics/as.html#_1","text":"as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f\u30dd\u30a4\u30f3\u30bf\u578b\u540c\u58eb\u306e\u30ad\u30e3\u30b9\u30c8\u3082\u53ef\u80fd\u3067\u3059\u3002 ptr = Pointer ( Int32 ) . malloc ( 1 ) ptr . as ( Int8 * ) # :: Pointer(Int8) \u3053\u306e\u3068\u304d\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u30c1\u30a7\u30c3\u30af\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002\u30dd\u30a4\u30f3\u30bf\u306f\u5b89\u5168\u3067\u306a\u3044 (unsafe) \u305f\u3081\u3001\u901a\u5e38\u3001\u3053\u306e\u578b\u30ad\u30e3\u30b9\u30c8\u306f C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3084\u30ed\u30fc\u30ec\u30d9\u30eb\u306a\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306e\u307f\u5229\u7528\u3057\u307e\u3059\u3002","title":"\u30dd\u30a4\u30f3\u30bf\u578b\u540c\u58eb\u306e\u5909\u63db"},{"location":"syntax_and_semantics/as.html#_2","text":"\u30dd\u30a4\u30f3\u30bf\u578b\u3068 Reference \u578b\u3092\u76f8\u4e92\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 array = [ 1 , 2 , 3 ] # object_id \u306f\u30e1\u30e2\u30ea\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u8fd4\u3059\u305f\u3081\u3001 # \u305d\u306e\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u30dd\u30a4\u30f3\u30bf\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b ptr = Pointer ( Void ) . new ( array . object_id ) # \u30dd\u30a4\u30f3\u30bf\u3092\u305d\u306e\u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3068\u3001 # \u540c\u4e00\u306e\u5024\u304c\u5f97\u3089\u308c\u308b array2 = ptr . as ( Array ( Int32 )) array2 . same? ( array ) # => true \u3053\u306e\u5834\u5408\u3082\u3001\u30dd\u30a4\u30f3\u30bf\u304c\u7d61\u3080\u51e6\u7406\u306b\u306a\u308b\u305f\u3081\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u30c1\u30a7\u30c3\u30af\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002\u3053\u306e\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u30b1\u30fc\u30b9\u306f\u524d\u8ff0\u306e\u3082\u306e\u3088\u308a\u3082\u7a00\u3067\u3059\u3002\u305f\u3060\u3001\u3053\u308c\u306b\u3088\u3063\u3066 (String \u306a\u3069\u306e) \u30b3\u30a2\u3068\u306a\u308b\u578b\u3092 Crystal \u81ea\u8eab\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u307e\u305f\u3001Reference \u578b\u3092 void \u30dd\u30a4\u30f3\u30bf\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3053\u3068\u3067 C \u306e\u95a2\u6570\u306b\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002","title":"\u30dd\u30a4\u30f3\u30bf\u578b\u3068\u4ed6\u306e\u578b\u306e\u5909\u63db"},{"location":"syntax_and_semantics/as.html#_3","text":"as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u3042\u308b\u5f0f\u3092\u3088\u308a\u300c\u5927\u304d\u306a\u300d\u578b\u3078\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u305f\u3081\u306b\u4f7f\u3048\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 b = a . as ( Int32 | Float64 ) b # :: Int32 | Float64 \u4e0a\u8a18\u3067\u306f\u4e00\u4f53\u4f55\u304c\u5b09\u3057\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u914d\u5217\u306e\u8981\u7d20\u3092 map \u3059\u308b\u5834\u5408\u3067\u306f\u3069\u3046\u3067\u3057\u3087\u3046\uff1f ary = [ 1 , 2 , 3 ] # Int32 | Float64 \u578b\u306e\u914d\u5217 1, 2, 3 \u306b\u3057\u305f\u3044 ary2 = ary . map { | x | x . as ( Int32 | Float64 ) } ary2 # :: Array(Int32 | Float64) ary2 << 1.5 # OK Array#map \u30e1\u30bd\u30c3\u30c9\u306f\u30d6\u30ed\u30c3\u30af\u306e\u8fd4\u3059\u5024\u306e\u578b\u3092\u914d\u5217\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3068\u3057\u307e\u3059\u3002 as \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3051\u308c\u3070\u3001\u63a8\u8ad6\u3055\u308c\u305f\u578b\u306f Int32 \u306a\u306e\u3067\u3001\u305d\u308c\u306b\u5bfe\u3057\u3066 Float64 \u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3002","title":"\u5927\u304d\u306a\u578b\u3078\u306e\u30ad\u30e3\u30b9\u30c8\u306e\u5229\u7528\u65b9\u6cd5"},{"location":"syntax_and_semantics/as.html#_4","text":"\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u30d6\u30ed\u30c3\u30af\u306e\u578b\u3092\u63a8\u8ad6\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u4e92\u3044\u306b\u4f9d\u5b58\u3057\u305f\u518d\u5e30\u7684\u306a\u547c\u3073\u51fa\u3057\u3067\u8d77\u3053\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u3059\u3079\u3066\u306e\u5834\u5408\u3067\u3001 as \u306f\u578b\u3092\u77e5\u3089\u305b\u308b\u305f\u3081\u306b\u4f7f\u3048\u307e\u3059\u3002 some_call { | v | v . method . as ( ExpectedType ) }","title":"\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u30d6\u30ed\u30c3\u30af\u306e\u578b\u3092\u63a8\u8ad6\u3067\u304d\u306a\u3044\u3068\u304d\u306b\u4f7f\u3046"},{"location":"syntax_and_semantics/as_a_suffix.html","text":"\u5f8c\u7f6e if if \u306f\u5f0f\u306b\u5f8c\u7f6e\u3057\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 a = 2 if some_condition # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 if some_condition a = 2 end \u3053\u306e\u65b9\u304c\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u5834\u5408\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002","title":"\u5f8c\u7f6e if"},{"location":"syntax_and_semantics/as_a_suffix.html#if","text":"if \u306f\u5f0f\u306b\u5f8c\u7f6e\u3057\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 a = 2 if some_condition # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 if some_condition a = 2 end \u3053\u306e\u65b9\u304c\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u5834\u5408\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002","title":"\u5f8c\u7f6e if"},{"location":"syntax_and_semantics/as_an_expression.html","text":"\u5f0f\u3068\u3057\u3066\u306e if if \u306f\u5f0f\u3068\u3057\u3066\u3082\u5229\u7528\u3067\u304d\u3066\u3001\u305d\u306e\u5024\u306f\u8a55\u4fa1\u3055\u308c\u305f\u5206\u5c90\u7bc0\u306e\u6700\u5f8c\u306e\u5f0f\u306e\u5024\u306b\u306a\u308a\u307e\u3059\u3002 a = if 2 > 1 3 else 4 end a # => 3 if \u304c\u8a55\u4fa1\u3059\u308b\u5206\u5c90\u7bc0\u304c\u7a7a\u3001\u3082\u3057\u304f\u306f\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u305d\u3053\u306b nil \u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u305f\u306e\u3068\u540c\u3058\u6319\u52d5\u306b\u306a\u308a\u307e\u3059\u3002 if 1 > 2 3 end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 if 1 > 2 3 else nil end # \u4ed6\u306e\u4f8b if 1 > 2 else 3 end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 if 1 > 2 nil else 3 end","title":"\u5f0f\u3068\u3057\u3066\u306e if"},{"location":"syntax_and_semantics/as_an_expression.html#if","text":"if \u306f\u5f0f\u3068\u3057\u3066\u3082\u5229\u7528\u3067\u304d\u3066\u3001\u305d\u306e\u5024\u306f\u8a55\u4fa1\u3055\u308c\u305f\u5206\u5c90\u7bc0\u306e\u6700\u5f8c\u306e\u5f0f\u306e\u5024\u306b\u306a\u308a\u307e\u3059\u3002 a = if 2 > 1 3 else 4 end a # => 3 if \u304c\u8a55\u4fa1\u3059\u308b\u5206\u5c90\u7bc0\u304c\u7a7a\u3001\u3082\u3057\u304f\u306f\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u305d\u3053\u306b nil \u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u305f\u306e\u3068\u540c\u3058\u6319\u52d5\u306b\u306a\u308a\u307e\u3059\u3002 if 1 > 2 3 end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 if 1 > 2 3 else nil end # \u4ed6\u306e\u4f8b if 1 > 2 else 3 end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 if 1 > 2 nil else 3 end","title":"\u5f0f\u3068\u3057\u3066\u306e if"},{"location":"syntax_and_semantics/as_question.html","text":"as? as? \u3068\u3044\u3046\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f as \u306b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\u578b\u304c\u30de\u30c3\u30c1\u3057\u306a\u304b\u3063\u305f\u969b\u306b\u4f8b\u5916\u3092\u6295\u3052\u308b\u306e\u3067\u306f\u306a\u304f nil \u3092\u8fd4\u3059\u3068\u3044\u3046\u70b9\u304c\u7570\u306a\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u30dd\u30a4\u30f3\u30bf\u578b\u3092\u4ed6\u306e\u578b\u3078\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u4f8b: value = rand < 0.5 ? - 3 : nil result = value . as? ( Int32 ) || 10 value . as? ( Int32 ) . try &. abs","title":"as?"},{"location":"syntax_and_semantics/as_question.html#as","text":"as? \u3068\u3044\u3046\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306f as \u306b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\u578b\u304c\u30de\u30c3\u30c1\u3057\u306a\u304b\u3063\u305f\u969b\u306b\u4f8b\u5916\u3092\u6295\u3052\u308b\u306e\u3067\u306f\u306a\u304f nil \u3092\u8fd4\u3059\u3068\u3044\u3046\u70b9\u304c\u7570\u306a\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u30dd\u30a4\u30f3\u30bf\u578b\u3092\u4ed6\u306e\u578b\u3078\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u4f8b: value = rand < 0.5 ? - 3 : nil result = value . as? ( Int32 ) || 10 value . as? ( Int32 ) . try &. abs","title":"as?"},{"location":"syntax_and_semantics/assignment.html","text":"\u4ee3\u5165 \u4ee3\u5165\u306b\u306f\u30a4\u30b3\u30fc\u30eb\u8a18\u53f7 ( = ) \u3092\u4f7f\u3044\u307e\u3059\u3002 # \u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3078\u306e\u4ee3\u5165 local = 1 # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3078\u306e\u4ee3\u5165 @instance = 2 # \u30af\u30e9\u30b9\u5909\u6570\u3078\u306e\u4ee3\u5165 @@class = 3 \u4e0a\u8a18\u306e\u305d\u308c\u305e\u308c\u306e\u5909\u6570\u306e\u7a2e\u985e\u306b\u3064\u3044\u3066\u306f\u6539\u3081\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 = \u3092\u4f7f\u3063\u305f\u4ee3\u5165\u306e\u305f\u3081\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u304c\u3044\u304f\u3064\u304b\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 local += 1 # local = local + 1 \u3068\u540c\u3058 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306e\u6f14\u7b97\u5b50\u3067\u3082\u6709\u52b9 # +, -, *, /, %, |, &, ^, **, <<, >> local ||= 1 # local || (local = 1) \u3068\u540c\u3058 local &&= 1 # local && (local = 1) \u3068\u540c\u3058 \u30e1\u30bd\u30c3\u30c9\u540d\u304c = \u3067\u7d42\u308f\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u306b\u3082\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u304c\u3042\u308a\u307e\u3059\u3002 # \u30bb\u30c3\u30bf\u30fc\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057 person . name = ( \"John\" ) # \u4e0a\u8a18\u306f\u6b21\u3088\u3046\u306b\u66f8\u3051\u308b person . name = \"John\" # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u3059\u308b\u4ee3\u5165 objects . []= ( 2 , 3 ) # \u4e0a\u8a18\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u308b objects [ 2 ] = 3 # \u4ee3\u5165\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3051\u308c\u3069\u3001\u3053\u3046\u3044\u3046\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3082 objects . [] ( 2 , 3 ) # \u4e0a\u8a18\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u308b objects [ 2 , 3 ] = \u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306f\u30bb\u30c3\u30bf\u30fc\u3084\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ee3\u5165\u306b\u5bfe\u3057\u3066\u3082\u6709\u52b9\u3067\u3059\u3002\u3053\u306e\u3068\u304d || \u3068 && \u306f\u3001 []? \u30e1\u30bd\u30c3\u30c9\u3092\u30ad\u30fc\u306e\u5b58\u5728\u306e\u30c1\u30a7\u30c3\u30af\u306b\u4f7f\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 person . age += 1 # person.age = person.age + 1 \u3068\u540c\u3058 person . name ||= \"John\" # person.name || (person.name = \"John\") \u3068\u540c\u3058 person . name &&= \"John\" # person.name && (person.name = \"John\") \u3068\u540c\u3058 objects [ 1 ] += 2 # objects[1] = objects[1] + 2 \u3068\u540c\u3058 objects [ 1 ] ||= 2 # objects[1]? || (objects[1] = 2) \u3068\u540c\u3058 objects [ 1 ] &&= 2 # objects[1]? && (objects[1] = 2) \u3068\u540c\u3058 \u9023\u7d9a\u3057\u305f\u4ee3\u5165 \u9023\u7d9a\u3057\u305f\u4ee3\u5165\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u540c\u3058\u5024\u3092\u8907\u6570\u306e\u5909\u6570\u306b\u4e00\u5ea6\u306b\u4ee3\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 a = b = c = 123 # \u3053\u306e\u3068\u304d a, b, c \u306f\u540c\u3058\u5024\u306b\u306a\u308b a # => 123 b # => 123 c # => 123 \u9023\u7d9a\u3057\u305f\u4ee3\u5165\u306f \u30ed\u30fc\u30ab\u30eb\u5909\u6570 \u306b\u9650\u3089\u305a \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 \u3084 \u30af\u30e9\u30b9\u5909\u6570 \u3001\u30bb\u30c3\u30bf\u30fc\u30e1\u30bd\u30c3\u30c9 (\u540d\u524d\u304c = \u3067\u7d42\u308f\u308b\u30e1\u30bd\u30c3\u30c9) \u306b\u5bfe\u3057\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u591a\u91cd\u4ee3\u5165 \u8907\u6570\u306e\u5f0f\u3092\u30ab\u30f3\u30de\u8a18\u53f7 ( , ) \u3067\u533a\u5207\u3063\u3066\u4ee3\u5165\u3059\u308b\u3068\u3001\u8907\u6570\u306e\u5909\u6570\u306b\u5bfe\u3057\u3066\u540c\u6642\u306b\u5ba3\u8a00/\u4ee3\u5165\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 name , age = \"Crystal\" , 1 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 temp1 = \"Crystal\" temp2 = 1 name = temp1 age = temp2 \u307e\u305f\u3001\u5f0f\u306f\u4e00\u6642\u7684\u306a\u5909\u6570\u306b\u4ee3\u5165\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6b21\u306e\u3088\u3046\u306b1\u884c\u3067\u5909\u6570\u306e\u5024\u3092\u4ea4\u63db\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 a = 1 b = 2 a , b = b , a a # => 2 b # => 1 \u4ee3\u5165\u5f0f\u306e\u53f3\u8fba\u306b1\u3064\u3057\u304b\u5f0f\u304c\u7121\u304b\u3063\u305f\u5834\u5408\u3001\u6b21\u306e\u4f8b\u306e\u3088\u3046\u306b\u5404\u5909\u6570\u306b\u9806\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3057\u3066\u4ee3\u5165\u3057\u3066\u3044\u304d\u307e\u3059\u3002 name , age , source = \"Crystal, 123, GitHub\" . split ( \", \" ) # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 temp = \"Crystal, 123, GitHub\" . split ( \", \" ) name = temp [ 0 ] age = temp [ 1 ] source = temp [ 2 ] \u591a\u91cd\u4ee3\u5165\u306f\u540d\u524d\u304c = \u3067\u7d42\u308f\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u3082\u6709\u52b9\u3067\u3059\u3002 person . name , person . age = \"John\" , 32 # \u4ee5\u4e0b\u306b\u540c\u3058 temp1 = \"John\" temp2 = 32 person . name = temp1 person . age = temp2 \u305d\u3057\u3066\u3001 \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u306e\u4ee3\u5165 ( []= ) \u306e\u5834\u5408\u306b\u3082\u540c\u69d8\u306b\u6709\u52b9\u3067\u3059\u3002 objects [ 1 ] , objects [ 2 ] = 3 , 4 #\u4ee5\u4e0b\u306b\u540c\u3058 temp1 = 3 temp2 = 4 objects [ 1 ] = temp1 objects [ 2 ] = temp2 \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u4efb\u610f\u306e\u4ee3\u5165\u306e\u5de6\u8fba\u306b\u7f6e\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u4ee3\u5165\u306b\u306f\u526f\u4f5c\u7528\u304c\u306a\u304f\u3001\u4ee3\u5165\u3057\u305f\u5024\u3092\u8aad\u307f\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u305b\u3093\u3002 _ = 1 # \u526f\u4f5c\u7528\u306a\u3057 _ = \"123\" # \u526f\u4f5c\u7528\u306a\u3057 puts _ # Error: can't read from _ \u3053\u308c\u306f\u591a\u91cd\u4ee3\u5165\u3067\u3001\u53f3\u8fba\u306e\u3044\u304f\u3064\u304b\u306e\u5024\u306f\u91cd\u8981\u3067\u306f\u306a\u3044\u3088\u3046\u306a\u3068\u304d\u306b\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 before , _ , after = \"main.cr\" . partition ( \".\" ) # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 temp = \"main.cr\" . partition ( \".\" ) before = temp [ 0 ] _ = temp [ 1 ] # \u3053\u306e\u884c\u306f\u526f\u4f5c\u7528\u304c\u306a\u3044 after = temp [ 2 ]","title":"\u4ee3\u5165"},{"location":"syntax_and_semantics/assignment.html#_1","text":"\u4ee3\u5165\u306b\u306f\u30a4\u30b3\u30fc\u30eb\u8a18\u53f7 ( = ) \u3092\u4f7f\u3044\u307e\u3059\u3002 # \u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3078\u306e\u4ee3\u5165 local = 1 # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3078\u306e\u4ee3\u5165 @instance = 2 # \u30af\u30e9\u30b9\u5909\u6570\u3078\u306e\u4ee3\u5165 @@class = 3 \u4e0a\u8a18\u306e\u305d\u308c\u305e\u308c\u306e\u5909\u6570\u306e\u7a2e\u985e\u306b\u3064\u3044\u3066\u306f\u6539\u3081\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 = \u3092\u4f7f\u3063\u305f\u4ee3\u5165\u306e\u305f\u3081\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u304c\u3044\u304f\u3064\u304b\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 local += 1 # local = local + 1 \u3068\u540c\u3058 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306e\u6f14\u7b97\u5b50\u3067\u3082\u6709\u52b9 # +, -, *, /, %, |, &, ^, **, <<, >> local ||= 1 # local || (local = 1) \u3068\u540c\u3058 local &&= 1 # local && (local = 1) \u3068\u540c\u3058 \u30e1\u30bd\u30c3\u30c9\u540d\u304c = \u3067\u7d42\u308f\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u306b\u3082\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u304c\u3042\u308a\u307e\u3059\u3002 # \u30bb\u30c3\u30bf\u30fc\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057 person . name = ( \"John\" ) # \u4e0a\u8a18\u306f\u6b21\u3088\u3046\u306b\u66f8\u3051\u308b person . name = \"John\" # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u3059\u308b\u4ee3\u5165 objects . []= ( 2 , 3 ) # \u4e0a\u8a18\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u308b objects [ 2 ] = 3 # \u4ee3\u5165\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3051\u308c\u3069\u3001\u3053\u3046\u3044\u3046\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3082 objects . [] ( 2 , 3 ) # \u4e0a\u8a18\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u308b objects [ 2 , 3 ] = \u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306f\u30bb\u30c3\u30bf\u30fc\u3084\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ee3\u5165\u306b\u5bfe\u3057\u3066\u3082\u6709\u52b9\u3067\u3059\u3002\u3053\u306e\u3068\u304d || \u3068 && \u306f\u3001 []? \u30e1\u30bd\u30c3\u30c9\u3092\u30ad\u30fc\u306e\u5b58\u5728\u306e\u30c1\u30a7\u30c3\u30af\u306b\u4f7f\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 person . age += 1 # person.age = person.age + 1 \u3068\u540c\u3058 person . name ||= \"John\" # person.name || (person.name = \"John\") \u3068\u540c\u3058 person . name &&= \"John\" # person.name && (person.name = \"John\") \u3068\u540c\u3058 objects [ 1 ] += 2 # objects[1] = objects[1] + 2 \u3068\u540c\u3058 objects [ 1 ] ||= 2 # objects[1]? || (objects[1] = 2) \u3068\u540c\u3058 objects [ 1 ] &&= 2 # objects[1]? && (objects[1] = 2) \u3068\u540c\u3058","title":"\u4ee3\u5165"},{"location":"syntax_and_semantics/assignment.html#_2","text":"\u9023\u7d9a\u3057\u305f\u4ee3\u5165\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u540c\u3058\u5024\u3092\u8907\u6570\u306e\u5909\u6570\u306b\u4e00\u5ea6\u306b\u4ee3\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 a = b = c = 123 # \u3053\u306e\u3068\u304d a, b, c \u306f\u540c\u3058\u5024\u306b\u306a\u308b a # => 123 b # => 123 c # => 123 \u9023\u7d9a\u3057\u305f\u4ee3\u5165\u306f \u30ed\u30fc\u30ab\u30eb\u5909\u6570 \u306b\u9650\u3089\u305a \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 \u3084 \u30af\u30e9\u30b9\u5909\u6570 \u3001\u30bb\u30c3\u30bf\u30fc\u30e1\u30bd\u30c3\u30c9 (\u540d\u524d\u304c = \u3067\u7d42\u308f\u308b\u30e1\u30bd\u30c3\u30c9) \u306b\u5bfe\u3057\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3002","title":"\u9023\u7d9a\u3057\u305f\u4ee3\u5165"},{"location":"syntax_and_semantics/assignment.html#_3","text":"\u8907\u6570\u306e\u5f0f\u3092\u30ab\u30f3\u30de\u8a18\u53f7 ( , ) \u3067\u533a\u5207\u3063\u3066\u4ee3\u5165\u3059\u308b\u3068\u3001\u8907\u6570\u306e\u5909\u6570\u306b\u5bfe\u3057\u3066\u540c\u6642\u306b\u5ba3\u8a00/\u4ee3\u5165\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 name , age = \"Crystal\" , 1 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 temp1 = \"Crystal\" temp2 = 1 name = temp1 age = temp2 \u307e\u305f\u3001\u5f0f\u306f\u4e00\u6642\u7684\u306a\u5909\u6570\u306b\u4ee3\u5165\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6b21\u306e\u3088\u3046\u306b1\u884c\u3067\u5909\u6570\u306e\u5024\u3092\u4ea4\u63db\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 a = 1 b = 2 a , b = b , a a # => 2 b # => 1 \u4ee3\u5165\u5f0f\u306e\u53f3\u8fba\u306b1\u3064\u3057\u304b\u5f0f\u304c\u7121\u304b\u3063\u305f\u5834\u5408\u3001\u6b21\u306e\u4f8b\u306e\u3088\u3046\u306b\u5404\u5909\u6570\u306b\u9806\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3057\u3066\u4ee3\u5165\u3057\u3066\u3044\u304d\u307e\u3059\u3002 name , age , source = \"Crystal, 123, GitHub\" . split ( \", \" ) # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 temp = \"Crystal, 123, GitHub\" . split ( \", \" ) name = temp [ 0 ] age = temp [ 1 ] source = temp [ 2 ] \u591a\u91cd\u4ee3\u5165\u306f\u540d\u524d\u304c = \u3067\u7d42\u308f\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u3082\u6709\u52b9\u3067\u3059\u3002 person . name , person . age = \"John\" , 32 # \u4ee5\u4e0b\u306b\u540c\u3058 temp1 = \"John\" temp2 = 32 person . name = temp1 person . age = temp2 \u305d\u3057\u3066\u3001 \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u306e\u4ee3\u5165 ( []= ) \u306e\u5834\u5408\u306b\u3082\u540c\u69d8\u306b\u6709\u52b9\u3067\u3059\u3002 objects [ 1 ] , objects [ 2 ] = 3 , 4 #\u4ee5\u4e0b\u306b\u540c\u3058 temp1 = 3 temp2 = 4 objects [ 1 ] = temp1 objects [ 2 ] = temp2","title":"\u591a\u91cd\u4ee3\u5165"},{"location":"syntax_and_semantics/assignment.html#_4","text":"\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u4efb\u610f\u306e\u4ee3\u5165\u306e\u5de6\u8fba\u306b\u7f6e\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u4ee3\u5165\u306b\u306f\u526f\u4f5c\u7528\u304c\u306a\u304f\u3001\u4ee3\u5165\u3057\u305f\u5024\u3092\u8aad\u307f\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u305b\u3093\u3002 _ = 1 # \u526f\u4f5c\u7528\u306a\u3057 _ = \"123\" # \u526f\u4f5c\u7528\u306a\u3057 puts _ # Error: can't read from _ \u3053\u308c\u306f\u591a\u91cd\u4ee3\u5165\u3067\u3001\u53f3\u8fba\u306e\u3044\u304f\u3064\u304b\u306e\u5024\u306f\u91cd\u8981\u3067\u306f\u306a\u3044\u3088\u3046\u306a\u3068\u304d\u306b\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 before , _ , after = \"main.cr\" . partition ( \".\" ) # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 temp = \"main.cr\" . partition ( \".\" ) before = temp [ 0 ] _ = temp [ 1 ] # \u3053\u306e\u884c\u306f\u526f\u4f5c\u7528\u304c\u306a\u3044 after = temp [ 2 ]","title":"\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2"},{"location":"syntax_and_semantics/block_forwarding.html","text":"\u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0 \u6355\u6349\u3057\u305f\u30d6\u30ed\u30c3\u30af\u3092\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f\u3001\u5f0f\u306e\u5148\u982d\u306b & \u3092\u4ed8\u3051\u305f\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u5229\u7528\u3057\u307e\u3059\u3002 def capture ( & block ) block end def invoke ( & block ) block . call end proc = capture { puts \"Hello\" } invoke ( & proc ) # prints \"Hello\" \u4e0a\u8a18\u306e\u4f8b\u3067\u3001 invoke \u306f\u30d6\u30ed\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001 proc \u3092\u305d\u306e\u307e\u307e\u6e21\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089 invoke \u304c\u53d7\u3051\u53d6\u308b\u306e\u306f\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3067\u3042\u308a\u3001\u901a\u5e38\u306e\u5f15\u6570\u3067\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001 proc \u3092\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u305f\u3081\u306b\u3001 & \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 invoke ( proc ) # Error: wrong number of arguments for 'invoke' (1 for 0) proc \u3092 yield \u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def capture ( & block ) block end def twice yield yield end proc = capture { puts \"Hello\" } twice & proc \u4e0a\u8a18\u306f\u7c21\u5358\u306b\u4ee5\u4e0b\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 proc = capture { puts \"Hello\" } twice do proc . call end \u3082\u3057\u304f\u306f\u3001 & \u3068 -> \u306e\u69cb\u6587\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 twice &-> { puts \"Hello\" } \u307e\u305f\u306f def say_hello puts \"Hello\" end twice &-> say_hello \u6355\u6349\u3055\u308c\u306a\u3044\u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0 \u6355\u6349\u3055\u308c\u306a\u3044\u30d6\u30ed\u30c3\u30af\u3092\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f yield \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 def foo yield 1 end def wrap_foo puts \"Before foo\" foo do | x | yield x end puts \"After foo\" end wrap_foo do | i | puts i end # Output: # Before foo # 1 # After foo \u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u306b &block \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u6700\u4f4e\u3067\u3082\u5165\u529b\u3059\u308b\u578b\u3092\u6307\u5b9a\u3057\u3066\u304a\u304b\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u304c\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u4f34\u3046\u305f\u3081\u306b\u3001\u901f\u5ea6\u7684\u306b\u3082\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002 def foo yield 1 end def wrap_foo ( & block : Int32 -> _ ) puts \"Before foo\" foo ( & block ) puts \"After foo\" end wrap_foo do | i | puts i end # Output: # Before foo # 1 # After foo yield \u3067\u5341\u5206\u306a\u5834\u5408\u306b\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u52a0\u3048\u3066\u3001\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u3067\u306f break \u3068 next \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3001\u3068\u3044\u3046\u554f\u984c\u3082\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306f &block \u3067\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u5834\u5408\u306b\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002 foo_forward do | i | break # error end \u4e00\u8a00\u3067\u8a00\u3046\u3068\u3001 yield \u3092\u4f7f\u3046\u5834\u5408\u306f &block \u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u907f\u3051\u308b\u3079\u304d\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002","title":"\u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0"},{"location":"syntax_and_semantics/block_forwarding.html#_1","text":"\u6355\u6349\u3057\u305f\u30d6\u30ed\u30c3\u30af\u3092\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f\u3001\u5f0f\u306e\u5148\u982d\u306b & \u3092\u4ed8\u3051\u305f\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u5229\u7528\u3057\u307e\u3059\u3002 def capture ( & block ) block end def invoke ( & block ) block . call end proc = capture { puts \"Hello\" } invoke ( & proc ) # prints \"Hello\" \u4e0a\u8a18\u306e\u4f8b\u3067\u3001 invoke \u306f\u30d6\u30ed\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001 proc \u3092\u305d\u306e\u307e\u307e\u6e21\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089 invoke \u304c\u53d7\u3051\u53d6\u308b\u306e\u306f\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3067\u3042\u308a\u3001\u901a\u5e38\u306e\u5f15\u6570\u3067\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001 proc \u3092\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u305f\u3081\u306b\u3001 & \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 invoke ( proc ) # Error: wrong number of arguments for 'invoke' (1 for 0) proc \u3092 yield \u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def capture ( & block ) block end def twice yield yield end proc = capture { puts \"Hello\" } twice & proc \u4e0a\u8a18\u306f\u7c21\u5358\u306b\u4ee5\u4e0b\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 proc = capture { puts \"Hello\" } twice do proc . call end \u3082\u3057\u304f\u306f\u3001 & \u3068 -> \u306e\u69cb\u6587\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 twice &-> { puts \"Hello\" } \u307e\u305f\u306f def say_hello puts \"Hello\" end twice &-> say_hello","title":"\u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0"},{"location":"syntax_and_semantics/block_forwarding.html#_2","text":"\u6355\u6349\u3055\u308c\u306a\u3044\u30d6\u30ed\u30c3\u30af\u3092\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f yield \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 def foo yield 1 end def wrap_foo puts \"Before foo\" foo do | x | yield x end puts \"After foo\" end wrap_foo do | i | puts i end # Output: # Before foo # 1 # After foo \u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u306b &block \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u6700\u4f4e\u3067\u3082\u5165\u529b\u3059\u308b\u578b\u3092\u6307\u5b9a\u3057\u3066\u304a\u304b\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u304c\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u4f34\u3046\u305f\u3081\u306b\u3001\u901f\u5ea6\u7684\u306b\u3082\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002 def foo yield 1 end def wrap_foo ( & block : Int32 -> _ ) puts \"Before foo\" foo ( & block ) puts \"After foo\" end wrap_foo do | i | puts i end # Output: # Before foo # 1 # After foo yield \u3067\u5341\u5206\u306a\u5834\u5408\u306b\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u52a0\u3048\u3066\u3001\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u3067\u306f break \u3068 next \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3001\u3068\u3044\u3046\u554f\u984c\u3082\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306f &block \u3067\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u5834\u5408\u306b\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002 foo_forward do | i | break # error end \u4e00\u8a00\u3067\u8a00\u3046\u3068\u3001 yield \u3092\u4f7f\u3046\u5834\u5408\u306f &block \u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u907f\u3051\u308b\u3079\u304d\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002","title":"\u6355\u6349\u3055\u308c\u306a\u3044\u30d6\u30ed\u30c3\u30af\u306e\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0"},{"location":"syntax_and_semantics/blocks_and_procs.html","text":"\u30d6\u30ed\u30c3\u30af\u3068 Proc \u30e1\u30bd\u30c3\u30c9\u306f\u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u3092\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u305d\u306e\u30d6\u30ed\u30c3\u30af\u306f yield \u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u3088\u3063\u3066\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice yield yield end twice do puts \"Hello!\" end \u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u5404 yield \u3054\u3068\u306b\u3001\u8a082\u56de\u306e \"Hello!\" \u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 \u30d6\u30ed\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001\u5358\u7d14\u306b yield \u3092\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u4f7f\u3044\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u308c\u3092\u30d6\u30ed\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3068\u8a8d\u8b58\u3057\u307e\u3059\u3002\u30c0\u30df\u30fc\u306e\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067\u3001\u4e0a\u8a18\u3092\u3088\u308a\u660e\u78ba\u306b\u793a\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u5148\u982d\u304c\u30a2\u30f3\u30d1\u30b5\u30f3\u30c9 ( & ) \u306e\u5f15\u6570\u3092\u6700\u5f8c\u306e\u5f15\u6570\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 def twice ( & block ) yield yield end \u30d6\u30ed\u30c3\u30af\u3092\u6e21\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u306b\u306f\u3001 do ... end \u304b { ... } \u3092\u5229\u7528\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3059\u3079\u3066\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002 twice () do puts \"Hello!\" end twice do puts \"Hello!\" end twice { puts \"Hello!\" } do ... end \u3068 { ... } \u306e\u9055\u3044\u306f\u3001 do ... end \u306f\u6700\u3082\u5de6\u306e\u547c\u3073\u51fa\u3057\u306b\u6e21\u3055\u308c\u307e\u3059\u304c\u3001 { ... } \u306f\u6700\u3082\u53f3\u306b\u3042\u308b\u547c\u3073\u51fa\u3057\u306b\u6e21\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 foo bar do something end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 foo ( bar ) do something end foo bar { something } # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 foo ( bar { something }) \u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u7406\u7531\u306f\u30c9\u30e1\u30a4\u30f3\u56fa\u6709\u8a00\u8a9e (DSL) \u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u3001 do ... end \u304c\u81ea\u7136\u306a\u82f1\u8a9e\u306e\u3088\u3046\u306b\u8aad\u307f\u4e0b\u305b\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002 open file \"foo.cr\" do something end # \u4ee5\u4e0b\u3068\u540c\u3058 open ( file ( \"foo.cr\" )) do end \u4e0a\u8a18\u3092\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 open ( file ( \"foo.cr\" ) do end ) \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u30d6\u30ed\u30c3\u30af\u3092\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\u3068\u305d\u3046\u3067\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u306f\u5225\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u3042\u308b\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 yield \u306e\u5f15\u6570 yield \u5f0f\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3068\u4f3c\u3066\u3044\u3066\u3001\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice yield 1 yield 2 end twice do | i | puts \"Got #{ i } \" end \u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068 \"Got 1\" \u305d\u3057\u3066 \"Got 2\" \u3068\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 \u6ce2\u30ab\u30c3\u30b3\u3092\u4f7f\u3063\u305f\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 twice { | i | puts \"Got #{ i } \" } \u8907\u6570\u306e\u5024\u3092 yield \u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def many yield 1 , 2 , 3 end many do | x , y , z | puts x + y + z end # Output: 6 \u30d6\u30ed\u30c3\u30af\u306b\u6307\u5b9a\u3059\u308b\u306e\u304c yield \u3055\u308c\u308b\u5f15\u6570\u306e\u6570\u3088\u308a\u5c11\u306a\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002 def many yield 1 , 2 , 3 end many do | x , y | puts x + y end # Output: 3 \u3057\u304b\u3057 yield \u3055\u308c\u305f\u5f15\u6570\u306e\u6570\u3088\u308a\u3082\u591a\u304f\u306e\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306f\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 def twice yield yield end twice do | i | # Error: too many block parameters end \u30d6\u30ed\u30c3\u30af\u306e\u5f15\u6570\u306f\u3059\u3079\u3066\u306e yield \u5f0f\u306b\u5fdc\u3058\u305f\u578b\u3092\u6301\u3061\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def some yield 1 , 'a' yield true , \"hello\" yield 2 , nil end some do | first , second | # first \u306f Int32 | Bool # second \u306f Char | String | Nil end \u30d6\u30ed\u30c3\u30af\u5f15\u6570\u306b \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 \u3082\u4f7f\u3048\u307e\u3059\u3002 def pairs yield 1 , 2 yield 2 , 4 yield 3 , 6 end pairs do | _ , second | print second end # Output: 246 \u5358\u4e00\u5f15\u6570\u306e\u5834\u5408\u306e\u77ed\u7e2e\u8a18\u6cd5 \u30d6\u30ed\u30c3\u30af\u304c\u5358\u4e00\u306e\u5f15\u6570\u3068\u305d\u308c\u306b\u5bfe\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u307f\u3067\u3042\u308b\u5834\u5408\u3001\u30d6\u30ed\u30c3\u30af\u306f\u3088\u308a\u77ed\u3044\u8a18\u6cd5\u3067\u7f6e\u304d\u63db\u3048\u308c\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 method do | param | param . some_method end and method { | param | param . some_method } \u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002 method &. some_method \u3042\u308b\u3044\u306f\u3053\u306e\u3088\u3046\u306b\u3082\u3001 method ( &. some_method ) \u4e21\u65b9\u306e\u5834\u5408\u3067\u3001 &.some_method \u306f method \u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5f15\u6570\u306f\u610f\u5473\u7684\u306b\u306f\u30d6\u30ed\u30c3\u30af\u3068\u540c\u69d8\u3067\u3059\u3002\u3053\u308c\u306f\u5358\u306a\u308b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3067\u3042\u308a\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u306e\u6b20\u70b9\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30e1\u30bd\u30c3\u30c9\u304c\u4ed6\u306e\u5f15\u6570\u3092\u8981\u6c42\u3059\u308b\u5834\u5408\u3001\u77ed\u7e2e\u53e5\u6cd5\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3055\u308c\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002 [ \"a\" , \"b\" ]. join ( \",\" , &. upcase ) \u3053\u308c\u306f\u6b21\u306b\u7b49\u3057\u3044\u3067\u3059\u3002 [ \"a\" , \"b\" ]. join ( \",\" ) { | s | s . upcase } \u77ed\u7e2e\u8a18\u6cd5\u306b\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 [ \"i\" , \"o\" ]. join ( \",\" , &. upcase ( Unicode :: CaseOptions :: Turkic )) \u6f14\u7b97\u5b50\u306e\u5834\u5408\u3082\u540c\u69d8\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 method &. + ( 2 ) method ( &. [index ] ) yield \u306e\u5024 yield \u5f0f\u81ea\u4f53\u3082\u5024\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u305d\u308c\u306f\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5f8c\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice v1 = yield 1 puts v1 v2 = yield 2 puts v2 end twice do | i | i + 1 end \u4e0a\u8a18\u3067\u306f \"2\" \u3068 \"3\" \u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 yield \u5f0f\u306e\u5024\u306f\u3001\u4e3b\u306b\u5024\u306e\u5909\u63db\u3084\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u969b\u306b\u6709\u52b9\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u6700\u3082\u308f\u304b\u308a\u3084\u3059\u3044\u4f8b\u306f Enumerable#map \u3068 Enumerable#select \u3067\u3057\u3087\u3046\u3002 ary = [ 1 , 2 , 3 ] ary . map { | x | x + 1 } # => [2, 3, 4] ary . select { | x | x % 2 == 1 } # => [1, 3] 1\u3064\u7c21\u5358\u306a\u5909\u63db\u30e1\u30bd\u30c3\u30c9\u3092\u4f8b\u306b\u3042\u3052\u307e\u3059\u3002 def transform ( value ) yield value end transform ( 1 ) { | x | x + 1 } # => 2 \u3053\u306e\u6700\u5f8c\u306e\u5f0f\u306e\u5b9f\u884c\u7d50\u679c\u306f 2 \u306b\u306a\u308a\u307e\u3059\u3002 transform \u30e1\u30bd\u30c3\u30c9\u306e\u6700\u5f8c\u306e\u5f0f\u306f yield \u3067\u3042\u308a\u3001\u305d\u3057\u3066\u305d\u306e\u5024\u306f\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5f8c\u306e\u5f0f\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002 \u578b\u5236\u7d04 yield \u3067\u4f7f\u3046\u30d6\u30ed\u30c3\u30af\u306e\u578b\u3092 &block \u306b\u3088\u3063\u3066\u5236\u7d04\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def transform_int ( start : Int32 , & block : Int32 -> Int32 ) result = yield start result * 2 end transform_int ( 3 ) { | x | x + 2 } # => 10 transform_int ( 3 ) { | x | \"foo\" } # Error: expected block to return Int32, not String break \u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u306b break \u5f0f\u304c\u3042\u308b\u3068\u3001\u305d\u3053\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u629c\u3051\u307e\u3059\u3002 def thrice puts \"Before 1\" yield 1 puts \"Before 2\" yield 2 puts \"Before 3\" yield 3 puts \"After 3\" end thrice do | i | if i == 2 break end end \u4e0a\u8a18\u306f \"Before 1\" \u305d\u3057\u3066 \"Before 2\" \u3092\u51fa\u529b\u3057\u307e\u3059\u3002 break \u304c\u3042\u308b\u305f\u3081\u3001 thrice \u30e1\u30bd\u30c3\u30c9\u304c puts \"Before 3\" \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 break \u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u305d\u308c\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice yield 1 yield 2 end twice { | i | i + 1 } # => 3 twice { | i | break \"hello\" } # => \"hello\" \u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u306e\u3068\u304d\u306e\u5024\u306f\u3001 twice \u30e1\u30bd\u30c3\u30c9\u304c yield \u3055\u308c\u3066\u3044\u308b\u305f\u3081\u30d6\u30ed\u30c3\u30af\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u4e00\u65b92\u756a\u76ee\u306e\u547c\u3073\u51fa\u3057\u3067\u306f break \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5024\u304c \"hello\" \u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u3082\u3057\u3042\u308b\u6761\u4ef6\u306b\u3088\u3063\u3066 break \u3059\u308b\u5834\u5408\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u306f\u3001\u30d6\u30ed\u30c3\u30af\u306e\u623b\u308a\u5024\u306e\u578b\u3068\u3059\u3079\u3066\u306e break \u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u306a\u308a\u307e\u3059\u3002 value = twice do | i | if i == 1 break \"hello\" end i + 1 end value # :: Int32 | String break \u304c\u8907\u6570\u306e\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u306f\u81ea\u52d5\u7684\u306b Tuple \u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 values = twice { break 1 , 2 } values # => {1, 2} break \u304c\u5f15\u6570\u3092\u53d6\u3089\u306a\u3044\u5834\u5408\u3001 nil \u30921\u3064\u53d7\u3051\u53d6\u3063\u305f\u306e\u3068\u540c\u3058\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 value = twice { break } value # => nil next \u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u306b next \u5f0f\u304c\u3042\u308b\u3068\u305d\u3053\u3067\u3001 (\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u306a\u304f) \u30d6\u30ed\u30c3\u30af\u3092\u629c\u3051\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice yield 1 yield 2 end twice do | i | if i == 1 puts \"Skipping 1\" next end puts \"Got #{ i } \" end # Output: # Skipping 1 # Got 2 next \u5f0f\u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u3068\u304d\u3001\u53d7\u3051\u53d6\u3063\u305f\u5024\u306f\u305d\u306e\u30d6\u30ed\u30c3\u30af\u3092\u5b9f\u884c\u3057\u305f yield \u5f0f\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002 def twice v1 = yield 1 puts v1 v2 = yield 2 puts v2 end twice do | i | if i == 1 next 10 end i + 1 end # Output # 10 # 3 next \u304c\u8907\u6570\u306e\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u306f\u81ea\u52d5\u7684\u306b Tuple \u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u5f15\u6570\u3092\u53d6\u3089\u306a\u3044\u5834\u5408\u306b\u306f\u3001 nil \u30921\u3064\u53d7\u3051\u53d6\u3063\u305f\u306e\u3068\u540c\u3058\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 with ... yield yield \u5f0f\u306b with \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3046\u3068\u3001\u30d6\u30ed\u30c3\u30af\u5185\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ec\u30b7\u30fc\u30d0\u3068\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Foo def one 1 end def yield_with_self with self yield end def yield_normally yield end end def one \"one\" end Foo . new . yield_with_self { one } # => 1 Foo . new . yield_normally { one } # => \"one\" \u30d6\u30ed\u30c3\u30af\u5f15\u6570\u306e\u30a2\u30f3\u30d1\u30c3\u30af \u62ec\u5f27\u3067\u56f2\u3080\u3053\u3068\u3067\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u30a2\u30f3\u30d1\u30c3\u30af\u3067\u304d\u307e\u3059\u3002 array = [ { 1 , \"one\" }, { 2 , \"two\" } ] array . each do | ( number , word ) | puts \" #{ number } : #{ word } \" end \u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306b\u306a\u308a\u307e\u3059\u3002 array = [ { 1 , \"one\" }, { 2 , \"two\" } ] array . each do | arg | number = arg [ 0 ] word = arg [ 1 ] puts \" #{ number } : #{ word } \" end \u6574\u6570\u306e\u6e21\u305b\u308b [] \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3069\u306e\u3088\u3046\u306a\u578b\u306e\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u306b\u5bfe\u3057\u3066\u3082\u30a2\u30f3\u30d1\u30c3\u30af\u306f\u53ef\u80fd\u3067\u3059\u3002 \u307e\u305f\u3001\u5f15\u6570\u304c Tuple \u306e\u307f\u3067\u3042\u308c\u3070\u3001\u62ec\u5f27\u304c\u306a\u304f\u3066\u3082\u81ea\u52d5\u3067\u5c55\u958b\u3055\u308c\u307e\u3059\u3002 array = [ { 1 , \"one\" , true }, { 2 , \"two\" , false } ] array . each do | number , word , bool | puts \" #{ number } : #{ word } #{ bool } \" end \u4f8b\u3048\u3070 Hash(K, V)#each \u306f Tuple(K, V) \u3092\u6e21\u3059\u306e\u3067\u3001\u81ea\u52d5\u5c55\u958b\u304c\u4e0a\u624b\u304f\u6a5f\u80fd\u3057\u307e\u3059\u3002 h = { \"foo\" => \"bar\" } h . each do | key , value | key # => \"foo\" value # => \"bar\" end \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 \u30d6\u30ed\u30c3\u30af\u3092 yield \u3059\u308b\u3068\u304d\u3001\u305d\u306e\u30d6\u30ed\u30c3\u30af\u306f \u5e38\u306b \u30a4\u30f3\u30e9\u30a4\u30f3\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\u30af\u30ed\u30fc\u30b8\u30e3\u3084\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3001\u305d\u3057\u3066\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306a\u3069\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u6b21\u306e\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002 def twice yield 1 yield 2 end twice do | i | puts \"Got: #{ i } \" end \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3068\u5b8c\u5168\u306b\u540c\u3058\u3067\u3059\u3002 i = 1 puts \"Got: #{ i } \" i = 2 puts \"Got: #{ i } \" \u4f8b\u3048\u3070\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f times \u3068\u3044\u3046\u6574\u6570\u578b\u306b\u5bfe\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u4f7f\u3046\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 3 . times do | i | puts i end \u3068\u3066\u3082\u8aad\u307f\u3084\u3059\u3044\u3067\u3059\u304c\u3001\u3053\u308c\u306f C \u306b\u30eb\u30fc\u30d7\u306e\u3088\u3046\u306b\u9ad8\u901f\u306b\u52d5\u304f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u7b54\u3048\u306f YES \u3067\u3059\u3002 Int#times \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 struct Int def times i = 0 while i < self yield i i += 1 end end end \u88dc\u8db3\u3055\u308c\u306a\u3044\u30d6\u30ed\u30c3\u30af (non-captured block) \u306f\u5e38\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u4e0a\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3068 \u307e\u3063\u305f\u304f\u540c\u3058 \u3067\u3059\u3002 i = 0 while i < 3 puts i i += 1 end \u30b3\u30fc\u30c9\u306e\u8aad\u307f\u3084\u3059\u3055\u3084\u518d\u5229\u7528\u6027\u306e\u305f\u3081\u306b\u7a4d\u6975\u7684\u306b\u30d6\u30ed\u30c3\u30af\u3092\u5229\u7528\u3057\u307e\u3057\u3087\u3046\u3002\u305d\u308c\u304c\u5b9f\u884c\u6642\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5f71\u97ff\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"\u30d6\u30ed\u30c3\u30af\u3068 Proc"},{"location":"syntax_and_semantics/blocks_and_procs.html#proc","text":"\u30e1\u30bd\u30c3\u30c9\u306f\u30b3\u30fc\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u3092\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u305d\u306e\u30d6\u30ed\u30c3\u30af\u306f yield \u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u3088\u3063\u3066\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice yield yield end twice do puts \"Hello!\" end \u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u5404 yield \u3054\u3068\u306b\u3001\u8a082\u56de\u306e \"Hello!\" \u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 \u30d6\u30ed\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001\u5358\u7d14\u306b yield \u3092\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u4f7f\u3044\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u308c\u3092\u30d6\u30ed\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3068\u8a8d\u8b58\u3057\u307e\u3059\u3002\u30c0\u30df\u30fc\u306e\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067\u3001\u4e0a\u8a18\u3092\u3088\u308a\u660e\u78ba\u306b\u793a\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u5148\u982d\u304c\u30a2\u30f3\u30d1\u30b5\u30f3\u30c9 ( & ) \u306e\u5f15\u6570\u3092\u6700\u5f8c\u306e\u5f15\u6570\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 def twice ( & block ) yield yield end \u30d6\u30ed\u30c3\u30af\u3092\u6e21\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u306b\u306f\u3001 do ... end \u304b { ... } \u3092\u5229\u7528\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3059\u3079\u3066\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002 twice () do puts \"Hello!\" end twice do puts \"Hello!\" end twice { puts \"Hello!\" } do ... end \u3068 { ... } \u306e\u9055\u3044\u306f\u3001 do ... end \u306f\u6700\u3082\u5de6\u306e\u547c\u3073\u51fa\u3057\u306b\u6e21\u3055\u308c\u307e\u3059\u304c\u3001 { ... } \u306f\u6700\u3082\u53f3\u306b\u3042\u308b\u547c\u3073\u51fa\u3057\u306b\u6e21\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 foo bar do something end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 foo ( bar ) do something end foo bar { something } # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 foo ( bar { something }) \u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u7406\u7531\u306f\u30c9\u30e1\u30a4\u30f3\u56fa\u6709\u8a00\u8a9e (DSL) \u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u3001 do ... end \u304c\u81ea\u7136\u306a\u82f1\u8a9e\u306e\u3088\u3046\u306b\u8aad\u307f\u4e0b\u305b\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002 open file \"foo.cr\" do something end # \u4ee5\u4e0b\u3068\u540c\u3058 open ( file ( \"foo.cr\" )) do end \u4e0a\u8a18\u3092\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 open ( file ( \"foo.cr\" ) do end )","title":"\u30d6\u30ed\u30c3\u30af\u3068 Proc"},{"location":"syntax_and_semantics/blocks_and_procs.html#_1","text":"\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u30d6\u30ed\u30c3\u30af\u3092\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\u3068\u305d\u3046\u3067\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u306f\u5225\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u3042\u308b\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002","title":"\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9"},{"location":"syntax_and_semantics/blocks_and_procs.html#yield","text":"yield \u5f0f\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3068\u4f3c\u3066\u3044\u3066\u3001\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice yield 1 yield 2 end twice do | i | puts \"Got #{ i } \" end \u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068 \"Got 1\" \u305d\u3057\u3066 \"Got 2\" \u3068\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 \u6ce2\u30ab\u30c3\u30b3\u3092\u4f7f\u3063\u305f\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 twice { | i | puts \"Got #{ i } \" } \u8907\u6570\u306e\u5024\u3092 yield \u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def many yield 1 , 2 , 3 end many do | x , y , z | puts x + y + z end # Output: 6 \u30d6\u30ed\u30c3\u30af\u306b\u6307\u5b9a\u3059\u308b\u306e\u304c yield \u3055\u308c\u308b\u5f15\u6570\u306e\u6570\u3088\u308a\u5c11\u306a\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002 def many yield 1 , 2 , 3 end many do | x , y | puts x + y end # Output: 3 \u3057\u304b\u3057 yield \u3055\u308c\u305f\u5f15\u6570\u306e\u6570\u3088\u308a\u3082\u591a\u304f\u306e\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306f\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 def twice yield yield end twice do | i | # Error: too many block parameters end \u30d6\u30ed\u30c3\u30af\u306e\u5f15\u6570\u306f\u3059\u3079\u3066\u306e yield \u5f0f\u306b\u5fdc\u3058\u305f\u578b\u3092\u6301\u3061\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def some yield 1 , 'a' yield true , \"hello\" yield 2 , nil end some do | first , second | # first \u306f Int32 | Bool # second \u306f Char | String | Nil end \u30d6\u30ed\u30c3\u30af\u5f15\u6570\u306b \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 \u3082\u4f7f\u3048\u307e\u3059\u3002 def pairs yield 1 , 2 yield 2 , 4 yield 3 , 6 end pairs do | _ , second | print second end # Output: 246","title":"yield \u306e\u5f15\u6570"},{"location":"syntax_and_semantics/blocks_and_procs.html#_2","text":"\u30d6\u30ed\u30c3\u30af\u304c\u5358\u4e00\u306e\u5f15\u6570\u3068\u305d\u308c\u306b\u5bfe\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u307f\u3067\u3042\u308b\u5834\u5408\u3001\u30d6\u30ed\u30c3\u30af\u306f\u3088\u308a\u77ed\u3044\u8a18\u6cd5\u3067\u7f6e\u304d\u63db\u3048\u308c\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 method do | param | param . some_method end and method { | param | param . some_method } \u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002 method &. some_method \u3042\u308b\u3044\u306f\u3053\u306e\u3088\u3046\u306b\u3082\u3001 method ( &. some_method ) \u4e21\u65b9\u306e\u5834\u5408\u3067\u3001 &.some_method \u306f method \u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5f15\u6570\u306f\u610f\u5473\u7684\u306b\u306f\u30d6\u30ed\u30c3\u30af\u3068\u540c\u69d8\u3067\u3059\u3002\u3053\u308c\u306f\u5358\u306a\u308b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3067\u3042\u308a\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u306e\u6b20\u70b9\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30e1\u30bd\u30c3\u30c9\u304c\u4ed6\u306e\u5f15\u6570\u3092\u8981\u6c42\u3059\u308b\u5834\u5408\u3001\u77ed\u7e2e\u53e5\u6cd5\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3055\u308c\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002 [ \"a\" , \"b\" ]. join ( \",\" , &. upcase ) \u3053\u308c\u306f\u6b21\u306b\u7b49\u3057\u3044\u3067\u3059\u3002 [ \"a\" , \"b\" ]. join ( \",\" ) { | s | s . upcase } \u77ed\u7e2e\u8a18\u6cd5\u306b\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 [ \"i\" , \"o\" ]. join ( \",\" , &. upcase ( Unicode :: CaseOptions :: Turkic )) \u6f14\u7b97\u5b50\u306e\u5834\u5408\u3082\u540c\u69d8\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 method &. + ( 2 ) method ( &. [index ] )","title":"\u5358\u4e00\u5f15\u6570\u306e\u5834\u5408\u306e\u77ed\u7e2e\u8a18\u6cd5"},{"location":"syntax_and_semantics/blocks_and_procs.html#yield_1","text":"yield \u5f0f\u81ea\u4f53\u3082\u5024\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u305d\u308c\u306f\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5f8c\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice v1 = yield 1 puts v1 v2 = yield 2 puts v2 end twice do | i | i + 1 end \u4e0a\u8a18\u3067\u306f \"2\" \u3068 \"3\" \u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 yield \u5f0f\u306e\u5024\u306f\u3001\u4e3b\u306b\u5024\u306e\u5909\u63db\u3084\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u969b\u306b\u6709\u52b9\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u6700\u3082\u308f\u304b\u308a\u3084\u3059\u3044\u4f8b\u306f Enumerable#map \u3068 Enumerable#select \u3067\u3057\u3087\u3046\u3002 ary = [ 1 , 2 , 3 ] ary . map { | x | x + 1 } # => [2, 3, 4] ary . select { | x | x % 2 == 1 } # => [1, 3] 1\u3064\u7c21\u5358\u306a\u5909\u63db\u30e1\u30bd\u30c3\u30c9\u3092\u4f8b\u306b\u3042\u3052\u307e\u3059\u3002 def transform ( value ) yield value end transform ( 1 ) { | x | x + 1 } # => 2 \u3053\u306e\u6700\u5f8c\u306e\u5f0f\u306e\u5b9f\u884c\u7d50\u679c\u306f 2 \u306b\u306a\u308a\u307e\u3059\u3002 transform \u30e1\u30bd\u30c3\u30c9\u306e\u6700\u5f8c\u306e\u5f0f\u306f yield \u3067\u3042\u308a\u3001\u305d\u3057\u3066\u305d\u306e\u5024\u306f\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5f8c\u306e\u5f0f\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002","title":"yield \u306e\u5024"},{"location":"syntax_and_semantics/blocks_and_procs.html#_3","text":"yield \u3067\u4f7f\u3046\u30d6\u30ed\u30c3\u30af\u306e\u578b\u3092 &block \u306b\u3088\u3063\u3066\u5236\u7d04\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def transform_int ( start : Int32 , & block : Int32 -> Int32 ) result = yield start result * 2 end transform_int ( 3 ) { | x | x + 2 } # => 10 transform_int ( 3 ) { | x | \"foo\" } # Error: expected block to return Int32, not String","title":"\u578b\u5236\u7d04"},{"location":"syntax_and_semantics/blocks_and_procs.html#break","text":"\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u306b break \u5f0f\u304c\u3042\u308b\u3068\u3001\u305d\u3053\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u629c\u3051\u307e\u3059\u3002 def thrice puts \"Before 1\" yield 1 puts \"Before 2\" yield 2 puts \"Before 3\" yield 3 puts \"After 3\" end thrice do | i | if i == 2 break end end \u4e0a\u8a18\u306f \"Before 1\" \u305d\u3057\u3066 \"Before 2\" \u3092\u51fa\u529b\u3057\u307e\u3059\u3002 break \u304c\u3042\u308b\u305f\u3081\u3001 thrice \u30e1\u30bd\u30c3\u30c9\u304c puts \"Before 3\" \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 break \u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u305d\u308c\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice yield 1 yield 2 end twice { | i | i + 1 } # => 3 twice { | i | break \"hello\" } # => \"hello\" \u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u306e\u3068\u304d\u306e\u5024\u306f\u3001 twice \u30e1\u30bd\u30c3\u30c9\u304c yield \u3055\u308c\u3066\u3044\u308b\u305f\u3081\u30d6\u30ed\u30c3\u30af\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u4e00\u65b92\u756a\u76ee\u306e\u547c\u3073\u51fa\u3057\u3067\u306f break \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5024\u304c \"hello\" \u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u3082\u3057\u3042\u308b\u6761\u4ef6\u306b\u3088\u3063\u3066 break \u3059\u308b\u5834\u5408\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u306f\u3001\u30d6\u30ed\u30c3\u30af\u306e\u623b\u308a\u5024\u306e\u578b\u3068\u3059\u3079\u3066\u306e break \u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u306a\u308a\u307e\u3059\u3002 value = twice do | i | if i == 1 break \"hello\" end i + 1 end value # :: Int32 | String break \u304c\u8907\u6570\u306e\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u306f\u81ea\u52d5\u7684\u306b Tuple \u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 values = twice { break 1 , 2 } values # => {1, 2} break \u304c\u5f15\u6570\u3092\u53d6\u3089\u306a\u3044\u5834\u5408\u3001 nil \u30921\u3064\u53d7\u3051\u53d6\u3063\u305f\u306e\u3068\u540c\u3058\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 value = twice { break } value # => nil","title":"break"},{"location":"syntax_and_semantics/blocks_and_procs.html#next","text":"\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u306b next \u5f0f\u304c\u3042\u308b\u3068\u305d\u3053\u3067\u3001 (\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u306a\u304f) \u30d6\u30ed\u30c3\u30af\u3092\u629c\u3051\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def twice yield 1 yield 2 end twice do | i | if i == 1 puts \"Skipping 1\" next end puts \"Got #{ i } \" end # Output: # Skipping 1 # Got 2 next \u5f0f\u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u3068\u304d\u3001\u53d7\u3051\u53d6\u3063\u305f\u5024\u306f\u305d\u306e\u30d6\u30ed\u30c3\u30af\u3092\u5b9f\u884c\u3057\u305f yield \u5f0f\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002 def twice v1 = yield 1 puts v1 v2 = yield 2 puts v2 end twice do | i | if i == 1 next 10 end i + 1 end # Output # 10 # 3 next \u304c\u8907\u6570\u306e\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u306f\u81ea\u52d5\u7684\u306b Tuple \u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u5f15\u6570\u3092\u53d6\u3089\u306a\u3044\u5834\u5408\u306b\u306f\u3001 nil \u30921\u3064\u53d7\u3051\u53d6\u3063\u305f\u306e\u3068\u540c\u3058\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002","title":"next"},{"location":"syntax_and_semantics/blocks_and_procs.html#with-yield","text":"yield \u5f0f\u306b with \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3046\u3068\u3001\u30d6\u30ed\u30c3\u30af\u5185\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ec\u30b7\u30fc\u30d0\u3068\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Foo def one 1 end def yield_with_self with self yield end def yield_normally yield end end def one \"one\" end Foo . new . yield_with_self { one } # => 1 Foo . new . yield_normally { one } # => \"one\"","title":"with ... yield"},{"location":"syntax_and_semantics/blocks_and_procs.html#_4","text":"\u62ec\u5f27\u3067\u56f2\u3080\u3053\u3068\u3067\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u30a2\u30f3\u30d1\u30c3\u30af\u3067\u304d\u307e\u3059\u3002 array = [ { 1 , \"one\" }, { 2 , \"two\" } ] array . each do | ( number , word ) | puts \" #{ number } : #{ word } \" end \u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306b\u306a\u308a\u307e\u3059\u3002 array = [ { 1 , \"one\" }, { 2 , \"two\" } ] array . each do | arg | number = arg [ 0 ] word = arg [ 1 ] puts \" #{ number } : #{ word } \" end \u6574\u6570\u306e\u6e21\u305b\u308b [] \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3069\u306e\u3088\u3046\u306a\u578b\u306e\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u306b\u5bfe\u3057\u3066\u3082\u30a2\u30f3\u30d1\u30c3\u30af\u306f\u53ef\u80fd\u3067\u3059\u3002 \u307e\u305f\u3001\u5f15\u6570\u304c Tuple \u306e\u307f\u3067\u3042\u308c\u3070\u3001\u62ec\u5f27\u304c\u306a\u304f\u3066\u3082\u81ea\u52d5\u3067\u5c55\u958b\u3055\u308c\u307e\u3059\u3002 array = [ { 1 , \"one\" , true }, { 2 , \"two\" , false } ] array . each do | number , word , bool | puts \" #{ number } : #{ word } #{ bool } \" end \u4f8b\u3048\u3070 Hash(K, V)#each \u306f Tuple(K, V) \u3092\u6e21\u3059\u306e\u3067\u3001\u81ea\u52d5\u5c55\u958b\u304c\u4e0a\u624b\u304f\u6a5f\u80fd\u3057\u307e\u3059\u3002 h = { \"foo\" => \"bar\" } h . each do | key , value | key # => \"foo\" value # => \"bar\" end","title":"\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u306e\u30a2\u30f3\u30d1\u30c3\u30af"},{"location":"syntax_and_semantics/blocks_and_procs.html#_5","text":"\u30d6\u30ed\u30c3\u30af\u3092 yield \u3059\u308b\u3068\u304d\u3001\u305d\u306e\u30d6\u30ed\u30c3\u30af\u306f \u5e38\u306b \u30a4\u30f3\u30e9\u30a4\u30f3\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\u30af\u30ed\u30fc\u30b8\u30e3\u3084\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3001\u305d\u3057\u3066\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306a\u3069\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u6b21\u306e\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002 def twice yield 1 yield 2 end twice do | i | puts \"Got: #{ i } \" end \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3068\u5b8c\u5168\u306b\u540c\u3058\u3067\u3059\u3002 i = 1 puts \"Got: #{ i } \" i = 2 puts \"Got: #{ i } \" \u4f8b\u3048\u3070\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f times \u3068\u3044\u3046\u6574\u6570\u578b\u306b\u5bfe\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u4f7f\u3046\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 3 . times do | i | puts i end \u3068\u3066\u3082\u8aad\u307f\u3084\u3059\u3044\u3067\u3059\u304c\u3001\u3053\u308c\u306f C \u306b\u30eb\u30fc\u30d7\u306e\u3088\u3046\u306b\u9ad8\u901f\u306b\u52d5\u304f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u7b54\u3048\u306f YES \u3067\u3059\u3002 Int#times \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 struct Int def times i = 0 while i < self yield i i += 1 end end end \u88dc\u8db3\u3055\u308c\u306a\u3044\u30d6\u30ed\u30c3\u30af (non-captured block) \u306f\u5e38\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5c55\u958b\u3055\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u4e0a\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3068 \u307e\u3063\u305f\u304f\u540c\u3058 \u3067\u3059\u3002 i = 0 while i < 3 puts i i += 1 end \u30b3\u30fc\u30c9\u306e\u8aad\u307f\u3084\u3059\u3055\u3084\u518d\u5229\u7528\u6027\u306e\u305f\u3081\u306b\u7a4d\u6975\u7684\u306b\u30d6\u30ed\u30c3\u30af\u3092\u5229\u7528\u3057\u307e\u3057\u3087\u3046\u3002\u305d\u308c\u304c\u5b9f\u884c\u6642\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5f71\u97ff\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9"},{"location":"syntax_and_semantics/break.html","text":"break while \u306e\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u305f\u3081\u306b\u306f break \u3092\u4f7f\u3044\u307e\u3059\u3002 a = 2 while ( a += 1 ) < 20 if a == 10 break # \u30eb\u30fc\u30d7\u3092\u629c\u3051\u3066 'puts a' \u306b\u884c\u304f end end puts a # => 10 break \u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u305d\u308c\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002 def foo loop do break \"bar\" end end puts foo # => \"bar\"","title":"break"},{"location":"syntax_and_semantics/break.html#break","text":"while \u306e\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u305f\u3081\u306b\u306f break \u3092\u4f7f\u3044\u307e\u3059\u3002 a = 2 while ( a += 1 ) < 20 if a == 10 break # \u30eb\u30fc\u30d7\u3092\u629c\u3051\u3066 'puts a' \u306b\u884c\u304f end end puts a # => 10 break \u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u305d\u308c\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002 def foo loop do break \"bar\" end end puts foo # => \"bar\"","title":"break"},{"location":"syntax_and_semantics/capturing_blocks.html","text":"\u30d6\u30ed\u30c3\u30af\u306e\u6355\u6349 \u30d6\u30ed\u30c3\u30af\u3092\u6355\u6349\u3057\u3066 Proc \u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u7d50\u3073\u4ed8\u3044\u3066\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af (\u30af\u30ed\u30fc\u30b8\u30e3) \u3092\u8868\u3059\u3082\u306e\u3067\u3059\u3002 \u30d6\u30ed\u30c3\u30af\u3092\u6355\u6349\u3059\u308b\u306b\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u8a2d\u5b9a\u3057\u3001\u305d\u306e\u540d\u524d\u3068\u30a4\u30f3\u30d7\u30c3\u30c8/\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306e\u578b\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def int_to_int ( & block : Int32 -> Int32 ) block end proc = int_to_int { | x | x + 1 } proc . call ( 1 ) # => 2 \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3001 int_to_int \u306b\u6e21\u3055\u308c\u305f\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092 block \u3068\u3044\u3046\u5909\u6570\u306b\u6355\u6349\u3057\u3001\u305d\u308c\u3092\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d proc \u306e\u578b\u306f Proc(Int32, Int32) \u3067\u3001\u3053\u308c\u306f\u5358\u4e00\u306e Int32 \u3092\u5f15\u6570\u306b\u53d6\u308a\u3001 Int32 \u3092\u8fd4\u3059\u95a2\u6570\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u65b9\u6cd5\u3067\u3001\u30d6\u30ed\u30c3\u30af\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 class Model def on_save ( & block ) @on_save_callback = block end def save if callback = @on_save_callback callback . call end end end model = Model . new model . on_save { puts \"Saved!\" } model . save # prints \"Saved!\" \u4e0a\u8a18\u306e\u4f8b\u306b\u304a\u3044\u3066\u3001 &block \u306e\u578b\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u304c\u5f15\u6570\u3092\u4f55\u3082\u53d7\u3051\u53d6\u3089\u305a\u3001\u623b\u308a\u5024\u3082\u8fd4\u3055\u306a\u3044\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 \u623b\u308a\u5024\u306e\u578b\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\u3001proc \u306e\u547c\u3073\u51fa\u3057\u306f\u4f55\u3082\u8fd4\u3055\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 def some_proc ( & block : Int32 -> ) block end proc = some_proc { | x | x + 1 } proc . call ( 1 ) # void \u4f55\u304b\u8fd4\u3057\u3066\u6b32\u3057\u3044\u5834\u5408\u306b\u306f\u3001\u623b\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u3082\u3057\u304f\u306f\u3059\u3079\u3066\u306e\u578b\u3092\u8a31\u5bb9\u3057\u305f\u3044\u3068\u304d\u306f\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 def some_proc ( & block : Int32 -> _ ) block end proc = some_proc { | x | x + 1 } proc . call ( 1 ) # 2 proc = some_proc { | x | x . to_s } proc . call ( 1 ) # \"1\" break \u3068 next return \u3068 break \u3092\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 next \u306f\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u30d6\u30ed\u30c3\u30af\u3092\u7d42\u4e86\u3057\u4e0e\u3048\u3089\u308c\u305f\u5024\u3092\u30d6\u30ed\u30c3\u30af\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u3068\u3057\u307e\u3059\u3002 with ... yield \u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306e\u30ec\u30b7\u30fc\u30d0\u306f with ... yield \u3092\u4f7f\u3063\u3066\u5909\u66f4\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002","title":"\u30d6\u30ed\u30c3\u30af\u306e\u6355\u6349"},{"location":"syntax_and_semantics/capturing_blocks.html#_1","text":"\u30d6\u30ed\u30c3\u30af\u3092\u6355\u6349\u3057\u3066 Proc \u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u7d50\u3073\u4ed8\u3044\u3066\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af (\u30af\u30ed\u30fc\u30b8\u30e3) \u3092\u8868\u3059\u3082\u306e\u3067\u3059\u3002 \u30d6\u30ed\u30c3\u30af\u3092\u6355\u6349\u3059\u308b\u306b\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3092\u8a2d\u5b9a\u3057\u3001\u305d\u306e\u540d\u524d\u3068\u30a4\u30f3\u30d7\u30c3\u30c8/\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306e\u578b\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def int_to_int ( & block : Int32 -> Int32 ) block end proc = int_to_int { | x | x + 1 } proc . call ( 1 ) # => 2 \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3001 int_to_int \u306b\u6e21\u3055\u308c\u305f\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092 block \u3068\u3044\u3046\u5909\u6570\u306b\u6355\u6349\u3057\u3001\u305d\u308c\u3092\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d proc \u306e\u578b\u306f Proc(Int32, Int32) \u3067\u3001\u3053\u308c\u306f\u5358\u4e00\u306e Int32 \u3092\u5f15\u6570\u306b\u53d6\u308a\u3001 Int32 \u3092\u8fd4\u3059\u95a2\u6570\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u65b9\u6cd5\u3067\u3001\u30d6\u30ed\u30c3\u30af\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 class Model def on_save ( & block ) @on_save_callback = block end def save if callback = @on_save_callback callback . call end end end model = Model . new model . on_save { puts \"Saved!\" } model . save # prints \"Saved!\" \u4e0a\u8a18\u306e\u4f8b\u306b\u304a\u3044\u3066\u3001 &block \u306e\u578b\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u304c\u5f15\u6570\u3092\u4f55\u3082\u53d7\u3051\u53d6\u3089\u305a\u3001\u623b\u308a\u5024\u3082\u8fd4\u3055\u306a\u3044\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 \u623b\u308a\u5024\u306e\u578b\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\u3001proc \u306e\u547c\u3073\u51fa\u3057\u306f\u4f55\u3082\u8fd4\u3055\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 def some_proc ( & block : Int32 -> ) block end proc = some_proc { | x | x + 1 } proc . call ( 1 ) # void \u4f55\u304b\u8fd4\u3057\u3066\u6b32\u3057\u3044\u5834\u5408\u306b\u306f\u3001\u623b\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u3082\u3057\u304f\u306f\u3059\u3079\u3066\u306e\u578b\u3092\u8a31\u5bb9\u3057\u305f\u3044\u3068\u304d\u306f\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 def some_proc ( & block : Int32 -> _ ) block end proc = some_proc { | x | x + 1 } proc . call ( 1 ) # 2 proc = some_proc { | x | x . to_s } proc . call ( 1 ) # \"1\"","title":"\u30d6\u30ed\u30c3\u30af\u306e\u6355\u6349"},{"location":"syntax_and_semantics/capturing_blocks.html#break-next","text":"return \u3068 break \u3092\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 next \u306f\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u30d6\u30ed\u30c3\u30af\u3092\u7d42\u4e86\u3057\u4e0e\u3048\u3089\u308c\u305f\u5024\u3092\u30d6\u30ed\u30c3\u30af\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u3068\u3057\u307e\u3059\u3002","title":"break \u3068 next"},{"location":"syntax_and_semantics/capturing_blocks.html#with-yield","text":"\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306e\u30ec\u30b7\u30fc\u30d0\u306f with ... yield \u3092\u4f7f\u3063\u3066\u5909\u66f4\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002","title":"with ... yield"},{"location":"syntax_and_semantics/case.html","text":"case case \u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u3088\u3046\u306a\u96f0\u56f2\u6c17\u306e\u5236\u5fa1\u5f0f\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u591a\u5c11\u7570\u306a\u308b\u70b9\u3082\u3042\u308a\u307e\u3059\u304c\u3001if \u6587\u3067 if-else-if \u306e\u5f62\u3067\u8907\u6570\u306e\u6761\u4ef6\u5206\u5c90\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u306b\u8fd1\u3044\u3067\u3059\u3002 \u57fa\u672c\u7684\u306a\u66f8\u304d\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u3001\u5024\u3068\u5024\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u3063\u3066\u5236\u5fa1\u3057\u307e\u3059\u3002 case exp when value1 , value2 do_something when value3 do_something_else else do_another_thing end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 tmp = exp if value1 === tmp || value2 === tmp do_something elsif value3 === tmp do_something_else else do_another_thing end case \u306b\u304a\u3044\u3066\u3001\u5bfe\u8c61\u306e\u5024\u3068\u6761\u4ef6\u5f0f\u306f case \u7b49\u4fa1\u6027\u6f14\u7b97\u5b50 ( === ) \u306b\u3088\u3063\u3066\u6bd4\u8f03\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f Object \u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3067\u3001case \u5206\u3067\u4f7f\u3046\u969b\u306b\u610f\u5473\u304c\u3042\u308b\u3088\u3046\u306b\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070 Class \u578b\u3067\u306f\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u305d\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3069\u3046\u304b\u300d\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u308a\u3001 Regex \u3067\u306f\u300c\u6bd4\u8f03\u5bfe\u8c61\u306e\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308b\u304b\u300d\u3067\u3001 Range \u3067\u306f\u300c\u6bd4\u8f03\u5bfe\u8c61\u306e\u5024\u304c\u81ea\u8eab\u306b\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u300d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3082\u3057 when \u7bc0\u306e\u6761\u4ef6\u5f0f\u306b\u578b\u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u308c\u3070\u3001\u4ee3\u308f\u308a\u306b is_a? \u304c\u4f7f\u308f\u308c\u307e\u3059\u3002\u305d\u3057\u3066\u3001case \u5f0f\u304c\u5909\u6570\u3001\u3082\u3057\u304f\u306f\u5909\u6570\u3078\u306e\u4ee3\u5165\u3067\u3042\u308b\u3068\u304d\u3001\u305d\u306e\u5909\u6570\u306e\u578b\u306b\u5bfe\u3057\u3066\u5236\u7d04\u304c\u52a0\u3048\u3089\u308c\u307e\u3059\u3002 case var when String # var : String do_something when Int32 # var : Int32 do_something_else else # \u3053\u3053\u3067\u306f var \u306f String \u3068 Int32 \u306e\u3069\u3061\u3089\u3067\u3082\u306a\u3044 do_another_thing end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 if var . is_a? ( String ) do_something elsif var . is_a? ( Int32 ) do_something_else else do_another_thing end \u6697\u9ed9\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5b9a\u306e\u69cb\u6587\u3092\u4f7f\u3063\u3066\u3001 case \u306e\u5f0f\u306b\u5bfe\u3057\u3066 when \u3067\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 case num when . even? do_something when . odd? do_something_else end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 tmp = num if tmp . even? do_something elsif tmp . odd? do_something_else end when \u306e\u6761\u4ef6\u306e\u3042\u3068\u306b then \u3092\u7f6e\u304f\u3053\u3068\u3067\u30011\u884c\u3067\u672c\u4f53\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 case exp when value1 , value2 then do_something when value3 then do_something_else else do_another_thing end \u305d\u3057\u3066\u3001 case \u306e\u5024\u3092\u90e8\u5206\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 case when cond1 , cond2 do_something when cond3 do_something_else end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 if cond1 || cond2 do_something elsif cond3 do_something_else end \u3053\u306e\u65b9\u304c\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u5834\u5408\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002 \u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u306e\u5229\u7528 case\u306e\u5f0f\u306b\u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u3067\u3001 when \u306e\u6761\u4ef6\u5f0f\u3082\u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u306e\u5834\u5408\u3001\u5c11\u3057\u7570\u306a\u308b\u6319\u52d5\u3092\u3057\u307e\u3059\u3002 \u30bf\u30d7\u30eb\u306e\u5927\u304d\u3055\u306f\u7b49\u3057\u3044\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 case { value1 , value2 } when { 0 , 0 } # \u5927\u304d\u3055\u304c2\u3067\u7b49\u3057\u3044\u306e\u3067OK # ... when { 1 , 2 , 3 } # Syntax error: wrong number of tuple elements (given 3, expected 2) # ... end \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304c\u5229\u7528\u3067\u304d\u307e\u3059 case { value1 , value2 } when { 0 , _ } # 0 === value1 \u306e\u5834\u5408\u306b\u30de\u30c3\u30c1\u3057\u3066\u3001 value2 \u306b\u5bfe\u3059\u308b\u30c1\u30a7\u30c3\u30af\u306f\u884c\u306a\u308f\u308c\u306a\u3044 when { _ , 0 } # 0 === value2 \u306e\u5834\u5408\u306b\u30de\u30c3\u30c1\u3057\u3066\u3001 value1 \u306b\u5bfe\u3059\u308b\u30c1\u30a7\u30c3\u30af\u306f\u884c\u306a\u308f\u308c\u306a\u3044 end \u6697\u9ed9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5b9a\u304c\u5229\u7528\u3067\u304d\u307e\u3059 case { value1 , value2 } when { . even? , . odd? } # value1.even? && value2.even? \u306e\u3068\u304d\u306b\u30de\u30c3\u30c1 end \u578b\u306b\u5bfe\u3057\u3066\u306f is_a? \u3067\u6bd4\u8f03\u3055\u308c\u307e\u3059 case { value1 , value2 } when { String , Int32 } # value1.is_a?(String) && value2.is_a?(Int32) \u306e\u3068\u304d\u306b\u30de\u30c3\u30c1 # \u3053\u306e\u3068\u304d value1 \u3068 String \u578b \u3068\u306a\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3001 # value2 \u306f Int32 \u578b\u3068\u306a\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end Exhaustive case Using in instead of when produces an exhaustive case expression; in an exhaustive case, it is a compile-time error to omit any of the required in conditions. An exhaustive case cannot contain any when or else clauses. The compiler supports the following in conditions: Union type checks If case 's expression is a union value, each of the union types may be used as a condition: # var : (Bool | Char | String)? case var in String # var : String in Char # var : Char in Bool # var : Bool in nil # or Nil, but .nil? is not allowed # var : Nil end Bool values If case 's expression is a Bool value, the true and false literals may be used as conditions: # var : Bool case var in true do_something in false do_something_else end Enum values If case 's expression is a non-flags enum value, its members may be used as conditions, either as constant or predicate method. enum Foo X Y Z end # var : Foo case var in Foo :: X # var == Foo::X in . y? # var == Foo::Y in . z? # :z is not allowed # var == Foo::Z end Tuple literals The conditions must exhaust all possible combinations of the case expression's elements: # value1, value2 : Bool case { value1 , value2 } in { true , _ } # value1 is true, value2 can be true or false do_something in { _ , false } # here value1 is false, and value2 is also false do_something_else end # Error: case is not exhaustive. # # Missing cases: # - {false, true}","title":"case"},{"location":"syntax_and_semantics/case.html#case","text":"case \u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u3088\u3046\u306a\u96f0\u56f2\u6c17\u306e\u5236\u5fa1\u5f0f\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u591a\u5c11\u7570\u306a\u308b\u70b9\u3082\u3042\u308a\u307e\u3059\u304c\u3001if \u6587\u3067 if-else-if \u306e\u5f62\u3067\u8907\u6570\u306e\u6761\u4ef6\u5206\u5c90\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u306b\u8fd1\u3044\u3067\u3059\u3002 \u57fa\u672c\u7684\u306a\u66f8\u304d\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u3001\u5024\u3068\u5024\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u3063\u3066\u5236\u5fa1\u3057\u307e\u3059\u3002 case exp when value1 , value2 do_something when value3 do_something_else else do_another_thing end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 tmp = exp if value1 === tmp || value2 === tmp do_something elsif value3 === tmp do_something_else else do_another_thing end case \u306b\u304a\u3044\u3066\u3001\u5bfe\u8c61\u306e\u5024\u3068\u6761\u4ef6\u5f0f\u306f case \u7b49\u4fa1\u6027\u6f14\u7b97\u5b50 ( === ) \u306b\u3088\u3063\u3066\u6bd4\u8f03\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f Object \u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3067\u3001case \u5206\u3067\u4f7f\u3046\u969b\u306b\u610f\u5473\u304c\u3042\u308b\u3088\u3046\u306b\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070 Class \u578b\u3067\u306f\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u305d\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3069\u3046\u304b\u300d\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u308a\u3001 Regex \u3067\u306f\u300c\u6bd4\u8f03\u5bfe\u8c61\u306e\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308b\u304b\u300d\u3067\u3001 Range \u3067\u306f\u300c\u6bd4\u8f03\u5bfe\u8c61\u306e\u5024\u304c\u81ea\u8eab\u306b\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u300d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3082\u3057 when \u7bc0\u306e\u6761\u4ef6\u5f0f\u306b\u578b\u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u308c\u3070\u3001\u4ee3\u308f\u308a\u306b is_a? \u304c\u4f7f\u308f\u308c\u307e\u3059\u3002\u305d\u3057\u3066\u3001case \u5f0f\u304c\u5909\u6570\u3001\u3082\u3057\u304f\u306f\u5909\u6570\u3078\u306e\u4ee3\u5165\u3067\u3042\u308b\u3068\u304d\u3001\u305d\u306e\u5909\u6570\u306e\u578b\u306b\u5bfe\u3057\u3066\u5236\u7d04\u304c\u52a0\u3048\u3089\u308c\u307e\u3059\u3002 case var when String # var : String do_something when Int32 # var : Int32 do_something_else else # \u3053\u3053\u3067\u306f var \u306f String \u3068 Int32 \u306e\u3069\u3061\u3089\u3067\u3082\u306a\u3044 do_another_thing end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 if var . is_a? ( String ) do_something elsif var . is_a? ( Int32 ) do_something_else else do_another_thing end \u6697\u9ed9\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5b9a\u306e\u69cb\u6587\u3092\u4f7f\u3063\u3066\u3001 case \u306e\u5f0f\u306b\u5bfe\u3057\u3066 when \u3067\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 case num when . even? do_something when . odd? do_something_else end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 tmp = num if tmp . even? do_something elsif tmp . odd? do_something_else end when \u306e\u6761\u4ef6\u306e\u3042\u3068\u306b then \u3092\u7f6e\u304f\u3053\u3068\u3067\u30011\u884c\u3067\u672c\u4f53\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 case exp when value1 , value2 then do_something when value3 then do_something_else else do_another_thing end \u305d\u3057\u3066\u3001 case \u306e\u5024\u3092\u90e8\u5206\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 case when cond1 , cond2 do_something when cond3 do_something_else end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 if cond1 || cond2 do_something elsif cond3 do_something_else end \u3053\u306e\u65b9\u304c\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u5834\u5408\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002","title":"case"},{"location":"syntax_and_semantics/case.html#_1","text":"case\u306e\u5f0f\u306b\u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u3067\u3001 when \u306e\u6761\u4ef6\u5f0f\u3082\u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u306e\u5834\u5408\u3001\u5c11\u3057\u7570\u306a\u308b\u6319\u52d5\u3092\u3057\u307e\u3059\u3002","title":"\u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u306e\u5229\u7528"},{"location":"syntax_and_semantics/case.html#_2","text":"case { value1 , value2 } when { 0 , 0 } # \u5927\u304d\u3055\u304c2\u3067\u7b49\u3057\u3044\u306e\u3067OK # ... when { 1 , 2 , 3 } # Syntax error: wrong number of tuple elements (given 3, expected 2) # ... end","title":"\u30bf\u30d7\u30eb\u306e\u5927\u304d\u3055\u306f\u7b49\u3057\u3044\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059"},{"location":"syntax_and_semantics/case.html#_3","text":"case { value1 , value2 } when { 0 , _ } # 0 === value1 \u306e\u5834\u5408\u306b\u30de\u30c3\u30c1\u3057\u3066\u3001 value2 \u306b\u5bfe\u3059\u308b\u30c1\u30a7\u30c3\u30af\u306f\u884c\u306a\u308f\u308c\u306a\u3044 when { _ , 0 } # 0 === value2 \u306e\u5834\u5408\u306b\u30de\u30c3\u30c1\u3057\u3066\u3001 value1 \u306b\u5bfe\u3059\u308b\u30c1\u30a7\u30c3\u30af\u306f\u884c\u306a\u308f\u308c\u306a\u3044 end","title":"\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304c\u5229\u7528\u3067\u304d\u307e\u3059"},{"location":"syntax_and_semantics/case.html#_4","text":"case { value1 , value2 } when { . even? , . odd? } # value1.even? && value2.even? \u306e\u3068\u304d\u306b\u30de\u30c3\u30c1 end","title":"\u6697\u9ed9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5b9a\u304c\u5229\u7528\u3067\u304d\u307e\u3059"},{"location":"syntax_and_semantics/case.html#is_a","text":"case { value1 , value2 } when { String , Int32 } # value1.is_a?(String) && value2.is_a?(Int32) \u306e\u3068\u304d\u306b\u30de\u30c3\u30c1 # \u3053\u306e\u3068\u304d value1 \u3068 String \u578b \u3068\u306a\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3001 # value2 \u306f Int32 \u578b\u3068\u306a\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end","title":"\u578b\u306b\u5bfe\u3057\u3066\u306f is_a? \u3067\u6bd4\u8f03\u3055\u308c\u307e\u3059"},{"location":"syntax_and_semantics/case.html#exhaustive-case","text":"Using in instead of when produces an exhaustive case expression; in an exhaustive case, it is a compile-time error to omit any of the required in conditions. An exhaustive case cannot contain any when or else clauses. The compiler supports the following in conditions:","title":"Exhaustive case"},{"location":"syntax_and_semantics/case.html#union-type-checks","text":"If case 's expression is a union value, each of the union types may be used as a condition: # var : (Bool | Char | String)? case var in String # var : String in Char # var : Char in Bool # var : Bool in nil # or Nil, but .nil? is not allowed # var : Nil end","title":"Union type checks"},{"location":"syntax_and_semantics/case.html#bool-values","text":"If case 's expression is a Bool value, the true and false literals may be used as conditions: # var : Bool case var in true do_something in false do_something_else end","title":"Bool values"},{"location":"syntax_and_semantics/case.html#enum-values","text":"If case 's expression is a non-flags enum value, its members may be used as conditions, either as constant or predicate method. enum Foo X Y Z end # var : Foo case var in Foo :: X # var == Foo::X in . y? # var == Foo::Y in . z? # :z is not allowed # var == Foo::Z end","title":"Enum values"},{"location":"syntax_and_semantics/case.html#tuple-literals","text":"The conditions must exhaust all possible combinations of the case expression's elements: # value1, value2 : Bool case { value1 , value2 } in { true , _ } # value1 is true, value2 can be true or false do_something in { _ , false } # here value1 is false, and value2 is also false do_something_else end # Error: case is not exhaustive. # # Missing cases: # - {false, true}","title":"Tuple literals"},{"location":"syntax_and_semantics/class_methods.html","text":"\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u7279\u5b9a\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u3084\u30e2\u30b8\u30e5\u30fc\u30eb\u81ea\u8eab\u306b\u7d10\u4ed8\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 module CaesarCipher def self . encrypt ( string : String ) string . chars . map { | char | (( char . upcase . ord - 52 ) % 26 + 65 ) . chr } . join end end CaesarCipher . encrypt ( \"HELLO\" ) # => \"URYYB\" \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306f\u578b\u540d\u3068\u30c9\u30c3\u30c8\u306e\u3042\u3068\u306b\u540d\u524d\u3092\u7d9a\u3051\u308b\u5f62\u5f0f\u3067\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 def CaesarCipher . decrypt ( string : String ) encrypt ( string ) end \u30af\u30e9\u30b9\u3082\u3057\u304f\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30b9\u30b3\u30fc\u30d7\u3067\u306f\u3088\u308a\u7c21\u6f54\u306b\u3001\u30af\u30e9\u30b9\u540d\u306e\u4ee3\u308f\u308a\u306b self \u3092\u4f7f\u3046\u5f62\u5f0f\u3067\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 \u307e\u305f\u3001\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306f Module \u3092\u62e1\u5f35 (extend) \u3059\u308b\u3053\u3068\u3067\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306f\u5b9a\u7fa9\u3057\u305f\u3068\u304d\u3068\u540c\u3058\u5f62\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059 ( CaesarCipher.decrypt(\"HELLO\") )\u3002 \u540c\u3058\u30b9\u30b3\u30fc\u30d7\u306e\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u306f\u3001\u30ec\u30b7\u30fc\u30d0\u3068\u3057\u3066 self \u3092\u6307\u5b9a\u3059\u308b\u3001\u3082\u3057\u304f\u306f\u6697\u9ed9\u306e\u3082\u306e\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 ( encrypt(string) \u306e\u3088\u3046\u306b)\u3002 \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b \u901a\u5e38\u306e\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fCrystal\u306e\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306f new \u3068\u3044\u3046\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5c11\u306a\u304f\u3068\u30821\u3064\u306f\u6301\u3061\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u7570\u306a\u308b\u540d\u524d\u306e\u7570\u306a\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002","title":"\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/class_methods.html#_1","text":"\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u7279\u5b9a\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u3084\u30e2\u30b8\u30e5\u30fc\u30eb\u81ea\u8eab\u306b\u7d10\u4ed8\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 module CaesarCipher def self . encrypt ( string : String ) string . chars . map { | char | (( char . upcase . ord - 52 ) % 26 + 65 ) . chr } . join end end CaesarCipher . encrypt ( \"HELLO\" ) # => \"URYYB\" \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306f\u578b\u540d\u3068\u30c9\u30c3\u30c8\u306e\u3042\u3068\u306b\u540d\u524d\u3092\u7d9a\u3051\u308b\u5f62\u5f0f\u3067\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 def CaesarCipher . decrypt ( string : String ) encrypt ( string ) end \u30af\u30e9\u30b9\u3082\u3057\u304f\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30b9\u30b3\u30fc\u30d7\u3067\u306f\u3088\u308a\u7c21\u6f54\u306b\u3001\u30af\u30e9\u30b9\u540d\u306e\u4ee3\u308f\u308a\u306b self \u3092\u4f7f\u3046\u5f62\u5f0f\u3067\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 \u307e\u305f\u3001\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306f Module \u3092\u62e1\u5f35 (extend) \u3059\u308b\u3053\u3068\u3067\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306f\u5b9a\u7fa9\u3057\u305f\u3068\u304d\u3068\u540c\u3058\u5f62\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059 ( CaesarCipher.decrypt(\"HELLO\") )\u3002 \u540c\u3058\u30b9\u30b3\u30fc\u30d7\u306e\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u306f\u3001\u30ec\u30b7\u30fc\u30d0\u3068\u3057\u3066 self \u3092\u6307\u5b9a\u3059\u308b\u3001\u3082\u3057\u304f\u306f\u6697\u9ed9\u306e\u3082\u306e\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 ( encrypt(string) \u306e\u3088\u3046\u306b)\u3002","title":"\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/class_methods.html#_2","text":"\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b \u901a\u5e38\u306e\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fCrystal\u306e\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306f new \u3068\u3044\u3046\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5c11\u306a\u304f\u3068\u30821\u3064\u306f\u6301\u3061\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u7570\u306a\u308b\u540d\u524d\u306e\u7570\u306a\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002","title":"\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf"},{"location":"syntax_and_semantics/class_variables.html","text":"\u30af\u30e9\u30b9\u5909\u6570 \u30af\u30e9\u30b9\u5909\u6570\u306f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u81ea\u8eab\u306b\u7d50\u3073\u3064\u3044\u3066\u3044\u308b\u3082\u306e\u3067\u3001\u30af\u30e9\u30b9\u5909\u6570\u306f\u5148\u982d\u306b2\u3064\u306e\u30a2\u30c3\u30c8\u30de\u30fc\u30af ( @@ ) \u304c\u4ed8\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Counter @@instances = 0 def initialize @@instances += 1 end def self . instances @@instances end end Counter . instances # => 0 Counter . new Counter . new Counter . new Counter . instances # => 3 \u30af\u30e9\u30b9\u5909\u6570\u306f\u3001\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u304b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u8aad\u307f\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u578b\u306f \u30b0\u30ed\u30fc\u30d0\u30eb\u578b\u63a8\u8ad6\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u306b\u3088\u3063\u3066\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u306f\u3001\u30af\u30e9\u30b9\u5909\u6570\u3082\u7d99\u627f\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u30af\u30e9\u30b9\u5909\u6570\u306e\u578b\u306f\u540c\u3058\u3067\u3059\u304c\u3001\u5b9f\u884c\u6642\u306e\u5024\u306f\u5404\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5225\u306e\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Parent @@numbers = [] of Int32 def self . numbers @@numbers end end class Child < Parent end Parent . numbers # => [] Child . numbers # => [] Parent . numbers << 1 Parent . numbers # => [1] Child . numbers # => [] \u30af\u30e9\u30b9\u5909\u6570\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u3084\u69cb\u9020\u4f53\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u4e0a\u8a18\u3068\u540c\u69d8\u306b\u3001\u30a4\u30f3\u30af\u30fc\u30eb\u30c9\u3084\u7d99\u627f\u3055\u308c\u305f\u578b\u306b\u30af\u30e9\u30b9\u5909\u6570\u306f\u7d99\u627f\u3055\u308c\u307e\u3059\u3002","title":"\u30af\u30e9\u30b9\u5909\u6570"},{"location":"syntax_and_semantics/class_variables.html#_1","text":"\u30af\u30e9\u30b9\u5909\u6570\u306f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u81ea\u8eab\u306b\u7d50\u3073\u3064\u3044\u3066\u3044\u308b\u3082\u306e\u3067\u3001\u30af\u30e9\u30b9\u5909\u6570\u306f\u5148\u982d\u306b2\u3064\u306e\u30a2\u30c3\u30c8\u30de\u30fc\u30af ( @@ ) \u304c\u4ed8\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Counter @@instances = 0 def initialize @@instances += 1 end def self . instances @@instances end end Counter . instances # => 0 Counter . new Counter . new Counter . new Counter . instances # => 3 \u30af\u30e9\u30b9\u5909\u6570\u306f\u3001\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u304b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u8aad\u307f\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u578b\u306f \u30b0\u30ed\u30fc\u30d0\u30eb\u578b\u63a8\u8ad6\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u306b\u3088\u3063\u3066\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u306f\u3001\u30af\u30e9\u30b9\u5909\u6570\u3082\u7d99\u627f\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u30af\u30e9\u30b9\u5909\u6570\u306e\u578b\u306f\u540c\u3058\u3067\u3059\u304c\u3001\u5b9f\u884c\u6642\u306e\u5024\u306f\u5404\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5225\u306e\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Parent @@numbers = [] of Int32 def self . numbers @@numbers end end class Child < Parent end Parent . numbers # => [] Child . numbers # => [] Parent . numbers << 1 Parent . numbers # => [1] Child . numbers # => [] \u30af\u30e9\u30b9\u5909\u6570\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u3084\u69cb\u9020\u4f53\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u4e0a\u8a18\u3068\u540c\u69d8\u306b\u3001\u30a4\u30f3\u30af\u30fc\u30eb\u30c9\u3084\u7d99\u627f\u3055\u308c\u305f\u578b\u306b\u30af\u30e9\u30b9\u5909\u6570\u306f\u7d99\u627f\u3055\u308c\u307e\u3059\u3002","title":"\u30af\u30e9\u30b9\u5909\u6570"},{"location":"syntax_and_semantics/classes_and_methods.html","text":"\u30af\u30e9\u30b9\u3068\u30e1\u30bd\u30c3\u30c9 \u30af\u30e9\u30b9\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u8a08\u56f3\u3067\u3042\u308a\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u72ec\u7acb\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f Person \u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f8b\u3068\u3057\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 class Person end Crystal \u3067\u306f\u30af\u30e9\u30b9\u540d\u3092\u542b\u3081\u578b\u306e\u540d\u524d\u306f\u5927\u6587\u5b57\u3067\u306f\u3058\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u30af\u30e9\u30b9\u3068\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/classes_and_methods.html#_1","text":"\u30af\u30e9\u30b9\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u8a08\u56f3\u3067\u3042\u308a\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u72ec\u7acb\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f Person \u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f8b\u3068\u3057\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 class Person end Crystal \u3067\u306f\u30af\u30e9\u30b9\u540d\u3092\u542b\u3081\u578b\u306e\u540d\u524d\u306f\u5927\u6587\u5b57\u3067\u306f\u3058\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u30af\u30e9\u30b9\u3068\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/closures.html","text":"\u30af\u30ed\u30fc\u30b8\u30e3 \u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u3068 Proc \u30ea\u30c6\u30e9\u30eb\u306f\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3068 self \u3092\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\u4f8b\u3092\u898b\u3066\u307f\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002 x = 0 proc = -> { x += 1 ; x } proc . call # => 1 proc . call # => 2 x # => 2 \u3082\u3057\u304f\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u3059 proc \u306e\u5834\u5408\u306f\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002 def counter x = 0 -> { x += 1 ; x } end proc = counter proc . call # => 1 proc . call # => 2 \u4e0a\u8a18\u306e\u4f8b\u306b\u304a\u3044\u3066\u3001 x \u306f\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3067\u3042\u308b\u306b\u3082\u95a2\u308f\u3089\u305a\u3001Proc \u30ea\u30c6\u30e9\u30eb\u306b\u3088\u3063\u3066\u6355\u6349\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u901a\u5e38\u3067\u3042\u308c\u3070\u3001\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306f\u30b9\u30bf\u30c3\u30af\u306b\u5b58\u5728\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u7d42\u4e86\u3059\u308b\u3068\u6d88\u3048\u307e\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306f x \u3092\u30d2\u30fc\u30d7\u306b\u5272\u308a\u5f53\u3066\u3001Proc \u304c\u52d5\u4f5c\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u30c7\u30fc\u30bf\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002 \u30af\u30ed\u30fc\u30b8\u30e3\u306e\u5909\u6570\u306e\u578b \u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u300c\u305d\u308c\u306a\u308a\u306b\u300d\u8ce2\u304f\u89e3\u91c8\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def foo yield end x = 1 foo do x = \"hello\" end x # : Int32 | String \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001\u30d6\u30ed\u30c3\u30af\u306e\u3042\u3068\u306b x \u304c Int32 \u304b String \u3067\u3042\u308b\u3068\u5224\u65ad\u3067\u304d\u307e\u3059 (\u305f\u3060\u3001\u3053\u306e\u5834\u5408\u3060\u3068\u30e1\u30bd\u30c3\u30c9\u306f\u5fc5\u305a yield \u3059\u308b\u306e\u3067\u3001\u5e38\u306b String \u3067\u3042\u308b\u3053\u3068\u306f\u660e\u767d\u3067\u3059\u3002\u5c06\u6765\u7684\u306b\u306f\u305d\u3053\u307e\u3067\u5224\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u5584\u3059\u308b\u3064\u3082\u308a\u3067\u3059)\u3002 \u3082\u3057\u30d6\u30ed\u30c3\u30af\u306e\u5f8c\u3067 x \u306b\u4f55\u304b\u304c\u4ee3\u5165\u3055\u308c\u305f\u3068\u304d\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u306e\u578b\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u5224\u65ad\u3057\u307e\u3059\u3002 x = 1 foo do x = \"hello\" end x # : Int32 | String x = 'a' x # : Char \u3057\u304b\u3057\u3001\u3082\u3057 x \u304c Proc \u306b\u3088\u3063\u3066\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u683c\u7d0d\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u578b\u306f\u3059\u3079\u3066\u306e\u4ee3\u5165\u3055\u308c\u305f\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u306a\u308a\u307e\u3059\u3002 def capture ( & block ) block end x = 1 capture { x = \"hello\" } x = 'a' x # : Int32 | String | Char \u3053\u306e\u7406\u7531\u306f\u3001\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3084\u30af\u30e9\u30b9\u5909\u6570\u3001\u305d\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4fdd\u6301\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u3001\u305d\u3057\u3066\u5225\u306e\u30b9\u30e9\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u305f\u3081\u3067\u3059\u3002\u3053\u306e\u3053\u3068\u306b\u5bfe\u3057\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u7dbf\u5bc6\u306a\u5206\u6790\u3092\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305f\u3060\u3001Proc \u306b\u5909\u6570\u304c\u6355\u6349\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u305d\u306e proc \u304c\u3044\u3064\u3069\u3053\u3067\u5b9f\u884c\u3055\u308c\u308b\u304b\u306f\u672a\u77e5\u3067\u3042\u308b\u3001\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002 \u3053\u308c\u306f\u901a\u5e38\u306e Proc \u30ea\u30c6\u30e9\u30eb\u306b\u3082\u5f53\u3066\u306f\u307e\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u306e proc \u304c\u5b9f\u884c\u3082\u4fdd\u6301\u3082\u3055\u308c\u306a\u3044\u3053\u3068\u304c\u660e\u767d\u3067\u3042\u3063\u3066\u3082\u540c\u69d8\u3067\u3059\u3002 def capture ( & block ) block end x = 1 -> { x = \"hello\" } x = 'a' x # : Int32 | String | Char","title":"\u30af\u30ed\u30fc\u30b8\u30e3"},{"location":"syntax_and_semantics/closures.html#_1","text":"\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u3068 Proc \u30ea\u30c6\u30e9\u30eb\u306f\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3068 self \u3092\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\u4f8b\u3092\u898b\u3066\u307f\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002 x = 0 proc = -> { x += 1 ; x } proc . call # => 1 proc . call # => 2 x # => 2 \u3082\u3057\u304f\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u3059 proc \u306e\u5834\u5408\u306f\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002 def counter x = 0 -> { x += 1 ; x } end proc = counter proc . call # => 1 proc . call # => 2 \u4e0a\u8a18\u306e\u4f8b\u306b\u304a\u3044\u3066\u3001 x \u306f\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3067\u3042\u308b\u306b\u3082\u95a2\u308f\u3089\u305a\u3001Proc \u30ea\u30c6\u30e9\u30eb\u306b\u3088\u3063\u3066\u6355\u6349\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u901a\u5e38\u3067\u3042\u308c\u3070\u3001\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306f\u30b9\u30bf\u30c3\u30af\u306b\u5b58\u5728\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u7d42\u4e86\u3059\u308b\u3068\u6d88\u3048\u307e\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306f x \u3092\u30d2\u30fc\u30d7\u306b\u5272\u308a\u5f53\u3066\u3001Proc \u304c\u52d5\u4f5c\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u30c7\u30fc\u30bf\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002","title":"\u30af\u30ed\u30fc\u30b8\u30e3"},{"location":"syntax_and_semantics/closures.html#_2","text":"\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u300c\u305d\u308c\u306a\u308a\u306b\u300d\u8ce2\u304f\u89e3\u91c8\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def foo yield end x = 1 foo do x = \"hello\" end x # : Int32 | String \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001\u30d6\u30ed\u30c3\u30af\u306e\u3042\u3068\u306b x \u304c Int32 \u304b String \u3067\u3042\u308b\u3068\u5224\u65ad\u3067\u304d\u307e\u3059 (\u305f\u3060\u3001\u3053\u306e\u5834\u5408\u3060\u3068\u30e1\u30bd\u30c3\u30c9\u306f\u5fc5\u305a yield \u3059\u308b\u306e\u3067\u3001\u5e38\u306b String \u3067\u3042\u308b\u3053\u3068\u306f\u660e\u767d\u3067\u3059\u3002\u5c06\u6765\u7684\u306b\u306f\u305d\u3053\u307e\u3067\u5224\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u5584\u3059\u308b\u3064\u3082\u308a\u3067\u3059)\u3002 \u3082\u3057\u30d6\u30ed\u30c3\u30af\u306e\u5f8c\u3067 x \u306b\u4f55\u304b\u304c\u4ee3\u5165\u3055\u308c\u305f\u3068\u304d\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u306e\u578b\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u5224\u65ad\u3057\u307e\u3059\u3002 x = 1 foo do x = \"hello\" end x # : Int32 | String x = 'a' x # : Char \u3057\u304b\u3057\u3001\u3082\u3057 x \u304c Proc \u306b\u3088\u3063\u3066\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u683c\u7d0d\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u578b\u306f\u3059\u3079\u3066\u306e\u4ee3\u5165\u3055\u308c\u305f\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u306a\u308a\u307e\u3059\u3002 def capture ( & block ) block end x = 1 capture { x = \"hello\" } x = 'a' x # : Int32 | String | Char \u3053\u306e\u7406\u7531\u306f\u3001\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3084\u30af\u30e9\u30b9\u5909\u6570\u3001\u305d\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4fdd\u6301\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u3001\u305d\u3057\u3066\u5225\u306e\u30b9\u30e9\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u305f\u3081\u3067\u3059\u3002\u3053\u306e\u3053\u3068\u306b\u5bfe\u3057\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u7dbf\u5bc6\u306a\u5206\u6790\u3092\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305f\u3060\u3001Proc \u306b\u5909\u6570\u304c\u6355\u6349\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u305d\u306e proc \u304c\u3044\u3064\u3069\u3053\u3067\u5b9f\u884c\u3055\u308c\u308b\u304b\u306f\u672a\u77e5\u3067\u3042\u308b\u3001\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002 \u3053\u308c\u306f\u901a\u5e38\u306e Proc \u30ea\u30c6\u30e9\u30eb\u306b\u3082\u5f53\u3066\u306f\u307e\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u306e proc \u304c\u5b9f\u884c\u3082\u4fdd\u6301\u3082\u3055\u308c\u306a\u3044\u3053\u3068\u304c\u660e\u767d\u3067\u3042\u3063\u3066\u3082\u540c\u69d8\u3067\u3059\u3002 def capture ( & block ) block end x = 1 -> { x = \"hello\" } x = 'a' x # : Int32 | String | Char","title":"\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u5909\u6570\u306e\u578b"},{"location":"syntax_and_semantics/comments.html","text":"\u30b3\u30e1\u30f3\u30c8 \u30b3\u30e1\u30f3\u30c8\u306f # \u304b\u3089\u306f\u3058\u307e\u308a\u307e\u3059\u3002\u305d\u306e\u884c\u306e\u305d\u308c\u306b\u7d9a\u304f\u3059\u3079\u3066\u306e\u5185\u5bb9\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30b3\u30e1\u30f3\u30c8\u306f Crystal \u306e\u5f0f\u306e\u3042\u3068\u306b\u7d9a\u304f\u3088\u3046\u306a\u3053\u3068\u3082\u3042\u308a\u307e\u3059 (trailing comment)\u3002 # \u3053\u308c\u306f\u30b3\u30e1\u30f3\u30c8\u3067\u3059 puts \"hello\" # \u3053\u308c\u306f trailing comment \u3067\u3059 \u30b3\u30e1\u30f3\u30c8\u306e\u76ee\u7684\u306f\u30b3\u30fc\u30c9\u3092\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u542b\u3080\u3001\u516c\u958b\u3055\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u30b3\u30e1\u30f3\u30c8\u3092\u5143\u306b\u3057\u305f\u7279\u5225\u306a\u6628\u65e5\u3067\u3001 \u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u3067\u8aac\u660e\u3055\u308c\u307e\u3059\u3002","title":"\u30b3\u30e1\u30f3\u30c8"},{"location":"syntax_and_semantics/comments.html#_1","text":"\u30b3\u30e1\u30f3\u30c8\u306f # \u304b\u3089\u306f\u3058\u307e\u308a\u307e\u3059\u3002\u305d\u306e\u884c\u306e\u305d\u308c\u306b\u7d9a\u304f\u3059\u3079\u3066\u306e\u5185\u5bb9\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30b3\u30e1\u30f3\u30c8\u306f Crystal \u306e\u5f0f\u306e\u3042\u3068\u306b\u7d9a\u304f\u3088\u3046\u306a\u3053\u3068\u3082\u3042\u308a\u307e\u3059 (trailing comment)\u3002 # \u3053\u308c\u306f\u30b3\u30e1\u30f3\u30c8\u3067\u3059 puts \"hello\" # \u3053\u308c\u306f trailing comment \u3067\u3059 \u30b3\u30e1\u30f3\u30c8\u306e\u76ee\u7684\u306f\u30b3\u30fc\u30c9\u3092\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u542b\u3080\u3001\u516c\u958b\u3055\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u30b3\u30e1\u30f3\u30c8\u3092\u5143\u306b\u3057\u305f\u7279\u5225\u306a\u6628\u65e5\u3067\u3001 \u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u3067\u8aac\u660e\u3055\u308c\u307e\u3059\u3002","title":"\u30b3\u30e1\u30f3\u30c8"},{"location":"syntax_and_semantics/compile_time_flags.html","text":"\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0 \u578b\u3084\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u3001\u57fa\u672c\u7684\u306b\u306f\u30b3\u30fc\u30c9\u306e\u3069\u306e\u90e8\u5206\u3067\u3042\u3063\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u30d5\u30e9\u30b0\u306b\u3088\u308b\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30db\u30b9\u30c8\u306e LLVM \u30bf\u30fc\u30b2\u30c3\u30c8\u30c8\u30ea\u30d7\u30eb \u3092 - \u3067\u533a\u5207\u3063\u305f\u3082\u306e\u304c\u30d5\u30e9\u30b0\u3068\u306a\u308a\u307e\u3059\u3002\u5b9f\u969b\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u5f97\u308b\u306b\u306f llvm-config --host-target \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ llvm-config --host-target x86_64-unknown-linux-gnu # \u3088\u3063\u3066\u3001\u30d5\u30e9\u30b0\u306f x86_64, unknown, linux, gnu \u3068\u306a\u308a\u307e\u3059 \u30d5\u30e9\u30b0\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001 --define \u3082\u3057\u304f\u306f -D \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3044\u307e\u3059\u3002 crystal some_program.cr -Dflag \u307e\u305f\u3001 --release \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30ebq\u3057\u305f\u5834\u5408\u306b\u306f release \u30d5\u30e9\u30b0\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002 \u30d5\u30e9\u30b0\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306f flag? \u30de\u30af\u30ed\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 {% if flag? ( :x86_64 ) %} # 64\u30d3\u30c3\u30c8\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u56fa\u6709\u306e\u30b3\u30fc\u30c9 {% else %} # 64\u30d3\u30c3\u30c8\u3067\u306a\u3044\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u56fa\u6709\u306e\u30b3\u30fc\u30c9 {% end %} flag? \u306f\u771f\u507d\u5024\u3092\u8fd4\u3059\u306e\u3067\u3001 && \u3084 || \u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 {% if flag? ( :linux ) && flag? ( :x86_64 ) %} # Linux \u306764\u30d3\u30c3\u30c8\u306e\u5834\u5408\u306b\u56fa\u6709\u306e\u30b3\u30fc\u30c9 {% end %} \u3053\u308c\u3089\u306e\u30d5\u30e9\u30b0\u306f\u3001\u4e00\u822c\u7684\u306b C \u8a00\u8a9e\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306b\u304a\u3044\u3066\u3001\u578b\u3084\u95a2\u6570\u3092\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306b\u5229\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 size_t \u3068\u3044\u3046\u3088\u304f\u77e5\u3089\u308c\u305f\u578b\u306f\u3001Crystal \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 lib C {% if flag? ( :x86_64 ) %} alias SizeT = UInt64 {% else %} alias SizeT = UInt32 {% end %} end","title":"\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0"},{"location":"syntax_and_semantics/compile_time_flags.html#_1","text":"\u578b\u3084\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u3001\u57fa\u672c\u7684\u306b\u306f\u30b3\u30fc\u30c9\u306e\u3069\u306e\u90e8\u5206\u3067\u3042\u3063\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6307\u5b9a\u53ef\u80fd\u306a\u30d5\u30e9\u30b0\u306b\u3088\u308b\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30db\u30b9\u30c8\u306e LLVM \u30bf\u30fc\u30b2\u30c3\u30c8\u30c8\u30ea\u30d7\u30eb \u3092 - \u3067\u533a\u5207\u3063\u305f\u3082\u306e\u304c\u30d5\u30e9\u30b0\u3068\u306a\u308a\u307e\u3059\u3002\u5b9f\u969b\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u5f97\u308b\u306b\u306f llvm-config --host-target \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ llvm-config --host-target x86_64-unknown-linux-gnu # \u3088\u3063\u3066\u3001\u30d5\u30e9\u30b0\u306f x86_64, unknown, linux, gnu \u3068\u306a\u308a\u307e\u3059 \u30d5\u30e9\u30b0\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001 --define \u3082\u3057\u304f\u306f -D \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3044\u307e\u3059\u3002 crystal some_program.cr -Dflag \u307e\u305f\u3001 --release \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30ebq\u3057\u305f\u5834\u5408\u306b\u306f release \u30d5\u30e9\u30b0\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002 \u30d5\u30e9\u30b0\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306f flag? \u30de\u30af\u30ed\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 {% if flag? ( :x86_64 ) %} # 64\u30d3\u30c3\u30c8\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u56fa\u6709\u306e\u30b3\u30fc\u30c9 {% else %} # 64\u30d3\u30c3\u30c8\u3067\u306a\u3044\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u56fa\u6709\u306e\u30b3\u30fc\u30c9 {% end %} flag? \u306f\u771f\u507d\u5024\u3092\u8fd4\u3059\u306e\u3067\u3001 && \u3084 || \u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 {% if flag? ( :linux ) && flag? ( :x86_64 ) %} # Linux \u306764\u30d3\u30c3\u30c8\u306e\u5834\u5408\u306b\u56fa\u6709\u306e\u30b3\u30fc\u30c9 {% end %} \u3053\u308c\u3089\u306e\u30d5\u30e9\u30b0\u306f\u3001\u4e00\u822c\u7684\u306b C \u8a00\u8a9e\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306b\u304a\u3044\u3066\u3001\u578b\u3084\u95a2\u6570\u3092\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306b\u5229\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 size_t \u3068\u3044\u3046\u3088\u304f\u77e5\u3089\u308c\u305f\u578b\u306f\u3001Crystal \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 lib C {% if flag? ( :x86_64 ) %} alias SizeT = UInt64 {% else %} alias SizeT = UInt32 {% end %} end","title":"\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0"},{"location":"syntax_and_semantics/constants.html","text":"\u5b9a\u6570 \u5b9a\u6570\u306f\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3001\u3082\u3057\u304f\u306f\u3042\u308b\u578b\u306e\u5185\u90e8\u3067\u5ba3\u8a00\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5b9a\u6570\u306e\u5148\u982d\u306f\u5927\u6587\u5b57\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 PI = 3.14 module Earth RADIUS = 6_371_000 end PI # => 3.14 Earth :: RADIUS # => 6_371_000 \u307e\u305f\u3001\u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5f37\u5236\u3055\u308c\u308b\u3053\u3068\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u4e00\u822c\u7684\u306b\u5b9a\u6570\u540d\u306f\u3059\u3079\u3066\u5927\u6587\u5b57\u3068\u3057\u3001\u5358\u8a9e\u306f\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u533a\u5207\u308a\u307e\u3059\u3002 \u5b9a\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u969b\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u308a\u3001\u8907\u96d1\u306a\u30ed\u30b8\u30c3\u30af\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 TEN = begin a = 0 while a < 10 a += 1 end a end TEN # => 10 \u7591\u4f3c\u5b9a\u6570 Crystal \u306b\u306f\u3044\u304f\u3064\u304b\u306e\u7591\u4f3c\u5b9a\u6570\u304c\u3042\u308a\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u4f4d\u7f6e\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 __LINE__ \u306f\u73fe\u5728\u51e6\u7406\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u73fe\u5728\u306e\u884c\u756a\u53f7\u306b\u306a\u308a\u307e\u3059\u3002When __LINE__ \u304c\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u305f\u5834\u5408\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3055\u308c\u305f\u4f4d\u7f6e\u306e\u884c\u756a\u53f7\u306b\u306a\u308a\u307e\u3059\u3002 __END_LINE__ \u306f\u547c\u3073\u51fa\u3057\u306e\u30d6\u30ed\u30c3\u30af\u306e end \u306e\u3042\u308b\u884c\u756a\u53f7\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u306e\u307f\u5229\u7528\u3067\u304d\u307e\u3059\u3002 __FILE__ \u306f\u73fe\u5728\u51e6\u7406\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u5b8c\u5168\u306a\u30d1\u30b9\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 __DIR__ \u306f\u73fe\u5728\u51e6\u7406\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u5b8c\u5168\u306a\u30d1\u30b9\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 # \u3053\u306e\u30b3\u30fc\u30c9\u306f /crystal_code/pseudo_constants.cr \u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002 # def pseudo_constants ( caller_line = __LINE__ , end_of_caller = __END_LINE__ ) puts \"\u547c\u3073\u51fa\u3055\u308c\u305f\u884c\u756a\u53f7: #{ caller_line } \" puts \"\u3053\u3053\u306e\u884c\u756a\u53f7: #{ __LINE__ } \" puts \"\u547c\u3073\u51fa\u3057\u5143\u306e\u30d6\u30ed\u30c3\u30af\u306e\u7d42\u308f\u308a\u306e\u884c: #{ end_of_caller } \" puts \"\u30d5\u30a1\u30a4\u30eb\u540d: #{ __FILE__ } \" puts \"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d: #{ __DIR__ } \" end begin pseudo_constants end # Program prints: # \u547c\u3073\u51fa\u3055\u308c\u305f\u884c\u756a\u53f7: 13 # \u3053\u3053\u306e\u884c\u756a\u53f7r: 5 # \u547c\u3073\u51fa\u3057\u5143\u306e\u30d6\u30ed\u30c3\u30af\u306e\u7d42\u308f\u308a\u306e\u884c: 14 # \u30d5\u30a1\u30a4\u30eb\u540d: /crystal_code/pseudo_constants.cr # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d: /crystal_code \u52d5\u7684\u306a\u4ee3\u5165 \u9023\u7d9a\u3057\u305f\u4ee3\u5165 \u3084 \u591a\u91cd\u4ee3\u5165 \u306f\u5b9a\u6570\u306b\u5bfe\u3057\u3066\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u69cb\u6587\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 ONE , TWO , THREE = 1 , 2 , 3 # Syntax error: Multiple assignment is not allowed for constants","title":"\u5b9a\u6570"},{"location":"syntax_and_semantics/constants.html#_1","text":"\u5b9a\u6570\u306f\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3001\u3082\u3057\u304f\u306f\u3042\u308b\u578b\u306e\u5185\u90e8\u3067\u5ba3\u8a00\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5b9a\u6570\u306e\u5148\u982d\u306f\u5927\u6587\u5b57\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 PI = 3.14 module Earth RADIUS = 6_371_000 end PI # => 3.14 Earth :: RADIUS # => 6_371_000 \u307e\u305f\u3001\u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5f37\u5236\u3055\u308c\u308b\u3053\u3068\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u4e00\u822c\u7684\u306b\u5b9a\u6570\u540d\u306f\u3059\u3079\u3066\u5927\u6587\u5b57\u3068\u3057\u3001\u5358\u8a9e\u306f\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u533a\u5207\u308a\u307e\u3059\u3002 \u5b9a\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u969b\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u308a\u3001\u8907\u96d1\u306a\u30ed\u30b8\u30c3\u30af\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 TEN = begin a = 0 while a < 10 a += 1 end a end TEN # => 10","title":"\u5b9a\u6570"},{"location":"syntax_and_semantics/constants.html#_2","text":"Crystal \u306b\u306f\u3044\u304f\u3064\u304b\u306e\u7591\u4f3c\u5b9a\u6570\u304c\u3042\u308a\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u4f4d\u7f6e\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 __LINE__ \u306f\u73fe\u5728\u51e6\u7406\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u73fe\u5728\u306e\u884c\u756a\u53f7\u306b\u306a\u308a\u307e\u3059\u3002When __LINE__ \u304c\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u305f\u5834\u5408\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3055\u308c\u305f\u4f4d\u7f6e\u306e\u884c\u756a\u53f7\u306b\u306a\u308a\u307e\u3059\u3002 __END_LINE__ \u306f\u547c\u3073\u51fa\u3057\u306e\u30d6\u30ed\u30c3\u30af\u306e end \u306e\u3042\u308b\u884c\u756a\u53f7\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u306e\u307f\u5229\u7528\u3067\u304d\u307e\u3059\u3002 __FILE__ \u306f\u73fe\u5728\u51e6\u7406\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u5b8c\u5168\u306a\u30d1\u30b9\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 __DIR__ \u306f\u73fe\u5728\u51e6\u7406\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u5b8c\u5168\u306a\u30d1\u30b9\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 # \u3053\u306e\u30b3\u30fc\u30c9\u306f /crystal_code/pseudo_constants.cr \u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002 # def pseudo_constants ( caller_line = __LINE__ , end_of_caller = __END_LINE__ ) puts \"\u547c\u3073\u51fa\u3055\u308c\u305f\u884c\u756a\u53f7: #{ caller_line } \" puts \"\u3053\u3053\u306e\u884c\u756a\u53f7: #{ __LINE__ } \" puts \"\u547c\u3073\u51fa\u3057\u5143\u306e\u30d6\u30ed\u30c3\u30af\u306e\u7d42\u308f\u308a\u306e\u884c: #{ end_of_caller } \" puts \"\u30d5\u30a1\u30a4\u30eb\u540d: #{ __FILE__ } \" puts \"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d: #{ __DIR__ } \" end begin pseudo_constants end # Program prints: # \u547c\u3073\u51fa\u3055\u308c\u305f\u884c\u756a\u53f7: 13 # \u3053\u3053\u306e\u884c\u756a\u53f7r: 5 # \u547c\u3073\u51fa\u3057\u5143\u306e\u30d6\u30ed\u30c3\u30af\u306e\u7d42\u308f\u308a\u306e\u884c: 14 # \u30d5\u30a1\u30a4\u30eb\u540d: /crystal_code/pseudo_constants.cr # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d: /crystal_code","title":"\u7591\u4f3c\u5b9a\u6570"},{"location":"syntax_and_semantics/constants.html#_3","text":"\u9023\u7d9a\u3057\u305f\u4ee3\u5165 \u3084 \u591a\u91cd\u4ee3\u5165 \u306f\u5b9a\u6570\u306b\u5bfe\u3057\u3066\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u69cb\u6587\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 ONE , TWO , THREE = 1 , 2 , 3 # Syntax error: Multiple assignment is not allowed for constants","title":"\u52d5\u7684\u306a\u4ee3\u5165"},{"location":"syntax_and_semantics/control_expressions.html","text":"\u5236\u5fa1\u5f0f \u5236\u5fa1\u5f0f\u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u524d\u306b\u3001\u307e\u305a\u306f \u771f\u3068\u306a\u308b\u5024 \u3068 \u507d\u3068\u306a\u308b\u5024 \u306b\u3064\u3044\u3066\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u5236\u5fa1\u5f0f"},{"location":"syntax_and_semantics/control_expressions.html#_1","text":"\u5236\u5fa1\u5f0f\u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u524d\u306b\u3001\u307e\u305a\u306f \u771f\u3068\u306a\u308b\u5024 \u3068 \u507d\u3068\u306a\u308b\u5024 \u306b\u3064\u3044\u3066\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u5236\u5fa1\u5f0f"},{"location":"syntax_and_semantics/cross-compilation.html","text":"\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb Crystal \u306f\u57fa\u672c\u7684\u306a \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 \u305d\u306e\u305f\u3081\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u4ee5\u4e0b\u306e2\u3064\u306e\u30d5\u30e9\u30b0\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002 --cross-compile : \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b --target : \u30d3\u30eb\u30c9\u306b\u4f7f\u7528\u3059\u308b LLVM \u30bf\u30fc\u30b2\u30c3\u30c8\u30c8\u30ea\u30d7\u30eb \u3092\u6307\u5b9a\u3057\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0 \u3092\u8a2d\u5b9a\u3059\u308b\u3002 --target \u30d5\u30e9\u30b0\u3092\u5f97\u308b\u306b\u306f\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305fLLVM 3.5\u3092\u4f7f\u3063\u3066 llvm-config --host-target \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001Linux \u3067\u3042\u308c\u3070 \"x86_64-unknown-linux-gnu\" \u3068\u306a\u308b\u3067\u3057\u3087\u3046\u3002 --target \u7d4c\u7531\u3067\u6697\u9ed9\u7684\u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u306a\u3044\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0\u3092\u30bb\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001 -D \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u304c\u4f7f\u3048\u307e\u3059\u3002 \u3053\u308c\u3089\u306e2\u3064\u306e\u30d5\u30e9\u30b0\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001Linux \u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 Mac \u4e0a\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 crystal build your_program.cr --cross-compile --target \"x86_64-unknown-linux-gnu\" \u3053\u308c\u3067 .o ( \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb ) \u304c\u751f\u6210\u3055\u308c\u3001\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u5bfe\u8c61\u30b7\u30b9\u30c6\u30e0\u4e0a\u3067\u5b9f\u884c\u3059\u3079\u304d\u30b3\u30de\u30f3\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 cc your_program.o -o your_program -lpcre -lrt -lm -lgc -lunwind .o \u30d5\u30a1\u30a4\u30eb\u3092\u5bfe\u8c61\u306e\u30b7\u30b9\u30c6\u30e0\u4e0a\u306b\u30b3\u30d4\u30fc\u3057\u3001\u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u5bfe\u8c61\u306e\u30b7\u30b9\u30c6\u30e0\u4e0a\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u3089\u308c\u307e\u3059\u3002 \u901a\u5e38\u3001\u307e\u3060\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5165\u624b\u3067\u304d\u306a\u3044\u65b0\u3057\u3044\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u81ea\u4f53\u3092\u79fb\u690d\u3059\u308b\u969b\u306b\u3053\u306e\u624b\u9806\u3092\u5229\u7528\u3057\u307e\u3059\u3002Crystal \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e Crystal \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5fc5\u8981\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u307e\u3060\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5165\u624b\u3067\u304d\u306a\u3044\u30b7\u30b9\u30c6\u30e0\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 Ruby \u3067\u66f8\u304b\u308c\u305f\u6700\u65b0\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5165\u624b\u3057\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3001\u305d\u308c\u3092\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u307e\u3067\u7e70\u308a\u8fd4\u3059 \u5bfe\u8c61\u30b7\u30b9\u30c6\u30e0\u7528\u306e .o \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u751f\u6210\u3059\u308b \u6700\u521d\u306e\u65b9\u6cd5\u306f\u975e\u5e38\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u9762\u5012\u3067\u3059\u304c\u3001\u305d\u308c\u306b\u6bd4\u3079\u30662\u756a\u76ee\u306e\u65b9\u6cd5\u305a\u3063\u3068\u306f\u7c21\u5358\u3067\u3059\u3002 \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u4ed6\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001\u4e3b\u306a\u76ee\u7684\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u751f\u6210\u3067\u3059\u3002\u3082\u3057\u3001\u3042\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5229\u7528\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb"},{"location":"syntax_and_semantics/cross-compilation.html#_1","text":"Crystal \u306f\u57fa\u672c\u7684\u306a \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 \u305d\u306e\u305f\u3081\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u4ee5\u4e0b\u306e2\u3064\u306e\u30d5\u30e9\u30b0\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002 --cross-compile : \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b --target : \u30d3\u30eb\u30c9\u306b\u4f7f\u7528\u3059\u308b LLVM \u30bf\u30fc\u30b2\u30c3\u30c8\u30c8\u30ea\u30d7\u30eb \u3092\u6307\u5b9a\u3057\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0 \u3092\u8a2d\u5b9a\u3059\u308b\u3002 --target \u30d5\u30e9\u30b0\u3092\u5f97\u308b\u306b\u306f\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305fLLVM 3.5\u3092\u4f7f\u3063\u3066 llvm-config --host-target \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001Linux \u3067\u3042\u308c\u3070 \"x86_64-unknown-linux-gnu\" \u3068\u306a\u308b\u3067\u3057\u3087\u3046\u3002 --target \u7d4c\u7531\u3067\u6697\u9ed9\u7684\u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u306a\u3044\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0\u3092\u30bb\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001 -D \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u304c\u4f7f\u3048\u307e\u3059\u3002 \u3053\u308c\u3089\u306e2\u3064\u306e\u30d5\u30e9\u30b0\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001Linux \u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 Mac \u4e0a\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 crystal build your_program.cr --cross-compile --target \"x86_64-unknown-linux-gnu\" \u3053\u308c\u3067 .o ( \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb ) \u304c\u751f\u6210\u3055\u308c\u3001\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u5bfe\u8c61\u30b7\u30b9\u30c6\u30e0\u4e0a\u3067\u5b9f\u884c\u3059\u3079\u304d\u30b3\u30de\u30f3\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 cc your_program.o -o your_program -lpcre -lrt -lm -lgc -lunwind .o \u30d5\u30a1\u30a4\u30eb\u3092\u5bfe\u8c61\u306e\u30b7\u30b9\u30c6\u30e0\u4e0a\u306b\u30b3\u30d4\u30fc\u3057\u3001\u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u5bfe\u8c61\u306e\u30b7\u30b9\u30c6\u30e0\u4e0a\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u3089\u308c\u307e\u3059\u3002 \u901a\u5e38\u3001\u307e\u3060\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5165\u624b\u3067\u304d\u306a\u3044\u65b0\u3057\u3044\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u81ea\u4f53\u3092\u79fb\u690d\u3059\u308b\u969b\u306b\u3053\u306e\u624b\u9806\u3092\u5229\u7528\u3057\u307e\u3059\u3002Crystal \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e Crystal \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5fc5\u8981\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u307e\u3060\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5165\u624b\u3067\u304d\u306a\u3044\u30b7\u30b9\u30c6\u30e0\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 Ruby \u3067\u66f8\u304b\u308c\u305f\u6700\u65b0\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5165\u624b\u3057\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3001\u305d\u308c\u3092\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u307e\u3067\u7e70\u308a\u8fd4\u3059 \u5bfe\u8c61\u30b7\u30b9\u30c6\u30e0\u7528\u306e .o \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u751f\u6210\u3059\u308b \u6700\u521d\u306e\u65b9\u6cd5\u306f\u975e\u5e38\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u9762\u5012\u3067\u3059\u304c\u3001\u305d\u308c\u306b\u6bd4\u3079\u30662\u756a\u76ee\u306e\u65b9\u6cd5\u305a\u3063\u3068\u306f\u7c21\u5358\u3067\u3059\u3002 \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u4ed6\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001\u4e3b\u306a\u76ee\u7684\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u751f\u6210\u3067\u3059\u3002\u3082\u3057\u3001\u3042\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5229\u7528\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb"},{"location":"syntax_and_semantics/declare_var.html","text":"\u521d\u671f\u5316\u3057\u306a\u3044\u5909\u6570\u5ba3\u8a00 Crystal \u3067\u306f\u3001\u521d\u671f\u5316\u305b\u305a\u5909\u6570\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 x = uninitialized Int32 x # => some random value, garbage, unreliable \u3053\u308c\u306f \u5b89\u5168\u3067\u306a\u3044 \u30b3\u30fc\u30c9\u3067\u3001\u7279\u306b\u4f4e\u30ec\u30d9\u30eb\u306a\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u3001\u672a\u521d\u671f\u5316\u306e StaticArray \u30d0\u30c3\u30d5\u30a1\u3092\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u52a3\u5316\u306a\u304f\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002 buffer = uninitialized UInt8 [ 256 ] \u3053\u306e\u3068\u304d\u3001\u30d0\u30c3\u30d5\u30a1\u306f\u30d2\u30fc\u30d7\u3067\u306f\u306a\u304f\u30b9\u30bf\u30c3\u30af\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 uninitialized \u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u7d9a\u304f\u578b\u306f \u578b\u306e\u6587\u6cd5 \u306b\u3057\u305f\u304c\u3063\u3066\u66f8\u304d\u307e\u3059\u3002","title":"\u521d\u671f\u5316\u3057\u306a\u3044\u5909\u6570\u5ba3\u8a00"},{"location":"syntax_and_semantics/declare_var.html#_1","text":"Crystal \u3067\u306f\u3001\u521d\u671f\u5316\u305b\u305a\u5909\u6570\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 x = uninitialized Int32 x # => some random value, garbage, unreliable \u3053\u308c\u306f \u5b89\u5168\u3067\u306a\u3044 \u30b3\u30fc\u30c9\u3067\u3001\u7279\u306b\u4f4e\u30ec\u30d9\u30eb\u306a\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u3001\u672a\u521d\u671f\u5316\u306e StaticArray \u30d0\u30c3\u30d5\u30a1\u3092\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u52a3\u5316\u306a\u304f\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002 buffer = uninitialized UInt8 [ 256 ] \u3053\u306e\u3068\u304d\u3001\u30d0\u30c3\u30d5\u30a1\u306f\u30d2\u30fc\u30d7\u3067\u306f\u306a\u304f\u30b9\u30bf\u30c3\u30af\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 uninitialized \u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u7d9a\u304f\u578b\u306f \u578b\u306e\u6587\u6cd5 \u306b\u3057\u305f\u304c\u3063\u3066\u66f8\u304d\u307e\u3059\u3002","title":"\u521d\u671f\u5316\u3057\u306a\u3044\u5909\u6570\u5ba3\u8a00"},{"location":"syntax_and_semantics/default_and_named_arguments.html","text":"\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570 \u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 class Person def become_older ( by = 1 ) @age += by end end john = Person . new \"John\" john . age # => 0 john . become_older john . age # => 1 john . become_older 2 john . age # => 3 \u540d\u524d\u4ed8\u304d\u5f15\u6570 \u5f15\u6570\u306f\u9806\u756a\u306b\u6307\u5b9a\u3057\u3066\u3044\u304f\u4ed6\u306b\u3001\u5f15\u6570\u306e\u540d\u524d\u306b\u3088\u3063\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 john . become_older by : 5 \u3044\u304f\u3064\u3082\u306e\u5f15\u6570\u3092\u6301\u3064\u5834\u5408\u3001\u3059\u3079\u3066\u306e\u5f15\u6570\u3092\u6b63\u3057\u304f\u6e21\u3057\u3066\u3044\u308c\u3070\u3001\u3069\u306e\u3088\u3046\u306a\u9806\u5e8f\u3067\u6307\u5b9a\u3057\u305f\u304b\u306f\u91cd\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 def some_method ( x , y = 1 , z = 2 , w = 3 ) # \u3044\u308d\u3044\u308d\u3059\u308b end some_method 10 # x: 10, y: 1, z: 2, w: 3 some_method 10 , z : 10 # x: 10, y: 1, z: 10, w: 3 some_method 10 , w : 1 , y : 2 , z : 3 # x: 10, y: 2, z: 3, w: 1 some_method y : 10 , x : 20 # x: 20, y: 10, z: 2, w: 3 some_method y : 10 # Error, missing argument: x \u30e1\u30bd\u30c3\u30c9\u306b\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a (\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u306e\u6b21\u306e\u7ae0\u3067\u8aac\u660e\u3057\u307e\u3059) \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u304c\u3069\u306e\u3088\u3046\u306a\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3057\u305f\u304b\u3069\u3046\u304b\u3092\u628a\u63e1\u3059\u308b\u306e\u304c\u56f0\u96e3\u306a\u305f\u3081\u3067\u3059\u3002\u5f15\u6570\u3092\u9806\u756a\u306b\u6e21\u3057\u305f\u5834\u5408\u306f\u7c21\u5358\u306a\u306e\u3067\u3001\u52d5\u4f5c\u3057\u307e\u3059\u3002","title":"\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u3068\u540d\u524d\u4ed8\u304d\u5f15\u6570"},{"location":"syntax_and_semantics/default_and_named_arguments.html#_1","text":"\u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 class Person def become_older ( by = 1 ) @age += by end end john = Person . new \"John\" john . age # => 0 john . become_older john . age # => 1 john . become_older 2 john . age # => 3","title":"\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570"},{"location":"syntax_and_semantics/default_and_named_arguments.html#_2","text":"\u5f15\u6570\u306f\u9806\u756a\u306b\u6307\u5b9a\u3057\u3066\u3044\u304f\u4ed6\u306b\u3001\u5f15\u6570\u306e\u540d\u524d\u306b\u3088\u3063\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 john . become_older by : 5 \u3044\u304f\u3064\u3082\u306e\u5f15\u6570\u3092\u6301\u3064\u5834\u5408\u3001\u3059\u3079\u3066\u306e\u5f15\u6570\u3092\u6b63\u3057\u304f\u6e21\u3057\u3066\u3044\u308c\u3070\u3001\u3069\u306e\u3088\u3046\u306a\u9806\u5e8f\u3067\u6307\u5b9a\u3057\u305f\u304b\u306f\u91cd\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 def some_method ( x , y = 1 , z = 2 , w = 3 ) # \u3044\u308d\u3044\u308d\u3059\u308b end some_method 10 # x: 10, y: 1, z: 2, w: 3 some_method 10 , z : 10 # x: 10, y: 1, z: 10, w: 3 some_method 10 , w : 1 , y : 2 , z : 3 # x: 10, y: 2, z: 3, w: 1 some_method y : 10 , x : 20 # x: 20, y: 10, z: 2, w: 3 some_method y : 10 # Error, missing argument: x \u30e1\u30bd\u30c3\u30c9\u306b\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a (\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u306e\u6b21\u306e\u7ae0\u3067\u8aac\u660e\u3057\u307e\u3059) \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u304c\u3069\u306e\u3088\u3046\u306a\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3057\u305f\u304b\u3069\u3046\u304b\u3092\u628a\u63e1\u3059\u308b\u306e\u304c\u56f0\u96e3\u306a\u305f\u3081\u3067\u3059\u3002\u5f15\u6570\u3092\u9806\u756a\u306b\u6e21\u3057\u305f\u5834\u5408\u306f\u7c21\u5358\u306a\u306e\u3067\u3001\u52d5\u4f5c\u3057\u307e\u3059\u3002","title":"\u540d\u524d\u4ed8\u304d\u5f15\u6570"},{"location":"syntax_and_semantics/default_values_named_arguments_splats_tuples_and_overloading.html","text":"\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570 \u3053\u308c\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u547c\u3073\u51fa\u3057\u306e\u5f62\u5f0f\u7684\u306a\u4ed5\u69d8\u3067\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u306f\u6b21\u306e\u3082\u306e\u304b\u3089\u69cb\u6210\u3055\u308c\u307e\u3059\u3002 \u5fc5\u9808\u3082\u3057\u304f\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u304c\u3044\u304f\u3064\u304b \u4efb\u610f\u3067\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570 \u5fc5\u9808\u3082\u3057\u304f\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u304c\u3044\u304f\u3064\u304b \u4efb\u610f\u3067\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def foo ( # \u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570 x , y , z = 1 , # \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570: * args , # \u540d\u524d\u4ed8\u304d\u5f15\u6570: a , b , c = 2 , # \u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570: ** options ) end \u3053\u308c\u3089\u3092\u6307\u5b9a\u3059\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u305d\u308c\u305e\u308c\u4efb\u610f\u3067\u3059\u3002\u306a\u306e\u3067\u30b9\u30d7\u30e9\u30c3\u30c8\u3001\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u3001\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3001\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306f\u6b21\u306e\u30d1\u30fc\u30c4\u3092\u6301\u3061\u307e\u3059\u3002 foo ( # \u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570: 1 , 2 , # \u540d\u524d\u4ed8\u304d\u5f15\u6570: a : 1 , b : 2 ) \u304f\u308f\u3048\u3066\u30e1\u30bd\u30c3\u30c9\u306f\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b ( * ) \u3068\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b ( ** ) \u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u306f Tuple \u3092\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u306b\u5c55\u958b\u3057\u3066\u3001\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u306f NamedTuple \u3092\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306b\u5c55\u958b\u3057\u307e\u3059\u3002\u8907\u6570\u306e\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3069\u306e\u3088\u3046\u306b\u6e21\u3055\u308c\u305f\u5f15\u6570\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3059\u308b\u306e\u304b \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u969b\u3001\u6b21\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u6e21\u3055\u308c\u305f\u5f15\u6570\u3092\u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3055\u305b\u308b\u306e\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002 \u307e\u305a\u3001\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u304c\u5bfe\u5fdc\u3059\u308b\u4f4d\u7f6e\u6307\u5b9a\u306e\u4eee\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u30de\u30c3\u30c1\u3057\u305f\u5f15\u6570\u306e\u6570\u306f\u3001\u5c11\u306a\u304f\u3068\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e\u306a\u3044\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306b\u540d\u524d\u304c\u3042\u308c\u3070(\u540d\u524d\u304c\u306a\u3044\u5834\u5408\u306b\u3064\u3044\u3066\u306f\u5f8c\u306b\u8aac\u660e\u3057\u307e\u3059)\u3001\u3088\u308a\u305f\u304f\u3055\u3093\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u305d\u308c\u3089\u306f\u30bf\u30d7\u30eb\u3068\u3057\u3066\u305d\u306e\u5f15\u6570\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u3055\u308c\u307e\u3059\u3002\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u306f\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306e\u3042\u3068\u3067\u306f\u30de\u30c3\u30c1\u3057\u307e\u305b\u3093\u3002 \u7d9a\u3051\u3066\u3001\u540d\u524d\u4ed8\u304d\u5f15\u6570\u304c\u305d\u306e\u540d\u524d\u306b\u3088\u3063\u3066\u3001\u5bfe\u5fdc\u3059\u308b\u4eee\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3057\u307e\u3059\u3002\u3053\u306e\u30de\u30c3\u30c1\u3059\u308b\u5f15\u6570\u306f\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u524d\u3067\u3082\u5f8c\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\u3082\u3057\u305d\u306e\u5f15\u6570\u304c\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3068\u3057\u3066\u65e2\u306b\u30de\u30c3\u30c1\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 \u305d\u306e\u4ed6\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306f\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u306e\u5f15\u6570\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u306b NamedTuple \u3068\u3057\u3066\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u306e\u5f15\u6570\u304c\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306b\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u306a\u3044\u3068\u304d\u306f\u3001\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3092\u3055\u3089\u306b\u6e21\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u4ee5\u964d\u306e\u5f15\u6570\u306f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 # \u3061\u3087\u3046\u30691\u3064\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3068\u3001y \u3068\u3044\u3046\u540d\u524d\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u30e1\u30bd\u30c3\u30c9 def foo ( x , * , y ) end foo 1 # Error, missing argument: y foo 1 , 2 # Error: wrong number of arguments (given 2, expected 1) foo 1 , y : 10 # OK \u3057\u304b\u3057\u3001\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u304c\u540d\u524d\u3092\u6301\u3063\u3066\u3044\u305f\u5834\u5408\u3067\u3082\u3001\u4ee5\u964d\u306e\u5f15\u6570\u306f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3053\u3068\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u3002 # 1\u3064\u4ee5\u4e0a\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3068\u3001y \u3068\u3044\u3046\u540d\u524d\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u30e1\u30bd\u30c3\u30c9 def foo ( x , * args , y ) end foo 1 # Error, missing argument: y foo 1 , 2 # Error: missing argument; y foo 1 , 2 , 3 # Error: missing argument: y foo 1 , y : 10 # OK foo 1 , 2 , 3 , y : 4 # OK \u6700\u521d\u306b\u30a2\u30b9\u30bf\u30ea\u30b9\u30af\u3092\u7f6e\u304f\u3053\u3068\u3067\u3001\u3059\u3079\u3066\u306e\u5f15\u6570\u3092\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 # x \u3068 y \u3068\u3044\u30462\u3064\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u30e1\u30bd\u30c3\u30c9 def foo ( * , x , y ) end foo # Error: missing arguments: x, y foo x : 1 # Error: missing argument: y foo x : 1 , y : 2 # OK \u30a2\u30b9\u30bf\u30ea\u30b9\u30af\u4ee5\u964d\u306e\u5f15\u6570\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6301\u3064\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u305d\u306e\u5f15\u6570\u306f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u304c\u5fc5\u9808\u3067\u306f\u306a\u3044\u3001\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306a\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306b\u306a\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 # \u3069\u3061\u3089\u3082\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001x \u306f\u5fc5\u9808\u3067 y \u306f\u5fc5\u9808\u3067\u306f\u306a\u3044\u30e1\u30bd\u30c3\u30c9 def foo ( * , x , y = 2 ) end foo # Error: missing argument: x foo x : 1 # OK, y is 2 foo x : 1 , y : 3 # OK, y is 3 \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u3042\u3068\u306e\u5f15\u6570\u306f\u5fc5\u305a\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u305f\u3081\u3001\u305d\u306e\u540d\u524d\u306b\u3088\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u53ef\u80fd\u3067\u3059\u3002 def foo ( * , x ) puts \"x \u3068\u5171\u306b\u6e21\u3055\u308c\u305f: #{ x } \" end def foo ( * , y ) puts \"y \u3068\u5171\u306b\u6e21\u3055\u308c\u305f: #{ y } \" end foo x : 1 # => x \u3068\u5171\u306b\u6e21\u3055\u308c\u305f: 1 foo y : 2 # => y \u3068\u5171\u306b\u6e21\u3055\u308c\u305f: 2 \u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3082\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def foo ( x , * , y ) end foo 1 , y : 2 # OK foo y : 2 , x : 3 # OK \u5916\u90e8\u540d \u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306b\u306f\u5916\u90e8\u540d\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u5916\u90e8\u540d\u306f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u969b\u306b\u4f7f\u3046\u540d\u524d\u3067\u3001\u5185\u90e8\u540d\u306f\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u306e\u672c\u4f53\u3067\u4f7f\u3046\u540d\u524d\u3068\u306a\u308a\u307e\u3059\u3002 def foo ( external_name internal_name ) # \u3053\u3053\u3067 internal_name \u3092\u4f7f\u3048\u307e\u3059 end foo external_name : 1 \u3053\u308c\u306b\u306f2\u3064\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002 1\u3064\u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u4f7f\u3044\u305f\u3044\u5834\u5408\u3067\u3059\u3002 def plan ( begin begin_time , end end_time ) puts \" #{ begin_time } \u3068 #{ end_time } \u306e\u9593\u3067\u4e88\u5b9a\u3057\u3066\u3044\u307e\u3059\" end plan begin : Time . now , end : 2 . days . from_now 2\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u30e1\u30bd\u30c3\u30c9\u672c\u4f53\u3067\u306e\u53ef\u8aad\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u3001\u3067\u3059\u3002 def increment ( value , by ) # OK\u3001\u3067\u3059\u304c\u8aad\u3093\u3067\u3044\u3066\u9055\u548c\u611f\u304c\u3042\u308a\u307e\u3059 value + by end def increment ( value , by amount ) # \u3053\u3061\u3089\u306e\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046 value + amount end","title":"\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570"},{"location":"syntax_and_semantics/default_values_named_arguments_splats_tuples_and_overloading.html#_1","text":"\u3053\u308c\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u547c\u3073\u51fa\u3057\u306e\u5f62\u5f0f\u7684\u306a\u4ed5\u69d8\u3067\u3059\u3002","title":"\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570"},{"location":"syntax_and_semantics/default_values_named_arguments_splats_tuples_and_overloading.html#_2","text":"\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u306f\u6b21\u306e\u3082\u306e\u304b\u3089\u69cb\u6210\u3055\u308c\u307e\u3059\u3002 \u5fc5\u9808\u3082\u3057\u304f\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u304c\u3044\u304f\u3064\u304b \u4efb\u610f\u3067\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570 \u5fc5\u9808\u3082\u3057\u304f\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u304c\u3044\u304f\u3064\u304b \u4efb\u610f\u3067\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def foo ( # \u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570 x , y , z = 1 , # \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570: * args , # \u540d\u524d\u4ed8\u304d\u5f15\u6570: a , b , c = 2 , # \u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570: ** options ) end \u3053\u308c\u3089\u3092\u6307\u5b9a\u3059\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u305d\u308c\u305e\u308c\u4efb\u610f\u3067\u3059\u3002\u306a\u306e\u3067\u30b9\u30d7\u30e9\u30c3\u30c8\u3001\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u3001\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3001\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"},{"location":"syntax_and_semantics/default_values_named_arguments_splats_tuples_and_overloading.html#_3","text":"\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306f\u6b21\u306e\u30d1\u30fc\u30c4\u3092\u6301\u3061\u307e\u3059\u3002 foo ( # \u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570: 1 , 2 , # \u540d\u524d\u4ed8\u304d\u5f15\u6570: a : 1 , b : 2 ) \u304f\u308f\u3048\u3066\u30e1\u30bd\u30c3\u30c9\u306f\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b ( * ) \u3068\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b ( ** ) \u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u306f Tuple \u3092\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u306b\u5c55\u958b\u3057\u3066\u3001\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u306f NamedTuple \u3092\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306b\u5c55\u958b\u3057\u307e\u3059\u3002\u8907\u6570\u306e\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"},{"location":"syntax_and_semantics/default_values_named_arguments_splats_tuples_and_overloading.html#_4","text":"\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u969b\u3001\u6b21\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u6e21\u3055\u308c\u305f\u5f15\u6570\u3092\u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3055\u305b\u308b\u306e\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002 \u307e\u305a\u3001\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u304c\u5bfe\u5fdc\u3059\u308b\u4f4d\u7f6e\u6307\u5b9a\u306e\u4eee\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u30de\u30c3\u30c1\u3057\u305f\u5f15\u6570\u306e\u6570\u306f\u3001\u5c11\u306a\u304f\u3068\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e\u306a\u3044\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306b\u540d\u524d\u304c\u3042\u308c\u3070(\u540d\u524d\u304c\u306a\u3044\u5834\u5408\u306b\u3064\u3044\u3066\u306f\u5f8c\u306b\u8aac\u660e\u3057\u307e\u3059)\u3001\u3088\u308a\u305f\u304f\u3055\u3093\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u305d\u308c\u3089\u306f\u30bf\u30d7\u30eb\u3068\u3057\u3066\u305d\u306e\u5f15\u6570\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u3055\u308c\u307e\u3059\u3002\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u306f\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306e\u3042\u3068\u3067\u306f\u30de\u30c3\u30c1\u3057\u307e\u305b\u3093\u3002 \u7d9a\u3051\u3066\u3001\u540d\u524d\u4ed8\u304d\u5f15\u6570\u304c\u305d\u306e\u540d\u524d\u306b\u3088\u3063\u3066\u3001\u5bfe\u5fdc\u3059\u308b\u4eee\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3057\u307e\u3059\u3002\u3053\u306e\u30de\u30c3\u30c1\u3059\u308b\u5f15\u6570\u306f\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u524d\u3067\u3082\u5f8c\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\u3082\u3057\u305d\u306e\u5f15\u6570\u304c\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3068\u3057\u3066\u65e2\u306b\u30de\u30c3\u30c1\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 \u305d\u306e\u4ed6\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306f\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u306e\u5f15\u6570\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u306b NamedTuple \u3068\u3057\u3066\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u306e\u5f15\u6570\u304c\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306b\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u306a\u3044\u3068\u304d\u306f\u3001\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3092\u3055\u3089\u306b\u6e21\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u4ee5\u964d\u306e\u5f15\u6570\u306f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 # \u3061\u3087\u3046\u30691\u3064\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3068\u3001y \u3068\u3044\u3046\u540d\u524d\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u30e1\u30bd\u30c3\u30c9 def foo ( x , * , y ) end foo 1 # Error, missing argument: y foo 1 , 2 # Error: wrong number of arguments (given 2, expected 1) foo 1 , y : 10 # OK \u3057\u304b\u3057\u3001\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u304c\u540d\u524d\u3092\u6301\u3063\u3066\u3044\u305f\u5834\u5408\u3067\u3082\u3001\u4ee5\u964d\u306e\u5f15\u6570\u306f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3053\u3068\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u3002 # 1\u3064\u4ee5\u4e0a\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3068\u3001y \u3068\u3044\u3046\u540d\u524d\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u30e1\u30bd\u30c3\u30c9 def foo ( x , * args , y ) end foo 1 # Error, missing argument: y foo 1 , 2 # Error: missing argument; y foo 1 , 2 , 3 # Error: missing argument: y foo 1 , y : 10 # OK foo 1 , 2 , 3 , y : 4 # OK \u6700\u521d\u306b\u30a2\u30b9\u30bf\u30ea\u30b9\u30af\u3092\u7f6e\u304f\u3053\u3068\u3067\u3001\u3059\u3079\u3066\u306e\u5f15\u6570\u3092\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 # x \u3068 y \u3068\u3044\u30462\u3064\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u30e1\u30bd\u30c3\u30c9 def foo ( * , x , y ) end foo # Error: missing arguments: x, y foo x : 1 # Error: missing argument: y foo x : 1 , y : 2 # OK \u30a2\u30b9\u30bf\u30ea\u30b9\u30af\u4ee5\u964d\u306e\u5f15\u6570\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6301\u3064\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u305d\u306e\u5f15\u6570\u306f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u304c\u5fc5\u9808\u3067\u306f\u306a\u3044\u3001\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306a\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306b\u306a\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 # \u3069\u3061\u3089\u3082\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001x \u306f\u5fc5\u9808\u3067 y \u306f\u5fc5\u9808\u3067\u306f\u306a\u3044\u30e1\u30bd\u30c3\u30c9 def foo ( * , x , y = 2 ) end foo # Error: missing argument: x foo x : 1 # OK, y is 2 foo x : 1 , y : 3 # OK, y is 3 \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u3042\u3068\u306e\u5f15\u6570\u306f\u5fc5\u305a\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u305f\u3081\u3001\u305d\u306e\u540d\u524d\u306b\u3088\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u53ef\u80fd\u3067\u3059\u3002 def foo ( * , x ) puts \"x \u3068\u5171\u306b\u6e21\u3055\u308c\u305f: #{ x } \" end def foo ( * , y ) puts \"y \u3068\u5171\u306b\u6e21\u3055\u308c\u305f: #{ y } \" end foo x : 1 # => x \u3068\u5171\u306b\u6e21\u3055\u308c\u305f: 1 foo y : 2 # => y \u3068\u5171\u306b\u6e21\u3055\u308c\u305f: 2 \u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3082\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def foo ( x , * , y ) end foo 1 , y : 2 # OK foo y : 2 , x : 3 # OK","title":"\u3069\u306e\u3088\u3046\u306b\u6e21\u3055\u308c\u305f\u5f15\u6570\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3059\u308b\u306e\u304b"},{"location":"syntax_and_semantics/default_values_named_arguments_splats_tuples_and_overloading.html#_5","text":"\u30e1\u30bd\u30c3\u30c9\u306e\u4eee\u5f15\u6570\u306b\u306f\u5916\u90e8\u540d\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u5916\u90e8\u540d\u306f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u969b\u306b\u4f7f\u3046\u540d\u524d\u3067\u3001\u5185\u90e8\u540d\u306f\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u306e\u672c\u4f53\u3067\u4f7f\u3046\u540d\u524d\u3068\u306a\u308a\u307e\u3059\u3002 def foo ( external_name internal_name ) # \u3053\u3053\u3067 internal_name \u3092\u4f7f\u3048\u307e\u3059 end foo external_name : 1 \u3053\u308c\u306b\u306f2\u3064\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002 1\u3064\u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u4f7f\u3044\u305f\u3044\u5834\u5408\u3067\u3059\u3002 def plan ( begin begin_time , end end_time ) puts \" #{ begin_time } \u3068 #{ end_time } \u306e\u9593\u3067\u4e88\u5b9a\u3057\u3066\u3044\u307e\u3059\" end plan begin : Time . now , end : 2 . days . from_now 2\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u30e1\u30bd\u30c3\u30c9\u672c\u4f53\u3067\u306e\u53ef\u8aad\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u3001\u3067\u3059\u3002 def increment ( value , by ) # OK\u3001\u3067\u3059\u304c\u8aad\u3093\u3067\u3044\u3066\u9055\u548c\u611f\u304c\u3042\u308a\u307e\u3059 value + by end def increment ( value , by amount ) # \u3053\u3061\u3089\u306e\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046 value + amount end","title":"\u5916\u90e8\u540d"},{"location":"syntax_and_semantics/enum.html","text":"\u5217\u6319\u578b (Enum) \u5217\u6319\u578b (Enum) \u306f\u6574\u6570\u306e\u96c6\u5408\u3067\u3001\u305d\u306e\u305d\u308c\u305e\u308c\u306e\u5024\u304c\u540d\u524d\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 enum Color Red Green Blue end enum \u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u7d9a\u3051\u3066\u305d\u306e\u540d\u524d\u3092\u66f8\u304f\u3053\u3068\u3067\u3001\u5217\u6319\u578b\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u5217\u6319\u578b\u306f\u305d\u306e\u672c\u4f53\u306b\u5024\u3092\u6301\u3061\u307e\u3059\u3002\u5024\u306f\u6700\u521d\u306b 0 \u304b\u3089\u59cb\u307e\u3063\u3066\u30011\u305a\u3064\u5897\u3048\u3066\u3044\u304d\u307e\u3059\u3002\u305d\u308c\u3089\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 enum Color Red # 0 Green # 1 Blue = 5 # 5\u306b\u4e0a\u66f8\u304d\u3059\u308b Yellow # 6 (5 + 1) end \u5217\u6319\u578b\u306e\u305d\u308c\u305e\u308c\u306e\u5b9a\u6570\u306f\u305d\u306e\u5217\u6319\u578b\u3092\u578b\u3068\u3057\u3066\u6301\u3061\u307e\u3059\u3002 Color :: Red # :: Color \u7d10\u4ed8\u3044\u3066\u3044\u308b\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f value \u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Color :: Green . value # => 1 \u3053\u306e\u5024\u306e\u578b\u306f Int32 \u3067\u3059\u304c\u3001\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 enum Color : UInt8 Red Green Blue end Color :: Red . value # :: UInt8 \u305f\u3060\u3057\u3001\u6574\u6570\u578b\u3057\u304b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u3059\u3079\u3066\u306e\u5217\u6319\u578b\u306f Enum \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002 \u30d5\u30e9\u30b0\u5217\u6319\u578b \u5217\u6319\u578b\u306b @[Flags] \u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u6307\u5b9a\u3059\u308b\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u304c\u5909\u308f\u308a\u307e\u3059\u3002 @[ Flags ] enum IOMode Read # 1 Write # 2 Async # 4 end @[Flags] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u6700\u521d\u306e\u5b9a\u6570\u306e\u5024\u306f 1 \u306b\u306a\u308a\u3001\u4ee5\u964d\u306f\u524d\u306e\u5024\u3092 2 \u500d\u3057\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001\u6697\u9ed9\u306e\u5b9a\u6570\u3068\u3057\u3066 None \u3068 All \u304c\u81ea\u52d5\u7684\u306b\u5217\u6319\u578b\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067 None \u306e\u5024\u306f 0 \u3067\u3001 All \u306f\u3059\u3079\u3066\u306e\u5b9a\u6570\u306e\u30d3\u30c3\u30c8 OR\u3092\u53d6\u3063\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 IOMode :: None . value # => 0 IOMode :: All . value # => 7 \u3055\u3089\u306b\u3001 Enum \u306e\u30e1\u30bd\u30c3\u30c9\u306b\u306f @[Flags] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u308b\u3082\u306e\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 puts ( Color :: Red ) # prints \"Red\" puts ( IOMode :: Write | IOMode :: Async ) # prints \"Write, Async\" \u6574\u6570\u304b\u3089\u5217\u6319\u578b\u3092\u4f5c\u308b \u6574\u6570\u304b\u3089\u5217\u6319\u578b\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 puts Color . new ( 1 ) # => \"Green\" \u3068\u51fa\u529b \u5217\u6319\u578b\u306e\u5b9a\u6570\u306b\u306a\u3044\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u3042\u304f\u307e\u3067\u3082\u578b\u306f Color \u3068\u306a\u308a\u307e\u3059\u304c\u3001\u51fa\u529b\u3057\u3066\u3068\u304d\u306b\u306f\u305d\u306e\u5024\u304c\u305d\u306e\u307e\u307e\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 puts Color . new ( 10 ) # => \"10\" \u3068\u51fa\u529b \u3053\u308c\u306f\u4e3b\u306b C \u306e\u6574\u6570\u3092 Crystal \u306e\u5217\u6319\u578b\u306b\u5909\u63db\u3059\u308b\u7528\u9014\u3067\u5229\u7528\u3057\u307e\u3059\u3002 \u30e1\u30bd\u30c3\u30c9 \u30af\u30e9\u30b9\u3084\u69cb\u9020\u4f53\u3068\u540c\u69d8\u306b\u3001\u5217\u6319\u578b\u306b\u3082\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 enum Color Red Green Blue def red? self == Color :: Red end end Color :: Red . red? # => true Color :: Blue . red? # => false \u30af\u30e9\u30b9\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u4f7f\u3044\u65b9 \u5217\u6319\u578b\u306f Symbol \u306e\u578b\u5b89\u5168\u306a\u4ee3\u66ff\u7269\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u5217\u6319\u578b\u3092 API \u306e\u30e1\u30bd\u30c3\u30c9\u306e \u578b\u5236\u7d04 \u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def paint ( color : Color ) case color when Color :: Red # ... else # \u3042\u307e\u308a\u8003\u3048\u3089\u308c\u306a\u3044\u304c\u3001\u7d76\u5bfe\u306b\u306a\u3044\u3068\u306f\u8a00\u3048\u306a\u3044 raise \"unknown color: #{ color } \" end end paint Color :: Red \u4e0a\u8a18\u3068\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u3092\u3001\u30b7\u30f3\u30dc\u30eb\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def paint ( color : Symbol ) case color when :red # ... else raise \"unknown color: #{ color } \" end end paint :red \u305f\u3060\u3001\u3053\u306e\u5834\u5408\u306f\u3082\u3057\u30d7\u30ed\u30b0\u30e9\u30de\u304c :reed \u3068\u30bf\u30a4\u30dd\u3057\u3066\u3057\u307e\u3063\u305f\u3068\u3059\u308b\u3068\u3001\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4e00\u65b9\u3001 Color::Reed \u3067\u3042\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u5217\u6319\u578b\u3092\u5229\u7528\u3067\u304d\u308b\u3068\u304d\u306b\u306f\u5e38\u306b\u5217\u6319\u578b\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\u30b7\u30f3\u30dc\u30eb\u3092\u4f7f\u3046\u306e\u306f API \u306e\u5185\u90e8\u7684\u306a\u5b9f\u88c5\u306b\u7559\u3081\u3066\u3001\u516c\u958b\u3059\u308b API \u3067\u306f\u30b7\u30f3\u30dc\u30eb\u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u305f\u3060\u3057\u3001\u6700\u7d42\u7684\u306b\u306f\u5404\u81ea\u304c\u81ea\u7531\u306b\u5224\u65ad\u3067\u304d\u308b\u3053\u3068\u306a\u306e\u3067\u3001\u5fc5\u305a\u305d\u3046\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"\u5217\u6319\u578b (Enum)"},{"location":"syntax_and_semantics/enum.html#enum","text":"\u5217\u6319\u578b (Enum) \u306f\u6574\u6570\u306e\u96c6\u5408\u3067\u3001\u305d\u306e\u305d\u308c\u305e\u308c\u306e\u5024\u304c\u540d\u524d\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 enum Color Red Green Blue end enum \u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u7d9a\u3051\u3066\u305d\u306e\u540d\u524d\u3092\u66f8\u304f\u3053\u3068\u3067\u3001\u5217\u6319\u578b\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u5217\u6319\u578b\u306f\u305d\u306e\u672c\u4f53\u306b\u5024\u3092\u6301\u3061\u307e\u3059\u3002\u5024\u306f\u6700\u521d\u306b 0 \u304b\u3089\u59cb\u307e\u3063\u3066\u30011\u305a\u3064\u5897\u3048\u3066\u3044\u304d\u307e\u3059\u3002\u305d\u308c\u3089\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 enum Color Red # 0 Green # 1 Blue = 5 # 5\u306b\u4e0a\u66f8\u304d\u3059\u308b Yellow # 6 (5 + 1) end \u5217\u6319\u578b\u306e\u305d\u308c\u305e\u308c\u306e\u5b9a\u6570\u306f\u305d\u306e\u5217\u6319\u578b\u3092\u578b\u3068\u3057\u3066\u6301\u3061\u307e\u3059\u3002 Color :: Red # :: Color \u7d10\u4ed8\u3044\u3066\u3044\u308b\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f value \u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Color :: Green . value # => 1 \u3053\u306e\u5024\u306e\u578b\u306f Int32 \u3067\u3059\u304c\u3001\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 enum Color : UInt8 Red Green Blue end Color :: Red . value # :: UInt8 \u305f\u3060\u3057\u3001\u6574\u6570\u578b\u3057\u304b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u3059\u3079\u3066\u306e\u5217\u6319\u578b\u306f Enum \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u5217\u6319\u578b (Enum)"},{"location":"syntax_and_semantics/enum.html#_1","text":"\u5217\u6319\u578b\u306b @[Flags] \u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u6307\u5b9a\u3059\u308b\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u304c\u5909\u308f\u308a\u307e\u3059\u3002 @[ Flags ] enum IOMode Read # 1 Write # 2 Async # 4 end @[Flags] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u6700\u521d\u306e\u5b9a\u6570\u306e\u5024\u306f 1 \u306b\u306a\u308a\u3001\u4ee5\u964d\u306f\u524d\u306e\u5024\u3092 2 \u500d\u3057\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001\u6697\u9ed9\u306e\u5b9a\u6570\u3068\u3057\u3066 None \u3068 All \u304c\u81ea\u52d5\u7684\u306b\u5217\u6319\u578b\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067 None \u306e\u5024\u306f 0 \u3067\u3001 All \u306f\u3059\u3079\u3066\u306e\u5b9a\u6570\u306e\u30d3\u30c3\u30c8 OR\u3092\u53d6\u3063\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 IOMode :: None . value # => 0 IOMode :: All . value # => 7 \u3055\u3089\u306b\u3001 Enum \u306e\u30e1\u30bd\u30c3\u30c9\u306b\u306f @[Flags] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u308b\u3082\u306e\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 puts ( Color :: Red ) # prints \"Red\" puts ( IOMode :: Write | IOMode :: Async ) # prints \"Write, Async\"","title":"\u30d5\u30e9\u30b0\u5217\u6319\u578b"},{"location":"syntax_and_semantics/enum.html#_2","text":"\u6574\u6570\u304b\u3089\u5217\u6319\u578b\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 puts Color . new ( 1 ) # => \"Green\" \u3068\u51fa\u529b \u5217\u6319\u578b\u306e\u5b9a\u6570\u306b\u306a\u3044\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u3042\u304f\u307e\u3067\u3082\u578b\u306f Color \u3068\u306a\u308a\u307e\u3059\u304c\u3001\u51fa\u529b\u3057\u3066\u3068\u304d\u306b\u306f\u305d\u306e\u5024\u304c\u305d\u306e\u307e\u307e\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 puts Color . new ( 10 ) # => \"10\" \u3068\u51fa\u529b \u3053\u308c\u306f\u4e3b\u306b C \u306e\u6574\u6570\u3092 Crystal \u306e\u5217\u6319\u578b\u306b\u5909\u63db\u3059\u308b\u7528\u9014\u3067\u5229\u7528\u3057\u307e\u3059\u3002","title":"\u6574\u6570\u304b\u3089\u5217\u6319\u578b\u3092\u4f5c\u308b"},{"location":"syntax_and_semantics/enum.html#_3","text":"\u30af\u30e9\u30b9\u3084\u69cb\u9020\u4f53\u3068\u540c\u69d8\u306b\u3001\u5217\u6319\u578b\u306b\u3082\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 enum Color Red Green Blue def red? self == Color :: Red end end Color :: Red . red? # => true Color :: Blue . red? # => false \u30af\u30e9\u30b9\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002","title":"\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/enum.html#_4","text":"\u5217\u6319\u578b\u306f Symbol \u306e\u578b\u5b89\u5168\u306a\u4ee3\u66ff\u7269\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u5217\u6319\u578b\u3092 API \u306e\u30e1\u30bd\u30c3\u30c9\u306e \u578b\u5236\u7d04 \u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def paint ( color : Color ) case color when Color :: Red # ... else # \u3042\u307e\u308a\u8003\u3048\u3089\u308c\u306a\u3044\u304c\u3001\u7d76\u5bfe\u306b\u306a\u3044\u3068\u306f\u8a00\u3048\u306a\u3044 raise \"unknown color: #{ color } \" end end paint Color :: Red \u4e0a\u8a18\u3068\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u3092\u3001\u30b7\u30f3\u30dc\u30eb\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def paint ( color : Symbol ) case color when :red # ... else raise \"unknown color: #{ color } \" end end paint :red \u305f\u3060\u3001\u3053\u306e\u5834\u5408\u306f\u3082\u3057\u30d7\u30ed\u30b0\u30e9\u30de\u304c :reed \u3068\u30bf\u30a4\u30dd\u3057\u3066\u3057\u307e\u3063\u305f\u3068\u3059\u308b\u3068\u3001\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4e00\u65b9\u3001 Color::Reed \u3067\u3042\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u5217\u6319\u578b\u3092\u5229\u7528\u3067\u304d\u308b\u3068\u304d\u306b\u306f\u5e38\u306b\u5217\u6319\u578b\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\u30b7\u30f3\u30dc\u30eb\u3092\u4f7f\u3046\u306e\u306f API \u306e\u5185\u90e8\u7684\u306a\u5b9f\u88c5\u306b\u7559\u3081\u3066\u3001\u516c\u958b\u3059\u308b API \u3067\u306f\u30b7\u30f3\u30dc\u30eb\u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u305f\u3060\u3057\u3001\u6700\u7d42\u7684\u306b\u306f\u5404\u81ea\u304c\u81ea\u7531\u306b\u5224\u65ad\u3067\u304d\u308b\u3053\u3068\u306a\u306e\u3067\u3001\u5fc5\u305a\u305d\u3046\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"\u4f7f\u3044\u65b9"},{"location":"syntax_and_semantics/everything_is_an_object.html","text":"\u3059\u3079\u3066\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 Crystal \u3067\u306f\u3059\u3079\u3066\u306e\u3082\u306e\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b9a\u7fa9\u306f\u3001\u7a81\u304d\u8a70\u3081\u308b\u3068\u4ee5\u4e0b\u306b\u8981\u7d04\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u578b\u3092\u6301\u3063\u3066\u3044\u308b \u30e1\u30bd\u30c3\u30c9\u306b\u5fdc\u7b54\u3059\u308b \u300c\u578b\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u5fdc\u7b54\u3059\u308b\u300d\u3082\u306e\u3002\u3053\u308c\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002 \u305d\u3057\u3066\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5185\u90e8\u72b6\u614b\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u305d\u306e\u72b6\u614b\u306b\u3064\u3044\u3066\u554f\u3044\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u3059\u3079\u3066\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"},{"location":"syntax_and_semantics/everything_is_an_object.html#_1","text":"Crystal \u3067\u306f\u3059\u3079\u3066\u306e\u3082\u306e\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b9a\u7fa9\u306f\u3001\u7a81\u304d\u8a70\u3081\u308b\u3068\u4ee5\u4e0b\u306b\u8981\u7d04\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u578b\u3092\u6301\u3063\u3066\u3044\u308b \u30e1\u30bd\u30c3\u30c9\u306b\u5fdc\u7b54\u3059\u308b \u300c\u578b\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u5fdc\u7b54\u3059\u308b\u300d\u3082\u306e\u3002\u3053\u308c\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002 \u305d\u3057\u3066\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5185\u90e8\u72b6\u614b\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u305d\u306e\u72b6\u614b\u306b\u3064\u3044\u3066\u554f\u3044\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u3059\u3079\u3066\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"},{"location":"syntax_and_semantics/exception_handling.html","text":"\u4f8b\u5916\u306e\u51e6\u7406 Crystal \u3067\u306f\u3001\u4f8b\u5916\u3092\u767a\u751f (raise) \u3055\u305b\u3001\u305d\u308c\u3092\u6355\u6349 (rescue) \u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\u3002 \u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b \u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u306b\u306f\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e raise \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\u4ed6\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u7570\u306a\u308a\u3001 raise \u306f\u901a\u5e38\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308a\u30012\u3064\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e1\u3064\u306f \u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u308b\u3082\u306e \u3067\u3001\u3082\u30461\u3064\u306f \u4f8b\u5916\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d7\u3051\u53d6\u308b\u3082\u306e \u3067\u3059\u3002 raise \"OH NO!\" raise Exception . new ( \"Some error\" ) \u6587\u5b57\u5217\u306e\u5834\u5408\u306f\u3001\u5358\u7d14\u306b\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u542b\u3093\u3060 Exception \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u305d\u3057\u3066\u3001raise \u306e\u5bfe\u8c61\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u306f Exception \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3001\u3082\u3057\u304f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u307f\u306b\u9650\u3089\u308c\u307e\u3059\u3002 \u72ec\u81ea\u306e\u4f8b\u5916\u3092\u5b9a\u7fa9\u3059\u308b \u72ec\u81ea\u306e\u4f8b\u5916\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001 Exception \u304b\u3089\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 class MyException < Exception end class MyOtherException < Exception end \u901a\u5e38\u306e\u30af\u30e9\u30b9\u306e\u3088\u3046\u306b\u3001\u81ea\u5206\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 \u4f8b\u5916\u306e\u6355\u6349 \u4f8b\u5916\u3092\u6355\u6349\u3059\u308b\u306b\u306f\u3001 begin ... rescue ... end \u306e\u69cb\u6587\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 begin raise \"OH NO!\" rescue puts \"Rescued!\" end # Output: Rescued! \u6355\u6349\u3055\u308c\u305f\u4f8b\u5916\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u3068\u304d\u306f\u3001 rescue \u7bc0\u306b\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 begin raise \"OH NO!\" rescue ex puts ex . message end # Output: OH NO! \u3042\u308b\u578b\u306e\u4f8b\u5916 (\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3082\u542b\u3080) \u306e\u307f\u6355\u6349\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 begin raise MyException . new ( \"OH NO!\" ) rescue MyException puts \"Rescued MyException\" end # Output: Rescued MyException \u578b\u3092\u6307\u5b9a\u3057\u3066\u3001\u304b\u3064\u305d\u306e\u4f8b\u5916\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u578b\u5236\u7d04\u306e\u5834\u5408\u3068\u540c\u3058\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002 begin raise MyException . new ( \"OH NO!\" ) rescue ex : MyException puts \"Rescued MyException: #{ ex . message } \" end # Output: Rescued MyException: OH NO! \u8907\u6570\u306e rescue \u7bc0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 begin # ... rescue ex1 : MyException # MyException \u306e\u307f rescue ex2 : MyOtherException # MyOtherException \u306e\u307f rescue # any other kind of exception end \u307e\u305f\u3001\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b) \u3092\u6307\u5b9a\u3059\u308c\u3070\u3001\u8907\u6570\u306e\u4f8b\u5916\u3092\u540c\u6642\u306b\u88dc\u8db3\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 begin # ... rescue ex : MyException | MyOtherException # MyException/MyOtherException \u306e\u307f rescue # any other kind of exception end else else \u7bc0\u306f\u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306e\u307f\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 begin something_dangerous rescue # \u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3053\u3053\u304c\u5b9f\u884c\u3055\u308c\u308b else # \u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306e\u307f\u3053\u3053\u304c\u5b9f\u884c\u3055\u308c\u308b end else \u7bc0\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001\u5c11\u306a\u304f\u3068\u30821\u3064\u306e rescue \u7bc0\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ensure ensure \u7bc0\u306f\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u304b\u3069\u3046\u304b\u306b\u95a2\u4fc2\u306a\u304f\u3001 begin ... end \u307e\u305f\u306f begin ... rescue ... end \u306e\u3042\u3068\u3067\u5fc5\u305a\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 begin something_dangerous ensure puts \"Cleanup...\" end # \u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u304b\u3069\u3046\u304b\u306b\u95a2\u308f\u3089\u305a\u3001 # something_dangerous \u304c\u5b9f\u884c\u3055\u308c\u305f\u3042\u3068\u306b \"Cleanup...\" \u304c\u51fa\u529b\u3055\u308c\u308b \u307e\u305f\u306f begin something_dangerous rescue # ... else # ... ensure # \u3053\u3053\u306f\u5fc5\u305a\u5b9f\u884c\u3055\u308c\u308b end \u901a\u5e38\u3001 ensure \u7bc0\u306f\u51e6\u7406\u306e\u5f8c\u59cb\u672b\u3084\u30ea\u30bd\u30fc\u30b9\u306e\u89e3\u653e\u306a\u3069\u306b\u5229\u7528\u3057\u307e\u3059\u3002 \u77ed\u7e2e\u8a18\u6cd5 \u4f8b\u5916\u51e6\u7406\u306b\u306f\u77ed\u7e2e\u8a18\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\u306f\u6697\u9ed9\u7684\u306b begin ... end \u69cb\u6587\u3067\u3042\u308b\u3068\u3057\u3066\u3001 rescue \u3084 else \u3001 ensure \u7bc0\u3092\u6307\u5b9a\u3067\u304d\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002 def some_method something_dangerous rescue # \u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3053\u3053\u304c\u5b9f\u884c\u3055\u308c\u308b end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 def some_method begin something_dangerous rescue # \u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3053\u3053\u304c\u5b9f\u884c\u3055\u308c\u308b end end ensure \u3068\u5171\u306b\u5229\u7528\u3057\u305f\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 def some_method something_dangerous ensure # \u3053\u3053\u306f\u5e38\u306b\u5b9f\u884c\u3055\u308c\u308b end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 def some_method begin something_dangerous ensure # \u3053\u3053\u306f\u5fc5\u305a\u5b9f\u884c\u3055\u308c\u308b end end # \u307e\u305f\u77ed\u7e2e\u8a18\u6cd5\u306f\u30d6\u30ed\u30c3\u30af\u306b\u5bfe\u3057\u3066\u3082\u540c\u69d8\u306b\u306f\u305f\u3089\u304f ( 1 .. 10 ) . each do | n | # \u6f5c\u5728\u7684\u306b\u5371\u967a\u306a\u64cd\u4f5c\u3092\u3059\u308b rescue # .. else # .. ensure # .. end \u578b\u63a8\u8ad6 \u4f8b\u5916\u51e6\u7406\u306b\u304a\u3044\u3066\u3001 begin \u7bc0\u306e\u4e2d\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u306f rescue \u307e\u305f\u306f ensure \u5185\u306b\u304a\u3044\u3066\u306f Nil t\u578b\u3092\u6301\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 begin a = something_dangerous_that_returns_Int32 ensure puts a + 1 # error, undefined method '+' for Nil end \u3053\u306e\u3068\u304d\u3001\u3082\u3057 something_dangerous_that_returns_Int32 \u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u306a\u3044\u5834\u5408\u3067\u3042\u3063\u3066\u3082\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u3055\u3089\u306b a \u306b\u5148\u306b\u5024\u306b\u4ee3\u5165\u3055\u308c\u3066\u3001\u305d\u308c\u304b\u3089\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u3067\u3042\u3063\u3066\u3082\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 begin a = 1 something_dangerous ensure puts a + 1 # error, undefined method '+' for Nil end \u3053\u306e\u5834\u5408\u3001 a \u306b\u5e38\u306b\u5024\u304c\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306f\u660e\u767d\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3067\u3082\u30b3\u30f3\u30d1\u30a4\u30e9\u306f a \u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u3053\u306e\u30ed\u30b8\u30c3\u30af\u306f\u5c06\u6765\u7684\u306b\u306f\u6539\u5b9a\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305f\u3060\u3001\u73fe\u6642\u70b9\u3067\u306f\u4f8b\u5916\u51e6\u7406\u306e\u4e2d\u3067\u884c\u3046\u3053\u3068\u306f\u5fc5\u8981\u6700\u5c0f\u9650\u306b\u7559\u3081\u3001\u30b3\u30fc\u30c9\u306e\u610f\u56f3\u3092\u660e\u78ba\u306b\u3057\u3066\u66f8\u304f\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002 # \u4f8b\u5916\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u306e\u5185\u90e8\u3067 `a` \u3092\u5ba3\u8a00\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u305f\u3081\u3001 # \u3053\u3046\u66f8\u304f\u3053\u3068\u3067\u610f\u56f3\u304c\u3088\u308a\u660e\u78ba\u306b\u306a\u308b a = 1 begin something_dangerous ensure puts a + 1 # works end \u4f8b\u5916\u51e6\u7406\u306e\u4ed6\u306e\u65b9\u6cd5 \u4f8b\u5916\u306f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u6a5f\u69cb\u306e1\u3064\u3067\u3059\u304c\u3001\u5fc5\u305a\u3057\u3082\u4f8b\u5916\u51e6\u7406\u3067\u3057\u304b\u30a8\u30e9\u30fc\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u306f\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u3092\u4f34\u3046\u306e\u3067\u3001\u4e00\u822c\u7684\u306b\u4f8b\u5916\u51e6\u7406\u306f\u9045\u304f\u306a\u308b\u50be\u5411\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u3053\u3067\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001\u4f8b\u5916\u3092\u767a\u751f\u3059\u308b\u65b9\u6cd5\u306b\u52a0\u3048\u3066\u3001 nil \u3092\u8fd4\u3059\u65b9\u6cd5\u3082\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 array = [ 1 , 2 , 3 ] array [ 4 ] # raises because of IndexError array [ 4 ]? # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7bc4\u56f2\u5916\u306e\u305f\u3081 nil \u304c\u8fd4\u308b \u6163\u7fd2\u3068\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u4ee3\u308f\u308a\u306b nil \u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3092\u793a\u3059\u305f\u3081\u306b\u30af\u30a8\u30b9\u30c1\u30e7\u30f3\u30de\u30fc\u30af\u306e\u3064\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u4f8b\u5916\u3092\u5229\u7528\u3059\u308b\u304b nil \u3092\u5229\u7528\u3059\u308b\u304b\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305f\u3060\u3001\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3053\u306e\u65b9\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u30ed\u30b8\u30c3\u30af\u304c\u6df7\u3056\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b3\u30fc\u30c9\u304c\u6c5a\u308c\u3066\u3057\u307e\u3046\u306e\u3092\u907f\u3051\u308b\u3068\u3044\u3046\u610f\u5473\u3067\u3082\u3001\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3068\u3044\u3046\u306e\u306f\u597d\u307e\u3057\u3044\u65b9\u6cd5\u3067\u3057\u3087\u3046\u3002","title":"\u4f8b\u5916\u306e\u51e6\u7406"},{"location":"syntax_and_semantics/exception_handling.html#_1","text":"Crystal \u3067\u306f\u3001\u4f8b\u5916\u3092\u767a\u751f (raise) \u3055\u305b\u3001\u305d\u308c\u3092\u6355\u6349 (rescue) \u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\u3002","title":"\u4f8b\u5916\u306e\u51e6\u7406"},{"location":"syntax_and_semantics/exception_handling.html#_2","text":"\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u306b\u306f\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e raise \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\u4ed6\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u7570\u306a\u308a\u3001 raise \u306f\u901a\u5e38\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308a\u30012\u3064\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e1\u3064\u306f \u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u308b\u3082\u306e \u3067\u3001\u3082\u30461\u3064\u306f \u4f8b\u5916\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d7\u3051\u53d6\u308b\u3082\u306e \u3067\u3059\u3002 raise \"OH NO!\" raise Exception . new ( \"Some error\" ) \u6587\u5b57\u5217\u306e\u5834\u5408\u306f\u3001\u5358\u7d14\u306b\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u542b\u3093\u3060 Exception \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u305d\u3057\u3066\u3001raise \u306e\u5bfe\u8c61\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u306f Exception \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3001\u3082\u3057\u304f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u307f\u306b\u9650\u3089\u308c\u307e\u3059\u3002","title":"\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b"},{"location":"syntax_and_semantics/exception_handling.html#_3","text":"\u72ec\u81ea\u306e\u4f8b\u5916\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001 Exception \u304b\u3089\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 class MyException < Exception end class MyOtherException < Exception end \u901a\u5e38\u306e\u30af\u30e9\u30b9\u306e\u3088\u3046\u306b\u3001\u81ea\u5206\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002","title":"\u72ec\u81ea\u306e\u4f8b\u5916\u3092\u5b9a\u7fa9\u3059\u308b"},{"location":"syntax_and_semantics/exception_handling.html#_4","text":"\u4f8b\u5916\u3092\u6355\u6349\u3059\u308b\u306b\u306f\u3001 begin ... rescue ... end \u306e\u69cb\u6587\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 begin raise \"OH NO!\" rescue puts \"Rescued!\" end # Output: Rescued! \u6355\u6349\u3055\u308c\u305f\u4f8b\u5916\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u3068\u304d\u306f\u3001 rescue \u7bc0\u306b\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 begin raise \"OH NO!\" rescue ex puts ex . message end # Output: OH NO! \u3042\u308b\u578b\u306e\u4f8b\u5916 (\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3082\u542b\u3080) \u306e\u307f\u6355\u6349\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 begin raise MyException . new ( \"OH NO!\" ) rescue MyException puts \"Rescued MyException\" end # Output: Rescued MyException \u578b\u3092\u6307\u5b9a\u3057\u3066\u3001\u304b\u3064\u305d\u306e\u4f8b\u5916\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u578b\u5236\u7d04\u306e\u5834\u5408\u3068\u540c\u3058\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002 begin raise MyException . new ( \"OH NO!\" ) rescue ex : MyException puts \"Rescued MyException: #{ ex . message } \" end # Output: Rescued MyException: OH NO! \u8907\u6570\u306e rescue \u7bc0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 begin # ... rescue ex1 : MyException # MyException \u306e\u307f rescue ex2 : MyOtherException # MyOtherException \u306e\u307f rescue # any other kind of exception end \u307e\u305f\u3001\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b) \u3092\u6307\u5b9a\u3059\u308c\u3070\u3001\u8907\u6570\u306e\u4f8b\u5916\u3092\u540c\u6642\u306b\u88dc\u8db3\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 begin # ... rescue ex : MyException | MyOtherException # MyException/MyOtherException \u306e\u307f rescue # any other kind of exception end","title":"\u4f8b\u5916\u306e\u6355\u6349"},{"location":"syntax_and_semantics/exception_handling.html#else","text":"else \u7bc0\u306f\u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306e\u307f\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 begin something_dangerous rescue # \u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3053\u3053\u304c\u5b9f\u884c\u3055\u308c\u308b else # \u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306e\u307f\u3053\u3053\u304c\u5b9f\u884c\u3055\u308c\u308b end else \u7bc0\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001\u5c11\u306a\u304f\u3068\u30821\u3064\u306e rescue \u7bc0\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"else"},{"location":"syntax_and_semantics/exception_handling.html#ensure","text":"ensure \u7bc0\u306f\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u304b\u3069\u3046\u304b\u306b\u95a2\u4fc2\u306a\u304f\u3001 begin ... end \u307e\u305f\u306f begin ... rescue ... end \u306e\u3042\u3068\u3067\u5fc5\u305a\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 begin something_dangerous ensure puts \"Cleanup...\" end # \u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u304b\u3069\u3046\u304b\u306b\u95a2\u308f\u3089\u305a\u3001 # something_dangerous \u304c\u5b9f\u884c\u3055\u308c\u305f\u3042\u3068\u306b \"Cleanup...\" \u304c\u51fa\u529b\u3055\u308c\u308b \u307e\u305f\u306f begin something_dangerous rescue # ... else # ... ensure # \u3053\u3053\u306f\u5fc5\u305a\u5b9f\u884c\u3055\u308c\u308b end \u901a\u5e38\u3001 ensure \u7bc0\u306f\u51e6\u7406\u306e\u5f8c\u59cb\u672b\u3084\u30ea\u30bd\u30fc\u30b9\u306e\u89e3\u653e\u306a\u3069\u306b\u5229\u7528\u3057\u307e\u3059\u3002","title":"ensure"},{"location":"syntax_and_semantics/exception_handling.html#_5","text":"\u4f8b\u5916\u51e6\u7406\u306b\u306f\u77ed\u7e2e\u8a18\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\u306f\u6697\u9ed9\u7684\u306b begin ... end \u69cb\u6587\u3067\u3042\u308b\u3068\u3057\u3066\u3001 rescue \u3084 else \u3001 ensure \u7bc0\u3092\u6307\u5b9a\u3067\u304d\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002 def some_method something_dangerous rescue # \u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3053\u3053\u304c\u5b9f\u884c\u3055\u308c\u308b end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 def some_method begin something_dangerous rescue # \u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3053\u3053\u304c\u5b9f\u884c\u3055\u308c\u308b end end ensure \u3068\u5171\u306b\u5229\u7528\u3057\u305f\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 def some_method something_dangerous ensure # \u3053\u3053\u306f\u5e38\u306b\u5b9f\u884c\u3055\u308c\u308b end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 def some_method begin something_dangerous ensure # \u3053\u3053\u306f\u5fc5\u305a\u5b9f\u884c\u3055\u308c\u308b end end # \u307e\u305f\u77ed\u7e2e\u8a18\u6cd5\u306f\u30d6\u30ed\u30c3\u30af\u306b\u5bfe\u3057\u3066\u3082\u540c\u69d8\u306b\u306f\u305f\u3089\u304f ( 1 .. 10 ) . each do | n | # \u6f5c\u5728\u7684\u306b\u5371\u967a\u306a\u64cd\u4f5c\u3092\u3059\u308b rescue # .. else # .. ensure # .. end","title":"\u77ed\u7e2e\u8a18\u6cd5"},{"location":"syntax_and_semantics/exception_handling.html#_6","text":"\u4f8b\u5916\u51e6\u7406\u306b\u304a\u3044\u3066\u3001 begin \u7bc0\u306e\u4e2d\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u306f rescue \u307e\u305f\u306f ensure \u5185\u306b\u304a\u3044\u3066\u306f Nil t\u578b\u3092\u6301\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 begin a = something_dangerous_that_returns_Int32 ensure puts a + 1 # error, undefined method '+' for Nil end \u3053\u306e\u3068\u304d\u3001\u3082\u3057 something_dangerous_that_returns_Int32 \u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u306a\u3044\u5834\u5408\u3067\u3042\u3063\u3066\u3082\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u3055\u3089\u306b a \u306b\u5148\u306b\u5024\u306b\u4ee3\u5165\u3055\u308c\u3066\u3001\u305d\u308c\u304b\u3089\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u3067\u3042\u3063\u3066\u3082\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 begin a = 1 something_dangerous ensure puts a + 1 # error, undefined method '+' for Nil end \u3053\u306e\u5834\u5408\u3001 a \u306b\u5e38\u306b\u5024\u304c\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306f\u660e\u767d\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3067\u3082\u30b3\u30f3\u30d1\u30a4\u30e9\u306f a \u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u3053\u306e\u30ed\u30b8\u30c3\u30af\u306f\u5c06\u6765\u7684\u306b\u306f\u6539\u5b9a\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305f\u3060\u3001\u73fe\u6642\u70b9\u3067\u306f\u4f8b\u5916\u51e6\u7406\u306e\u4e2d\u3067\u884c\u3046\u3053\u3068\u306f\u5fc5\u8981\u6700\u5c0f\u9650\u306b\u7559\u3081\u3001\u30b3\u30fc\u30c9\u306e\u610f\u56f3\u3092\u660e\u78ba\u306b\u3057\u3066\u66f8\u304f\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002 # \u4f8b\u5916\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u306e\u5185\u90e8\u3067 `a` \u3092\u5ba3\u8a00\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u305f\u3081\u3001 # \u3053\u3046\u66f8\u304f\u3053\u3068\u3067\u610f\u56f3\u304c\u3088\u308a\u660e\u78ba\u306b\u306a\u308b a = 1 begin something_dangerous ensure puts a + 1 # works end","title":"\u578b\u63a8\u8ad6"},{"location":"syntax_and_semantics/exception_handling.html#_7","text":"\u4f8b\u5916\u306f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u6a5f\u69cb\u306e1\u3064\u3067\u3059\u304c\u3001\u5fc5\u305a\u3057\u3082\u4f8b\u5916\u51e6\u7406\u3067\u3057\u304b\u30a8\u30e9\u30fc\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u306f\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u3092\u4f34\u3046\u306e\u3067\u3001\u4e00\u822c\u7684\u306b\u4f8b\u5916\u51e6\u7406\u306f\u9045\u304f\u306a\u308b\u50be\u5411\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u3053\u3067\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001\u4f8b\u5916\u3092\u767a\u751f\u3059\u308b\u65b9\u6cd5\u306b\u52a0\u3048\u3066\u3001 nil \u3092\u8fd4\u3059\u65b9\u6cd5\u3082\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 array = [ 1 , 2 , 3 ] array [ 4 ] # raises because of IndexError array [ 4 ]? # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7bc4\u56f2\u5916\u306e\u305f\u3081 nil \u304c\u8fd4\u308b \u6163\u7fd2\u3068\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u4ee3\u308f\u308a\u306b nil \u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3092\u793a\u3059\u305f\u3081\u306b\u30af\u30a8\u30b9\u30c1\u30e7\u30f3\u30de\u30fc\u30af\u306e\u3064\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u4f8b\u5916\u3092\u5229\u7528\u3059\u308b\u304b nil \u3092\u5229\u7528\u3059\u308b\u304b\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305f\u3060\u3001\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3053\u306e\u65b9\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u30ed\u30b8\u30c3\u30af\u304c\u6df7\u3056\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b3\u30fc\u30c9\u304c\u6c5a\u308c\u3066\u3057\u307e\u3046\u306e\u3092\u907f\u3051\u308b\u3068\u3044\u3046\u610f\u5473\u3067\u3082\u3001\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3068\u3044\u3046\u306e\u306f\u597d\u307e\u3057\u3044\u65b9\u6cd5\u3067\u3057\u3087\u3046\u3002","title":"\u4f8b\u5916\u51e6\u7406\u306e\u4ed6\u306e\u65b9\u6cd5"},{"location":"syntax_and_semantics/finalize.html","text":"finalize \u3082\u3057\u30af\u30e9\u30b9\u306b finalize \u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u3001\u305d\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30c8\u3055\u308c\u308b\u3068\u304d\u306b\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 class Foo def finalize # Foo \u304c\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30c8\u3055\u308c\u308b\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b # \u7ba1\u7406\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u3092\u89e3\u653e\u3059\u308b\u306e\u306b\u4f7f\u3046 (\u4f8b:C \u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u69cb\u9020\u4f53) end end \u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3088\u3063\u3066\u78ba\u4fdd\u3055\u308c\u305f\u3001Crystal\u306e\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30bf\u306b\u3088\u3063\u3066\u76f4\u63a5\u7ba1\u7406\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u3092\u89e3\u653e\u3059\u308b\u305f\u3081\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \u4f8b\u3048\u3070 IO::FileDescriptor#finalize \u3084 OpenSSL::Digest#finalize \u3067\u5b9f\u969b\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u6ce8\u610f : finalize \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u3055\u308c\u308b\u306e\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c initialize \u30e1\u30bd\u30c3\u30c9\u7d4c\u7531\u3067\u5b8c\u5168\u306b\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306b\u9650\u308a\u307e\u3059\u3002\u3082\u3057\u4f8b\u5916\u304c initialize \u30e1\u30bd\u30c3\u30c9\u4e2d\u3067\u767a\u751f\u3057\u305f\u3068\u304d\u3001 finalize \u306f\u547c\u3073\u51fa\u3055\u308c\u307e\u305b\u3093\u3002\u3082\u3057\u30af\u30e9\u30b9\u306b finalize \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001\u5fc5\u305a initialize \u30e1\u30bd\u30c3\u30c9\u3067\u767a\u751f\u3057\u5f97\u308b\u4f8b\u5916\u3092\u6355\u6349\u3057\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u89e3\u653e\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u4e2d\u306b\u65b0\u898f\u306b\u78ba\u4fdd\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b\u6319\u52d5\u306f\u672a\u5b9a\u7fa9\u3067\u3001\u6050\u3089\u304f\u305d\u306e\u5834\u5408\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002","title":"finalize"},{"location":"syntax_and_semantics/finalize.html#finalize","text":"\u3082\u3057\u30af\u30e9\u30b9\u306b finalize \u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u3001\u305d\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30c8\u3055\u308c\u308b\u3068\u304d\u306b\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 class Foo def finalize # Foo \u304c\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30c8\u3055\u308c\u308b\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b # \u7ba1\u7406\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u3092\u89e3\u653e\u3059\u308b\u306e\u306b\u4f7f\u3046 (\u4f8b:C \u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u69cb\u9020\u4f53) end end \u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3088\u3063\u3066\u78ba\u4fdd\u3055\u308c\u305f\u3001Crystal\u306e\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30bf\u306b\u3088\u3063\u3066\u76f4\u63a5\u7ba1\u7406\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u3092\u89e3\u653e\u3059\u308b\u305f\u3081\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \u4f8b\u3048\u3070 IO::FileDescriptor#finalize \u3084 OpenSSL::Digest#finalize \u3067\u5b9f\u969b\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u6ce8\u610f : finalize \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u3055\u308c\u308b\u306e\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c initialize \u30e1\u30bd\u30c3\u30c9\u7d4c\u7531\u3067\u5b8c\u5168\u306b\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306b\u9650\u308a\u307e\u3059\u3002\u3082\u3057\u4f8b\u5916\u304c initialize \u30e1\u30bd\u30c3\u30c9\u4e2d\u3067\u767a\u751f\u3057\u305f\u3068\u304d\u3001 finalize \u306f\u547c\u3073\u51fa\u3055\u308c\u307e\u305b\u3093\u3002\u3082\u3057\u30af\u30e9\u30b9\u306b finalize \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001\u5fc5\u305a initialize \u30e1\u30bd\u30c3\u30c9\u3067\u767a\u751f\u3057\u5f97\u308b\u4f8b\u5916\u3092\u6355\u6349\u3057\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u89e3\u653e\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u4e2d\u306b\u65b0\u898f\u306b\u78ba\u4fdd\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b\u6319\u52d5\u306f\u672a\u5b9a\u7fa9\u3067\u3001\u6050\u3089\u304f\u305d\u306e\u5834\u5408\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002","title":"finalize"},{"location":"syntax_and_semantics/generics.html","text":"\u30b8\u30a7\u30cd\u30ea\u30af\u30b9 \u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306b\u3088\u3063\u3066\u3042\u308b\u578b\u3092\u5143\u306b\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u5316\u3057\u305f\u578b\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Box \u578b\u3092\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 class MyBox ( T ) def initialize ( @value : T ) end def value @value end end int_box = MyBox ( Int32 ) . new ( 1 ) int_box . value # => 1 (Int32) string_box = MyBox ( String ) . new ( \"hello\" ) string_box . value # => \"hello\" (String) another_box = MyBox ( String ) . new ( 1 ) # Error, Int32 doesn't match String \u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306f\u7279\u306b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u3092\u5b9f\u88c5\u3059\u308b\u306b\u4fbf\u5229\u3067\u3059\u3002 Array \u3001 Hash \u3001 Set \u3084 Pointer \u306a\u3069\u306f\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u3059\u3002 \u578b\u5f15\u6570\u306f\u8907\u6570\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class MyDictionary ( K , V ) end \u578b\u5f15\u6570\u306e\u540d\u524d\u306f\u3069\u306e\u3088\u3046\u306a\u540d\u524d\u3067\u3082\u4f7f\u3048\u307e\u3059\u3002 class MyDictionary ( KeyType , ValueType ) end \u578b\u5909\u6570\u306e\u63a8\u8ad6 \u3082\u3057\u578b\u5f15\u6570\u304c\u6307\u5b9a\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u578b\u5236\u7d04\u306f\u81ea\u7531\u5909\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u3001\u305d\u308c\u304c\u578b\u63a8\u8ad6\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 MyBox . new ( 1 ) # : MyBox(Int32) MyBox . new ( \"hello\" ) # : MyBox(String) \u4e0a\u8a18\u3067\u306f\u3001 MyBox \u306b\u578b\u5f15\u6570\u3092\u4e0e\u3048\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u306e\u3068\u304d\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u63a8\u8ad6\u3092\u884c\u3044\u307e\u3059\u3002 MyBox.new(value) \u306f initialize(@value : T) \u3092\u547c\u3073\u51fa\u3059 T \u306e\u578b\u306f\u307e\u3060\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u5f15\u6570\u306e\u578b\u306b\u8a2d\u5b9a\u3059\u308b \u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u6271\u3044\u304c\u5197\u9577\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u3092\u8efd\u6e1b\u3057\u3066\u3044\u307e\u3059\u3002 \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u69cb\u9020\u4f53\u3068\u30e2\u30b8\u30e5\u30fc\u30eb \u69cb\u9020\u4f53\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\u3002 module Moo ( T ) def t T end end class Foo ( U ) include Moo ( U ) def initialize ( @value : U ) end end foo = Foo . new ( 1 ) foo . t # Int32 \u4e0a\u8a18\u3067 T \u306f Int32 \u3068\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f Foo.new(1) \u306b\u3088\u3063\u3066 U \u304c Int32 \u3068\u306a\u308a\u3001\u305d\u3057\u3066\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3092\u7d4c\u7531\u3057\u3066 T \u304c Int32 \u3068\u306a\u308b\u305f\u3081\u3067\u3059\u3002 \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u7d99\u627f \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30af\u30e9\u30b9\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u7d99\u627f\u3059\u308b\u969b\u306f\u306b\u3001\u5177\u4f53\u7684\u306a\u578b\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u3082\u3057\u304f\u306f\u578b\u5909\u6570\u3092\u79fb\u8b72\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Parent ( T ) end class Int32Child < Parent ( Int32 ) end class GenericChild ( T ) < Parent ( T ) end","title":"\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"},{"location":"syntax_and_semantics/generics.html#_1","text":"\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306b\u3088\u3063\u3066\u3042\u308b\u578b\u3092\u5143\u306b\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u5316\u3057\u305f\u578b\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Box \u578b\u3092\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 class MyBox ( T ) def initialize ( @value : T ) end def value @value end end int_box = MyBox ( Int32 ) . new ( 1 ) int_box . value # => 1 (Int32) string_box = MyBox ( String ) . new ( \"hello\" ) string_box . value # => \"hello\" (String) another_box = MyBox ( String ) . new ( 1 ) # Error, Int32 doesn't match String \u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306f\u7279\u306b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u3092\u5b9f\u88c5\u3059\u308b\u306b\u4fbf\u5229\u3067\u3059\u3002 Array \u3001 Hash \u3001 Set \u3084 Pointer \u306a\u3069\u306f\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u3059\u3002 \u578b\u5f15\u6570\u306f\u8907\u6570\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class MyDictionary ( K , V ) end \u578b\u5f15\u6570\u306e\u540d\u524d\u306f\u3069\u306e\u3088\u3046\u306a\u540d\u524d\u3067\u3082\u4f7f\u3048\u307e\u3059\u3002 class MyDictionary ( KeyType , ValueType ) end","title":"\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"},{"location":"syntax_and_semantics/generics.html#_2","text":"\u3082\u3057\u578b\u5f15\u6570\u304c\u6307\u5b9a\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u578b\u5236\u7d04\u306f\u81ea\u7531\u5909\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u3001\u305d\u308c\u304c\u578b\u63a8\u8ad6\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 MyBox . new ( 1 ) # : MyBox(Int32) MyBox . new ( \"hello\" ) # : MyBox(String) \u4e0a\u8a18\u3067\u306f\u3001 MyBox \u306b\u578b\u5f15\u6570\u3092\u4e0e\u3048\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u306e\u3068\u304d\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u63a8\u8ad6\u3092\u884c\u3044\u307e\u3059\u3002 MyBox.new(value) \u306f initialize(@value : T) \u3092\u547c\u3073\u51fa\u3059 T \u306e\u578b\u306f\u307e\u3060\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u5f15\u6570\u306e\u578b\u306b\u8a2d\u5b9a\u3059\u308b \u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u6271\u3044\u304c\u5197\u9577\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u3092\u8efd\u6e1b\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u578b\u5909\u6570\u306e\u63a8\u8ad6"},{"location":"syntax_and_semantics/generics.html#_3","text":"\u69cb\u9020\u4f53\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\u3002 module Moo ( T ) def t T end end class Foo ( U ) include Moo ( U ) def initialize ( @value : U ) end end foo = Foo . new ( 1 ) foo . t # Int32 \u4e0a\u8a18\u3067 T \u306f Int32 \u3068\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f Foo.new(1) \u306b\u3088\u3063\u3066 U \u304c Int32 \u3068\u306a\u308a\u3001\u305d\u3057\u3066\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3092\u7d4c\u7531\u3057\u3066 T \u304c Int32 \u3068\u306a\u308b\u305f\u3081\u3067\u3059\u3002","title":"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u69cb\u9020\u4f53\u3068\u30e2\u30b8\u30e5\u30fc\u30eb"},{"location":"syntax_and_semantics/generics.html#_4","text":"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30af\u30e9\u30b9\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u7d99\u627f\u3059\u308b\u969b\u306f\u306b\u3001\u5177\u4f53\u7684\u306a\u578b\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u3082\u3057\u304f\u306f\u578b\u5909\u6570\u3092\u79fb\u8b72\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Parent ( T ) end class Int32Child < Parent ( Int32 ) end class GenericChild ( T ) < Parent ( T ) end","title":"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u7d99\u627f"},{"location":"syntax_and_semantics/if.html","text":"if if \u306f\u4e0e\u3048\u3089\u308c\u305f\u6761\u4ef6\u5f0f\u304c \u771f \u3067\u3042\u308b\u5834\u5408\u306bthen\u7bc0\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u507d\u306e\u5834\u5408\u3001 else \u7bc0\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002 a = 1 if a > 0 a = 10 end a # => 10 b = 1 if b > 2 b = 10 else b = 20 end b # => 20 \u8907\u6570\u306e\u6761\u4ef6\u5206\u5c90\u3092\u9023\u7d9a\u3055\u305b\u308b\u306b\u306f elsif \u3092\u4f7f\u3044\u307e\u3059\u3002 if some_condition do_something elsif some_other_condition do_something_else else do_that end \u3042\u308b\u5909\u6570\u304c if \u306e\u5206\u5c90\u7bc0\u306e\u4e2d\u3067\u4f7f\u308f\u308c\u305f\u3068\u304d\u3001\u305d\u306e\u5f8c\u306e\u5909\u6570\u306e\u578b\u306f\u5206\u5c90\u7bc0\u306e\u4e2d\u3067\u306e\u4f7f\u308f\u308c\u65b9\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002 a = 1 if some_condition a = \"hello\" else a = true end # a : String | Bool b = 1 if some_condition b = \"hello\" end # b : Int32 | String if some_condition c = 1 else c = \"hello\" end # c : Int32 | String if some_condition d = 1 end # d : Int32 | Nil \u3082\u3057\u4e00\u65b9\u306e\u7bc0\u3067\u3042\u308b\u5909\u6570\u304c\u5ba3\u8a00\u3055\u308c\u3066\u3001\u3082\u3046\u4e00\u65b9\u3067\u306f\u3055\u308c\u306a\u304b\u3063\u305f\u3068\u304d\u3001 if \u306e\u5f8c\u3067\u305d\u306e\u5909\u6570\u306f Nil \u578b\u3092\u6301\u3064\u3053\u3068\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 if \u306e\u5206\u5c90\u7bc0\u306e\u4e2d\u3067\u3042\u308b\u5909\u6570\u306b\u4ee3\u5165\u304c\u884c\u306a\u308f\u308c\u305f\u3068\u304d\u3001\u5909\u6570\u306e\u578b\u306f\u4ee3\u5165\u3055\u308c\u305f\u5f0f\u306e\u578b\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3082\u3057\u6761\u4ef6\u306b\u5408\u81f4\u305b\u305a\u305d\u306e\u4ee3\u5165\u5f0f\u304c\u8a55\u4fa1\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u4ee5\u524d\u306e\u578b\u306e\u307e\u307e\u3067\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 a = 1 if some_condition a = \"hello\" # a : String a . size end # a : String | Int32 \u3064\u307e\u308a\u3001\u5909\u6570\u306e\u578b\u306f\u6700\u5f8c\u306b\u4ee3\u5165\u3055\u308c\u305f\u5f0f\u306b\u3088\u3063\u3066\u6c7a\u5b9a\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u3042\u308b\u5206\u5c90\u7bc0\u304c if \u306e\u6700\u5f8c\u307e\u3067\u7d76\u5bfe\u306b\u5230\u9054\u3057\u306a\u3044\u5834\u5408 ( return \u3084 next \u3001 break \u3001 raise \u306a\u3069\u304c\u3042\u308b\u5834\u5408)\u3001 if \u306e\u5f8c\u3067\u305d\u306e\u5206\u5c90\u7bc0\u306b\u304a\u3051\u308b\u578b\u304c\u8003\u616e\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 if some_condition e = 1 else e = \"hello\" # e : String return end # e : Int32","title":"if"},{"location":"syntax_and_semantics/if.html#if","text":"if \u306f\u4e0e\u3048\u3089\u308c\u305f\u6761\u4ef6\u5f0f\u304c \u771f \u3067\u3042\u308b\u5834\u5408\u306bthen\u7bc0\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u507d\u306e\u5834\u5408\u3001 else \u7bc0\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002 a = 1 if a > 0 a = 10 end a # => 10 b = 1 if b > 2 b = 10 else b = 20 end b # => 20 \u8907\u6570\u306e\u6761\u4ef6\u5206\u5c90\u3092\u9023\u7d9a\u3055\u305b\u308b\u306b\u306f elsif \u3092\u4f7f\u3044\u307e\u3059\u3002 if some_condition do_something elsif some_other_condition do_something_else else do_that end \u3042\u308b\u5909\u6570\u304c if \u306e\u5206\u5c90\u7bc0\u306e\u4e2d\u3067\u4f7f\u308f\u308c\u305f\u3068\u304d\u3001\u305d\u306e\u5f8c\u306e\u5909\u6570\u306e\u578b\u306f\u5206\u5c90\u7bc0\u306e\u4e2d\u3067\u306e\u4f7f\u308f\u308c\u65b9\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002 a = 1 if some_condition a = \"hello\" else a = true end # a : String | Bool b = 1 if some_condition b = \"hello\" end # b : Int32 | String if some_condition c = 1 else c = \"hello\" end # c : Int32 | String if some_condition d = 1 end # d : Int32 | Nil \u3082\u3057\u4e00\u65b9\u306e\u7bc0\u3067\u3042\u308b\u5909\u6570\u304c\u5ba3\u8a00\u3055\u308c\u3066\u3001\u3082\u3046\u4e00\u65b9\u3067\u306f\u3055\u308c\u306a\u304b\u3063\u305f\u3068\u304d\u3001 if \u306e\u5f8c\u3067\u305d\u306e\u5909\u6570\u306f Nil \u578b\u3092\u6301\u3064\u3053\u3068\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 if \u306e\u5206\u5c90\u7bc0\u306e\u4e2d\u3067\u3042\u308b\u5909\u6570\u306b\u4ee3\u5165\u304c\u884c\u306a\u308f\u308c\u305f\u3068\u304d\u3001\u5909\u6570\u306e\u578b\u306f\u4ee3\u5165\u3055\u308c\u305f\u5f0f\u306e\u578b\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3082\u3057\u6761\u4ef6\u306b\u5408\u81f4\u305b\u305a\u305d\u306e\u4ee3\u5165\u5f0f\u304c\u8a55\u4fa1\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u4ee5\u524d\u306e\u578b\u306e\u307e\u307e\u3067\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 a = 1 if some_condition a = \"hello\" # a : String a . size end # a : String | Int32 \u3064\u307e\u308a\u3001\u5909\u6570\u306e\u578b\u306f\u6700\u5f8c\u306b\u4ee3\u5165\u3055\u308c\u305f\u5f0f\u306b\u3088\u3063\u3066\u6c7a\u5b9a\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u3042\u308b\u5206\u5c90\u7bc0\u304c if \u306e\u6700\u5f8c\u307e\u3067\u7d76\u5bfe\u306b\u5230\u9054\u3057\u306a\u3044\u5834\u5408 ( return \u3084 next \u3001 break \u3001 raise \u306a\u3069\u304c\u3042\u308b\u5834\u5408)\u3001 if \u306e\u5f8c\u3067\u305d\u306e\u5206\u5c90\u7bc0\u306b\u304a\u3051\u308b\u578b\u304c\u8003\u616e\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 if some_condition e = 1 else e = \"hello\" # e : String return end # e : Int32","title":"if"},{"location":"syntax_and_semantics/if_var.html","text":"if var \u5909\u6570\u304c if \u306e\u6761\u4ef6\u5f0f\u306b\u4f7f\u308f\u308c\u305f\u3068\u304d\u3001 then \u7bc0\u306e\u4e2d\u3067\u306f\u305d\u306e\u5909\u6570\u306f Nil \u578b\u3092\u6301\u305f\u306a\u3044\u3068\u5224\u65ad\u3055\u308c\u307e\u3059\u3002 a = some_condition ? nil : 3 # a is Int32 or Nil if a # \u3053\u3053\u306b\u5230\u9054\u3059\u308b\u305f\u3081\u306b\u306f if \u304c\u771f\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 # \u3068\u3044\u3046\u3053\u3068\u306f\u3001a \u304c nil \u3068\u3044\u3046\u306e\u306f\u3042\u308a\u5f97\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u5fc5\u305a Int32 \u3067\u3042\u308b a . abs end if \u306e\u6761\u4ef6\u5f0f\u4e2d\u3067\u5909\u6570\u3078\u306e\u4ee3\u5165\u304c\u884c\u308f\u308c\u305f\u5834\u5408\u306b\u3082\u3001\u3053\u306e\u5224\u65ad\u304c\u306a\u3055\u308c\u307e\u3059\u3002 if a = some_expression # \u3053\u3053\u3067\u306f a \u306f nil \u3067\u306f\u306a\u3044 end \u6761\u4ef6\u5f0f\u3067\u304b\u3064 ( && ) \u304c\u4f7f\u308f\u308c\u305f\u5834\u5408\u306b\u3082\u540c\u69d8\u3067\u3059\u3002 if a && b # \u3053\u3053\u3067\u306f a \u3082 b \u3082 Nil \u3067\u306f\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end && \u5f0f\u306e\u53f3\u8fba\u304c\u8a55\u4fa1\u3055\u308c\u305f\u5834\u5408\u3001 a \u304c Nil \u3067\u306f\u306a\u3044\u3053\u3068\u3082\u540c\u69d8\u306b\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3082\u3061\u308d\u3093\u3001 then \u7bc0\u306e\u4e2d\u3067\u5909\u6570\u3078\u518d\u4ee3\u5165\u3092\u884c\u306a\u3063\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u4ee3\u5165\u3055\u308c\u305f\u5f0f\u306b\u5fdc\u3058\u3066\u5909\u6570\u306e\u578b\u304c\u5909\u308f\u308a\u307e\u3059\u3002 \u5236\u7d04 \u3053\u308c\u307e\u3067\u66f8\u3044\u3066\u304d\u305f\u3053\u3068\u306f \u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306b\u5bfe\u3057\u3066\u306e\u307f\u6a5f\u80fd\u3057\u307e\u3059 \u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3001\u30af\u30e9\u30b9\u5909\u6570\u3001\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u675f\u7e1b\u3055\u308c\u305f\u5909\u6570\u306b\u95a2\u3057\u3066\u306f\u3053\u306e\u6a5f\u80fd\u306f\u6a5f\u80fd\u3057\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u3053\u308c\u3089\u306e\u5909\u6570\u306e\u5024\u306f\u5225\u306e\u30d5\u30a1\u30a4\u30d0\u30fc\u306b\u3088\u3063\u3066 nil \u306b\u5909\u66f4\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002\u307e\u305f\u3001\u5b9a\u6570\u306b\u5bfe\u3057\u3066\u3082\u6a5f\u80fd\u3057\u307e\u305b\u3093\u3002 if @a # \u3053\u3053\u3067\u3082 `@a` \u304c nil \u306e\u53ef\u80fd\u6027\u304c\u3042\u308b end if @@a # \u3053\u3053\u3067\u3082 `@@a` \u304c nil \u306e\u53ef\u80fd\u6027\u304c\u3042\u308b end a = nil closure = -> { a = \"foo\" } if a # \u3053\u3053\u3067\u3082 `a` \u304c nil \u306e\u53ef\u80fd\u6027\u304c\u3042\u308b end \u3053\u306e\u5236\u7d04\u306f\u5024\u3092\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u56de\u907f\u3067\u304d\u307e\u3059\u3002 if a = @a # \u3053\u3053\u3067 `a` \u306f nil \u306b\u306f\u306a\u3089\u306a\u3044 end \u4ed6\u306e\u624b\u6cd5\u3068\u3057\u3066\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e Object#try \u3082\u4f7f\u3048\u307e\u3059\u3002\u3053\u308c\u306f nil \u3067\u306f\u306a\u3044\u5834\u5408\u306b\u306e\u307f\u30d6\u30ed\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\u3001\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 @a . try do | a | # \u3053\u3053\u3067 `a` \u306f nil \u306b\u306f\u306a\u3089\u306a\u3044 end \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057 Proc \u3084\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057 (\u30b2\u30c3\u30bf\u30fc\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\u3082\u542b\u3080) \u306e\u5834\u5408\u306b\u3082\u5f53\u3066\u306f\u307e\u308a\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u3001Nil \u3092\u8a31\u5bb9\u3059\u308b (\u3082\u3057\u304f\u306f\u3001\u8907\u6570\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u306a\u308b\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u5834\u5408\u304c\u3088\u308a\u4e00\u822c\u7684\u3067\u3057\u3087\u3046) Proc \u3084\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u306e\u5834\u5408\u3001\u9023\u7d9a\u3057\u305f\u547c\u3073\u51fa\u3057\u3067\u3042\u3063\u3066\u3082\u3001\u305d\u308c\u3089\u304c\u5e38\u306b\u540c\u3058\u578b\u3092\u8fd4\u3059\u3068\u306f\u9650\u3089\u306a\u3044\u304b\u3089\u3067\u3059\u3002 if method # \u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u3067\u30e1\u30bd\u30c3\u30c9\u306f Int32 \u304b Nil \u3092\u8fd4\u3059 # \u3053\u3053\u3067\u3001\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u304c Nil \u3092\u8fd4\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u306f\u308f\u304b\u3063\u3066\u3044\u308b method # 2\u5ea6\u76ee\u306e\u547c\u3073\u51fa\u3057\u3067\u3082 Int32 \u304b Nil \u3092\u8fd4\u3059 end \u3053\u3046\u3044\u3063\u305f Proc \u3084\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u5834\u5408\u306b\u3082\u3001\u4e0a\u8a18\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u95a2\u3057\u3066\u8a18\u8f09\u3057\u305f\u30c6\u30af\u30cb\u30c3\u30af\u304c\u6709\u52b9\u3067\u3059\u3002","title":"if var"},{"location":"syntax_and_semantics/if_var.html#if-var","text":"\u5909\u6570\u304c if \u306e\u6761\u4ef6\u5f0f\u306b\u4f7f\u308f\u308c\u305f\u3068\u304d\u3001 then \u7bc0\u306e\u4e2d\u3067\u306f\u305d\u306e\u5909\u6570\u306f Nil \u578b\u3092\u6301\u305f\u306a\u3044\u3068\u5224\u65ad\u3055\u308c\u307e\u3059\u3002 a = some_condition ? nil : 3 # a is Int32 or Nil if a # \u3053\u3053\u306b\u5230\u9054\u3059\u308b\u305f\u3081\u306b\u306f if \u304c\u771f\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 # \u3068\u3044\u3046\u3053\u3068\u306f\u3001a \u304c nil \u3068\u3044\u3046\u306e\u306f\u3042\u308a\u5f97\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u5fc5\u305a Int32 \u3067\u3042\u308b a . abs end if \u306e\u6761\u4ef6\u5f0f\u4e2d\u3067\u5909\u6570\u3078\u306e\u4ee3\u5165\u304c\u884c\u308f\u308c\u305f\u5834\u5408\u306b\u3082\u3001\u3053\u306e\u5224\u65ad\u304c\u306a\u3055\u308c\u307e\u3059\u3002 if a = some_expression # \u3053\u3053\u3067\u306f a \u306f nil \u3067\u306f\u306a\u3044 end \u6761\u4ef6\u5f0f\u3067\u304b\u3064 ( && ) \u304c\u4f7f\u308f\u308c\u305f\u5834\u5408\u306b\u3082\u540c\u69d8\u3067\u3059\u3002 if a && b # \u3053\u3053\u3067\u306f a \u3082 b \u3082 Nil \u3067\u306f\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end && \u5f0f\u306e\u53f3\u8fba\u304c\u8a55\u4fa1\u3055\u308c\u305f\u5834\u5408\u3001 a \u304c Nil \u3067\u306f\u306a\u3044\u3053\u3068\u3082\u540c\u69d8\u306b\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3082\u3061\u308d\u3093\u3001 then \u7bc0\u306e\u4e2d\u3067\u5909\u6570\u3078\u518d\u4ee3\u5165\u3092\u884c\u306a\u3063\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u4ee3\u5165\u3055\u308c\u305f\u5f0f\u306b\u5fdc\u3058\u3066\u5909\u6570\u306e\u578b\u304c\u5909\u308f\u308a\u307e\u3059\u3002","title":"if var"},{"location":"syntax_and_semantics/if_var.html#_1","text":"\u3053\u308c\u307e\u3067\u66f8\u3044\u3066\u304d\u305f\u3053\u3068\u306f \u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306b\u5bfe\u3057\u3066\u306e\u307f\u6a5f\u80fd\u3057\u307e\u3059 \u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3001\u30af\u30e9\u30b9\u5909\u6570\u3001\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u675f\u7e1b\u3055\u308c\u305f\u5909\u6570\u306b\u95a2\u3057\u3066\u306f\u3053\u306e\u6a5f\u80fd\u306f\u6a5f\u80fd\u3057\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u3053\u308c\u3089\u306e\u5909\u6570\u306e\u5024\u306f\u5225\u306e\u30d5\u30a1\u30a4\u30d0\u30fc\u306b\u3088\u3063\u3066 nil \u306b\u5909\u66f4\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002\u307e\u305f\u3001\u5b9a\u6570\u306b\u5bfe\u3057\u3066\u3082\u6a5f\u80fd\u3057\u307e\u305b\u3093\u3002 if @a # \u3053\u3053\u3067\u3082 `@a` \u304c nil \u306e\u53ef\u80fd\u6027\u304c\u3042\u308b end if @@a # \u3053\u3053\u3067\u3082 `@@a` \u304c nil \u306e\u53ef\u80fd\u6027\u304c\u3042\u308b end a = nil closure = -> { a = \"foo\" } if a # \u3053\u3053\u3067\u3082 `a` \u304c nil \u306e\u53ef\u80fd\u6027\u304c\u3042\u308b end \u3053\u306e\u5236\u7d04\u306f\u5024\u3092\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u56de\u907f\u3067\u304d\u307e\u3059\u3002 if a = @a # \u3053\u3053\u3067 `a` \u306f nil \u306b\u306f\u306a\u3089\u306a\u3044 end \u4ed6\u306e\u624b\u6cd5\u3068\u3057\u3066\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e Object#try \u3082\u4f7f\u3048\u307e\u3059\u3002\u3053\u308c\u306f nil \u3067\u306f\u306a\u3044\u5834\u5408\u306b\u306e\u307f\u30d6\u30ed\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\u3001\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 @a . try do | a | # \u3053\u3053\u3067 `a` \u306f nil \u306b\u306f\u306a\u3089\u306a\u3044 end","title":"\u5236\u7d04"},{"location":"syntax_and_semantics/if_var.html#_2","text":"Proc \u3084\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057 (\u30b2\u30c3\u30bf\u30fc\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\u3082\u542b\u3080) \u306e\u5834\u5408\u306b\u3082\u5f53\u3066\u306f\u307e\u308a\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u3001Nil \u3092\u8a31\u5bb9\u3059\u308b (\u3082\u3057\u304f\u306f\u3001\u8907\u6570\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u306a\u308b\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u5834\u5408\u304c\u3088\u308a\u4e00\u822c\u7684\u3067\u3057\u3087\u3046) Proc \u3084\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u306e\u5834\u5408\u3001\u9023\u7d9a\u3057\u305f\u547c\u3073\u51fa\u3057\u3067\u3042\u3063\u3066\u3082\u3001\u305d\u308c\u3089\u304c\u5e38\u306b\u540c\u3058\u578b\u3092\u8fd4\u3059\u3068\u306f\u9650\u3089\u306a\u3044\u304b\u3089\u3067\u3059\u3002 if method # \u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u3067\u30e1\u30bd\u30c3\u30c9\u306f Int32 \u304b Nil \u3092\u8fd4\u3059 # \u3053\u3053\u3067\u3001\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u304c Nil \u3092\u8fd4\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u306f\u308f\u304b\u3063\u3066\u3044\u308b method # 2\u5ea6\u76ee\u306e\u547c\u3073\u51fa\u3057\u3067\u3082 Int32 \u304b Nil \u3092\u8fd4\u3059 end \u3053\u3046\u3044\u3063\u305f Proc \u3084\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u5834\u5408\u306b\u3082\u3001\u4e0a\u8a18\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u95a2\u3057\u3066\u8a18\u8f09\u3057\u305f\u30c6\u30af\u30cb\u30c3\u30af\u304c\u6709\u52b9\u3067\u3059\u3002","title":"\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057"},{"location":"syntax_and_semantics/if_var_nil.html","text":"if var.nil? if \u306e\u6761\u4ef6\u304c var.nil? \u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f then \u7bc0\u3067\u306f var \u304c Nil \u578b\u3060\u3068\u5224\u65ad\u3057\u3066\u3001 else \u3067\u306f Nil \u578b\u4ee5\u5916\u306e\u578b\u3060\u3068\u5224\u65ad\u3057\u307e\u3059\u3002 a = some_condition ? nil : 3 if a . nil? # \u3053\u3053\u3067 a \u306f Nil \u578b else # \u3053\u3053\u3067 a \u306f Int32 \u578b end","title":"if var.nil?"},{"location":"syntax_and_semantics/if_var_nil.html#if-varnil","text":"if \u306e\u6761\u4ef6\u304c var.nil? \u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f then \u7bc0\u3067\u306f var \u304c Nil \u578b\u3060\u3068\u5224\u65ad\u3057\u3066\u3001 else \u3067\u306f Nil \u578b\u4ee5\u5916\u306e\u578b\u3060\u3068\u5224\u65ad\u3057\u307e\u3059\u3002 a = some_condition ? nil : 3 if a . nil? # \u3053\u3053\u3067 a \u306f Nil \u578b else # \u3053\u3053\u3067 a \u306f Int32 \u578b end","title":"if var.nil?"},{"location":"syntax_and_semantics/if_varis_a.html","text":"if var.is_a?(...) if \u306e\u6761\u4ef6\u5f0f\u3067 is_a? \u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3068\u3001 then \u7bc0\u3067\u5909\u6570\u304c\u305d\u306e\u578b\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 if a . is_a? ( String ) # \u3053\u3053\u3067 a \u306f String \u578b end if b . is_a? ( Number ) # \u3053\u3053\u3067 b \u306f Number \u578b end \u304f\u308f\u3048\u3066\u3001 else \u7bc0\u3067\u306f\u5909\u6570\u304c\u305d\u308c\u4ee5\u5916\u306e\u578b\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 a = some_condition ? 1 : \"hello\" # a : Int32 | String if a . is_a? ( Number ) # a : Int32 else # a : String end is_a? \u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3084\u62bd\u8c61\u30af\u30e9\u30b9\u306a\u3069\u3001\u3044\u304b\u306a\u308b\u578b\u3067\u3082\u30c1\u30a7\u30c3\u30af\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u6761\u4ef6\u3067\u304b\u3064 ( && ) \u304c\u4f7f\u308f\u308c\u305f\u5834\u5408\u3082\u540c\u69d8\u306b\u6a5f\u80fd\u3057\u307e\u3059\u3002 if a . is_a? ( String ) && b . is_a? ( Number ) # \u3053\u3053\u3067 a \u306f String \u578b\u3067 b \u306f Number \u578b end \u305d\u3057\u3066\u3053\u308c\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3084\u30af\u30e9\u30b9\u5909\u6570\u3067\u306f \u6a5f\u80fd\u3057\u307e\u305b\u3093 \u3002\u305d\u308c\u3089\u306e\u5834\u5408\u306b\u306f\u3001\u307e\u305a\u5909\u6570\u3078\u306e\u4ee3\u5165\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002 if @a . is_a? ( String ) # \u3053\u3053\u3067\u3082 @a \u304c String \u3067\u3042\u308b\u3053\u3068\u306f\u4fdd\u8a3c\u3055\u308c\u306a\u3044 end a = @a if a . is_a? ( String ) # \u3053\u3053\u3067 a \u306f String \u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end # \u3088\u308a\u7c21\u6f54\u306a\u66f8\u304d\u65b9: if ( a = @a ) . is_a? ( String ) # \u3053\u3053\u3067\u306f a \u304c String \u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end","title":"if var.is_a?(...)"},{"location":"syntax_and_semantics/if_varis_a.html#if-varis_a","text":"if \u306e\u6761\u4ef6\u5f0f\u3067 is_a? \u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3068\u3001 then \u7bc0\u3067\u5909\u6570\u304c\u305d\u306e\u578b\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 if a . is_a? ( String ) # \u3053\u3053\u3067 a \u306f String \u578b end if b . is_a? ( Number ) # \u3053\u3053\u3067 b \u306f Number \u578b end \u304f\u308f\u3048\u3066\u3001 else \u7bc0\u3067\u306f\u5909\u6570\u304c\u305d\u308c\u4ee5\u5916\u306e\u578b\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 a = some_condition ? 1 : \"hello\" # a : Int32 | String if a . is_a? ( Number ) # a : Int32 else # a : String end is_a? \u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3084\u62bd\u8c61\u30af\u30e9\u30b9\u306a\u3069\u3001\u3044\u304b\u306a\u308b\u578b\u3067\u3082\u30c1\u30a7\u30c3\u30af\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u6761\u4ef6\u3067\u304b\u3064 ( && ) \u304c\u4f7f\u308f\u308c\u305f\u5834\u5408\u3082\u540c\u69d8\u306b\u6a5f\u80fd\u3057\u307e\u3059\u3002 if a . is_a? ( String ) && b . is_a? ( Number ) # \u3053\u3053\u3067 a \u306f String \u578b\u3067 b \u306f Number \u578b end \u305d\u3057\u3066\u3053\u308c\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3084\u30af\u30e9\u30b9\u5909\u6570\u3067\u306f \u6a5f\u80fd\u3057\u307e\u305b\u3093 \u3002\u305d\u308c\u3089\u306e\u5834\u5408\u306b\u306f\u3001\u307e\u305a\u5909\u6570\u3078\u306e\u4ee3\u5165\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002 if @a . is_a? ( String ) # \u3053\u3053\u3067\u3082 @a \u304c String \u3067\u3042\u308b\u3053\u3068\u306f\u4fdd\u8a3c\u3055\u308c\u306a\u3044 end a = @a if a . is_a? ( String ) # \u3053\u3053\u3067 a \u306f String \u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end # \u3088\u308a\u7c21\u6f54\u306a\u66f8\u304d\u65b9: if ( a = @a ) . is_a? ( String ) # \u3053\u3053\u3067\u306f a \u304c String \u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end","title":"if var.is_a?(...)"},{"location":"syntax_and_semantics/if_varresponds_to.html","text":"if var.responds_to?(...) if \u306e\u6761\u4ef6\u3067 responds_to? \u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u306a\u3046\u3068\u3001 then \u7bc0\u3067\u306f\u305d\u306e\u5909\u6570\u304c\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u578b\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 if a . responds_to? ( :abs ) # \u3053\u3053\u3067 a \u306e\u578b\u306f 'abs' \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u578b\u306e\u307f\u306b\u7e2e\u5c0f\u3055\u308c\u3066\u3044\u308b end \u304f\u308f\u3048\u3066\u3001 else \u7bc0\u3067\u306f\u5909\u6570\u304c\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u305f\u306a\u3044\u3088\u3046\u306a\u578b\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 a = some_condition ? 1 : \"hello\" # a : Int32 | String if a . responds_to? ( :abs ) # Int32#abs \u306f\u5b58\u5728\u3059\u308b\u304c String#abs \u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f Int32 \u3068\u306a\u308a\u3001 else # \u3053\u3053\u3067\u306f a \u306f String \u3068\u306a\u308b end \u305d\u3057\u3066\u3053\u308c\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3084\u30af\u30e9\u30b9\u5909\u6570\u3067\u306f \u6a5f\u80fd\u3057\u307e\u305b\u3093 \u3002\u305d\u308c\u3089\u306e\u5834\u5408\u306b\u306f\u3001\u307e\u305a\u5909\u6570\u3078\u306e\u4ee3\u5165\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002 if @a . responds_to? ( :abs ) # \u3053\u3053\u3067\u3082 @a \u306f `abs` \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u306a\u3044 end a = @a if a . responds_to? ( :abs ) # \u3053\u3053\u3067\u306f a \u304c `abs` \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059 end # \u3088\u308a\u7c21\u6f54\u306a\u66f8\u304d\u65b9: if ( a = @a ) . responds_to? ( :abs ) # \u3053\u3053\u3067\u306f a \u304c `abs` \u306b\u5fdc\u7b54\u3059\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end","title":"if var.responds_to?(...)"},{"location":"syntax_and_semantics/if_varresponds_to.html#if-varresponds_to","text":"if \u306e\u6761\u4ef6\u3067 responds_to? \u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u306a\u3046\u3068\u3001 then \u7bc0\u3067\u306f\u305d\u306e\u5909\u6570\u304c\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u578b\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 if a . responds_to? ( :abs ) # \u3053\u3053\u3067 a \u306e\u578b\u306f 'abs' \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u578b\u306e\u307f\u306b\u7e2e\u5c0f\u3055\u308c\u3066\u3044\u308b end \u304f\u308f\u3048\u3066\u3001 else \u7bc0\u3067\u306f\u5909\u6570\u304c\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u305f\u306a\u3044\u3088\u3046\u306a\u578b\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 a = some_condition ? 1 : \"hello\" # a : Int32 | String if a . responds_to? ( :abs ) # Int32#abs \u306f\u5b58\u5728\u3059\u308b\u304c String#abs \u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f Int32 \u3068\u306a\u308a\u3001 else # \u3053\u3053\u3067\u306f a \u306f String \u3068\u306a\u308b end \u305d\u3057\u3066\u3053\u308c\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3084\u30af\u30e9\u30b9\u5909\u6570\u3067\u306f \u6a5f\u80fd\u3057\u307e\u305b\u3093 \u3002\u305d\u308c\u3089\u306e\u5834\u5408\u306b\u306f\u3001\u307e\u305a\u5909\u6570\u3078\u306e\u4ee3\u5165\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002 if @a . responds_to? ( :abs ) # \u3053\u3053\u3067\u3082 @a \u306f `abs` \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u306a\u3044 end a = @a if a . responds_to? ( :abs ) # \u3053\u3053\u3067\u306f a \u304c `abs` \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059 end # \u3088\u308a\u7c21\u6f54\u306a\u66f8\u304d\u65b9: if ( a = @a ) . responds_to? ( :abs ) # \u3053\u3053\u3067\u306f a \u304c `abs` \u306b\u5fdc\u7b54\u3059\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b end","title":"if var.responds_to?(...)"},{"location":"syntax_and_semantics/inheritance.html","text":"\u7d99\u627f \u30af\u30e9\u30b9\u968e\u5c64\u306e\u9802\u70b9\u3067\u3042\u308b Object \u3092\u8997\u304d\u3001\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306f\u4ed6\u306e\u30af\u30e9\u30b9 (\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9) \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\u7d99\u627f\u5143\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u305b\u305a\u5b9a\u7fa9\u3057\u305f\u5834\u5408\u3001\u30af\u30e9\u30b9\u3067\u3042\u308c\u3070 Reference \u304c\u3001\u69cb\u9020\u4f53\u3067\u3042\u308c\u3070 Struct \u304c\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002 \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u3068\u304d\u3001\u3059\u3079\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3001\u304a\u3088\u3073\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u304c\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u304b\u3089\u5f15\u304d\u7d99\u304c\u308c\u307e\u3059\u3002\u305d\u306e\u4e2d\u306b\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf ( new \u3068 initialize ) \u3082\u542b\u307e\u308c\u307e\u3059\u3002 class Person def initialize ( @name : String ) end def greet puts \"Hi, I'm #{ @name } \" end end class Employee < Person end employee = Employee . new \"John\" employee . greet # \"Hi, I'm John\" \u30af\u30e9\u30b9\u304c new \u3084 initialize \u3092\u5b9a\u7fa9\u3057\u305f\u5834\u5408\u306f\u3001\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u7d99\u627f\u3055\u308c\u307e\u305b\u3093\u3002 class Person def initialize ( @name : String ) end end class Employee < Person def initialize ( @name : String , @company_name : String ) end end Employee . new \"John\" , \"Acme\" # OK Employee . new \"Peter\" # Error: wrong number of arguments for 'Employee:Class#new' (1 for 2) \u6d3e\u751f\u30af\u30e9\u30b9\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class Person def greet ( msg ) puts \"Hi, #{ msg } \" end end class Employee < Person def greet ( msg ) puts \"Hello, #{ msg } \" end end p = Person . new p . greet \"everyone\" # \"Hi, everyone\" e = Employee . new e . greet \"everyone\" # \"Hello, everyone\" \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306e\u4ee3\u308f\u308a\u306b\u3001\u578b\u5236\u7d04\u3092\u5229\u7528\u3057\u3066\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u7279\u5316\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 class Person def greet ( msg ) puts \"Hi, #{ msg } \" end end class Employee < Person def greet ( msg : Int32 ) puts \"Hi, this is a number: #{ msg } \" end end e = Employee . new e . greet \"everyone\" # \"Hi, everyone\" e . greet 1 # \"Hi, this is a number: 1\" super super \u3092\u4f7f\u3046\u3068\u3001\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class Person def greet ( msg ) puts \"Hello, #{ msg } \" end end class Employee < Person def greet ( msg ) super # Same as: super(msg) super ( \"another message\" ) end end Without arguments or parentheses, super receives all of the method's parameters as arguments. \u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u6307\u5b9a\u3057\u305f\u5f15\u6570\u304c\u6e21\u3055\u308c\u307e\u3059\u3002 \u5171\u5909\u6027\u3068\u53cd\u5909\u6027 \u7d99\u627f\u304c\u5c11\u3057\u5384\u4ecb\u306a\u306e\u306f\u3001\u914d\u5217\u306e\u5834\u5408\u3067\u3059\u3002\u914d\u5217\u306e\u8981\u7d20\u306b\u7d99\u627f\u3055\u308c\u305f\u3082\u306e\u304c\u4f7f\u308f\u308c\u305f\u5834\u5408\u306f\u3001\u5341\u5206\u306b\u6ce8\u610f\u3059\u3079\u304d\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u6b21\u306e\u3088\u3046\u306a\u4f8b\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 class Foo end class Bar < Foo end foo_arr = [ Bar . new ] of Foo # => [#<Bar:0x10215bfe0>] : Array(Foo) bar_arr = [ Bar . new ] # => [#<Bar:0x10215bfd0>] : Array(Bar) bar_arr2 = [ Foo . new ] of Bar # \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc Foo \u306e\u914d\u5217\u306f Foo \u3068 Bar \u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001Bar \u306e\u914d\u5217\u306f Bar \u3068\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3057\u304b\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u3053\u308c\u306f\u81ea\u52d5\u30ad\u30e3\u30b9\u30c8\u304c\u4f5c\u7528\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u3001\u60a9\u307e\u3057\u3044\u7d50\u679c\u3092\u5f15\u304d\u8d77\u3053\u3059\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6b21\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002 class Foo end class Bar < Foo end class Test @arr : Array ( Foo ) def initialize @arr = [ Bar . new ] end end @arr \u3092 Array(Foo) \u3068\u3057\u3066\u5ba3\u8a00\u3057\u305f\u306e\u3067\u3001\u3053\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u5bfe\u3057\u3066 Bar \u306e\u914d\u5217\u3092\u4ee3\u5165\u3067\u304d\u308b\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u305d\u3046\u306f\u3044\u304d\u307e\u305b\u3093\u3002 initialize \u3067\u306e [Bar.new] \u3068\u3044\u3046\u5f0f\u306e\u578b\u306f Array(Bar) \u3067\u3059\u3002\u305d\u3057\u3066 Array(Bar) \u306f Array(Foo) \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u3053\u3068\u306f \u3067\u304d\u307e\u305b\u3093 \u3002 \u3069\u306e\u3088\u3046\u306b\u3059\u308b\u306e\u304c\u6b63\u3057\u3044\u65b9\u6cd5\u3067\u3057\u3087\u3046\u304b\uff1f \u5f0f\u306e\u578b\u3092 \u6b63\u3057\u3044\u578b\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u3064\u307e\u308a Array(Foo) \u306e\u3088\u3046\u306b (\u5177\u4f53\u7684\u306a\u65b9\u6cd5\u306f\u4ee5\u4e0b\u3067)\u3002 class Foo end class Bar < Foo end class Test @arr : Array ( Foo ) def initialize @arr = [ Bar . new ] of Foo end end \u3053\u306e\u4f8b\u306f\u7279\u5b9a\u306e\u578b (\u914d\u5217) \u3068\u7279\u5b9a\u306e\u64cd\u4f5c (\u4ee3\u5165) \u306b\u5bfe\u3059\u308b\u3082\u306e\u3067\u3001\u4e0a\u8a18\u306e\u65b9\u6cd5\u306f\u4ed6\u306e\u578b\u306e\u5834\u5408\u3084\u4ee3\u5165\u610f\u5916\u306e\u64cd\u4f5c\u306e\u5834\u5408\u306b\u3082\u540c\u69d8\u306b\u9069\u7528\u3067\u304d\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4e00\u822c\u7684\u306a \u5171\u5909\u6027\u3068\u53cd\u5909\u6027 \u306f\u5b8c\u5168\u306b\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002","title":"\u7d99\u627f"},{"location":"syntax_and_semantics/inheritance.html#_1","text":"\u30af\u30e9\u30b9\u968e\u5c64\u306e\u9802\u70b9\u3067\u3042\u308b Object \u3092\u8997\u304d\u3001\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306f\u4ed6\u306e\u30af\u30e9\u30b9 (\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9) \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\u7d99\u627f\u5143\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u305b\u305a\u5b9a\u7fa9\u3057\u305f\u5834\u5408\u3001\u30af\u30e9\u30b9\u3067\u3042\u308c\u3070 Reference \u304c\u3001\u69cb\u9020\u4f53\u3067\u3042\u308c\u3070 Struct \u304c\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002 \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u3068\u304d\u3001\u3059\u3079\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3001\u304a\u3088\u3073\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u304c\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u304b\u3089\u5f15\u304d\u7d99\u304c\u308c\u307e\u3059\u3002\u305d\u306e\u4e2d\u306b\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf ( new \u3068 initialize ) \u3082\u542b\u307e\u308c\u307e\u3059\u3002 class Person def initialize ( @name : String ) end def greet puts \"Hi, I'm #{ @name } \" end end class Employee < Person end employee = Employee . new \"John\" employee . greet # \"Hi, I'm John\" \u30af\u30e9\u30b9\u304c new \u3084 initialize \u3092\u5b9a\u7fa9\u3057\u305f\u5834\u5408\u306f\u3001\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u7d99\u627f\u3055\u308c\u307e\u305b\u3093\u3002 class Person def initialize ( @name : String ) end end class Employee < Person def initialize ( @name : String , @company_name : String ) end end Employee . new \"John\" , \"Acme\" # OK Employee . new \"Peter\" # Error: wrong number of arguments for 'Employee:Class#new' (1 for 2) \u6d3e\u751f\u30af\u30e9\u30b9\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class Person def greet ( msg ) puts \"Hi, #{ msg } \" end end class Employee < Person def greet ( msg ) puts \"Hello, #{ msg } \" end end p = Person . new p . greet \"everyone\" # \"Hi, everyone\" e = Employee . new e . greet \"everyone\" # \"Hello, everyone\" \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306e\u4ee3\u308f\u308a\u306b\u3001\u578b\u5236\u7d04\u3092\u5229\u7528\u3057\u3066\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u7279\u5316\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 class Person def greet ( msg ) puts \"Hi, #{ msg } \" end end class Employee < Person def greet ( msg : Int32 ) puts \"Hi, this is a number: #{ msg } \" end end e = Employee . new e . greet \"everyone\" # \"Hi, everyone\" e . greet 1 # \"Hi, this is a number: 1\"","title":"\u7d99\u627f"},{"location":"syntax_and_semantics/inheritance.html#super","text":"super \u3092\u4f7f\u3046\u3068\u3001\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class Person def greet ( msg ) puts \"Hello, #{ msg } \" end end class Employee < Person def greet ( msg ) super # Same as: super(msg) super ( \"another message\" ) end end Without arguments or parentheses, super receives all of the method's parameters as arguments. \u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u6307\u5b9a\u3057\u305f\u5f15\u6570\u304c\u6e21\u3055\u308c\u307e\u3059\u3002","title":"super"},{"location":"syntax_and_semantics/inheritance.html#_2","text":"\u7d99\u627f\u304c\u5c11\u3057\u5384\u4ecb\u306a\u306e\u306f\u3001\u914d\u5217\u306e\u5834\u5408\u3067\u3059\u3002\u914d\u5217\u306e\u8981\u7d20\u306b\u7d99\u627f\u3055\u308c\u305f\u3082\u306e\u304c\u4f7f\u308f\u308c\u305f\u5834\u5408\u306f\u3001\u5341\u5206\u306b\u6ce8\u610f\u3059\u3079\u304d\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u6b21\u306e\u3088\u3046\u306a\u4f8b\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 class Foo end class Bar < Foo end foo_arr = [ Bar . new ] of Foo # => [#<Bar:0x10215bfe0>] : Array(Foo) bar_arr = [ Bar . new ] # => [#<Bar:0x10215bfd0>] : Array(Bar) bar_arr2 = [ Foo . new ] of Bar # \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc Foo \u306e\u914d\u5217\u306f Foo \u3068 Bar \u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001Bar \u306e\u914d\u5217\u306f Bar \u3068\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3057\u304b\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u3053\u308c\u306f\u81ea\u52d5\u30ad\u30e3\u30b9\u30c8\u304c\u4f5c\u7528\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u3001\u60a9\u307e\u3057\u3044\u7d50\u679c\u3092\u5f15\u304d\u8d77\u3053\u3059\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6b21\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002 class Foo end class Bar < Foo end class Test @arr : Array ( Foo ) def initialize @arr = [ Bar . new ] end end @arr \u3092 Array(Foo) \u3068\u3057\u3066\u5ba3\u8a00\u3057\u305f\u306e\u3067\u3001\u3053\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u5bfe\u3057\u3066 Bar \u306e\u914d\u5217\u3092\u4ee3\u5165\u3067\u304d\u308b\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u305d\u3046\u306f\u3044\u304d\u307e\u305b\u3093\u3002 initialize \u3067\u306e [Bar.new] \u3068\u3044\u3046\u5f0f\u306e\u578b\u306f Array(Bar) \u3067\u3059\u3002\u305d\u3057\u3066 Array(Bar) \u306f Array(Foo) \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u3053\u3068\u306f \u3067\u304d\u307e\u305b\u3093 \u3002 \u3069\u306e\u3088\u3046\u306b\u3059\u308b\u306e\u304c\u6b63\u3057\u3044\u65b9\u6cd5\u3067\u3057\u3087\u3046\u304b\uff1f \u5f0f\u306e\u578b\u3092 \u6b63\u3057\u3044\u578b\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u3064\u307e\u308a Array(Foo) \u306e\u3088\u3046\u306b (\u5177\u4f53\u7684\u306a\u65b9\u6cd5\u306f\u4ee5\u4e0b\u3067)\u3002 class Foo end class Bar < Foo end class Test @arr : Array ( Foo ) def initialize @arr = [ Bar . new ] of Foo end end \u3053\u306e\u4f8b\u306f\u7279\u5b9a\u306e\u578b (\u914d\u5217) \u3068\u7279\u5b9a\u306e\u64cd\u4f5c (\u4ee3\u5165) \u306b\u5bfe\u3059\u308b\u3082\u306e\u3067\u3001\u4e0a\u8a18\u306e\u65b9\u6cd5\u306f\u4ed6\u306e\u578b\u306e\u5834\u5408\u3084\u4ee3\u5165\u610f\u5916\u306e\u64cd\u4f5c\u306e\u5834\u5408\u306b\u3082\u540c\u69d8\u306b\u9069\u7528\u3067\u304d\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4e00\u822c\u7684\u306a \u5171\u5909\u6027\u3068\u53cd\u5909\u6027 \u306f\u5b8c\u5168\u306b\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002","title":"\u5171\u5909\u6027\u3068\u53cd\u5909\u6027"},{"location":"syntax_and_semantics/instance_sizeof.html","text":"instance_sizeof instance_sizeof \u306f\u4e0e\u3048\u3089\u308c\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b5\u30a4\u30ba\u3092 Int32 \u3067\u8fd4\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Point def initialize ( @x , @y ) end end Point . new 1 , 2 # 2 x Int32 = 2 x 4 = 8 instance_sizeof ( Point ) # => 12 \u4e0a\u8a18\u3067\u306f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f2\u3064\u306e Int32 \u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u578b ID \u306e\u305f\u3081\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u5e38\u306b Int32 \u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u6700\u7d42\u7684\u306b\u3053\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b5\u30a4\u30ba\u306f 8 \u3067\u306f\u306a\u304f 12 \u3068\u306a\u308a\u307e\u3059\u3002","title":"instance_sizeof"},{"location":"syntax_and_semantics/instance_sizeof.html#instance_sizeof","text":"instance_sizeof \u306f\u4e0e\u3048\u3089\u308c\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b5\u30a4\u30ba\u3092 Int32 \u3067\u8fd4\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Point def initialize ( @x , @y ) end end Point . new 1 , 2 # 2 x Int32 = 2 x 4 = 8 instance_sizeof ( Point ) # => 12 \u4e0a\u8a18\u3067\u306f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f2\u3064\u306e Int32 \u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u578b ID \u306e\u305f\u3081\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u5e38\u306b Int32 \u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u6700\u7d42\u7684\u306b\u3053\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b5\u30a4\u30ba\u306f 8 \u3067\u306f\u306a\u304f 12 \u3068\u306a\u308a\u307e\u3059\u3002","title":"instance_sizeof"},{"location":"syntax_and_semantics/is_a.html","text":"is_a? is_a? \u3068\u3044\u3046\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u3042\u308b\u4ed6\u306e\u578b\u3092\u7d99\u627f\u3001\u3082\u3057\u304f\u306f\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u308b\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 a . is_a? ( Int32 ) # => true a . is_a? ( String ) # => false a . is_a? ( Number ) # => true a . is_a? ( Int32 | String ) # => true \u3053\u308c\u304c\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u7406\u7531\u306f\u3001 if var.is_a?(...) \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u628a\u63e1\u3057\u3066\u3044\u3066\u3001\u578b\u306e\u60c5\u5831\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u305f\u3081\u3067\u3059\u3002\u307e\u305f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u77e5\u3063\u3066\u304a\u304f\u5fc5\u8981\u306e\u3042\u308b \u578b \u3092\u5f15\u6570\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002","title":"is_a?"},{"location":"syntax_and_semantics/is_a.html#is_a","text":"is_a? \u3068\u3044\u3046\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u3042\u308b\u4ed6\u306e\u578b\u3092\u7d99\u627f\u3001\u3082\u3057\u304f\u306f\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u308b\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 a . is_a? ( Int32 ) # => true a . is_a? ( String ) # => false a . is_a? ( Number ) # => true a . is_a? ( Int32 | String ) # => true \u3053\u308c\u304c\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u7406\u7531\u306f\u3001 if var.is_a?(...) \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u628a\u63e1\u3057\u3066\u3044\u3066\u3001\u578b\u306e\u60c5\u5831\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u305f\u3081\u3067\u3059\u3002\u307e\u305f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u77e5\u3063\u3066\u304a\u304f\u5fc5\u8981\u306e\u3042\u308b \u578b \u3092\u5f15\u6570\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002","title":"is_a?"},{"location":"syntax_and_semantics/local_variables.html","text":"\u30ed\u30fc\u30ab\u30eb\u5909\u6570 \u5909\u6570\u540d\u306e\u5148\u982d\u304c\u5c0f\u6587\u5b57\u306e\u5909\u6570\u306f\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3067\u3059\u3002\u305d\u306e\u5ba3\u8a00\u306f\u3001\u306f\u3058\u3081\u3066\u5024\u304c\u4ee3\u5165\u3055\u308c\u305f\u3068\u304d\u306b\u884c\u308f\u308c\u307e\u3059\u3002 name = \"Crystal\" age = 1 \u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306e\u578b\u306f\u3001\u521d\u671f\u5316\u3055\u308c\u308b\u3068\u304d\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u305d\u306e\u7528\u9014\u306b\u3057\u305f\u304c\u3063\u3066\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3068\u3044\u3046\u3068\u3001\u4e00\u822c\u7684\u306b\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3068\u3044\u3046\u306e\u306f\u5358\u7d14\u306b\u578b\u306e\u60c5\u5831\u3092\u6301\u3063\u305f\u5024\u306e\u5165\u308c\u7269\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3051\u308b\u305d\u308c\u305e\u308c\u306e\u5834\u6240\u3084\u7528\u9014\u306b\u5fdc\u3058\u3066\u305d\u306e\u5165\u308c\u7269\u306e\u578b\u3082\u5909\u5316\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001\u6b21\u306e\u3088\u3046\u306b\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306b\u5225\u306e\u5f0f\u3092\u518d\u4ee3\u5165\u3059\u308b\u3068\u3001\u305d\u306e\u65b0\u3057\u3044\u5f0f\u306e\u578b\u306e\u5909\u6570\u3068\u306a\u308a\u307e\u3059\u3002 flower = \"Tulip\" # \u3053\u306e\u6642\u70b9\u3067\u306f flower \u306f String \u578b flower = 1 # \u3053\u306e\u6642\u70b9\u3067\u306f 'flower' \u306f Int32 \u578b \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u5909\u6570\u540d\u306e\u5148\u982d\u306b\u3064\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u305d\u308c\u3089\u306e\u540d\u524d\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u4e88\u7d04\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5148\u982d\u304c\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306e\u5909\u6570\u540d\u306f\u63a8\u5968\u3055\u308c\u307e\u305b\u3093 (\u30b3\u30fc\u30c9\u306e\u898b\u305f\u76ee\u3084\u8aad\u307f\u3084\u3059\u3055\u3068\u3044\u3046\u70b9\u3067\u3082\u3042\u307e\u308a\u7f8e\u3057\u304f\u306a\u3044\u3067\u3059\u3088\u306d) \u3002","title":"\u30ed\u30fc\u30ab\u30eb\u5909\u6570"},{"location":"syntax_and_semantics/local_variables.html#_1","text":"\u5909\u6570\u540d\u306e\u5148\u982d\u304c\u5c0f\u6587\u5b57\u306e\u5909\u6570\u306f\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3067\u3059\u3002\u305d\u306e\u5ba3\u8a00\u306f\u3001\u306f\u3058\u3081\u3066\u5024\u304c\u4ee3\u5165\u3055\u308c\u305f\u3068\u304d\u306b\u884c\u308f\u308c\u307e\u3059\u3002 name = \"Crystal\" age = 1 \u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306e\u578b\u306f\u3001\u521d\u671f\u5316\u3055\u308c\u308b\u3068\u304d\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u305d\u306e\u7528\u9014\u306b\u3057\u305f\u304c\u3063\u3066\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3068\u3044\u3046\u3068\u3001\u4e00\u822c\u7684\u306b\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3068\u3044\u3046\u306e\u306f\u5358\u7d14\u306b\u578b\u306e\u60c5\u5831\u3092\u6301\u3063\u305f\u5024\u306e\u5165\u308c\u7269\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3051\u308b\u305d\u308c\u305e\u308c\u306e\u5834\u6240\u3084\u7528\u9014\u306b\u5fdc\u3058\u3066\u305d\u306e\u5165\u308c\u7269\u306e\u578b\u3082\u5909\u5316\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001\u6b21\u306e\u3088\u3046\u306b\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306b\u5225\u306e\u5f0f\u3092\u518d\u4ee3\u5165\u3059\u308b\u3068\u3001\u305d\u306e\u65b0\u3057\u3044\u5f0f\u306e\u578b\u306e\u5909\u6570\u3068\u306a\u308a\u307e\u3059\u3002 flower = \"Tulip\" # \u3053\u306e\u6642\u70b9\u3067\u306f flower \u306f String \u578b flower = 1 # \u3053\u306e\u6642\u70b9\u3067\u306f 'flower' \u306f Int32 \u578b \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u5909\u6570\u540d\u306e\u5148\u982d\u306b\u3064\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u305d\u308c\u3089\u306e\u540d\u524d\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u4e88\u7d04\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5148\u982d\u304c\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306e\u5909\u6570\u540d\u306f\u63a8\u5968\u3055\u308c\u307e\u305b\u3093 (\u30b3\u30fc\u30c9\u306e\u898b\u305f\u76ee\u3084\u8aad\u307f\u3084\u3059\u3055\u3068\u3044\u3046\u70b9\u3067\u3082\u3042\u307e\u308a\u7f8e\u3057\u304f\u306a\u3044\u3067\u3059\u3088\u306d) \u3002","title":"\u30ed\u30fc\u30ab\u30eb\u5909\u6570"},{"location":"syntax_and_semantics/low_level_primitives.html","text":"\u4f4e\u30ec\u30d9\u30eb\u30d7\u30ea\u30df\u30c6\u30a3\u30d6 \u3044\u304f\u3064\u304b\u306e\u4f4e\u30ec\u30d9\u30eb\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u304c\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001C \u8a00\u8a9e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3084\u3001\u4f4e\u30ec\u30d9\u30eb\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u304d\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002","title":"\u4f4e\u30ec\u30d9\u30eb\u30d7\u30ea\u30df\u30c6\u30a3\u30d6"},{"location":"syntax_and_semantics/low_level_primitives.html#_1","text":"\u3044\u304f\u3064\u304b\u306e\u4f4e\u30ec\u30d9\u30eb\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u304c\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001C \u8a00\u8a9e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3084\u3001\u4f4e\u30ec\u30d9\u30eb\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u304d\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002","title":"\u4f4e\u30ec\u30d9\u30eb\u30d7\u30ea\u30df\u30c6\u30a3\u30d6"},{"location":"syntax_and_semantics/methods_and_instance_variables.html","text":"\u30e1\u30bd\u30c3\u30c9\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u77ed\u7e2e\u8a18\u6cd5\u3092\u4f7f\u3046\u3068\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3078\u306e\u4ee3\u5165\u3092\u3088\u308a\u7c21\u6f54\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Person def initialize ( @name : String ) @age = 0 end def age @age end end \u4eca\u306e\u3068\u3053\u308d\u3001\u540d\u524d\u3092\u3064\u3051\u3066 Person \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304f\u3089\u3044\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3002age \u306f\u5e38\u306b0\u306e\u307e\u307e\u3067\u3059\u3002\u305d\u308c\u3067\u306f\u3001person \u304c\u5e74\u9f62\u3092\u91cd\u306d\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 class Person def initialize ( @name : String ) @age = 0 end def age @age end def become_older @age += 1 end end john = Person . new \"John\" peter = Person . new \"Peter\" john . age # => 0 john . become_older john . age # => 1 peter . age # => 0 \u30e1\u30bd\u30c3\u30c9\u540d\u306e\u5148\u982d\u306f\u5c0f\u6587\u5b57\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u306b\u306f\u4f7f\u3046\u306e\u306f\u5c0f\u6587\u5b57\u3068\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3001\u305d\u3057\u3066\u6570\u5024\u306e\u307f\u3068\u3059\u308b\u3053\u3068\u304c\u6163\u7fd2\u7684\u3067\u3059\u3002 \u30b2\u30c3\u30bf\u30fc\u3068\u30bb\u30c3\u30bf\u30fc Crystal \u306e \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea \u306b\u306f\u30b2\u30c3\u30bf\u30fc\u3068\u30bb\u30c3\u30bf\u30fc\u3092\u7c21\u6f54\u306b\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30de\u30af\u30ed\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 class Person property age getter name : String def initialize ( @name ) @age = 0 end end john = Person . new \"John\" john . age = 32 john . age # => 32 \u30b2\u30c3\u30bf\u30fc\u3068\u30bb\u30c3\u30bf\u30fc\u306e\u30de\u30af\u30ed\u306e\u8a73\u7d30\u306f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e Object#getter \u3084 Object#setter \u3001 Object#property \u306e\u8fba\u308a\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5c11\u3057\u6355\u6349\u3092\u3059\u308b\u3068\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b become_older \u30e1\u30bd\u30c3\u30c9\u3092\u5143\u3005\u306e Person \u30af\u30e9\u30b9\u306e\u306a\u304b \u3067\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u5143\u3005\u306e\u30af\u30e9\u30b9\u3068\u5225\u3067\u6539\u3081\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002Crystal \u306f\u305d\u308c\u3089\u306e\u3059\u3079\u3066\u306e\u5b9a\u7fa9\u30921\u3064\u306e\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u4ee5\u4e0b\u306e\u5834\u5408\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002 class Person def initialize ( @name : String ) @age = 0 end end class Person def become_older @age += 1 end end \u30e1\u30bd\u30c3\u30c9\u306e\u518d\u5b9a\u7fa9\u3068previous_def \u3082\u3057\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u518d\u5ea6\u5b9a\u7fa9\u3055\u308c\u305f\u5834\u5408\u3001\u6700\u5f8c\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u3082\u306e\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u3002 class Person def become_older @age += 1 end end class Person def become_older @age += 2 end end person = Person . new \"John\" person . become_older person . age # => 2 \u305d\u306e\u3068\u304d previous_def \u3092\u4f7f\u3063\u3066\u4ee5\u524d\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class Person def become_older @age += 1 end end class Person def become_older previous_def @age += 2 end end person = Person . new \"John\" person . become_older person . age # => 3 \u5f15\u6570\u306e\u62ec\u5f27\u3082\u306a\u3044\u5834\u5408\u3001 previous_def \u306b\u306f\u547c\u3073\u51fa\u3057\u5143\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u540c\u3058\u5f15\u6570\u304c\u305d\u306e\u307e\u307e\u6e21\u3055\u308c\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u6307\u5b9a\u3057\u305f\u5f15\u6570\u304c\u6e21\u3055\u308c\u307e\u3059\u3002 \u30ad\u30e3\u30c3\u30c1\u30aa\u30fc\u30eb\u521d\u671f\u5316 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306f initialize \u30e1\u30bd\u30c3\u30c9\u306e\u5916\u90e8\u3067\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 class Person @age = 0 def initialize ( @name : String ) end end \u3053\u306e\u3068\u304d @age \u306f\u3069\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30820\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u91cd\u8907\u3092\u907f\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30af\u30e9\u30b9\u3092\u518d\u30aa\u30fc\u30d7\u30f3\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b Nil \u578b\u306b\u306a\u308b\u3053\u3068\u3092\u9632\u3050\u3053\u3068\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002","title":"\u30e1\u30bd\u30c3\u30c9\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570"},{"location":"syntax_and_semantics/methods_and_instance_variables.html#_1","text":"\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u77ed\u7e2e\u8a18\u6cd5\u3092\u4f7f\u3046\u3068\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3078\u306e\u4ee3\u5165\u3092\u3088\u308a\u7c21\u6f54\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Person def initialize ( @name : String ) @age = 0 end def age @age end end \u4eca\u306e\u3068\u3053\u308d\u3001\u540d\u524d\u3092\u3064\u3051\u3066 Person \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304f\u3089\u3044\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3002age \u306f\u5e38\u306b0\u306e\u307e\u307e\u3067\u3059\u3002\u305d\u308c\u3067\u306f\u3001person \u304c\u5e74\u9f62\u3092\u91cd\u306d\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 class Person def initialize ( @name : String ) @age = 0 end def age @age end def become_older @age += 1 end end john = Person . new \"John\" peter = Person . new \"Peter\" john . age # => 0 john . become_older john . age # => 1 peter . age # => 0 \u30e1\u30bd\u30c3\u30c9\u540d\u306e\u5148\u982d\u306f\u5c0f\u6587\u5b57\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u306b\u306f\u4f7f\u3046\u306e\u306f\u5c0f\u6587\u5b57\u3068\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3001\u305d\u3057\u3066\u6570\u5024\u306e\u307f\u3068\u3059\u308b\u3053\u3068\u304c\u6163\u7fd2\u7684\u3067\u3059\u3002","title":"\u30e1\u30bd\u30c3\u30c9\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570"},{"location":"syntax_and_semantics/methods_and_instance_variables.html#_2","text":"Crystal \u306e \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea \u306b\u306f\u30b2\u30c3\u30bf\u30fc\u3068\u30bb\u30c3\u30bf\u30fc\u3092\u7c21\u6f54\u306b\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30de\u30af\u30ed\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 class Person property age getter name : String def initialize ( @name ) @age = 0 end end john = Person . new \"John\" john . age = 32 john . age # => 32 \u30b2\u30c3\u30bf\u30fc\u3068\u30bb\u30c3\u30bf\u30fc\u306e\u30de\u30af\u30ed\u306e\u8a73\u7d30\u306f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e Object#getter \u3084 Object#setter \u3001 Object#property \u306e\u8fba\u308a\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5c11\u3057\u6355\u6349\u3092\u3059\u308b\u3068\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b become_older \u30e1\u30bd\u30c3\u30c9\u3092\u5143\u3005\u306e Person \u30af\u30e9\u30b9\u306e\u306a\u304b \u3067\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u5143\u3005\u306e\u30af\u30e9\u30b9\u3068\u5225\u3067\u6539\u3081\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002Crystal \u306f\u305d\u308c\u3089\u306e\u3059\u3079\u3066\u306e\u5b9a\u7fa9\u30921\u3064\u306e\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u4ee5\u4e0b\u306e\u5834\u5408\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002 class Person def initialize ( @name : String ) @age = 0 end end class Person def become_older @age += 1 end end","title":"\u30b2\u30c3\u30bf\u30fc\u3068\u30bb\u30c3\u30bf\u30fc"},{"location":"syntax_and_semantics/methods_and_instance_variables.html#previous_def","text":"\u3082\u3057\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u518d\u5ea6\u5b9a\u7fa9\u3055\u308c\u305f\u5834\u5408\u3001\u6700\u5f8c\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u3082\u306e\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u3002 class Person def become_older @age += 1 end end class Person def become_older @age += 2 end end person = Person . new \"John\" person . become_older person . age # => 2 \u305d\u306e\u3068\u304d previous_def \u3092\u4f7f\u3063\u3066\u4ee5\u524d\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class Person def become_older @age += 1 end end class Person def become_older previous_def @age += 2 end end person = Person . new \"John\" person . become_older person . age # => 3 \u5f15\u6570\u306e\u62ec\u5f27\u3082\u306a\u3044\u5834\u5408\u3001 previous_def \u306b\u306f\u547c\u3073\u51fa\u3057\u5143\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u540c\u3058\u5f15\u6570\u304c\u305d\u306e\u307e\u307e\u6e21\u3055\u308c\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u6307\u5b9a\u3057\u305f\u5f15\u6570\u304c\u6e21\u3055\u308c\u307e\u3059\u3002","title":"\u30e1\u30bd\u30c3\u30c9\u306e\u518d\u5b9a\u7fa9\u3068previous_def"},{"location":"syntax_and_semantics/methods_and_instance_variables.html#_3","text":"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306f initialize \u30e1\u30bd\u30c3\u30c9\u306e\u5916\u90e8\u3067\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 class Person @age = 0 def initialize ( @name : String ) end end \u3053\u306e\u3068\u304d @age \u306f\u3069\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30820\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u91cd\u8907\u3092\u907f\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30af\u30e9\u30b9\u3092\u518d\u30aa\u30fc\u30d7\u30f3\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b Nil \u578b\u306b\u306a\u308b\u3053\u3068\u3092\u9632\u3050\u3053\u3068\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002","title":"\u30ad\u30e3\u30c3\u30c1\u30aa\u30fc\u30eb\u521d\u671f\u5316"},{"location":"syntax_and_semantics/modules.html","text":"\u30e2\u30b8\u30e5\u30fc\u30eb \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u5f79\u5272\u306e\u305f\u3081\u306b\u3042\u308a\u307e\u3059\u3002 \u578b\u3084\u30e1\u30bd\u30c3\u30c9\u3001\u5b9a\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u540d\u524d\u7a7a\u9593\u3068\u3057\u3066\u306e\u5f79\u5272 \u4ed6\u306e\u578b\u3078 mixin \u3059\u308b\u90e8\u5206\u7684\u306a\u578b\u3068\u3057\u3066\u306e\u5f79\u5272 \u307e\u305a\u3001\u540d\u524d\u7a7a\u9593\u3068\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002 module Curses class Window end end Curses :: Window . new \u3042\u306a\u305f\u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u8005\u3067\u3042\u308c\u3070\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u578b\u306a\u3069\u306e\u5b9a\u7fa9\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5185\u90e8\u3067\u884c\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u540d\u524d\u306e\u885d\u7a81\u3092\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\u57fa\u672c\u7684\u306b\u540d\u524d\u7a7a\u9593\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u578b\u3084\u30e1\u30bd\u30c3\u30c9\u306f\u3054\u304f\u4e00\u822c\u7684\u306b\u5229\u7528\u3055\u308c\u308b\u3082\u306e\u306a\u306e\u3067\u3001\u305d\u306e\u305f\u3073\u306b\u9577\u3044\u540d\u524d\u3092\u66f8\u304b\u305a\u306b\u6e08\u3080\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002 \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u90e8\u5206\u7684\u306a\u578b\u3068\u3057\u3066\u4f7f\u3044\u305f\u3044\u5834\u5408\u3001 include \u3082\u3057\u304f\u306f extend \u3092\u4f7f\u3044\u307e\u3059\u3002 include \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 module ItemsSize def size items . size end end class Items include ItemsSize def items [ 1 , 2 , 3 ] end end items = Items . new items . size # => 3 \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u307e\u308b\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u306e size \u30e1\u30bd\u30c3\u30c9\u3092 Items \u30af\u30e9\u30b9\u306b\u8cbc\u308a\u4ed8\u3051\u305f\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u4ed5\u7d44\u307f\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u89aa\u3084\u5148\u7956\u306e\u30ea\u30b9\u30c8\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u3067\u6a5f\u80fd\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u521d\u306e\u72b6\u614b\u3067\u306f\u3001\u3053\u306e\u30ea\u30b9\u30c8\u306f\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u305f\u3068\u304d\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u305d\u306e\u30ea\u30b9\u30c8\u306e \u5148\u982d\u306b\u8ffd\u52a0 \u3055\u308c\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u81ea\u8eab\u306e\u578b\u306b\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u304d\u3001\u305d\u306e\u30ea\u30b9\u30c8\u3092\u305f\u3069\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u63a2\u3057\u307e\u3059\u3002\u307e\u305f\u3001 super \u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u306f\u3001\u305d\u306e\u7956\u5148\u30ea\u30b9\u30c8\u306e\u5148\u982d\u306e\u578b\u304c\u5bfe\u8c61\u3068\u306a\u308a\u307e\u3059\u3002 module \u304c\u5225\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u3068\u304d\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4e2d\u3092\u63a2\u3057\u307e\u3059\u3002 extend \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 module SomeSize def size 3 end end class Items extend SomeSize end Items . size # => 3 \u307e\u305f\u3001 include \u3068 extend \u306e\u3069\u3061\u3089\u3092\u4f7f\u3063\u305f\u5834\u5408\u3082\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u5b9a\u6570\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3067 include / extend \u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u4f55\u5ea6\u3082\u540d\u524d\u7a7a\u9593\u3092\u66f8\u304b\u306a\u304f\u3066\u3082\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059 (\u3082\u3061\u308d\u3093\u3001\u305d\u306e\u5206\u3060\u3051\u540d\u524d\u304c\u885d\u7a81\u3059\u308b\u53ef\u80fd\u6027\u306f\u9ad8\u304f\u306a\u308a\u307e\u3059\u304c) \u3002 module SomeModule class SomeType end def some_method 1 end end include SomeModule SomeType . new # OK, same as SomeModule::SomeType some_method # OK, 1 extend self \u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b\u30d1\u30bf\u30fc\u30f3\u306b extend self \u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 module Base64 extend self def encode64 ( string ) # ... end def decode64 ( string ) # ... end end \u3053\u306e\u3068\u304d\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u540d\u524d\u7a7a\u9593\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Base64 . encode64 \"hello\" # => \"aGVsbG8=\" \u305d\u308c\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u3068\u304d\u3001\u540d\u524d\u7a7a\u9593\u306e\u6307\u5b9a\u306a\u3057\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 include Base64 encode64 \"hello\" # => \"aGVsbG8=\" \u305f\u3060\u3001\u540d\u524d\u304c\u885d\u7a81\u3059\u308b\u53ef\u80fd\u6027\u3082\u9ad8\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u95a2\u9023\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u6709\u52b9\u306b\u6d3b\u7528\u3059\u308b\u30b3\u30c4\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 module Moo end Moo . new # undefined method 'new' for Moo:Module \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u578b\u691c\u67fb \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u578b\u3092\u691c\u67fb\u3059\u308b\u306e\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002 2\u3064\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c A \u3068 B \u3092\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 module A ; end module B ; end \u3053\u308c\u3089\u3092\u30af\u30e9\u30b9\u306b\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\u3002 class One include A end class Two include B end class Three < Two include A end \u3053\u306e\u3068\u304d\u3001\u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u578b\u691c\u67fb\u3092\u3059\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u578b\u691c\u67fb\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 one = One . new typeof ( one ) # => One one . is_a? ( A ) # => true one . is_a? ( B ) # => false three = Three . new typeof ( three ) # => Three three . is_a? ( A ) # => true three . is_a? ( B ) # => true \u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30af\u30e9\u30b9\u306e\u4ee3\u308f\u308a\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u57fa\u3065\u304f\u914d\u5217\u3092\u4f5c\u3063\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 one = One . new two = Two . new three = Three . new new_array = Array ( A ) . new new_array << one # One \u306f A \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u308b\u306e\u3067OK new_array << three # Three \u306f A \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u308b\u306e\u3067OK new_array << two # Two \u306f A \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc","title":"\u30e2\u30b8\u30e5\u30fc\u30eb"},{"location":"syntax_and_semantics/modules.html#_1","text":"\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u5f79\u5272\u306e\u305f\u3081\u306b\u3042\u308a\u307e\u3059\u3002 \u578b\u3084\u30e1\u30bd\u30c3\u30c9\u3001\u5b9a\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u540d\u524d\u7a7a\u9593\u3068\u3057\u3066\u306e\u5f79\u5272 \u4ed6\u306e\u578b\u3078 mixin \u3059\u308b\u90e8\u5206\u7684\u306a\u578b\u3068\u3057\u3066\u306e\u5f79\u5272 \u307e\u305a\u3001\u540d\u524d\u7a7a\u9593\u3068\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002 module Curses class Window end end Curses :: Window . new \u3042\u306a\u305f\u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u8005\u3067\u3042\u308c\u3070\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u578b\u306a\u3069\u306e\u5b9a\u7fa9\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5185\u90e8\u3067\u884c\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u540d\u524d\u306e\u885d\u7a81\u3092\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\u57fa\u672c\u7684\u306b\u540d\u524d\u7a7a\u9593\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u578b\u3084\u30e1\u30bd\u30c3\u30c9\u306f\u3054\u304f\u4e00\u822c\u7684\u306b\u5229\u7528\u3055\u308c\u308b\u3082\u306e\u306a\u306e\u3067\u3001\u305d\u306e\u305f\u3073\u306b\u9577\u3044\u540d\u524d\u3092\u66f8\u304b\u305a\u306b\u6e08\u3080\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002 \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u90e8\u5206\u7684\u306a\u578b\u3068\u3057\u3066\u4f7f\u3044\u305f\u3044\u5834\u5408\u3001 include \u3082\u3057\u304f\u306f extend \u3092\u4f7f\u3044\u307e\u3059\u3002 include \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 module ItemsSize def size items . size end end class Items include ItemsSize def items [ 1 , 2 , 3 ] end end items = Items . new items . size # => 3 \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u307e\u308b\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u306e size \u30e1\u30bd\u30c3\u30c9\u3092 Items \u30af\u30e9\u30b9\u306b\u8cbc\u308a\u4ed8\u3051\u305f\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u4ed5\u7d44\u307f\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u89aa\u3084\u5148\u7956\u306e\u30ea\u30b9\u30c8\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u3067\u6a5f\u80fd\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u521d\u306e\u72b6\u614b\u3067\u306f\u3001\u3053\u306e\u30ea\u30b9\u30c8\u306f\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u305f\u3068\u304d\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u305d\u306e\u30ea\u30b9\u30c8\u306e \u5148\u982d\u306b\u8ffd\u52a0 \u3055\u308c\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u81ea\u8eab\u306e\u578b\u306b\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u304d\u3001\u305d\u306e\u30ea\u30b9\u30c8\u3092\u305f\u3069\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u63a2\u3057\u307e\u3059\u3002\u307e\u305f\u3001 super \u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u306f\u3001\u305d\u306e\u7956\u5148\u30ea\u30b9\u30c8\u306e\u5148\u982d\u306e\u578b\u304c\u5bfe\u8c61\u3068\u306a\u308a\u307e\u3059\u3002 module \u304c\u5225\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u3068\u304d\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4e2d\u3092\u63a2\u3057\u307e\u3059\u3002 extend \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 module SomeSize def size 3 end end class Items extend SomeSize end Items . size # => 3 \u307e\u305f\u3001 include \u3068 extend \u306e\u3069\u3061\u3089\u3092\u4f7f\u3063\u305f\u5834\u5408\u3082\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u5b9a\u6570\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3067 include / extend \u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u4f55\u5ea6\u3082\u540d\u524d\u7a7a\u9593\u3092\u66f8\u304b\u306a\u304f\u3066\u3082\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059 (\u3082\u3061\u308d\u3093\u3001\u305d\u306e\u5206\u3060\u3051\u540d\u524d\u304c\u885d\u7a81\u3059\u308b\u53ef\u80fd\u6027\u306f\u9ad8\u304f\u306a\u308a\u307e\u3059\u304c) \u3002 module SomeModule class SomeType end def some_method 1 end end include SomeModule SomeType . new # OK, same as SomeModule::SomeType some_method # OK, 1","title":"\u30e2\u30b8\u30e5\u30fc\u30eb"},{"location":"syntax_and_semantics/modules.html#extend-self","text":"\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b\u30d1\u30bf\u30fc\u30f3\u306b extend self \u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 module Base64 extend self def encode64 ( string ) # ... end def decode64 ( string ) # ... end end \u3053\u306e\u3068\u304d\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u540d\u524d\u7a7a\u9593\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Base64 . encode64 \"hello\" # => \"aGVsbG8=\" \u305d\u308c\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u3068\u304d\u3001\u540d\u524d\u7a7a\u9593\u306e\u6307\u5b9a\u306a\u3057\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 include Base64 encode64 \"hello\" # => \"aGVsbG8=\" \u305f\u3060\u3001\u540d\u524d\u304c\u885d\u7a81\u3059\u308b\u53ef\u80fd\u6027\u3082\u9ad8\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u95a2\u9023\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u6709\u52b9\u306b\u6d3b\u7528\u3059\u308b\u30b3\u30c4\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 module Moo end Moo . new # undefined method 'new' for Moo:Module","title":"extend self"},{"location":"syntax_and_semantics/modules.html#_2","text":"\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u578b\u3092\u691c\u67fb\u3059\u308b\u306e\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002 2\u3064\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c A \u3068 B \u3092\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 module A ; end module B ; end \u3053\u308c\u3089\u3092\u30af\u30e9\u30b9\u306b\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\u3002 class One include A end class Two include B end class Three < Two include A end \u3053\u306e\u3068\u304d\u3001\u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u578b\u691c\u67fb\u3092\u3059\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u578b\u691c\u67fb\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 one = One . new typeof ( one ) # => One one . is_a? ( A ) # => true one . is_a? ( B ) # => false three = Three . new typeof ( three ) # => Three three . is_a? ( A ) # => true three . is_a? ( B ) # => true \u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30af\u30e9\u30b9\u306e\u4ee3\u308f\u308a\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u57fa\u3065\u304f\u914d\u5217\u3092\u4f5c\u3063\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 one = One . new two = Two . new three = Three . new new_array = Array ( A ) . new new_array << one # One \u306f A \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u308b\u306e\u3067OK new_array << three # Three \u306f A \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u308b\u306e\u3067OK new_array << two # Two \u306f A \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc","title":"\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u578b\u691c\u67fb"},{"location":"syntax_and_semantics/new%2C_initialize_and_allocate.html","text":"new/initialize/allocate \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066 new \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 person = Person . new \u3053\u306e\u4f8b\u3067\u306f person \u306f Person \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3059\u3002 \u3057\u304b\u3057 person \u306b\u5bfe\u3057\u3066\u3067\u304d\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u3001\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 Person \u306f\u540d\u524d (name) \u3068\u5e74\u9f62 (age) \u3092\u6301\u3064\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u300c\u3059\u3079\u3066\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u578b\u3092\u6301\u3064\u30e1\u30bd\u30c3\u30c9\u306b\u5fdc\u7b54\u3059\u308b\u300d\u3082\u306e\u3067\u3042\u308b\u3068\u66f8\u304d\u307e\u3057\u305f\u3002\u3064\u307e\u308a\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u5bfe\u8a71\u3059\u308b\u552f\u4e00\u306e\u65b9\u6cd5\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3088\u3063\u3066\u3001\u540d\u524d\u3068\u5e74\u9f62\u306e\u305f\u3081\u306b name \u3068 age \u306e2\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u3089\u306e\u60c5\u5831\u306f \u30a2\u30c3\u30c8\u30de\u30fc\u30af\u8a18\u53f7 ( @ ) \u304c\u5148\u982d\u306b\u3064\u3044\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\u307e\u305f Person \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u3068\u304d\u3001\u540d\u524d\u306f\u6307\u5b9a\u3055\u308c\u305f\u3082\u306e\u306b\u3001\u5e74\u9f62\u306f0\u6b73\u306e\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u3068\u304d\u306e\u51e6\u7406\u306f initialize \u30e1\u30bd\u30c3\u30c9\u306b\u5b9a\u7fa9\u3057\u307e\u3059 (\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf \u3068\u547c\u3076\u3053\u3068\u3082\u3042\u308a\u307e\u3059)\u3002 class Person def initialize ( name : String ) @name = name @age = 0 end def name @name end def age @age end end \u3053\u308c\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 john = Person . new \"John\" peter = Person . new \"Peter\" john . name # => \"John\" john . age # => 0 peter . name # => \"Peter\" ( name \u306b\u306f String \u3068\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u306b age \u306b\u5bfe\u3057\u3066\u306f\u305d\u308c\u304c\u5fc5\u8981\u306a\u3044\u3053\u3068\u3092\u4e0d\u601d\u8b70\u306b\u601d\u3046\u4eba\u3082\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u306f \u30b0\u30ed\u30fc\u30d0\u30eb\u578b\u63a8\u8ad6\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u9805 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002) new \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066 Person \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3057\u305f\u304c\u3001\u521d\u671f\u5316\u51e6\u7406\u306f initialize \u30e1\u30bd\u30c3\u30c9\u306b\u5b9a\u7fa9\u3057\u305f\u306e\u3067\u3042\u3063\u3066\u3001 new \u30e1\u30bd\u30c3\u30c9\u306b\u3067\u306f\u306a\u3044\u3053\u3068\u304c\u6c17\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u4e00\u4f53\u3069\u3046\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\uff1f \u5b9f\u306f\u3001 initialize \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u305f\u3068\u304d\u3001Crystal \u306f\u540c\u6642\u306b new \u30e1\u30bd\u30c3\u30c9\u3082\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u3002 class Person def self . new ( name : String ) instance = Person . allocate instance . initialize ( name ) instance end end \u307e\u305a\u3001 self.new \u3068\u66f8\u3044\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 \u3068\u3044\u3063\u3066\u3001 Person \u30af\u30e9\u30b9 \u81ea\u4f53\u306b\u5c5e\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u7279\u5b9a\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u5bfe\u3057\u3066\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306b\u3088\u3063\u3066 Person.new \u3068\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002 \u6b21\u306b\u3001 allocate \u306f\u4e0e\u3048\u3089\u308c\u305f\u30af\u30e9\u30b9\u306e\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u3001\u4f4e\u30ec\u30d9\u30eb\u306a\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u5fc5\u8981\u306a\u30e1\u30e2\u30ea\u3092\u5272\u308a\u5f53\u3066\u3066\u3001 initialize \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3001\u6700\u5f8c\u306b\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002 allocate \u306f \u5b89\u5168\u3067\u306a\u3044 \u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u3001\u4e00\u822c\u7684\u306b\u306f\u76f4\u63a5\u547c\u3073\u51fa\u3059\u3053\u3068\u7121\u3044\u3067\u3057\u3087\u3046\u3002 new \u3068 initialize \u304c\u3053\u3046\u3044\u3063\u305f\u95a2\u4fc2\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u305d\u306e\u3088\u3046\u306a\u7406\u7531\u3067\u3059\u3002","title":"new/initialize/allocate"},{"location":"syntax_and_semantics/new%2C_initialize_and_allocate.html#newinitializeallocate","text":"\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066 new \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 person = Person . new \u3053\u306e\u4f8b\u3067\u306f person \u306f Person \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3059\u3002 \u3057\u304b\u3057 person \u306b\u5bfe\u3057\u3066\u3067\u304d\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u3001\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 Person \u306f\u540d\u524d (name) \u3068\u5e74\u9f62 (age) \u3092\u6301\u3064\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u300c\u3059\u3079\u3066\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u578b\u3092\u6301\u3064\u30e1\u30bd\u30c3\u30c9\u306b\u5fdc\u7b54\u3059\u308b\u300d\u3082\u306e\u3067\u3042\u308b\u3068\u66f8\u304d\u307e\u3057\u305f\u3002\u3064\u307e\u308a\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u5bfe\u8a71\u3059\u308b\u552f\u4e00\u306e\u65b9\u6cd5\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3088\u3063\u3066\u3001\u540d\u524d\u3068\u5e74\u9f62\u306e\u305f\u3081\u306b name \u3068 age \u306e2\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u3089\u306e\u60c5\u5831\u306f \u30a2\u30c3\u30c8\u30de\u30fc\u30af\u8a18\u53f7 ( @ ) \u304c\u5148\u982d\u306b\u3064\u3044\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\u307e\u305f Person \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u3068\u304d\u3001\u540d\u524d\u306f\u6307\u5b9a\u3055\u308c\u305f\u3082\u306e\u306b\u3001\u5e74\u9f62\u306f0\u6b73\u306e\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u3068\u304d\u306e\u51e6\u7406\u306f initialize \u30e1\u30bd\u30c3\u30c9\u306b\u5b9a\u7fa9\u3057\u307e\u3059 (\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf \u3068\u547c\u3076\u3053\u3068\u3082\u3042\u308a\u307e\u3059)\u3002 class Person def initialize ( name : String ) @name = name @age = 0 end def name @name end def age @age end end \u3053\u308c\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 john = Person . new \"John\" peter = Person . new \"Peter\" john . name # => \"John\" john . age # => 0 peter . name # => \"Peter\" ( name \u306b\u306f String \u3068\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u306b age \u306b\u5bfe\u3057\u3066\u306f\u305d\u308c\u304c\u5fc5\u8981\u306a\u3044\u3053\u3068\u3092\u4e0d\u601d\u8b70\u306b\u601d\u3046\u4eba\u3082\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u306f \u30b0\u30ed\u30fc\u30d0\u30eb\u578b\u63a8\u8ad6\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u9805 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002) new \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066 Person \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3057\u305f\u304c\u3001\u521d\u671f\u5316\u51e6\u7406\u306f initialize \u30e1\u30bd\u30c3\u30c9\u306b\u5b9a\u7fa9\u3057\u305f\u306e\u3067\u3042\u3063\u3066\u3001 new \u30e1\u30bd\u30c3\u30c9\u306b\u3067\u306f\u306a\u3044\u3053\u3068\u304c\u6c17\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u4e00\u4f53\u3069\u3046\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\uff1f \u5b9f\u306f\u3001 initialize \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u305f\u3068\u304d\u3001Crystal \u306f\u540c\u6642\u306b new \u30e1\u30bd\u30c3\u30c9\u3082\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u3002 class Person def self . new ( name : String ) instance = Person . allocate instance . initialize ( name ) instance end end \u307e\u305a\u3001 self.new \u3068\u66f8\u3044\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 \u3068\u3044\u3063\u3066\u3001 Person \u30af\u30e9\u30b9 \u81ea\u4f53\u306b\u5c5e\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u7279\u5b9a\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u5bfe\u3057\u3066\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306b\u3088\u3063\u3066 Person.new \u3068\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002 \u6b21\u306b\u3001 allocate \u306f\u4e0e\u3048\u3089\u308c\u305f\u30af\u30e9\u30b9\u306e\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u3001\u4f4e\u30ec\u30d9\u30eb\u306a\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u5fc5\u8981\u306a\u30e1\u30e2\u30ea\u3092\u5272\u308a\u5f53\u3066\u3066\u3001 initialize \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3001\u6700\u5f8c\u306b\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002 allocate \u306f \u5b89\u5168\u3067\u306a\u3044 \u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u3001\u4e00\u822c\u7684\u306b\u306f\u76f4\u63a5\u547c\u3073\u51fa\u3059\u3053\u3068\u7121\u3044\u3067\u3057\u3087\u3046\u3002 new \u3068 initialize \u304c\u3053\u3046\u3044\u3063\u305f\u95a2\u4fc2\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u305d\u306e\u3088\u3046\u306a\u7406\u7531\u3067\u3059\u3002","title":"new/initialize/allocate"},{"location":"syntax_and_semantics/next.html","text":"next while \u306e\u30eb\u30fc\u30d7\u3067 next \u3092\u4f7f\u3046\u3068\u3001\u6b21\u306e\u7e70\u308a\u8fd4\u3057\u306b\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 next \u304c\u5b9f\u884c\u3055\u308c\u305f\u3042\u3068\u3001 while \u306e\u6761\u4ef6\u304c\u30c1\u30a7\u30c3\u30af\u3055\u308c\u3001 \u771f\u3068\u306a\u308c\u3070 \u672c\u4f53\u304c\u518d\u5ea6\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 a = 1 while a < 5 a += 1 if a == 3 next end puts a end # \u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u30682\u30014\u30015\u3068\u8868\u793a\u3059\u308b next \u306f\u30d6\u30ed\u30c3\u30af\u3092\u7d42\u4e86\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 def block yield end block do puts \"hello\" next puts \"world\" end # \u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068 \"hello\" \u3068\u8868\u793a\u3059\u308b break \u540c\u69d8\u3001 next \u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306b\u306f yield \u306e\u623b\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002 def block puts yield end block do next \"hello\" end # \u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068 \"hello\" \u3068\u8868\u793a\u3059\u308b","title":"next"},{"location":"syntax_and_semantics/next.html#next","text":"while \u306e\u30eb\u30fc\u30d7\u3067 next \u3092\u4f7f\u3046\u3068\u3001\u6b21\u306e\u7e70\u308a\u8fd4\u3057\u306b\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 next \u304c\u5b9f\u884c\u3055\u308c\u305f\u3042\u3068\u3001 while \u306e\u6761\u4ef6\u304c\u30c1\u30a7\u30c3\u30af\u3055\u308c\u3001 \u771f\u3068\u306a\u308c\u3070 \u672c\u4f53\u304c\u518d\u5ea6\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 a = 1 while a < 5 a += 1 if a == 3 next end puts a end # \u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u30682\u30014\u30015\u3068\u8868\u793a\u3059\u308b next \u306f\u30d6\u30ed\u30c3\u30af\u3092\u7d42\u4e86\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 def block yield end block do puts \"hello\" next puts \"world\" end # \u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068 \"hello\" \u3068\u8868\u793a\u3059\u308b break \u540c\u69d8\u3001 next \u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306b\u306f yield \u306e\u623b\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002 def block puts yield end block do next \"hello\" end # \u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068 \"hello\" \u3068\u8868\u793a\u3059\u308b","title":"next"},{"location":"syntax_and_semantics/nil_question.html","text":"nil? nil? \u3068\u3044\u3046\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u3042\u308b\u5f0f\u306e\u5b9f\u884c\u6642\u306e\u578b\u304c Nil \u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 a . nil? # => false b = nil b . nil? # => true \u3053\u308c\u304c\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u7406\u7531\u306f\u3001 if var.nil?(...) \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u53c2\u7167\u3055\u308c\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u578b\u60c5\u5831\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3067\u3059\u3002 \u305d\u308c\u306f is_a?(Nil) \u3068\u66f8\u304f\u306e\u3068\u540c\u3058\u3067\u3059\u304c\u3001\u3088\u308a\u77ed\u304f\u8aad\u307f\u66f8\u304d\u304c\u7c21\u5358\u3067\u3059\u3002","title":"nil?"},{"location":"syntax_and_semantics/nil_question.html#nil","text":"nil? \u3068\u3044\u3046\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u3042\u308b\u5f0f\u306e\u5b9f\u884c\u6642\u306e\u578b\u304c Nil \u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 a . nil? # => false b = nil b . nil? # => true \u3053\u308c\u304c\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u7406\u7531\u306f\u3001 if var.nil?(...) \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u53c2\u7167\u3055\u308c\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u578b\u60c5\u5831\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3067\u3059\u3002 \u305d\u308c\u306f is_a?(Nil) \u3068\u66f8\u304f\u306e\u3068\u540c\u3058\u3067\u3059\u304c\u3001\u3088\u308a\u77ed\u304f\u8aad\u307f\u66f8\u304d\u304c\u7c21\u5358\u3067\u3059\u3002","title":"nil?"},{"location":"syntax_and_semantics/not.html","text":"if ! \u5426\u5b9a ( ! ) \u6f14\u7b97\u5b50\u306f \u771f\u304b\u3069\u3046\u304b \u3092\u53cd\u8ee2\u3055\u305b\u305f Bool \u578b\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002 if \u306e\u6761\u4ef6\u5f0f\u306e\u8ad6\u7406\u7a4d\u306e\u4e2d\u306e is_a? \u3084 responds_to? \u3001 nil? \u306b\u5bfe\u3057\u3066\u3053\u308c\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u308c\u306b\u5fdc\u3058\u3066\u5909\u6570\u306e\u578b\u3092\u9069\u5207\u306b\u5236\u7d04\u3057\u307e\u3059\u3002 a = some_condition ? nil : 3 if ! a # \u3053\u306e\u7bc0\u306f a \u304c\u507d\u3068\u306a\u308b\u5834\u5408\u306b\u8a55\u4fa1\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u3053\u3067 a \u306f Nil \u578b else # \u3053\u306e\u7bc0\u306f a \u304c\u771f\u3068\u306a\u308b\u5834\u5408\u306b\u8a55\u4fa1\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u3053\u3067 a \u306f Int32 \u578b end b = some_condition ? 1 : \"x\" if ! b . is_a? ( Int32 ) # b \u304c Int32 \u3067\u306f\u306a\u3044\u3068\u304d\u306b\u8a55\u4fa1\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u3053\u3067 b \u306f String \u578b end","title":"if !"},{"location":"syntax_and_semantics/not.html#if","text":"\u5426\u5b9a ( ! ) \u6f14\u7b97\u5b50\u306f \u771f\u304b\u3069\u3046\u304b \u3092\u53cd\u8ee2\u3055\u305b\u305f Bool \u578b\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002 if \u306e\u6761\u4ef6\u5f0f\u306e\u8ad6\u7406\u7a4d\u306e\u4e2d\u306e is_a? \u3084 responds_to? \u3001 nil? \u306b\u5bfe\u3057\u3066\u3053\u308c\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u308c\u306b\u5fdc\u3058\u3066\u5909\u6570\u306e\u578b\u3092\u9069\u5207\u306b\u5236\u7d04\u3057\u307e\u3059\u3002 a = some_condition ? nil : 3 if ! a # \u3053\u306e\u7bc0\u306f a \u304c\u507d\u3068\u306a\u308b\u5834\u5408\u306b\u8a55\u4fa1\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u3053\u3067 a \u306f Nil \u578b else # \u3053\u306e\u7bc0\u306f a \u304c\u771f\u3068\u306a\u308b\u5834\u5408\u306b\u8a55\u4fa1\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u3053\u3067 a \u306f Int32 \u578b end b = some_condition ? 1 : \"x\" if ! b . is_a? ( Int32 ) # b \u304c Int32 \u3067\u306f\u306a\u3044\u3068\u304d\u306b\u8a55\u4fa1\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u3053\u3067 b \u306f String \u578b end","title":"if !"},{"location":"syntax_and_semantics/offsetof.html","text":"offsetof offsetof \u306f\u30af\u30e9\u30b9\u3084\u69cb\u9020\u4f53\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u30d0\u30a4\u30c8\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\u6700\u521d\u306e\u5f15\u6570\u306b\u578b\u3092\u53d7\u3051\u53d6\u308a\u30012\u756a\u76ee\u306b\u5f15\u6570\u306b\u306f @ \u304b\u3089\u306f\u3058\u307e\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002 offsetof ( Type , @ivar ) \u3053\u308c\u306f\u4f4e\u30ec\u30d9\u30eb\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3067\u3001C \u8a00\u8a9e\u306e API \u304c Crystal \u306e\u578b\u306e\u30c7\u30fc\u30bf\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5fc5\u8981\u3068\u3059\u308b\u5834\u5408\u306b\u9650\u3063\u3066\u6709\u7528\u3067\u3059\u3002 \u4f8b: struct Foo @x = 0 _i64 @y = 34_i32 end offsetof ( Foo , @y ) # => 8","title":"offsetof"},{"location":"syntax_and_semantics/offsetof.html#offsetof","text":"offsetof \u306f\u30af\u30e9\u30b9\u3084\u69cb\u9020\u4f53\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u30d0\u30a4\u30c8\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\u6700\u521d\u306e\u5f15\u6570\u306b\u578b\u3092\u53d7\u3051\u53d6\u308a\u30012\u756a\u76ee\u306b\u5f15\u6570\u306b\u306f @ \u304b\u3089\u306f\u3058\u307e\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002 offsetof ( Type , @ivar ) \u3053\u308c\u306f\u4f4e\u30ec\u30d9\u30eb\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3067\u3001C \u8a00\u8a9e\u306e API \u304c Crystal \u306e\u578b\u306e\u30c7\u30fc\u30bf\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5fc5\u8981\u3068\u3059\u308b\u5834\u5408\u306b\u9650\u3063\u3066\u6709\u7528\u3067\u3059\u3002 \u4f8b: struct Foo @x = 0 _i64 @y = 34_i32 end offsetof ( Foo , @y ) # => 8","title":"offsetof"},{"location":"syntax_and_semantics/operators.html","text":"\u6f14\u7b97\u5b50 Crystal \u306b\u306f\u5358\u9805\u30012\u9805\u30013\u9805\u306e\u6f14\u7b97\u5b50\u304c\u3042\u308a\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u306f\u5b9f\u969b\u306b\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3068\u3057\u3066\u30d1\u30fc\u30b9\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070 a + b \u306f\u610f\u5473\u7684\u306b\u306f a.+(b) ( a \u3092\u30ec\u30b7\u30fc\u30d0\u306b\u3001 b \u3092\u5f15\u6570\u306b\u3057\u3066 + \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059) \u3068\u540c\u3058\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u6f14\u7b97\u5b50\u306e\u69cb\u6587\u306b\u95a2\u3057\u3066\u306f\u3044\u304f\u3064\u304b\u7279\u5225\u306a\u898f\u5247\u304c\u3042\u308a\u307e\u3059\u3002 \u30ec\u30b7\u30fc\u30d0\u3068\u30e1\u30bd\u30c3\u30c9\u540d (\u3064\u307e\u308a \u6f14\u7b97\u5b50\u540d ) \u306e\u9593\u306b\u7f6e\u304f\u30c9\u30c3\u30c8 ( . ) \u306f\u7701\u7565\u3067\u304d\u307e\u3059\u3002 \u9023\u7d9a\u3057\u305f\u6f14\u7b97\u5b50\u306e\u547c\u3073\u51fa\u3057\u306f \u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d \u306b\u5fdc\u3058\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u9069\u5207\u306b\u4e26\u3079\u66ff\u3048\u3089\u308c\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u3067\u3001 1 * 2 + 3 * 4 \u306f\u901a\u5e38\u306e\u30de\u30c3\u30c1\u898f\u5247\u306b\u5f93\u3063\u3066 (1 * 2) + (2 * 3) \u306e\u3088\u3046\u306b\u30d1\u30fc\u30b9\u3055\u308c\u307e\u3059\u3002 \u901a\u5e38\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u306f\u5c0f\u6587\u5b57\u304c\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304b\u3089\u306f\u3058\u307e\u308a\u307e\u3059\u304c\u3001\u6f14\u7b97\u5b50\u306e\u540d\u524d\u306f\u7279\u5225\u306a\u8a18\u53f7\u306e\u307f\u304b\u3089\u306a\u308a\u307e\u3059\u3002\u5c0f\u6587\u5b57\u3084\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304b\u3089\u306f\u3058\u307e\u3089\u306a\u3044\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u6f14\u7b97\u5b50\u3067\u3059\u3002 \u6709\u52b9\u306a\u6f14\u7b97\u5b50\u540d\u306f\u8a18\u53f7\u306e\u307f\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u8a31\u53ef\u3059\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4e2d\u306e\u30db\u30ef\u30a4\u30c8\u30ea\u30b9\u30c8\u306b\u3042\u308b\u3082\u306e\u306b\u9650\u3089\u308c ( \u6f14\u7b97\u5b50\u306e\u4e00\u89a7 \u3092\u53c2\u7167) \u3001\u3053\u308c\u3089\u306e\u540d\u524d\u306f\u6f14\u7b97\u5b50\u3068\u3057\u3066\u6271\u308f\u308c\u512a\u5148\u9806\u4f4d\u3092\u6301\u3061\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u306f\u901a\u5e38\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3067\u304d\u3066\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u6570\u5b66\u306e\u5f0f\u306e\u6f14\u7b97\u5b50\u306a\u3069\u3044\u304f\u3064\u3082\u306e\u5b9f\u88c5\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9 \u307b\u3068\u3093\u3069\u306e\u6f14\u7b97\u5b50\u306f\u901a\u5e38\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u307e\u3059\u3002 \u3042\u308b\u6f14\u7b97\u5b50\u306b\u5bfe\u3057\u3066\u3069\u306e\u3088\u3046\u306a\u610f\u5473\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u6df7\u4e71\u3059\u308b\u3088\u3046\u306a\u76f4\u611f\u7684\u3067\u306a\u3044\u30b3\u30fc\u30c9\u306b\u306a\u308b\u3053\u3068\u3092\u907f\u3051\u308b\u305f\u3081\u3001\u6f14\u7b97\u5b50\u306e\u4e00\u822c\u7684\u306a\u610f\u5473\u306b\u8fd1\u3044\u3082\u306e\u306b\u3059\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002 \u3044\u304f\u3064\u304b\u306e\u5c11\u6570\u306e\u6f14\u7b97\u5b50\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u76f4\u63a5\u5b9f\u88c5\u3055\u308c\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u518d\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u8ad6\u7406\u53cd\u8ee2\u6f14\u7b97\u5b50 ! \u3084\u3001\u4ee3\u5165\u6f14\u7b97\u5b50 = \u3001 ||= \u306e\u3088\u3046\u306a \u8907\u5408\u4ee3\u5165\u6f14\u7b97\u5b50 \u3001\u305d\u3057\u3066 \u7bc4\u56f2\u6f14\u7b97\u5b50 \u306a\u3069\u304c\u305d\u308c\u306b\u5f53\u3066\u306f\u307e\u308a\u307e\u3059\u3002\u30e1\u30bd\u30c3\u30c9\u304c\u518d\u5b9a\u7fa9\u53ef\u80fd\u304b\u3069\u3046\u304b\u306f\u3001\u4e0b\u306b\u3042\u308b\u6f14\u7b97\u5b50\u306e\u4e00\u89a7\u306e \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b \u306e\u9805\u76ee\u3067\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u5358\u9805\u6f14\u7b97\u5b50 \u5358\u9805\u6f14\u7b97\u5b50\u306f\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u8a18\u6cd5\u3068\u3057\u3066\u66f8\u304b\u308c\u30011\u3064\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u53d6\u308b\u3082\u306e\u3067\u3059\u3002 \u305d\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u306e\u5b9f\u88c5\u306f\u5f15\u6570\u3092\u53d6\u3089\u305a self \u306b\u5bfe\u3057\u3066\u4f5c\u7528\u3057\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u306f2\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8868\u3059 Vector2 \u306b\u3001\u5358\u9805\u6f14\u7b97\u5b50\u306e - \u3092\u30d9\u30af\u30c8\u30eb\u306e\u53cd\u8ee2\u3055\u305b\u308b\u3082\u306e\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u305f\u3082\u306e\u3067\u3059\u3002 struct Vector2 getter x , y def initialize ( @x : Int32 , @y : Int32 ) end # \u5358\u9805\u6f14\u7b97\u5b50\u3002`self` \u3092\u53cd\u8ee2\u3055\u305b\u305f\u30d9\u30af\u30c8\u30eb\u3092\u8fd4\u3059\u3002 def - : self Vector2 . new ( - x , - y ) end end v1 = Vector2 . new ( 1 , 2 ) - v1 # => Vector2(@x=-1, @y=-2) 2\u9805\u6f14\u7b97\u5b50 2\u9805\u306e\u6f14\u7b97\u5b50\u306f2\u3064\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u53d6\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u306e\u5b9f\u88c5\u3067\u306f\u3061\u3087\u3046\u30691\u3064\u306e\u5f15\u6570\u3092\u53d6\u308a\u3001\u305d\u308c\u304c2\u756a\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u30021\u3064\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306f self \u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u306f2\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8868\u3059 Vector2 \u306b\u30012\u9805\u6f14\u7b97\u5b50 + \u30922\u3064\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3082\u306e\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u305f\u3082\u306e\u3067\u3059\u3002 struct Vector2 getter x , y def initialize ( @x : Int32 , @y : Int32 ) end # 2\u9805\u6f14\u7b97\u5b50\u3002`self`\u3068**other**\u3092\u8db3\u3057\u5408\u308f\u305b\u305f\u3082\u306e\u3092\u8fd4\u3059\u3002 def + ( other : self ) : self Vector2 . new ( x + other . x , y + other . y ) end end v1 = Vector2 . new ( 1 , 2 ) v2 = Vector2 . new ( 3 , 4 ) v1 + v2 # => Vector2(@x=4, @y=6) \u6163\u4f8b\u7684\u306b\u30012\u9805\u6f14\u7b97\u5b50\u306e\u623b\u308a\u5024\u306e\u65b9\u306f1\u3064\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9 (\u30ec\u30b7\u30fc\u30d0) \u3068\u540c\u3058\u3082\u306e\u306b\u3057\u307e\u3059\u3002\u3064\u307e\u308a typeof(a <op> b) == typeof(a) \u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u305d\u3046\u3067\u306a\u3044\u3068\u4ee3\u5165\u6f14\u7b97\u5b50 ( a <op>= b ) \u306e\u5834\u5408\u306b\u610f\u56f3\u305b\u305a a \u306e\u578b\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3067\u3059\u304c\u3001\u59a5\u5f53\u306a\u4f8b\u5916\u3082\u4e2d\u306b\u306f\u5b58\u5728\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u5272\u308a\u7b97\u3092\u3059\u308b\u6f14\u7b97\u5b50 / \u306f\u6574\u6570\u578b\u306b\u5bfe\u3057\u3066\u3082\u5e38\u306b Float64 \u3092\u8fd4\u3057\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u9664\u7b97\u306e\u7d50\u679c\u306f\u6574\u6570\u306e\u7bc4\u56f2\u306b\u306a\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u304b\u3089\u3067\u3059\u3002 3\u9805\u6f14\u7b97\u5b50 \u6761\u4ef6\u5206\u5c90\u3092\u3059\u308b\u6f14\u7b97\u5b50 ( ? : ) \u304c\u552f\u4e00\u306e3\u9805\u6f14\u7b97\u5b50\u3067\u3059\u3002\u3053\u308c\u306f\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u30d1\u30fc\u30b9\u3055\u308c\u305a\u3001\u610f\u5473\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u5185\u90e8\u7684\u306b\u3053\u308c\u3092 if \u5f0f\u306b\u5909\u63db\u3057\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d \u6b21\u306e\u8868\u306f\u512a\u5148\u9806\u4f4d\u306e\u9ad8\u3044\u3082\u306e\u304b\u3089\u4f4e\u3044\u3082\u306e\u3078\u9806\u306b\u306b\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u5206\u985e \u6f14\u7b97\u5b50 \u30a4\u30f3\u30c7\u30c3\u30af\u30b9 [] , []? \u5358\u9805\u6f14\u7b97\u5b50 + , &+ , - , &- , ! , ~ , * , ** \u6307\u6570 ** , &** \u4e57\u9664\u6cd5 * , &* , / , // , % \u52a0\u6e1b\u6cd5 + , &+ , - , &- \u30d3\u30c3\u30c8\u30b7\u30d5\u30c8 << , >> \u30d3\u30c3\u30c8 AND & \u30d3\u30c3\u30c8 OR/XOR | , ^ \u7b49\u4fa1\u6027 == , != , =~ , !~ , === \u6bd4\u8f03 < , <= , > , >= , <=> \u8ad6\u7406 AND && \u8ad6\u7406 OR || \u7bc4\u56f2 (Range) .. , ... \u6761\u4ef6\u5206\u5c90 ?: \u4ee3\u5165 = , []= , += , &+= , -= , &-= , *= , &*= , /= , //= , %= , |= , &= , ^= , **= , <<= , >>= , ||= , &&= \u6f14\u7b97\u5b50\u306e\u4e00\u89a7 \u7b97\u8853\u6f14\u7b97\u5b50 \u5358\u9805\u6f14\u7b97\u5b50 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b + \u6b63\u306e\u6570\u306b\u3059\u308b +1 yes &+ \u6b63\u306e\u6570\u306b\u3059\u308b (\u30aa\u30fc\u30d0\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) &+1 yes - \u8ca0\u306e\u6570\u306b\u3059\u308b -1 yes &- \u8ca0\u306e\u6570\u306b\u3059\u308b (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) &-1 yes \u4e57\u9664\u6cd5 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b ** \u6307\u6570 1 ** 2 yes &** \u6307\u6570 (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) 1 &** 2 yes * \u4e57\u6cd5 1 * 2 yes &* \u4e57\u6cd5 (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) 1 &* 2 yes / \u9664\u6cd5 1 / 2 yes // \u6574\u6570\u306b\u4e38\u3081\u3089\u308c\u308b\u9664\u6cd5 1 // 2 yes % \u4f59\u308a 1 % 2 yes \u52a0\u6e1b\u6cd5 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b + \u52a0\u6cd5 1 + 2 yes &+ \u52a0\u6cd5 (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) 1 &+ 2 yes - \u6e1b\u6cd5 1 - 2 yes &- \u6e1b\u6cd5 (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) 1 &- 2 yes \u305d\u306e\u4ed6\u306e\u5358\u9805\u6f14\u7b97\u5b50 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b ! \u8ad6\u7406\u53cd\u8ee2 !true no ~ \u30d3\u30c3\u30c8\u53cd\u8ee2 ~1 yes \u30d3\u30c3\u30c8\u30b9\u30d5\u30c8 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b << \u5de6\u30b7\u30d5\u30c8\u3001\u3082\u3057\u304f\u306f\u8ffd\u8a18 1 << 2 , STDOUT << \"foo\" yes >> \u53f3\u30b7\u30d5\u30c8 1 >> 2 yes \u30d3\u30c3\u30c8\u6f14\u7b97 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b & \u30d3\u30c3\u30c8 AND 1 & 2 yes | \u30d3\u30c3\u30c8 OR 1 | 2 yes ^ \u30d3\u30c3\u30c8 XOR 1 ^ 2 yes \u7b49\u4fa1\u6027 \u57fa\u672c\u3068\u306a\u308b\u7b49\u4fa1\u6027\u306e\u691c\u67fb\u306e\u65b9\u6cd5\u3068\u3057\u3066\u6b21\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 == : \u30aa\u30da\u30e9\u30f3\u30c9\u306e\u5024\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b =~ : \u6700\u521d\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u304c2\u756a\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u5024\u304c\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3059\u308b\u304b\u3069\u3046\u304b === : case \u7b49\u4fa1\u6027 \u306b\u3088\u3063\u3066\u5de6\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u304c\u53f3\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306b\u30de\u30c3\u30c1\u3059\u308b\u304b\u3069\u3046\u304b\u3002\u3053\u306e\u6f14\u7b97\u5b50\u306f case ... when \u306e\u6761\u4ef6\u5206\u5c90\u3067\u3082\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u6700\u521d\u306e2\u3064\u306b\u95a2\u3057\u3066\u306f\u7d50\u679c\u3092\u53cd\u8ee2\u3055\u305b\u305f\u3082\u306e\u3082\u5b58\u5728\u3057\u307e\u3059 ( != \u3068 !~ )\u3002 a != b \u306f !(a == b) \u3068\u540c\u3058\u3060\u3068\u8003\u3048\u3089\u308c\u3066\u3001 a !~ b \u306f !(a =~ b) \u3068\u540c\u3058\u3060\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002 \u3082\u3061\u308d\u3093\u3001\u3053\u308c\u3089\u306e\u6f14\u7b97\u5b50\u3092\u72ec\u81ea\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u7b49\u4fa1\u3067\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u7b49\u4fa1\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3088\u308a\u3082\u9ad8\u901f\u306a\u5834\u5408\u306b\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6539\u5584\u3059\u308b\u306e\u306b\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b == \u7b49\u4fa1\u6027\u306e\u691c\u67fb 1 == 2 yes != \u975e\u7b49\u4fa1\u6027\u306e\u691c\u67fb 1 != 2 yes =~ \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u691c\u67fb \"foo\" =~ /fo/ yes !~ \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u306a\u3044\u3053\u3068\u306e\u691c\u67fb \"foo\" !~ /fo/ yes === case \u7b49\u4fa1\u6027 /foo/ === \"foo\" yes \u6bd4\u8f03 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b < \u3088\u308a\u5c0f\u3055\u3044 1 < 2 yes <= \u3088\u308a\u5c0f\u3055\u3044\u304b\u7b49\u3057\u3044 (\u4ee5\u4e0b) 1 <= 2 yes > \u3088\u308a\u5927\u304d\u3044 1 > 2 yes >= \u3088\u308a\u5927\u304d\u3044\u304b\u7b49\u3057\u3044 (\u4ee5\u4e0a) 1 >= 2 yes <=> \u6bd4\u8f03 1 <=> 2 yes \u8ad6\u7406\u6f14\u7b97\u5b50 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b && \u8ad6\u7406 AND true && false no || \u8ad6\u7406 OR true || false no \u7bc4\u56f2 (Range) Range \u30ea\u30c6\u30e9\u30eb\u306b\u7bc4\u56f2\u6f14\u7b97\u5b50\u306f\u4f7f\u308f\u308c\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b .. \u7bc4\u56f2 1..10 no ... \u672b\u5c3e\u3092\u542b\u307e\u306a\u3044\u7bc4\u56f2 1...10 no \u30b9\u30d7\u30e9\u30c3\u30c8 \u30b9\u30d7\u30e9\u30c3\u30c8\u6f14\u7b97\u5b50\u306f\u30bf\u30d7\u30eb\u3092\u5f15\u6570\u306b\u5c55\u958b\u3059\u308b\u3068\u304d\u306b\u306e\u307f\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u306f \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u30bf\u30d7\u30eb \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b * \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b *foo no ** \u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b **foo no \u6761\u4ef6\u5206\u5c90 \u6761\u4ef6\u5206\u5c90\u3092\u3059\u308b\u6f14\u7b97\u5b50 ( ? : ) \u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u5185\u90e8\u7684\u306b\u306f if \u5f0f\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b ? : \u6761\u4ef6\u5206\u5c90 a == b ?c : d no \u4ee3\u5165 \u4ee3\u5165\u6f14\u7b97\u5b50 = \u306f2\u756a\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u5024\u3092\u6700\u521d\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u793a\u3059\u5148\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\u6700\u521d\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306f\u5909\u6570 (\u3053\u306e\u5834\u5408\u306f\u518d\u5b9a\u7fa9\u3067\u304d\u307e\u305b\u3093) \u3082\u3057\u304f\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057 (\u3053\u306e\u5834\u5408\u306f\u518d\u5b9a\u7fa9\u3067\u304d\u307e\u3059) \u306e\u3069\u3061\u3089\u304b\u306b\u306a\u308a\u307e\u3059\u3002 \u8a73\u7d30\u306f \u4ee3\u5165 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b = \u5909\u6570\u3078\u306e\u4ee3\u5165 a = 1 no = \u547c\u3073\u51fa\u3057\u4ee3\u5165 a.b = 1 yes []= \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u306e\u4ee3\u5165 a[0] = 1 yes \u8907\u5408\u4ee3\u5165 \u4ee3\u5165 = \u306f\u6f14\u7b97\u5b50\u3068\u4ee3\u5165\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3082\u306e\u306e\u57fa\u790e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4e00\u822c\u7684\u306a\u5f62\u306f a <op>= b \u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u308c\u3092 a = a <op> b \u306b\u5909\u63db\u3057\u307e\u3059\u3002 \u4f8b\u5916\u3068\u3057\u3066\u3001\u8ad6\u7406\u6f14\u7b97\u5b50\u306b\u5bfe\u3059\u308b\u8907\u5408\u4ee3\u5165\u306f\u6b21\u306e\u3088\u3046\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 a ||= b \u306f a || (a = b) \u3068\u5909\u63db\u3055\u308c\u308b\u3002 a &&= b \u306f a && (a = b) \u3068\u5909\u63db\u3055\u308c\u308b\u3002 \u305d\u306e\u4ed6\u306b\u3001\u3053\u308c\u307e\u3067\u306e\u4f8b\u306e a \u304c\u30a4\u30f3\u30c7\u30af\u30c3\u30b9\u6307\u5b9a\u306e\u4ee3\u5165 ( [] ) \u306e\u5834\u5408\u3082\u3001nil \u3092\u53d7\u3051\u5165\u308c\u308b\u3082\u306e\u306b\u5909\u63db\u3055\u308c\u307e\u3059 (\u53f3\u5074\u3067\u306f []? \u304c\u4f7f\u308f\u308c\u307e\u3059)\u3002 a[i] ||= b \u306f a[i] = (a[i]? || b) \u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 a[i] &&= b \u306f a[i] = (a[i]? && b) \u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u5909\u63db\u3067\u306f\u30ec\u30b7\u30fc\u30d0 ( a ) \u304c\u5909\u6570\u3067\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u547c\u3073\u51fa\u3057\u3060\u3063\u305f\u5834\u5408\u3082\u540c\u69d8\u306e\u610f\u5473\u306e\u5f62\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u304c\u3001\u5b9f\u88c5\u306f\u5c11\u3057\u8907\u96d1\u306b\u306a\u308a(\u4e00\u6642\u7684\u306a\u5909\u6570\u3092\u5229\u7528\u3057\u307e\u3059)\u3001\u307e\u305f a= \u304c\u547c\u3073\u51fa\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30ec\u30b7\u30fc\u30d0\u306f\u5909\u6570\u3082\u3057\u304f\u306f\u547c\u3073\u51fa\u3057\u4ee5\u5916\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b += \u52a0\u6cd5 \u8907\u5408 \u4ee3\u5165 i += 1 no &+= \u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u8d77\u3053\u308b\u52a0\u6cd5\u306e \u8907\u5408 \u4ee3\u5165 i &+= 1 no -= \u6e1b\u6cd5 \u8907\u5408 \u4ee3\u5165 i -= 1 no &-= \u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u8d77\u3053\u308b\u6e1b\u6cd5 \u8907\u5408 \u4ee3\u5165 i &-= 1 no *= \u4e57\u6cd5 \u8907\u5408 \u4ee3\u5165 i *= 1 no &*= \u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u8d77\u3053\u308b \u8907\u5408 \u4ee3\u5165 i &*= 1 no /= \u9664\u6cd5 \u8907\u5408 \u4ee3\u5165 i /= 1 no //= \u6574\u6570\u306b\u4e38\u3081\u3089\u308c\u308b\u9664\u6cd5\u306e \u8907\u5408 \u4ee3\u5165 i //= 1 no %= \u4f59\u308a\u306e \u8907\u5408 \u4ee3\u5165 i %= 1 yes |= \u30d3\u30c3\u30c8 OR \u8907\u5408 \u4ee3\u5165 i |= 1 no &= \u30d3\u30c3\u30c8 AND \u8907\u5408 \u4ee3\u5165 i &= 1 no ^= \u30d3\u30c3\u30c8 XOR \u8907\u5408 \u4ee3\u5165 i ^= 1 no **= \u6307\u6570\u306e \u8907\u5408 \u4ee3\u5165 i **= 1 no <<= \u5de6\u30b7\u30d5\u30c8 \u8907\u5408 \u4ee3\u5165 i <<= 1 no >>= \u53f3\u30b7\u30d5\u30c8 \u8907\u5408 \u4ee3\u5165 i >>= 1 no ||= \u8ad6\u7406 OR \u8907\u5408 \u4ee3\u5165 i ||= true no &&= \u8ad6\u7406 AND \u8907\u5408 \u4ee3\u5165 i &&= true no \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b5 \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b5\u306f\u914d\u5217\u306e\u8981\u7d20\u3084\u30cf\u30c3\u30b7\u30e5\u306e\u30a8\u30f3\u30c8\u30ea\u306a\u3069\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3082\u3057\u304f\u306f\u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u4f7f\u3044\u307e\u3059\u3002nil \u3092\u53d7\u3051\u5165\u308c\u308b\u3082\u306e []? \u306f\u3082\u3057\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c\u5b58\u5728\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306b nil \u3092\u8fd4\u3059\u3082\u306e\u3067\u3059\u3002nil \u3092\u53d7\u3051\u5165\u308c\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u5834\u5408\u306b\u306f\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3057\u307e\u3059\u3002 \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u901a\u5e38\u3067\u306f KeyError \u304b IndexError \u3092\u30a8\u30e9\u30fc\u3068\u3057\u3066\u751f\u3058\u3055\u305b\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b [] \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b5 ary[i] yes []? nil \u3092\u53d7\u3051\u5165\u308c\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b5 ary[i]? yes","title":"\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/operators.html#_1","text":"Crystal \u306b\u306f\u5358\u9805\u30012\u9805\u30013\u9805\u306e\u6f14\u7b97\u5b50\u304c\u3042\u308a\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u306f\u5b9f\u969b\u306b\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3068\u3057\u3066\u30d1\u30fc\u30b9\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070 a + b \u306f\u610f\u5473\u7684\u306b\u306f a.+(b) ( a \u3092\u30ec\u30b7\u30fc\u30d0\u306b\u3001 b \u3092\u5f15\u6570\u306b\u3057\u3066 + \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059) \u3068\u540c\u3058\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u6f14\u7b97\u5b50\u306e\u69cb\u6587\u306b\u95a2\u3057\u3066\u306f\u3044\u304f\u3064\u304b\u7279\u5225\u306a\u898f\u5247\u304c\u3042\u308a\u307e\u3059\u3002 \u30ec\u30b7\u30fc\u30d0\u3068\u30e1\u30bd\u30c3\u30c9\u540d (\u3064\u307e\u308a \u6f14\u7b97\u5b50\u540d ) \u306e\u9593\u306b\u7f6e\u304f\u30c9\u30c3\u30c8 ( . ) \u306f\u7701\u7565\u3067\u304d\u307e\u3059\u3002 \u9023\u7d9a\u3057\u305f\u6f14\u7b97\u5b50\u306e\u547c\u3073\u51fa\u3057\u306f \u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d \u306b\u5fdc\u3058\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u9069\u5207\u306b\u4e26\u3079\u66ff\u3048\u3089\u308c\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u3067\u3001 1 * 2 + 3 * 4 \u306f\u901a\u5e38\u306e\u30de\u30c3\u30c1\u898f\u5247\u306b\u5f93\u3063\u3066 (1 * 2) + (2 * 3) \u306e\u3088\u3046\u306b\u30d1\u30fc\u30b9\u3055\u308c\u307e\u3059\u3002 \u901a\u5e38\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u306f\u5c0f\u6587\u5b57\u304c\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304b\u3089\u306f\u3058\u307e\u308a\u307e\u3059\u304c\u3001\u6f14\u7b97\u5b50\u306e\u540d\u524d\u306f\u7279\u5225\u306a\u8a18\u53f7\u306e\u307f\u304b\u3089\u306a\u308a\u307e\u3059\u3002\u5c0f\u6587\u5b57\u3084\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304b\u3089\u306f\u3058\u307e\u3089\u306a\u3044\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u6f14\u7b97\u5b50\u3067\u3059\u3002 \u6709\u52b9\u306a\u6f14\u7b97\u5b50\u540d\u306f\u8a18\u53f7\u306e\u307f\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u8a31\u53ef\u3059\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4e2d\u306e\u30db\u30ef\u30a4\u30c8\u30ea\u30b9\u30c8\u306b\u3042\u308b\u3082\u306e\u306b\u9650\u3089\u308c ( \u6f14\u7b97\u5b50\u306e\u4e00\u89a7 \u3092\u53c2\u7167) \u3001\u3053\u308c\u3089\u306e\u540d\u524d\u306f\u6f14\u7b97\u5b50\u3068\u3057\u3066\u6271\u308f\u308c\u512a\u5148\u9806\u4f4d\u3092\u6301\u3061\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u306f\u901a\u5e38\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3067\u304d\u3066\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u6570\u5b66\u306e\u5f0f\u306e\u6f14\u7b97\u5b50\u306a\u3069\u3044\u304f\u3064\u3082\u306e\u5b9f\u88c5\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/operators.html#_2","text":"\u307b\u3068\u3093\u3069\u306e\u6f14\u7b97\u5b50\u306f\u901a\u5e38\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u307e\u3059\u3002 \u3042\u308b\u6f14\u7b97\u5b50\u306b\u5bfe\u3057\u3066\u3069\u306e\u3088\u3046\u306a\u610f\u5473\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u6df7\u4e71\u3059\u308b\u3088\u3046\u306a\u76f4\u611f\u7684\u3067\u306a\u3044\u30b3\u30fc\u30c9\u306b\u306a\u308b\u3053\u3068\u3092\u907f\u3051\u308b\u305f\u3081\u3001\u6f14\u7b97\u5b50\u306e\u4e00\u822c\u7684\u306a\u610f\u5473\u306b\u8fd1\u3044\u3082\u306e\u306b\u3059\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002 \u3044\u304f\u3064\u304b\u306e\u5c11\u6570\u306e\u6f14\u7b97\u5b50\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u76f4\u63a5\u5b9f\u88c5\u3055\u308c\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u518d\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u8ad6\u7406\u53cd\u8ee2\u6f14\u7b97\u5b50 ! \u3084\u3001\u4ee3\u5165\u6f14\u7b97\u5b50 = \u3001 ||= \u306e\u3088\u3046\u306a \u8907\u5408\u4ee3\u5165\u6f14\u7b97\u5b50 \u3001\u305d\u3057\u3066 \u7bc4\u56f2\u6f14\u7b97\u5b50 \u306a\u3069\u304c\u305d\u308c\u306b\u5f53\u3066\u306f\u307e\u308a\u307e\u3059\u3002\u30e1\u30bd\u30c3\u30c9\u304c\u518d\u5b9a\u7fa9\u53ef\u80fd\u304b\u3069\u3046\u304b\u306f\u3001\u4e0b\u306b\u3042\u308b\u6f14\u7b97\u5b50\u306e\u4e00\u89a7\u306e \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b \u306e\u9805\u76ee\u3067\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u6f14\u7b97\u5b50\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9"},{"location":"syntax_and_semantics/operators.html#_3","text":"\u5358\u9805\u6f14\u7b97\u5b50\u306f\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u8a18\u6cd5\u3068\u3057\u3066\u66f8\u304b\u308c\u30011\u3064\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u53d6\u308b\u3082\u306e\u3067\u3059\u3002 \u305d\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u306e\u5b9f\u88c5\u306f\u5f15\u6570\u3092\u53d6\u3089\u305a self \u306b\u5bfe\u3057\u3066\u4f5c\u7528\u3057\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u306f2\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8868\u3059 Vector2 \u306b\u3001\u5358\u9805\u6f14\u7b97\u5b50\u306e - \u3092\u30d9\u30af\u30c8\u30eb\u306e\u53cd\u8ee2\u3055\u305b\u308b\u3082\u306e\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u305f\u3082\u306e\u3067\u3059\u3002 struct Vector2 getter x , y def initialize ( @x : Int32 , @y : Int32 ) end # \u5358\u9805\u6f14\u7b97\u5b50\u3002`self` \u3092\u53cd\u8ee2\u3055\u305b\u305f\u30d9\u30af\u30c8\u30eb\u3092\u8fd4\u3059\u3002 def - : self Vector2 . new ( - x , - y ) end end v1 = Vector2 . new ( 1 , 2 ) - v1 # => Vector2(@x=-1, @y=-2)","title":"\u5358\u9805\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/operators.html#2","text":"2\u9805\u306e\u6f14\u7b97\u5b50\u306f2\u3064\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u53d6\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u306e\u5b9f\u88c5\u3067\u306f\u3061\u3087\u3046\u30691\u3064\u306e\u5f15\u6570\u3092\u53d6\u308a\u3001\u305d\u308c\u304c2\u756a\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u30021\u3064\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306f self \u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u306f2\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8868\u3059 Vector2 \u306b\u30012\u9805\u6f14\u7b97\u5b50 + \u30922\u3064\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3082\u306e\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u305f\u3082\u306e\u3067\u3059\u3002 struct Vector2 getter x , y def initialize ( @x : Int32 , @y : Int32 ) end # 2\u9805\u6f14\u7b97\u5b50\u3002`self`\u3068**other**\u3092\u8db3\u3057\u5408\u308f\u305b\u305f\u3082\u306e\u3092\u8fd4\u3059\u3002 def + ( other : self ) : self Vector2 . new ( x + other . x , y + other . y ) end end v1 = Vector2 . new ( 1 , 2 ) v2 = Vector2 . new ( 3 , 4 ) v1 + v2 # => Vector2(@x=4, @y=6) \u6163\u4f8b\u7684\u306b\u30012\u9805\u6f14\u7b97\u5b50\u306e\u623b\u308a\u5024\u306e\u65b9\u306f1\u3064\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9 (\u30ec\u30b7\u30fc\u30d0) \u3068\u540c\u3058\u3082\u306e\u306b\u3057\u307e\u3059\u3002\u3064\u307e\u308a typeof(a <op> b) == typeof(a) \u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u305d\u3046\u3067\u306a\u3044\u3068\u4ee3\u5165\u6f14\u7b97\u5b50 ( a <op>= b ) \u306e\u5834\u5408\u306b\u610f\u56f3\u305b\u305a a \u306e\u578b\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3067\u3059\u304c\u3001\u59a5\u5f53\u306a\u4f8b\u5916\u3082\u4e2d\u306b\u306f\u5b58\u5728\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u5272\u308a\u7b97\u3092\u3059\u308b\u6f14\u7b97\u5b50 / \u306f\u6574\u6570\u578b\u306b\u5bfe\u3057\u3066\u3082\u5e38\u306b Float64 \u3092\u8fd4\u3057\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u9664\u7b97\u306e\u7d50\u679c\u306f\u6574\u6570\u306e\u7bc4\u56f2\u306b\u306a\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u304b\u3089\u3067\u3059\u3002","title":"2\u9805\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/operators.html#3","text":"\u6761\u4ef6\u5206\u5c90\u3092\u3059\u308b\u6f14\u7b97\u5b50 ( ? : ) \u304c\u552f\u4e00\u306e3\u9805\u6f14\u7b97\u5b50\u3067\u3059\u3002\u3053\u308c\u306f\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u30d1\u30fc\u30b9\u3055\u308c\u305a\u3001\u610f\u5473\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u5185\u90e8\u7684\u306b\u3053\u308c\u3092 if \u5f0f\u306b\u5909\u63db\u3057\u307e\u3059\u3002","title":"3\u9805\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/operators.html#_4","text":"\u6b21\u306e\u8868\u306f\u512a\u5148\u9806\u4f4d\u306e\u9ad8\u3044\u3082\u306e\u304b\u3089\u4f4e\u3044\u3082\u306e\u3078\u9806\u306b\u306b\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u5206\u985e \u6f14\u7b97\u5b50 \u30a4\u30f3\u30c7\u30c3\u30af\u30b9 [] , []? \u5358\u9805\u6f14\u7b97\u5b50 + , &+ , - , &- , ! , ~ , * , ** \u6307\u6570 ** , &** \u4e57\u9664\u6cd5 * , &* , / , // , % \u52a0\u6e1b\u6cd5 + , &+ , - , &- \u30d3\u30c3\u30c8\u30b7\u30d5\u30c8 << , >> \u30d3\u30c3\u30c8 AND & \u30d3\u30c3\u30c8 OR/XOR | , ^ \u7b49\u4fa1\u6027 == , != , =~ , !~ , === \u6bd4\u8f03 < , <= , > , >= , <=> \u8ad6\u7406 AND && \u8ad6\u7406 OR || \u7bc4\u56f2 (Range) .. , ... \u6761\u4ef6\u5206\u5c90 ?: \u4ee3\u5165 = , []= , += , &+= , -= , &-= , *= , &*= , /= , //= , %= , |= , &= , ^= , **= , <<= , >>= , ||= , &&=","title":"\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d"},{"location":"syntax_and_semantics/operators.html#_5","text":"","title":"\u6f14\u7b97\u5b50\u306e\u4e00\u89a7"},{"location":"syntax_and_semantics/operators.html#_6","text":"","title":"\u7b97\u8853\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/operators.html#_7","text":"\u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b + \u6b63\u306e\u6570\u306b\u3059\u308b +1 yes &+ \u6b63\u306e\u6570\u306b\u3059\u308b (\u30aa\u30fc\u30d0\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) &+1 yes - \u8ca0\u306e\u6570\u306b\u3059\u308b -1 yes &- \u8ca0\u306e\u6570\u306b\u3059\u308b (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) &-1 yes","title":"\u5358\u9805\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/operators.html#_8","text":"\u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b ** \u6307\u6570 1 ** 2 yes &** \u6307\u6570 (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) 1 &** 2 yes * \u4e57\u6cd5 1 * 2 yes &* \u4e57\u6cd5 (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) 1 &* 2 yes / \u9664\u6cd5 1 / 2 yes // \u6574\u6570\u306b\u4e38\u3081\u3089\u308c\u308b\u9664\u6cd5 1 // 2 yes % \u4f59\u308a 1 % 2 yes","title":"\u4e57\u9664\u6cd5"},{"location":"syntax_and_semantics/operators.html#_9","text":"\u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b + \u52a0\u6cd5 1 + 2 yes &+ \u52a0\u6cd5 (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) 1 &+ 2 yes - \u6e1b\u6cd5 1 - 2 yes &- \u6e1b\u6cd5 (\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b) 1 &- 2 yes","title":"\u52a0\u6e1b\u6cd5"},{"location":"syntax_and_semantics/operators.html#_10","text":"\u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b ! \u8ad6\u7406\u53cd\u8ee2 !true no ~ \u30d3\u30c3\u30c8\u53cd\u8ee2 ~1 yes","title":"\u305d\u306e\u4ed6\u306e\u5358\u9805\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/operators.html#_11","text":"\u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b << \u5de6\u30b7\u30d5\u30c8\u3001\u3082\u3057\u304f\u306f\u8ffd\u8a18 1 << 2 , STDOUT << \"foo\" yes >> \u53f3\u30b7\u30d5\u30c8 1 >> 2 yes","title":"\u30d3\u30c3\u30c8\u30b9\u30d5\u30c8"},{"location":"syntax_and_semantics/operators.html#_12","text":"\u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b & \u30d3\u30c3\u30c8 AND 1 & 2 yes | \u30d3\u30c3\u30c8 OR 1 | 2 yes ^ \u30d3\u30c3\u30c8 XOR 1 ^ 2 yes","title":"\u30d3\u30c3\u30c8\u6f14\u7b97"},{"location":"syntax_and_semantics/operators.html#_13","text":"\u57fa\u672c\u3068\u306a\u308b\u7b49\u4fa1\u6027\u306e\u691c\u67fb\u306e\u65b9\u6cd5\u3068\u3057\u3066\u6b21\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 == : \u30aa\u30da\u30e9\u30f3\u30c9\u306e\u5024\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b =~ : \u6700\u521d\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u304c2\u756a\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u5024\u304c\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3059\u308b\u304b\u3069\u3046\u304b === : case \u7b49\u4fa1\u6027 \u306b\u3088\u3063\u3066\u5de6\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u304c\u53f3\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306b\u30de\u30c3\u30c1\u3059\u308b\u304b\u3069\u3046\u304b\u3002\u3053\u306e\u6f14\u7b97\u5b50\u306f case ... when \u306e\u6761\u4ef6\u5206\u5c90\u3067\u3082\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u6700\u521d\u306e2\u3064\u306b\u95a2\u3057\u3066\u306f\u7d50\u679c\u3092\u53cd\u8ee2\u3055\u305b\u305f\u3082\u306e\u3082\u5b58\u5728\u3057\u307e\u3059 ( != \u3068 !~ )\u3002 a != b \u306f !(a == b) \u3068\u540c\u3058\u3060\u3068\u8003\u3048\u3089\u308c\u3066\u3001 a !~ b \u306f !(a =~ b) \u3068\u540c\u3058\u3060\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002 \u3082\u3061\u308d\u3093\u3001\u3053\u308c\u3089\u306e\u6f14\u7b97\u5b50\u3092\u72ec\u81ea\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u7b49\u4fa1\u3067\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u7b49\u4fa1\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3088\u308a\u3082\u9ad8\u901f\u306a\u5834\u5408\u306b\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6539\u5584\u3059\u308b\u306e\u306b\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b == \u7b49\u4fa1\u6027\u306e\u691c\u67fb 1 == 2 yes != \u975e\u7b49\u4fa1\u6027\u306e\u691c\u67fb 1 != 2 yes =~ \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u691c\u67fb \"foo\" =~ /fo/ yes !~ \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u306a\u3044\u3053\u3068\u306e\u691c\u67fb \"foo\" !~ /fo/ yes === case \u7b49\u4fa1\u6027 /foo/ === \"foo\" yes","title":"\u7b49\u4fa1\u6027"},{"location":"syntax_and_semantics/operators.html#_14","text":"\u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b < \u3088\u308a\u5c0f\u3055\u3044 1 < 2 yes <= \u3088\u308a\u5c0f\u3055\u3044\u304b\u7b49\u3057\u3044 (\u4ee5\u4e0b) 1 <= 2 yes > \u3088\u308a\u5927\u304d\u3044 1 > 2 yes >= \u3088\u308a\u5927\u304d\u3044\u304b\u7b49\u3057\u3044 (\u4ee5\u4e0a) 1 >= 2 yes <=> \u6bd4\u8f03 1 <=> 2 yes","title":"\u6bd4\u8f03"},{"location":"syntax_and_semantics/operators.html#_15","text":"\u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b && \u8ad6\u7406 AND true && false no || \u8ad6\u7406 OR true || false no","title":"\u8ad6\u7406\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/operators.html#range","text":"Range \u30ea\u30c6\u30e9\u30eb\u306b\u7bc4\u56f2\u6f14\u7b97\u5b50\u306f\u4f7f\u308f\u308c\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b .. \u7bc4\u56f2 1..10 no ... \u672b\u5c3e\u3092\u542b\u307e\u306a\u3044\u7bc4\u56f2 1...10 no","title":"\u7bc4\u56f2 (Range)"},{"location":"syntax_and_semantics/operators.html#_16","text":"\u30b9\u30d7\u30e9\u30c3\u30c8\u6f14\u7b97\u5b50\u306f\u30bf\u30d7\u30eb\u3092\u5f15\u6570\u306b\u5c55\u958b\u3059\u308b\u3068\u304d\u306b\u306e\u307f\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u306f \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u30bf\u30d7\u30eb \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b * \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b *foo no ** \u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b **foo no","title":"\u30b9\u30d7\u30e9\u30c3\u30c8"},{"location":"syntax_and_semantics/operators.html#_17","text":"\u6761\u4ef6\u5206\u5c90\u3092\u3059\u308b\u6f14\u7b97\u5b50 ( ? : ) \u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u5185\u90e8\u7684\u306b\u306f if \u5f0f\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b ? : \u6761\u4ef6\u5206\u5c90 a == b ?c : d no","title":"\u6761\u4ef6\u5206\u5c90"},{"location":"syntax_and_semantics/operators.html#_18","text":"\u4ee3\u5165\u6f14\u7b97\u5b50 = \u306f2\u756a\u76ee\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u5024\u3092\u6700\u521d\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u793a\u3059\u5148\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\u6700\u521d\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306f\u5909\u6570 (\u3053\u306e\u5834\u5408\u306f\u518d\u5b9a\u7fa9\u3067\u304d\u307e\u305b\u3093) \u3082\u3057\u304f\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057 (\u3053\u306e\u5834\u5408\u306f\u518d\u5b9a\u7fa9\u3067\u304d\u307e\u3059) \u306e\u3069\u3061\u3089\u304b\u306b\u306a\u308a\u307e\u3059\u3002 \u8a73\u7d30\u306f \u4ee3\u5165 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b = \u5909\u6570\u3078\u306e\u4ee3\u5165 a = 1 no = \u547c\u3073\u51fa\u3057\u4ee3\u5165 a.b = 1 yes []= \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u306e\u4ee3\u5165 a[0] = 1 yes","title":"\u4ee3\u5165"},{"location":"syntax_and_semantics/operators.html#_19","text":"\u4ee3\u5165 = \u306f\u6f14\u7b97\u5b50\u3068\u4ee3\u5165\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3082\u306e\u306e\u57fa\u790e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4e00\u822c\u7684\u306a\u5f62\u306f a <op>= b \u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u308c\u3092 a = a <op> b \u306b\u5909\u63db\u3057\u307e\u3059\u3002 \u4f8b\u5916\u3068\u3057\u3066\u3001\u8ad6\u7406\u6f14\u7b97\u5b50\u306b\u5bfe\u3059\u308b\u8907\u5408\u4ee3\u5165\u306f\u6b21\u306e\u3088\u3046\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 a ||= b \u306f a || (a = b) \u3068\u5909\u63db\u3055\u308c\u308b\u3002 a &&= b \u306f a && (a = b) \u3068\u5909\u63db\u3055\u308c\u308b\u3002 \u305d\u306e\u4ed6\u306b\u3001\u3053\u308c\u307e\u3067\u306e\u4f8b\u306e a \u304c\u30a4\u30f3\u30c7\u30af\u30c3\u30b9\u6307\u5b9a\u306e\u4ee3\u5165 ( [] ) \u306e\u5834\u5408\u3082\u3001nil \u3092\u53d7\u3051\u5165\u308c\u308b\u3082\u306e\u306b\u5909\u63db\u3055\u308c\u307e\u3059 (\u53f3\u5074\u3067\u306f []? \u304c\u4f7f\u308f\u308c\u307e\u3059)\u3002 a[i] ||= b \u306f a[i] = (a[i]? || b) \u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 a[i] &&= b \u306f a[i] = (a[i]? && b) \u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u5909\u63db\u3067\u306f\u30ec\u30b7\u30fc\u30d0 ( a ) \u304c\u5909\u6570\u3067\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u547c\u3073\u51fa\u3057\u3060\u3063\u305f\u5834\u5408\u3082\u540c\u69d8\u306e\u610f\u5473\u306e\u5f62\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u304c\u3001\u5b9f\u88c5\u306f\u5c11\u3057\u8907\u96d1\u306b\u306a\u308a(\u4e00\u6642\u7684\u306a\u5909\u6570\u3092\u5229\u7528\u3057\u307e\u3059)\u3001\u307e\u305f a= \u304c\u547c\u3073\u51fa\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30ec\u30b7\u30fc\u30d0\u306f\u5909\u6570\u3082\u3057\u304f\u306f\u547c\u3073\u51fa\u3057\u4ee5\u5916\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b += \u52a0\u6cd5 \u8907\u5408 \u4ee3\u5165 i += 1 no &+= \u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u8d77\u3053\u308b\u52a0\u6cd5\u306e \u8907\u5408 \u4ee3\u5165 i &+= 1 no -= \u6e1b\u6cd5 \u8907\u5408 \u4ee3\u5165 i -= 1 no &-= \u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u8d77\u3053\u308b\u6e1b\u6cd5 \u8907\u5408 \u4ee3\u5165 i &-= 1 no *= \u4e57\u6cd5 \u8907\u5408 \u4ee3\u5165 i *= 1 no &*= \u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u8d77\u3053\u308b \u8907\u5408 \u4ee3\u5165 i &*= 1 no /= \u9664\u6cd5 \u8907\u5408 \u4ee3\u5165 i /= 1 no //= \u6574\u6570\u306b\u4e38\u3081\u3089\u308c\u308b\u9664\u6cd5\u306e \u8907\u5408 \u4ee3\u5165 i //= 1 no %= \u4f59\u308a\u306e \u8907\u5408 \u4ee3\u5165 i %= 1 yes |= \u30d3\u30c3\u30c8 OR \u8907\u5408 \u4ee3\u5165 i |= 1 no &= \u30d3\u30c3\u30c8 AND \u8907\u5408 \u4ee3\u5165 i &= 1 no ^= \u30d3\u30c3\u30c8 XOR \u8907\u5408 \u4ee3\u5165 i ^= 1 no **= \u6307\u6570\u306e \u8907\u5408 \u4ee3\u5165 i **= 1 no <<= \u5de6\u30b7\u30d5\u30c8 \u8907\u5408 \u4ee3\u5165 i <<= 1 no >>= \u53f3\u30b7\u30d5\u30c8 \u8907\u5408 \u4ee3\u5165 i >>= 1 no ||= \u8ad6\u7406 OR \u8907\u5408 \u4ee3\u5165 i ||= true no &&= \u8ad6\u7406 AND \u8907\u5408 \u4ee3\u5165 i &&= true no","title":"\u8907\u5408\u4ee3\u5165"},{"location":"syntax_and_semantics/operators.html#_20","text":"\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b5\u306f\u914d\u5217\u306e\u8981\u7d20\u3084\u30cf\u30c3\u30b7\u30e5\u306e\u30a8\u30f3\u30c8\u30ea\u306a\u3069\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3082\u3057\u304f\u306f\u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u4f7f\u3044\u307e\u3059\u3002nil \u3092\u53d7\u3051\u5165\u308c\u308b\u3082\u306e []? \u306f\u3082\u3057\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c\u5b58\u5728\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306b nil \u3092\u8fd4\u3059\u3082\u306e\u3067\u3059\u3002nil \u3092\u53d7\u3051\u5165\u308c\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u5834\u5408\u306b\u306f\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3057\u307e\u3059\u3002 \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u901a\u5e38\u3067\u306f KeyError \u304b IndexError \u3092\u30a8\u30e9\u30fc\u3068\u3057\u3066\u751f\u3058\u3055\u305b\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u540d \u8aac\u660e \u4f8b \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u53ef\u80fd\u304b [] \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b5 ary[i] yes []? nil \u3092\u53d7\u3051\u5165\u308c\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b5 ary[i]? yes","title":"\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b5"},{"location":"syntax_and_semantics/or.html","text":"|| - \u8ad6\u7406\u548c (\u307e\u305f\u306f) \u6f14\u7b97\u5b50 || (\u307e\u305f\u306f) \u6f14\u7b97\u5b50\u306f\u307e\u305a\u5de6\u8fba\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u305d\u308c\u304c \u507d\u3068\u306a\u308b \u5024\u3067\u3042\u308c\u3070\u3001\u53f3\u8fba\u3092\u8a55\u4fa1\u3057\u3001\u305d\u308c\u3092\u7d50\u679c\u306e\u5024\u3068\u3057\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u7d50\u679c\u306f\u5de6\u8fba\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u578b\u306f\u4e21\u8fba\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b\uff09\u3067\u3059\u3002 \u3057\u305f\u304c\u3063\u3066 || \u306f if \u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306e\u3088\u3046\u306b\u8003\u3048\u3089\u308c\u307e\u3059\u3002 some_exp1 || some_exp2 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 tmp = some_exp1 if tmp tmp else some_exp2 end","title":"||"},{"location":"syntax_and_semantics/or.html#-","text":"|| (\u307e\u305f\u306f) \u6f14\u7b97\u5b50\u306f\u307e\u305a\u5de6\u8fba\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u305d\u308c\u304c \u507d\u3068\u306a\u308b \u5024\u3067\u3042\u308c\u3070\u3001\u53f3\u8fba\u3092\u8a55\u4fa1\u3057\u3001\u305d\u308c\u3092\u7d50\u679c\u306e\u5024\u3068\u3057\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u7d50\u679c\u306f\u5de6\u8fba\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u578b\u306f\u4e21\u8fba\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b\uff09\u3067\u3059\u3002 \u3057\u305f\u304c\u3063\u3066 || \u306f if \u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306e\u3088\u3046\u306b\u8003\u3048\u3089\u308c\u307e\u3059\u3002 some_exp1 || some_exp2 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 tmp = some_exp1 if tmp tmp else some_exp2 end","title":"|| - \u8ad6\u7406\u548c (\u307e\u305f\u306f) \u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/overloading.html","text":"\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 \u3053\u308c\u304b\u3089\u3001\u4f55\u6b73\u3092\u3068\u308b\u304b\u3092\u6570\u5024\u3067\u6307\u5b9a\u3067\u304d\u308b become_older \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 class Person getter :age def initialize ( @name : String , @age : Int = 0 ) end def become_older @age += 1 end def become_older ( years ) @age += years end end john = Person . new \"John\" john . age # => 0 john . become_older john . age # => 1 john . become_older 5 john . age # => 6 \u4e0a\u8a18\u304b\u3089\u308f\u304b\u308b\u3088\u3046\u306b\u3001\u540c\u3058\u540d\u524d\u3067\u5f15\u6570\u306e\u6570\u304c\u7570\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3001\u305d\u308c\u305e\u308c\u304c\u5225\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\u3053\u308c\u3092 \u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 \u3068\u547c\u3073\u307e\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u304c\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3055\u308c\u308b\u305f\u3081\u306e\u6761\u4ef6\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002 \u5f15\u6570\u306e\u6570 \u5f15\u6570\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u578b\u5236\u7d04 \u5fc5\u8981\u306a\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306e\u540d\u524d\u304c\u7570\u306a\u308b \u30d6\u30ed\u30c3\u30af \u3092\u53d7\u3051\u53d6\u308c\u308b\u304b\u3069\u3046\u304b \u4f8b\u3048\u3070\u3001 become_older \u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e4\u3064\u306e\u7570\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Person @age = 0 # 1\u6b73\u5e74\u3092\u3068\u308b def become_older @age += 1 end # \u53d7\u3051\u53d6\u3063\u305f\u6570\u5024\u3060\u3051\u5e74\u3092\u3068\u308b def become_older ( years : Int32 ) @age += years end # \u300cString \u578b\u3067\u300d\u53d7\u3051\u53d6\u3063\u305f\u6570\u5024\u3060\u3051\u5e74\u3092\u3068\u308b def become_older ( years : String ) @age += years . to_i end # \u73fe\u5728\u306e\u5e74\u9f62\u3092 yield \u3057\u3066 # \u305d\u306e\u30d6\u30ed\u30c3\u30af\u306e\u623b\u308a\u5024\u306b\u3057\u305f\u304c\u3063\u3066\u5e74\u3092\u3068\u308b def become_older @age += yield @age end end person = Person . new \"John\" person . become_older person . age # => 1 person . become_older 5 person . age # => 6 person . become_older \"12\" person . age # => 18 person . become_older do | current_age | current_age < 20 ? 10 : 30 end person . age # => 28 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f yield \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u691c\u77e5\u3057\u3066\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u30d6\u30ed\u30c3\u30af\u3092\u3068\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3053\u3068\u3092\u5224\u65ad\u3057\u3066\u3044\u307e\u3059\u3002\u3088\u308a\u660e\u793a\u7684\u306b\u305d\u306e\u3053\u3068\u3092\u793a\u3057\u305f\u3044\u5834\u5408\u306f\u3001 &block \u3068\u3044\u3046\u5f15\u6570\u3092\u30c0\u30df\u30fc\u3068\u3057\u3066\u5f15\u6570\u306e\u6700\u5f8c\u306b\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 class Person @age = 0 def become_older ( & block ) @age += yield @age end end \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u304b\u306b\u95a2\u308f\u3089\u305a\u306b\u3001\u5fc5\u305a &block \u3092\u5f15\u6570\u306b\u4f34\u306a\u3063\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u3082\u3057\u540c\u3058\u6570\u306e\u5f15\u6570\u3092\u3068\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u6700\u3082\u5236\u7d04\u306e\u5c11\u306a\u3044\u3082\u306e\u304c\u6700\u5f8c\u306b\u304f\u308b (\u512a\u5148\u5ea6\u306e\u4f4e\u3044) \u3088\u3046\u306b\u30bd\u30fc\u30c8\u3092\u884c\u3044\u307e\u3059\u3002 class Person @age = 0 # \u6700\u521d\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b def become_older ( age ) @age += age end # \u300cString\u300d\u306e\u6307\u5b9a\u306f\u5236\u7d04\u306a\u3057\u306e\u3082\u306e\u3088\u308a\u5236\u7d04\u7684\u3067\u3042\u308b\u305f\u3081\u3001 # \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u6761\u4ef6\u306b\u5408\u81f4\u3057\u3066\u3044\u305f\u5834\u5408\u306f\u3001 # \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6700\u521d\u306e\u3082\u306e\u3088\u308a\u5148\u306b\u4e26\u3079\u308b (\u512a\u5148\u3055\u305b\u308b) def become_older ( age : String ) @age += age . to_i end end person = Person . new \"John\" # \u6700\u521d\u306e\u5b9a\u7fa9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b person . become_older 20 # 2\u756a\u76ee\u306e\u5b9a\u7fa9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b person . become_older \"12\" \u3057\u304b\u3057\u306a\u304c\u3089\u3001\u5fc5\u305a\u3057\u3082\u9806\u5e8f\u95a2\u4fc2\u304c\u5168\u9806\u5e8f\u3067\u3042\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5e38\u306b\u6b63\u3057\u304f\u9806\u5e8f\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u3044\u3064\u3082\u5236\u7d04\u306e\u5c11\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u6700\u5f8c\u306b\u66f8\u304f\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002","title":"\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9"},{"location":"syntax_and_semantics/overloading.html#_1","text":"\u3053\u308c\u304b\u3089\u3001\u4f55\u6b73\u3092\u3068\u308b\u304b\u3092\u6570\u5024\u3067\u6307\u5b9a\u3067\u304d\u308b become_older \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 class Person getter :age def initialize ( @name : String , @age : Int = 0 ) end def become_older @age += 1 end def become_older ( years ) @age += years end end john = Person . new \"John\" john . age # => 0 john . become_older john . age # => 1 john . become_older 5 john . age # => 6 \u4e0a\u8a18\u304b\u3089\u308f\u304b\u308b\u3088\u3046\u306b\u3001\u540c\u3058\u540d\u524d\u3067\u5f15\u6570\u306e\u6570\u304c\u7570\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3001\u305d\u308c\u305e\u308c\u304c\u5225\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\u3053\u308c\u3092 \u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 \u3068\u547c\u3073\u307e\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u304c\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3055\u308c\u308b\u305f\u3081\u306e\u6761\u4ef6\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002 \u5f15\u6570\u306e\u6570 \u5f15\u6570\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u578b\u5236\u7d04 \u5fc5\u8981\u306a\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306e\u540d\u524d\u304c\u7570\u306a\u308b \u30d6\u30ed\u30c3\u30af \u3092\u53d7\u3051\u53d6\u308c\u308b\u304b\u3069\u3046\u304b \u4f8b\u3048\u3070\u3001 become_older \u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e4\u3064\u306e\u7570\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Person @age = 0 # 1\u6b73\u5e74\u3092\u3068\u308b def become_older @age += 1 end # \u53d7\u3051\u53d6\u3063\u305f\u6570\u5024\u3060\u3051\u5e74\u3092\u3068\u308b def become_older ( years : Int32 ) @age += years end # \u300cString \u578b\u3067\u300d\u53d7\u3051\u53d6\u3063\u305f\u6570\u5024\u3060\u3051\u5e74\u3092\u3068\u308b def become_older ( years : String ) @age += years . to_i end # \u73fe\u5728\u306e\u5e74\u9f62\u3092 yield \u3057\u3066 # \u305d\u306e\u30d6\u30ed\u30c3\u30af\u306e\u623b\u308a\u5024\u306b\u3057\u305f\u304c\u3063\u3066\u5e74\u3092\u3068\u308b def become_older @age += yield @age end end person = Person . new \"John\" person . become_older person . age # => 1 person . become_older 5 person . age # => 6 person . become_older \"12\" person . age # => 18 person . become_older do | current_age | current_age < 20 ? 10 : 30 end person . age # => 28 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f yield \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u691c\u77e5\u3057\u3066\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u30d6\u30ed\u30c3\u30af\u3092\u3068\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3053\u3068\u3092\u5224\u65ad\u3057\u3066\u3044\u307e\u3059\u3002\u3088\u308a\u660e\u793a\u7684\u306b\u305d\u306e\u3053\u3068\u3092\u793a\u3057\u305f\u3044\u5834\u5408\u306f\u3001 &block \u3068\u3044\u3046\u5f15\u6570\u3092\u30c0\u30df\u30fc\u3068\u3057\u3066\u5f15\u6570\u306e\u6700\u5f8c\u306b\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 class Person @age = 0 def become_older ( & block ) @age += yield @age end end \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u304b\u306b\u95a2\u308f\u3089\u305a\u306b\u3001\u5fc5\u305a &block \u3092\u5f15\u6570\u306b\u4f34\u306a\u3063\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u3082\u3057\u540c\u3058\u6570\u306e\u5f15\u6570\u3092\u3068\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u6700\u3082\u5236\u7d04\u306e\u5c11\u306a\u3044\u3082\u306e\u304c\u6700\u5f8c\u306b\u304f\u308b (\u512a\u5148\u5ea6\u306e\u4f4e\u3044) \u3088\u3046\u306b\u30bd\u30fc\u30c8\u3092\u884c\u3044\u307e\u3059\u3002 class Person @age = 0 # \u6700\u521d\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b def become_older ( age ) @age += age end # \u300cString\u300d\u306e\u6307\u5b9a\u306f\u5236\u7d04\u306a\u3057\u306e\u3082\u306e\u3088\u308a\u5236\u7d04\u7684\u3067\u3042\u308b\u305f\u3081\u3001 # \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u6761\u4ef6\u306b\u5408\u81f4\u3057\u3066\u3044\u305f\u5834\u5408\u306f\u3001 # \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6700\u521d\u306e\u3082\u306e\u3088\u308a\u5148\u306b\u4e26\u3079\u308b (\u512a\u5148\u3055\u305b\u308b) def become_older ( age : String ) @age += age . to_i end end person = Person . new \"John\" # \u6700\u521d\u306e\u5b9a\u7fa9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b person . become_older 20 # 2\u756a\u76ee\u306e\u5b9a\u7fa9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b person . become_older \"12\" \u3057\u304b\u3057\u306a\u304c\u3089\u3001\u5fc5\u305a\u3057\u3082\u9806\u5e8f\u95a2\u4fc2\u304c\u5168\u9806\u5e8f\u3067\u3042\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5e38\u306b\u6b63\u3057\u304f\u9806\u5e8f\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u3044\u3064\u3082\u5236\u7d04\u306e\u5c11\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u6700\u5f8c\u306b\u66f8\u304f\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002","title":"\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9"},{"location":"syntax_and_semantics/pointerof.html","text":"pointerof pointerof \u306f\u3001\u5909\u6570\u3084\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u683c\u7d0d\u5834\u6240\u3092\u793a\u3059 Pointer \u3092\u8fd4\u3057\u307e\u3059\u3002 \u5909\u6570\u306e\u4f8b: a = 1 ptr = pointerof ( a ) ptr . value = 2 a # => 2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u4f8b: class Point def initialize ( @x : Int32 , @y : Int32 ) end def x @x end def x_ptr pointerof ( @x ) end end point = Point . new 1 , 2 ptr = point . x_ptr ptr . value = 10 point . x # => 10 pointerof \u306f\u30dd\u30a4\u30f3\u30bf\u3092\u6271\u3046\u305f\u3081\u3001 \u5b89\u5168\u3067\u306a\u3044 \u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"pointerof"},{"location":"syntax_and_semantics/pointerof.html#pointerof","text":"pointerof \u306f\u3001\u5909\u6570\u3084\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u683c\u7d0d\u5834\u6240\u3092\u793a\u3059 Pointer \u3092\u8fd4\u3057\u307e\u3059\u3002 \u5909\u6570\u306e\u4f8b: a = 1 ptr = pointerof ( a ) ptr . value = 2 a # => 2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u4f8b: class Point def initialize ( @x : Int32 , @y : Int32 ) end def x @x end def x_ptr pointerof ( @x ) end end point = Point . new 1 , 2 ptr = point . x_ptr ptr . value = 10 point . x # => 10 pointerof \u306f\u30dd\u30a4\u30f3\u30bf\u3092\u6271\u3046\u305f\u3081\u3001 \u5b89\u5168\u3067\u306a\u3044 \u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"pointerof"},{"location":"syntax_and_semantics/proc_literal.html","text":"Proc \u30ea\u30c6\u30e9\u30eb \u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306f Proc \u30ea\u30c6\u30e9\u30eb \u3092\u5ba3\u8a00\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u306b \u6e21\u3059 \u3053\u3068\u3068\u7b49\u3057\u3044\u3067\u3059\u3002 def some_proc ( & block : Int32 -> Int32 ) block end x = 0 proc = -> ( i : Int32 ) { x += i } proc = some_proc ( & proc ) proc . call ( 1 ) # => 1 proc . call ( 10 ) # => 11 x # => 11 Proc \u30ea\u30c6\u30e9\u30eb \u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u65e2\u5b58\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089 Proc \u3092\u4f5c\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 def add ( x , y ) x + y end adder = -> add ( Int32 , Int32 ) adder . call ( 1 , 2 ) # => 3","title":"Proc \u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/proc_literal.html#proc","text":"\u6355\u6349\u3055\u308c\u305f\u30d6\u30ed\u30c3\u30af\u306f Proc \u30ea\u30c6\u30e9\u30eb \u3092\u5ba3\u8a00\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u306b \u6e21\u3059 \u3053\u3068\u3068\u7b49\u3057\u3044\u3067\u3059\u3002 def some_proc ( & block : Int32 -> Int32 ) block end x = 0 proc = -> ( i : Int32 ) { x += i } proc = some_proc ( & proc ) proc . call ( 1 ) # => 1 proc . call ( 10 ) # => 11 x # => 11 Proc \u30ea\u30c6\u30e9\u30eb \u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u65e2\u5b58\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089 Proc \u3092\u4f5c\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 def add ( x , y ) x + y end adder = -> add ( Int32 , Int32 ) adder . call ( 1 , 2 ) # => 3","title":"Proc \u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/requiring_files.html","text":"\u30d5\u30a1\u30a4\u30eb\u306e require \u5c0f\u3055\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3084\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7528\u9014\u306e\u30b3\u30fc\u30c9\u3067\u3042\u308c\u30701\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u3066\u3082 OK \u3067\u3059\u304c\u3001\u5927\u304d\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5834\u5408\u306f\u3001\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u3051\u308b\u3053\u3068\u3067\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u304c\u697d\u306b\u306a\u308a\u3001\u307e\u305f\u7406\u89e3\u3082\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5225\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u51e6\u7406\u3055\u305b\u305f\u3044\u3068\u304d\u306f require \"...\" \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u5f15\u6570\u306b\u306f1\u3064\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u3068\u308a\u3001\u305d\u306e\u66f8\u304d\u65b9\u306b\u3088\u3063\u3066\u69d8\u3005\u306a\u5f62\u5f0f\u3067\u5bfe\u8c61\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u304c\u4e00\u5ea6 require \u3055\u308c\u308b\u3068\u3001 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u306e\u7d76\u5bfe\u30d1\u30b9\u3092\u8a18\u61b6\u3057\u3001\u4ee5\u964d\u3067\u306f\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u8aad\u307f\u8fbc\u307e\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002 require \"filename\" \u3053\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u305f\u5834\u5408\u3001require \u30d1\u30b9\u306e\u4e2d\u3067 \"filename\" \u306b\u5bfe\u5fdc\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u63a2\u3057\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e require \u30d1\u30b9\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u3068\u3042\u308f\u305b\u3066\u63d0\u4f9b\u3055\u308c\u308b\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea (UNIX \u30b7\u30a7\u30eb\u3067\u8a00\u3046 pwd ) \u304b\u3089\u76f8\u5bfe\u7684\u306b\u6307\u5b9a\u3055\u308c\u308b lib \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u63a2\u7d22\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3053\u308c\u3089\u306e\u307f\u3067\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u306e\u63a2\u7d22\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \"filename.cr\" \u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c require \u30d1\u30b9\u3067\u898b\u3064\u304b\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \"filename\" \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b \"filename.cr\" \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \"filename\" \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306e \"src\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e2d\u306b \"filename.cr\" \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \"filename\" \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306e \"src\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e2d\u306b \"filename\" \u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308a\u3001\u305d\u306e\u4e2d\u306b \"filename.cr\" \u304c\u3042\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 2\u756a\u76ee\u306e\u898f\u5247\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u304d\u306b\u3001 - project - src - file - sub1.cr - sub2.cr - file.cr (requires \"./file/*\") \u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3082\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002 - project - src - file - file.cr (requires \"./*\") - sub1.cr - sub2.cr \u3053\u3061\u3089\u306e\u65b9\u304c\u826f\u3044\u3068\u611f\u3058\u308b\u4eba\u3082\u3044\u308b\u3067\u3057\u3087\u3046\u3002 3\u756a\u76ee\u306e\u898f\u5247\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5178\u578b\u7684\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306b\u30de\u30c3\u30c1\u3057\u3066\u3044\u308b\u305f\u3081\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u3002 - project - lib - foo - src - foo.cr - bar - src - bar.cr - src - project.cr - spec - project_spec.cr \u3064\u307e\u308a\u3001\u5404 \"lib/{project}\" \u304c src \u3084 spec \u3001 README.md \u304c\u3042\u308b\u3088\u3046\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u3068\u304d project.cr \u306b require \"foo\" \u3092\u52a0\u3048\u3066 crystal src/project.cr \u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f foo \u3068\u3057\u3066 lib/foo/foo.cr \u3092\u767a\u898b\u3057\u307e\u3059\u3002 4\u756a\u76ee\u306e\u898f\u5247\u306f2\u756a\u76ee\u306e\u898f\u5247\u306b3\u756a\u76ee\u306e\u898f\u5247\u3092\u9069\u7528\u3057\u305f\u3082\u306e\u3067\u3059\u3002 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u5916\u306e\u5834\u6240\u304b\u3089\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5b9f\u884c\u3059\u308b\u3068 (\u4f8b\u3048\u3070 src \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u304b\u3089\u3001\u306a\u3069)\u3001 lib \u306f require \u30d1\u30b9\u306b\u8ffd\u52a0\u3055\u308c\u305a require \"foo\" \u306f\u3046\u307e\u304f\u89e3\u6c7a\u3067\u304d\u307e\u305b\u3093\u3002 require \"./filename\" \u3053\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u305f\u5834\u5408\u3001require \u3092\u5b9f\u884c\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u76f8\u5bfe\u7684\u306b \"filename\" \u306b\u5bfe\u5fdc\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u63a2\u3057\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u306e\u63a2\u7d22\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \"filename.cr\" \u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u76f8\u5bfe\u7684\u306a\u4f4d\u7f6e\u3067\u898b\u3064\u304b\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \"filename\" \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b \"filename.cr\" \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 spec/spec_helper.cr require \"../src/project\" \u305d\u306e\u4ed6\u306e\u5f62\u5f0f \u4e0a\u8a18\u3057\u305f\u3069\u3061\u3089\u306e\u30b1\u30fc\u30b9\u3067\u3082\u3001\u30cd\u30b9\u30c8\u3055\u308c\u305f\u5f62\u5f0f\u3067\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30c7\u30a4\u30ec\u30af\u30c8\u30ea\u3092\u63a2\u7d22\u3057\u307e\u3059\u3002 require \"foo/bar/baz\" \u306f require \u30d1\u30b9\u304b\u3089 \"foo/bar/baz.cr\" \u3084 \"foo/bar/baz/baz.cr\"\u3001 \"foo/src/bar/baz.cr\"\u3001 \"foo/src/bar/baz/baz.cr\" \u3092\u63a2\u3057\u307e\u3059\u3002 require \"./foo/bar/baz\" \u306f\u73fe\u5728\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u76f8\u5bfe\u7684\u306b \"foo/bar/baz.cr\" or \"foo/bar/baz/baz.cr\" \u3092\u63a2\u3057\u307e\u3059\u3002 \u307e\u305f\u3001 \"../\" \u3092\u4f7f\u3048\u3070\u73fe\u5728\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001 require \"../../foo/bar\" \u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u3059\u3079\u3066\u306e\u5834\u5408\u3067\u3001\u672b\u5c3e\u306b * \u3068 ** \u3068\u3044\u3046\u7279\u5225\u306a\u8a18\u53f7\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002 require \"foo/*\" \u306f \"foo\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e2d\u306e\u3059\u3079\u3066\u306e \".cr\" \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u304c\u3001\"foo\" \u4e2d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u3067\u306f\u8aad\u307f\u8fbc\u307f\u307e\u305b\u3093\u3002 require \"foo/**\" \u306f \"foo\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e2d\u306e\u3059\u3079\u3066\u306e \".cr\" \u30d5\u30a1\u30a4\u30eb\u306b\u304f\u308f\u3048\u3066\u3001\"foo\" \u4e2d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u518d\u5e30\u7684\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002","title":"\u30d5\u30a1\u30a4\u30eb\u306e require"},{"location":"syntax_and_semantics/requiring_files.html#require","text":"\u5c0f\u3055\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3084\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7528\u9014\u306e\u30b3\u30fc\u30c9\u3067\u3042\u308c\u30701\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u3066\u3082 OK \u3067\u3059\u304c\u3001\u5927\u304d\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5834\u5408\u306f\u3001\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u3051\u308b\u3053\u3068\u3067\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u304c\u697d\u306b\u306a\u308a\u3001\u307e\u305f\u7406\u89e3\u3082\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5225\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u51e6\u7406\u3055\u305b\u305f\u3044\u3068\u304d\u306f require \"...\" \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u5f15\u6570\u306b\u306f1\u3064\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u3068\u308a\u3001\u305d\u306e\u66f8\u304d\u65b9\u306b\u3088\u3063\u3066\u69d8\u3005\u306a\u5f62\u5f0f\u3067\u5bfe\u8c61\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u304c\u4e00\u5ea6 require \u3055\u308c\u308b\u3068\u3001 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u306e\u7d76\u5bfe\u30d1\u30b9\u3092\u8a18\u61b6\u3057\u3001\u4ee5\u964d\u3067\u306f\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u8aad\u307f\u8fbc\u307e\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002","title":"\u30d5\u30a1\u30a4\u30eb\u306e require"},{"location":"syntax_and_semantics/requiring_files.html#require-filename","text":"\u3053\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u305f\u5834\u5408\u3001require \u30d1\u30b9\u306e\u4e2d\u3067 \"filename\" \u306b\u5bfe\u5fdc\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u63a2\u3057\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e require \u30d1\u30b9\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u3068\u3042\u308f\u305b\u3066\u63d0\u4f9b\u3055\u308c\u308b\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea (UNIX \u30b7\u30a7\u30eb\u3067\u8a00\u3046 pwd ) \u304b\u3089\u76f8\u5bfe\u7684\u306b\u6307\u5b9a\u3055\u308c\u308b lib \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u63a2\u7d22\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3053\u308c\u3089\u306e\u307f\u3067\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u306e\u63a2\u7d22\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \"filename.cr\" \u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c require \u30d1\u30b9\u3067\u898b\u3064\u304b\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \"filename\" \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b \"filename.cr\" \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \"filename\" \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306e \"src\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e2d\u306b \"filename.cr\" \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \"filename\" \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306e \"src\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e2d\u306b \"filename\" \u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308a\u3001\u305d\u306e\u4e2d\u306b \"filename.cr\" \u304c\u3042\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 2\u756a\u76ee\u306e\u898f\u5247\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u304d\u306b\u3001 - project - src - file - sub1.cr - sub2.cr - file.cr (requires \"./file/*\") \u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3082\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002 - project - src - file - file.cr (requires \"./*\") - sub1.cr - sub2.cr \u3053\u3061\u3089\u306e\u65b9\u304c\u826f\u3044\u3068\u611f\u3058\u308b\u4eba\u3082\u3044\u308b\u3067\u3057\u3087\u3046\u3002 3\u756a\u76ee\u306e\u898f\u5247\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5178\u578b\u7684\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306b\u30de\u30c3\u30c1\u3057\u3066\u3044\u308b\u305f\u3081\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u3002 - project - lib - foo - src - foo.cr - bar - src - bar.cr - src - project.cr - spec - project_spec.cr \u3064\u307e\u308a\u3001\u5404 \"lib/{project}\" \u304c src \u3084 spec \u3001 README.md \u304c\u3042\u308b\u3088\u3046\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u3068\u304d project.cr \u306b require \"foo\" \u3092\u52a0\u3048\u3066 crystal src/project.cr \u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f foo \u3068\u3057\u3066 lib/foo/foo.cr \u3092\u767a\u898b\u3057\u307e\u3059\u3002 4\u756a\u76ee\u306e\u898f\u5247\u306f2\u756a\u76ee\u306e\u898f\u5247\u306b3\u756a\u76ee\u306e\u898f\u5247\u3092\u9069\u7528\u3057\u305f\u3082\u306e\u3067\u3059\u3002 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u5916\u306e\u5834\u6240\u304b\u3089\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5b9f\u884c\u3059\u308b\u3068 (\u4f8b\u3048\u3070 src \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u304b\u3089\u3001\u306a\u3069)\u3001 lib \u306f require \u30d1\u30b9\u306b\u8ffd\u52a0\u3055\u308c\u305a require \"foo\" \u306f\u3046\u307e\u304f\u89e3\u6c7a\u3067\u304d\u307e\u305b\u3093\u3002","title":"require \"filename\""},{"location":"syntax_and_semantics/requiring_files.html#require-filename_1","text":"\u3053\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u305f\u5834\u5408\u3001require \u3092\u5b9f\u884c\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u76f8\u5bfe\u7684\u306b \"filename\" \u306b\u5bfe\u5fdc\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u63a2\u3057\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u306e\u63a2\u7d22\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \"filename.cr\" \u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u76f8\u5bfe\u7684\u306a\u4f4d\u7f6e\u3067\u898b\u3064\u304b\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \"filename\" \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b \"filename.cr\" \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308c\u3070\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002 spec/spec_helper.cr require \"../src/project\"","title":"require \"./filename\""},{"location":"syntax_and_semantics/requiring_files.html#_1","text":"\u4e0a\u8a18\u3057\u305f\u3069\u3061\u3089\u306e\u30b1\u30fc\u30b9\u3067\u3082\u3001\u30cd\u30b9\u30c8\u3055\u308c\u305f\u5f62\u5f0f\u3067\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30c7\u30a4\u30ec\u30af\u30c8\u30ea\u3092\u63a2\u7d22\u3057\u307e\u3059\u3002 require \"foo/bar/baz\" \u306f require \u30d1\u30b9\u304b\u3089 \"foo/bar/baz.cr\" \u3084 \"foo/bar/baz/baz.cr\"\u3001 \"foo/src/bar/baz.cr\"\u3001 \"foo/src/bar/baz/baz.cr\" \u3092\u63a2\u3057\u307e\u3059\u3002 require \"./foo/bar/baz\" \u306f\u73fe\u5728\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u76f8\u5bfe\u7684\u306b \"foo/bar/baz.cr\" or \"foo/bar/baz/baz.cr\" \u3092\u63a2\u3057\u307e\u3059\u3002 \u307e\u305f\u3001 \"../\" \u3092\u4f7f\u3048\u3070\u73fe\u5728\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001 require \"../../foo/bar\" \u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u3059\u3079\u3066\u306e\u5834\u5408\u3067\u3001\u672b\u5c3e\u306b * \u3068 ** \u3068\u3044\u3046\u7279\u5225\u306a\u8a18\u53f7\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002 require \"foo/*\" \u306f \"foo\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e2d\u306e\u3059\u3079\u3066\u306e \".cr\" \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u304c\u3001\"foo\" \u4e2d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u3067\u306f\u8aad\u307f\u8fbc\u307f\u307e\u305b\u3093\u3002 require \"foo/**\" \u306f \"foo\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e2d\u306e\u3059\u3079\u3066\u306e \".cr\" \u30d5\u30a1\u30a4\u30eb\u306b\u304f\u308f\u3048\u3066\u3001\"foo\" \u4e2d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u518d\u5e30\u7684\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002","title":"\u305d\u306e\u4ed6\u306e\u5f62\u5f0f"},{"location":"syntax_and_semantics/responds_to.html","text":"responds_to? responds_to? \u3068\u3044\u3046\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u3042\u308b\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 a . responds_to? ( :abs ) # => true a . responds_to? ( :size ) # => false \u3053\u308c\u304c\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u7406\u7531\u306f\u3001 if var.responds_to?(...) \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u5f15\u6570\u306b\u30b7\u30f3\u30dc\u30eb\u30ea\u30c6\u30e9\u30eb\u306e\u307f\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u7279\u5225\u306a\u6271\u3044\u3092\u53d7\u3051\u308b\u304b\u3089\u3067\u3059\u3002","title":"responds_to?"},{"location":"syntax_and_semantics/responds_to.html#responds_to","text":"responds_to? \u3068\u3044\u3046\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u3042\u308b\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 a . responds_to? ( :abs ) # => true a . responds_to? ( :size ) # => false \u3053\u308c\u304c\u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u7406\u7531\u306f\u3001 if var.responds_to?(...) \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001\u5f15\u6570\u306b\u30b7\u30f3\u30dc\u30eb\u30ea\u30c6\u30e9\u30eb\u306e\u307f\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u7279\u5225\u306a\u6271\u3044\u3092\u53d7\u3051\u308b\u304b\u3089\u3067\u3059\u3002","title":"responds_to?"},{"location":"syntax_and_semantics/return_types.html","text":"\u623b\u308a\u5024\u306e\u578b \u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u578b\u63a8\u8ad6\u306b\u3088\u3063\u3066\u6c7a\u307e\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u4ee5\u4e0b\u306e2\u3064\u306e\u7406\u7531\u304b\u3089\u3001\u623b\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002 \u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u3059\u623b\u308a\u5024\u306e\u578b\u3092\u660e\u78ba\u306b\u3059\u308b \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30b3\u30e1\u30f3\u30c8\u306b\u8868\u793a\u3059\u308b \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def some_method : String \"hello\" end \u623b\u308a\u5024\u306e\u578b\u306f \u578b\u306e\u6587\u6cd5 \u306e\u8a18\u6cd5\u306b\u5f93\u3044\u307e\u3059\u3002 Nil \u623b\u308a\u5024\u306e\u578b\u306b Nil \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u660e\u793a\u7684\u306b nil \u3092\u8fd4\u3055\u306a\u304f\u3066\u3082 nil \u304c\u8fd4\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 def some_method : Nil 1 + 2 end some_method # => nil \u3053\u308c\u306f\u6b21\u306e2\u3064\u306e\u70b9\u3067\u6709\u7528\u3067\u3059\u3002 \u8ffd\u52a0\u3067\u672b\u5c3e\u306b nil \u3092\u7f6e\u3044\u3066\u623b\u308a\u5024\u3092\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082\u3001\u660e\u78ba\u306b nil \u3092\u8fd4\u305b\u308b \u623b\u308a\u5024\u306b\u610f\u5473\u304c\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3092\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8868\u793a\u3067\u304d\u308b \u3053\u306e\u3088\u3046\u306a\u306b\u3059\u308b\u3053\u3068\u306f\u901a\u5e38\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u526f\u4f5c\u7528\u304c\u3042\u308b\u3053\u3068\u3092\u4ec4\u3081\u304b\u3057\u3066\u3044\u307e\u3059 Void \u3092\u4f7f\u3063\u3066\u3082\u540c\u69d8\u306e\u7d50\u679c\u3092\u5f97\u3089\u308c\u307e\u3059\u304c\u3001 Void \u306f C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u5411\u3051\u306e\u578b\u306e\u305f\u3081\u3001 Nil \u3092\u4f7f\u3046\u65b9\u304c\u81ea\u7136\u3067\u3059\u3002 NoReturn \u3044\u304f\u3064\u304b\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u884c\u5143\u306b\u623b\u3063\u3066\u6765\u305a\u3001\u623b\u308a\u5024\u306e\u578b\u3092\u6301\u305f\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u3082\u306e\u306f NoReturn \u3068\u3044\u3046\u7279\u5225\u306a\u578b\u306b\u3088\u3063\u3066\u8868\u73fe\u308c\u307e\u3059\u3002 return \u3084 exit \u3001 raise \u3001 next \u3001\u305d\u3057\u3066 break \u3068\u3044\u3063\u305f\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u3053\u306e\u578b\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u5206\u89e3\u3059\u308b\u969b\u306b\u4fbf\u5229\u306a\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 string = STDIN . gets typeof ( string ) # => String? typeof ( raise \"Empty input\" ) # => NoReturn typeof ( string || raise \"Empty input\" ) # => String string \u304c Nil \u306e\u3068\u304d\u306f string || raise \u306e\u53f3\u8fba\u3092\u8a55\u4fa1\u3059\u308b\u3082\u306e\u3068\u3044\u3046\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u89e3\u91c8\u3057\u307e\u3059\u3002 typeof(raise \"Empty input\") \u306f\u5b9f\u884c\u3055\u308c\u305f\u3068\u3059\u308b\u3068\u8fd4\u3063\u3066\u3053\u306a\u3044\u305f\u3081\u3001 NoReturn \u578b\u3068\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u6700\u7d42\u7684\u306b String \u306e\u307f\u304c\u5f0f\u306e\u7d50\u679c\u306e\u578b\u3068\u3057\u3066\u6b8b\u308a\u307e\u3059\u3002 \u3069\u306e\u3088\u3046\u306b\u5206\u5c90\u3057\u3066\u3082 NoReturn \u306b\u306a\u308b\u5834\u5408\u306f\u3001\u7d50\u679c\u306e\u578b\u3082 NoReturn \u306b\u306a\u308a\u307e\u3059\u3002 NoReturn \u306f\u4ed6\u306e\u5168\u3066\u306e\u578b\u306b\u542b\u307e\u308c\u308b\u305f\u3081\u3001\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u4e2d\u306b\u306f\u73fe\u308c\u307e\u305b\u3093\u3002\u5b9f\u884c\u5143\u306b\u623b\u3063\u3066\u3053\u306a\u3044\u5834\u5408\u3060\u3051\u306b\u3053\u306e\u578b\u306f\u5229\u7528\u3055\u308c\u307e\u3059\u3002 NoReturn \u3092\u660e\u793a\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u3082\u3057\u304f\u306f\u95a2\u6570\u306e\u623b\u308a\u5024\u306e\u578b\u5236\u7d04\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u901a\u5e38\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u63a8\u8ad6\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u3002","title":"\u623b\u308a\u5024\u306e\u578b"},{"location":"syntax_and_semantics/return_types.html#_1","text":"\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306e\u578b\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u578b\u63a8\u8ad6\u306b\u3088\u3063\u3066\u6c7a\u307e\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u4ee5\u4e0b\u306e2\u3064\u306e\u7406\u7531\u304b\u3089\u3001\u623b\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002 \u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u3059\u623b\u308a\u5024\u306e\u578b\u3092\u660e\u78ba\u306b\u3059\u308b \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30b3\u30e1\u30f3\u30c8\u306b\u8868\u793a\u3059\u308b \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def some_method : String \"hello\" end \u623b\u308a\u5024\u306e\u578b\u306f \u578b\u306e\u6587\u6cd5 \u306e\u8a18\u6cd5\u306b\u5f93\u3044\u307e\u3059\u3002","title":"\u623b\u308a\u5024\u306e\u578b"},{"location":"syntax_and_semantics/return_types.html#nil","text":"\u623b\u308a\u5024\u306e\u578b\u306b Nil \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u660e\u793a\u7684\u306b nil \u3092\u8fd4\u3055\u306a\u304f\u3066\u3082 nil \u304c\u8fd4\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 def some_method : Nil 1 + 2 end some_method # => nil \u3053\u308c\u306f\u6b21\u306e2\u3064\u306e\u70b9\u3067\u6709\u7528\u3067\u3059\u3002 \u8ffd\u52a0\u3067\u672b\u5c3e\u306b nil \u3092\u7f6e\u3044\u3066\u623b\u308a\u5024\u3092\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082\u3001\u660e\u78ba\u306b nil \u3092\u8fd4\u305b\u308b \u623b\u308a\u5024\u306b\u610f\u5473\u304c\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3092\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8868\u793a\u3067\u304d\u308b \u3053\u306e\u3088\u3046\u306a\u306b\u3059\u308b\u3053\u3068\u306f\u901a\u5e38\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u526f\u4f5c\u7528\u304c\u3042\u308b\u3053\u3068\u3092\u4ec4\u3081\u304b\u3057\u3066\u3044\u307e\u3059 Void \u3092\u4f7f\u3063\u3066\u3082\u540c\u69d8\u306e\u7d50\u679c\u3092\u5f97\u3089\u308c\u307e\u3059\u304c\u3001 Void \u306f C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u5411\u3051\u306e\u578b\u306e\u305f\u3081\u3001 Nil \u3092\u4f7f\u3046\u65b9\u304c\u81ea\u7136\u3067\u3059\u3002","title":"Nil"},{"location":"syntax_and_semantics/return_types.html#noreturn","text":"\u3044\u304f\u3064\u304b\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u884c\u5143\u306b\u623b\u3063\u3066\u6765\u305a\u3001\u623b\u308a\u5024\u306e\u578b\u3092\u6301\u305f\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u3082\u306e\u306f NoReturn \u3068\u3044\u3046\u7279\u5225\u306a\u578b\u306b\u3088\u3063\u3066\u8868\u73fe\u308c\u307e\u3059\u3002 return \u3084 exit \u3001 raise \u3001 next \u3001\u305d\u3057\u3066 break \u3068\u3044\u3063\u305f\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u3053\u306e\u578b\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u5206\u89e3\u3059\u308b\u969b\u306b\u4fbf\u5229\u306a\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 string = STDIN . gets typeof ( string ) # => String? typeof ( raise \"Empty input\" ) # => NoReturn typeof ( string || raise \"Empty input\" ) # => String string \u304c Nil \u306e\u3068\u304d\u306f string || raise \u306e\u53f3\u8fba\u3092\u8a55\u4fa1\u3059\u308b\u3082\u306e\u3068\u3044\u3046\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u89e3\u91c8\u3057\u307e\u3059\u3002 typeof(raise \"Empty input\") \u306f\u5b9f\u884c\u3055\u308c\u305f\u3068\u3059\u308b\u3068\u8fd4\u3063\u3066\u3053\u306a\u3044\u305f\u3081\u3001 NoReturn \u578b\u3068\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u6700\u7d42\u7684\u306b String \u306e\u307f\u304c\u5f0f\u306e\u7d50\u679c\u306e\u578b\u3068\u3057\u3066\u6b8b\u308a\u307e\u3059\u3002 \u3069\u306e\u3088\u3046\u306b\u5206\u5c90\u3057\u3066\u3082 NoReturn \u306b\u306a\u308b\u5834\u5408\u306f\u3001\u7d50\u679c\u306e\u578b\u3082 NoReturn \u306b\u306a\u308a\u307e\u3059\u3002 NoReturn \u306f\u4ed6\u306e\u5168\u3066\u306e\u578b\u306b\u542b\u307e\u308c\u308b\u305f\u3081\u3001\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u4e2d\u306b\u306f\u73fe\u308c\u307e\u305b\u3093\u3002\u5b9f\u884c\u5143\u306b\u623b\u3063\u3066\u3053\u306a\u3044\u5834\u5408\u3060\u3051\u306b\u3053\u306e\u578b\u306f\u5229\u7528\u3055\u308c\u307e\u3059\u3002 NoReturn \u3092\u660e\u793a\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u3082\u3057\u304f\u306f\u95a2\u6570\u306e\u623b\u308a\u5024\u306e\u578b\u5236\u7d04\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u901a\u5e38\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u63a8\u8ad6\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u3002","title":"NoReturn"},{"location":"syntax_and_semantics/sizeof.html","text":"sizeof sizeof \u306f\u4e0e\u3048\u3089\u308c\u305f\u578b\u306e\u30d0\u30a4\u30c8\u6570\u3092 Int32 \u3067\u8fd4\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 sizeof ( Int32 ) # => 4 sizeof ( Int64 ) # => 8 Reference \u578b\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u30b5\u30a4\u30ba\u306f\u30dd\u30a4\u30f3\u30bf\u306e\u30b5\u30a4\u30ba\u3068\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\u3002 # 64\u30d3\u30c3\u30c8\u51e6\u7406\u7cfb\u306e\u5834\u5408 sizeof ( Pointer ( Int32 )) # => 8 sizeof ( String ) # => 8 \u3053\u306e\u7406\u7531\u306f\u3001Reference \u306e\u30e1\u30e2\u30ea\u306f\u30d2\u30fc\u30d7\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3001\u6e21\u3055\u308c\u308b\u306e\u306f\u305d\u3053\u3092\u6307\u3059\u30dd\u30a4\u30f3\u30bf\u306b\u306a\u308b\u305f\u3081\u3067\u3059\u3002 \u5b9f\u969b\u306e\u30af\u30e9\u30b9\u306e\u30b5\u30a4\u30ba\u3092\u5f97\u308b\u306b\u306f\u3001 instance_sizeof \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 sizeof \u306e\u5f15\u6570\u306f \u578b \u306a\u306e\u3067 typeof \u3068\u3042\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002 a = 1 sizeof ( typeof ( a )) # => 4","title":"sizeof"},{"location":"syntax_and_semantics/sizeof.html#sizeof","text":"sizeof \u306f\u4e0e\u3048\u3089\u308c\u305f\u578b\u306e\u30d0\u30a4\u30c8\u6570\u3092 Int32 \u3067\u8fd4\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 sizeof ( Int32 ) # => 4 sizeof ( Int64 ) # => 8 Reference \u578b\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u30b5\u30a4\u30ba\u306f\u30dd\u30a4\u30f3\u30bf\u306e\u30b5\u30a4\u30ba\u3068\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\u3002 # 64\u30d3\u30c3\u30c8\u51e6\u7406\u7cfb\u306e\u5834\u5408 sizeof ( Pointer ( Int32 )) # => 8 sizeof ( String ) # => 8 \u3053\u306e\u7406\u7531\u306f\u3001Reference \u306e\u30e1\u30e2\u30ea\u306f\u30d2\u30fc\u30d7\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3001\u6e21\u3055\u308c\u308b\u306e\u306f\u305d\u3053\u3092\u6307\u3059\u30dd\u30a4\u30f3\u30bf\u306b\u306a\u308b\u305f\u3081\u3067\u3059\u3002 \u5b9f\u969b\u306e\u30af\u30e9\u30b9\u306e\u30b5\u30a4\u30ba\u3092\u5f97\u308b\u306b\u306f\u3001 instance_sizeof \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 sizeof \u306e\u5f15\u6570\u306f \u578b \u306a\u306e\u3067 typeof \u3068\u3042\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002 a = 1 sizeof ( typeof ( a )) # => 4","title":"sizeof"},{"location":"syntax_and_semantics/splats_and_tuples.html","text":"\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u30bf\u30d7\u30eb \u30e1\u30bd\u30c3\u30c9\u306f \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b ( * ) \u3092\u4f7f\u3046\u3053\u3068\u3067\u8907\u6570\u306e\u5f15\u6570\u3092\u4e00\u5ea6\u306b\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4eee\u5f15\u6570\u306e\u4e2d\u30671\u56de\u3060\u3051\u3057\u304b\u6307\u5b9a\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u9806\u5e8f\u3092\u554f\u308f\u305a\u306b\u3069\u306e\u5834\u6240\u306b\u3067\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002 def sum ( * elements ) total = 0 elements . each do | value | total += value end total end sum 1 , 2 , 3 # => 6 sum 1 , 2 , 3 , 4.5 # => 10.5 \u6e21\u3055\u308c\u305f\u5f15\u6570\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067 Tuple \u3068\u3057\u3066\u6271\u3048\u307e\u3059\u3002 # elements \u306f Tuple(Int32, Int32, Int32) \u306b\u306a\u308b sum 1 , 2 , 3 # elements \u306f Tuple(Int32, Int32, Int32, Float64) \u306b\u306a\u308b sum 1 , 2 , 3 , 4.5 \u4eee\u5f15\u6570\u3067\u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u3042\u3068\u306e\u5f15\u6570\u306f\u3001\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u306e\u307f\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def sum ( * elements , initial = 0 ) total = initial elements . each do | value | total += value end total end sum 1 , 2 , 3 # => 6 sum 1 , 2 , 3 , initial : 10 # => 16 \u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u3042\u3068\u306e\u5f15\u6570\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u7121\u3044\u5834\u5408\u306f\u3001\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u5f15\u6570\u3068\u306a\u308a\u307e\u3059\u3002 def sum ( * elements , initial ) total = initial elements . each do | value | total += value end total end sum 1 , 2 , 3 # Error, missing argument: initial sum 1 , 2 , 3 , initial : 10 # => 16 2\u3064\u306e\u5f15\u6570\u306e\u540d\u524d\u306e\u307f\u304c\u9055\u3046\u30e1\u30bd\u30c3\u30c9\u306f\u304a\u305f\u304c\u3044\u306b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 def foo ( * elements , x ) 1 end def foo ( * elements , y ) 2 end foo x : \"something\" # => 1 foo y : \"something\" # => 2 \u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306f\u540d\u524d\u3092\u3064\u3051\u306a\u3044\u3053\u3068\u3082\u3067\u304d\u3066\u3001\u305d\u306e\u5834\u5408\u306f\u305d\u308c\u4ee5\u964d\u306e\u5f15\u6570\u306f\u300c\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u300d\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 def foo ( x , y , * , z ) end foo 1 , 2 , 3 # Error, wrong number of arguments (given 3, expected 2) foo 1 , 2 # Error, missing argument: z foo 1 , 2 , z : 3 # OK \u30bf\u30d7\u30eb\u306e\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b \u30bf\u30d7\u30eb \u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3067 * \u3092\u4f7f\u3046\u3053\u3068\u3067\u5f15\u6570\u306b\u5c55\u958b\u3055\u308c\u3066\u6e21\u3055\u308c\u307e\u3059\u3002 def foo ( x , y ) x + y end tuple = { 1 , 2 } foo * tuple # => 3 \u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb \u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b ( ** ) \u306f\u305d\u306e\u4ed6\u306e\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3057\u306a\u304b\u3063\u305f\u3059\u3079\u3066\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u307e\u3059\u3002\u3053\u306e\u5f15\u6570\u306e\u578b\u306f NamedTuple \u3068\u306a\u308a\u307e\u3059\u3002 def foo ( x , ** other ) # NamedTuple \u3068\u3057\u3066\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u305f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u8fd4\u3059 other end foo 1 , y : 2 , z : 3 # => {y: 2, z: 3} foo y : 2 , x : 1 , z : 3 # => {y: 2, z: 3} \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8 NamedTuple \u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3067 ** \u3092\u4f7f\u3046\u3053\u3068\u3067\u5f15\u6570\u306b\u5c55\u958b\u3055\u308c\u3066\u6e21\u3055\u308c\u307e\u3059\u3002 def foo ( x , y ) x - y end tuple = { y : 3 , x : 10 } foo ** tuple # => 7","title":"\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u30bf\u30d7\u30eb"},{"location":"syntax_and_semantics/splats_and_tuples.html#_1","text":"\u30e1\u30bd\u30c3\u30c9\u306f \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b ( * ) \u3092\u4f7f\u3046\u3053\u3068\u3067\u8907\u6570\u306e\u5f15\u6570\u3092\u4e00\u5ea6\u306b\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4eee\u5f15\u6570\u306e\u4e2d\u30671\u56de\u3060\u3051\u3057\u304b\u6307\u5b9a\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u9806\u5e8f\u3092\u554f\u308f\u305a\u306b\u3069\u306e\u5834\u6240\u306b\u3067\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002 def sum ( * elements ) total = 0 elements . each do | value | total += value end total end sum 1 , 2 , 3 # => 6 sum 1 , 2 , 3 , 4.5 # => 10.5 \u6e21\u3055\u308c\u305f\u5f15\u6570\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067 Tuple \u3068\u3057\u3066\u6271\u3048\u307e\u3059\u3002 # elements \u306f Tuple(Int32, Int32, Int32) \u306b\u306a\u308b sum 1 , 2 , 3 # elements \u306f Tuple(Int32, Int32, Int32, Float64) \u306b\u306a\u308b sum 1 , 2 , 3 , 4.5 \u4eee\u5f15\u6570\u3067\u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u3042\u3068\u306e\u5f15\u6570\u306f\u3001\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u306e\u307f\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def sum ( * elements , initial = 0 ) total = initial elements . each do | value | total += value end total end sum 1 , 2 , 3 # => 6 sum 1 , 2 , 3 , initial : 10 # => 16 \u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306e\u3042\u3068\u306e\u5f15\u6570\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u7121\u3044\u5834\u5408\u306f\u3001\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u5f15\u6570\u3068\u306a\u308a\u307e\u3059\u3002 def sum ( * elements , initial ) total = initial elements . each do | value | total += value end total end sum 1 , 2 , 3 # Error, missing argument: initial sum 1 , 2 , 3 , initial : 10 # => 16 2\u3064\u306e\u5f15\u6570\u306e\u540d\u524d\u306e\u307f\u304c\u9055\u3046\u30e1\u30bd\u30c3\u30c9\u306f\u304a\u305f\u304c\u3044\u306b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 def foo ( * elements , x ) 1 end def foo ( * elements , y ) 2 end foo x : \"something\" # => 1 foo y : \"something\" # => 2 \u30b9\u30d7\u30e9\u30c3\u30c8\u6307\u5b9a\u3055\u308c\u305f\u5f15\u6570\u306f\u540d\u524d\u3092\u3064\u3051\u306a\u3044\u3053\u3068\u3082\u3067\u304d\u3066\u3001\u305d\u306e\u5834\u5408\u306f\u305d\u308c\u4ee5\u964d\u306e\u5f15\u6570\u306f\u300c\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u300d\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 def foo ( x , y , * , z ) end foo 1 , 2 , 3 # Error, wrong number of arguments (given 3, expected 2) foo 1 , 2 # Error, missing argument: z foo 1 , 2 , z : 3 # OK","title":"\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u30bf\u30d7\u30eb"},{"location":"syntax_and_semantics/splats_and_tuples.html#_2","text":"\u30bf\u30d7\u30eb \u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3067 * \u3092\u4f7f\u3046\u3053\u3068\u3067\u5f15\u6570\u306b\u5c55\u958b\u3055\u308c\u3066\u6e21\u3055\u308c\u307e\u3059\u3002 def foo ( x , y ) x + y end tuple = { 1 , 2 } foo * tuple # => 3","title":"\u30bf\u30d7\u30eb\u306e\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b"},{"location":"syntax_and_semantics/splats_and_tuples.html#_3","text":"\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b ( ** ) \u306f\u305d\u306e\u4ed6\u306e\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3057\u306a\u304b\u3063\u305f\u3059\u3079\u3066\u306e\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u307e\u3059\u3002\u3053\u306e\u5f15\u6570\u306e\u578b\u306f NamedTuple \u3068\u306a\u308a\u307e\u3059\u3002 def foo ( x , ** other ) # NamedTuple \u3068\u3057\u3066\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u305f\u540d\u524d\u4ed8\u304d\u5f15\u6570\u3092\u8fd4\u3059 other end foo 1 , y : 2 , z : 3 # => {y: 2, z: 3} foo y : 2 , x : 1 , z : 3 # => {y: 2, z: 3}","title":"\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3068\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb"},{"location":"syntax_and_semantics/splats_and_tuples.html#_4","text":"NamedTuple \u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3067 ** \u3092\u4f7f\u3046\u3053\u3068\u3067\u5f15\u6570\u306b\u5c55\u958b\u3055\u308c\u3066\u6e21\u3055\u308c\u307e\u3059\u3002 def foo ( x , y ) x - y end tuple = { y : 3 , x : 10 } foo ** tuple # => 7","title":"\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u4e8c\u91cd\u30b9\u30d7\u30e9\u30c3\u30c8"},{"location":"syntax_and_semantics/structs.html","text":"\u69cb\u9020\u4f53 (Struct) \u3042\u308b\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u3001 class \u3067\u306f\u306a\u304f struct \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 struct Point property x , y def initialize ( @x : Int32 , @y : Int32 ) end end \u69cb\u9020\u4f53\u306f Value \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u30b9\u30bf\u30c3\u30af\u306b\u78ba\u4fdd\u3055\u308c\u3001\u5024\u6e21\u3057\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u5024\u6e21\u3057\u3068\u3044\u3046\u306e\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u3068\u304d\u3084\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u5024\u304c\u8fd4\u308b\u3068\u304d\u3001\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u3068\u304d\u306b\u3001\u5024\u306e\u30b3\u30d4\u30fc\u304c\u5b9f\u969b\u306b\u306f\u6e21\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059 (\u4e00\u65b9 Reference \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5834\u5408\u306f\u3001\u5024\u306f\u30d2\u30fc\u30d7\u306b\u78ba\u4fdd\u3055\u308c\u3001\u53c2\u7167\u6e21\u3057\u3055\u308c\u307e\u3059)\u3002 \u305d\u306e\u305f\u3081\u3001\u69cb\u9020\u4f53\u306f\u5909\u66f4\u3055\u308c\u306a\u3044 (immutable) \u30c7\u30fc\u30bf\u578b\u3084\u3001\u72b6\u614b\u3092\u6301\u305f\u306a\u3044\u4ed6\u306e\u578b\u306e\u30e9\u30c3\u30d1\u30fc\u306a\u3069\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u5c0f\u3055\u3044\u30b3\u30d4\u30fc\u3092\u6e21\u3059\u65b9\u304c\u3088\u308a\u52b9\u7387\u7684\u3067\u3042\u308b\u3068\u304d\u3001\u69cb\u9020\u4f53\u3092\u4f7f\u3046\u3068\u3001\u308f\u305a\u304b\u306a\u30e1\u30e2\u30ea\u5272\u308a\u5f53\u3066\u304c\u5927\u91cf\u306b\u767a\u751f\u3059\u308b\u3053\u3068\u3092\u907f\u3051\u3089\u308c\u308b\u305f\u3081\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u6709\u5229\u3067\u3059 (\u3088\u308a\u8a73\u7d30\u306b\u306f \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30ac\u30a4\u30c9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044)\u3002 \u5909\u66f4\u3055\u308c\u308b (mutable) \u69cb\u9020\u4f53\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u304c\u3001\u5024\u3092\u5909\u66f4\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3068\u304d\u306b\u3001\u4e0b\u3067\u8aac\u660e\u3059\u308b\u3088\u3046\u306a\u3053\u3068\u3067\u4e88\u60f3\u5916\u306e\u6319\u52d5\u3092\u3059\u308b\u3053\u3068\u306b\u5341\u5206\u306b\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u5024\u6e21\u3057 \u69cb\u9020\u4f53\u306f_\u5e38\u306b_\u5024\u6e21\u3057\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u69cb\u9020\u4f53\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089 self \u3092\u8fd4\u3057\u305f\u5834\u5408\u3082\u4f8b\u5916\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 struct Counter def initialize ( @count : Int32 ) end def plus @count += 1 self end end counter = Counter . new ( 0 ) counter . plus . plus # => Counter(@count=2) puts counter # => Counter(@count=1) \u9023\u7d9a\u3059\u308b plus \u306e\u547c\u3073\u51fa\u3057\u306e\u623b\u308a\u5024\u306f\u4e88\u60f3\u901a\u308a\u306e\u7d50\u679c\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u3060\u3051\u304c counter \u3092\u5909\u66f4\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u30022\u756a\u76ee\u306e\u547c\u3073\u51fa\u3057\u306f\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u3067\u8fd4\u3063\u305f\u69cb\u9020\u4f53\u306e_\u30b3\u30d4\u30fc_\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u3053\u306e\u30b3\u30d4\u30fc\u306f\u547c\u3073\u51fa\u3057\u5f8c\u306b\u7834\u68c4\u3055\u308c\u307e\u3059\u3002 \u69cb\u9020\u4f53\u306e\u4e2d\u306b\u5909\u66f4\u3055\u308c\u308b (mutable) \u578b\u3092\u4f7f\u3063\u305f\u5834\u5408\u306e\u6319\u52d5\u306b\u3064\u3044\u3066\u3082\u6ce8\u610f\u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 class Klass property array = [ \"str\" ] end struct Strukt property array = [ \"str\" ] end def modify ( object ) object . array << \"foo\" object . array = [ \"new\" ] object . array << \"bar\" end klass = Klass . new puts modify ( klass ) # => [\"new\", \"bar\"] puts klass . array # => [\"new\", \"bar\"] strukt = Strukt . new puts modify ( strukt ) # => [\"new\", \"bar\"] puts strukt . array # => [\"str\", \"foo\"] \u3053\u3053\u3067 strukt \u306b\u4e00\u4f53\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u304b\u3068\u3044\u3046\u3068\u3001 Array \u306f\u53c2\u7167\u6e21\u3057\u3055\u308c\u308b\u306e\u3067\u3001 [\"str\"] \u306e\u53c2\u7167\u304c strukt \u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002 strukt \u3092 modify \u306e\u5f15\u6570\u306b\u3057\u305f\u3068\u304d\u3001\u914d\u5217\u3078\u306e\u53c2\u7167\u3092\u5185\u90e8\u306b\u6301\u3063\u305f strukt \u306e_\u30b3\u30d4\u30fc_\u304c\u5b9f\u969b\u306b\u306f\u6e21\u3055\u308c\u307e\u3059\u3002 \u914d\u5217\u306e\u53c2\u7167\u306e array \u304c object.array << \"foo\" \u306b\u3088\u3063\u3066\u5909\u66f4\u3055\u308c (\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c) \u307e\u3059\u3002 \u3053\u308c\u306f\u5143\u306e strukt \u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u540c\u3058\u914d\u5217\u3067\u3059\u3002 object.array = [\"new\"] \u306f strukt \u306e_\u30b3\u30d4\u30fc_\u306e\u6301\u3063\u3066\u3044\u308b\u914d\u5217\u3078\u306e\u53c2\u7167\u3092\u3001\u65b0\u3057\u304f\u78ba\u4fdd\u3057\u305f\u3082\u306e\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002 object.array << \"bar\" \u306f\u3001\u305d\u306e\u65b0\u3057\u304f\u4f5c\u6210\u3057\u305f\u914d\u5217\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 modify \u306f\u305d\u306e\u65b0\u3057\u3044\u914d\u5217\u306e\u53c2\u7167\u3092\u8fd4\u3057\u3066\u3001\u305d\u3057\u3066\u305d\u306e\u5185\u5bb9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u65b0\u3057\u3044\u914d\u5217\u306e\u53c2\u7167\u306f strukt \u306e_\u30b3\u30d4\u30fc_\u304c\u6240\u6301\u3055\u308c\u3066\u3044\u3066\u3001\u5143\u306e\u3082\u306e\u306f\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081 strukt \u306f\u6700\u521d\u306e\u5909\u66f4\u306e\u5f71\u97ff\u306e\u307f\u3092\u53d7\u3051\u3066\u3044\u3066\u3001\u6b8b\u308a\u306e\u51e6\u7406\u306e\u5f71\u97ff\u3092\u53d7\u3051\u3066\u3044\u307e\u305b\u3093\u3002 Klass \u306f\u30af\u30e9\u30b9\u306e\u305f\u3081 modify \u306b\u53c2\u7167\u6e21\u3057\u3055\u308c\u3001 object.array = [\"new\"] \u306e\u884c\u3067\u3001\u5143\u306e klass \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u65b0\u3057\u3044\u914d\u5217\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u70b9\u3067\u3001\u30b3\u30d4\u30fc\u3057\u305f\u3082\u306e\u306b\u683c\u7d0d\u3057\u3066\u3044\u305f\u3001 strukt \u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u7d99\u627f \u69cb\u9020\u4f53\u306f\u6697\u9ed9\u306b Struct \u3092\u7d99\u627f\u3057\u3066\u304a\u308a\u3001\u3053\u308c\u306f Value \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\u4e00\u65b9\u30af\u30e9\u30b9\u306f Reference \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002 \u69cb\u9020\u4f53\u306f abstract \u3067\u306a\u3044\u69cb\u9020\u4f53\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 2\u756a\u76ee\u306e\u3082\u306e\u306b\u306f\u3001\u69cb\u9020\u4f53\u306f\u30e1\u30e2\u30ea\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u53b3\u5bc6\u306b\u5b9a\u307e\u3063\u3066\u3044\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3001\u3068\u3044\u3046\u4e8b\u60c5\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6b21\u306e Point \u3068\u3044\u3046\u69cb\u9020\u4f53\u306f8\u30d0\u30a4\u30c8\u306e\u5927\u304d\u3055\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u914d\u5217\u306e\u30d0\u30c3\u30d5\u30a1\u306b\u5404\u70b9\u306e\u60c5\u5831\u304c\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 # \u5404 Point \u6bce\u306b\u914d\u5217\u306e\u30d0\u30c3\u30d5\u30a1\u304c8\u30d0\u30a4\u30c8\u78ba\u4fdd\u3055\u308c\u308b ary = [] of Point \u3082\u3057 Point \u304c\u7d99\u627f\u3055\u308c\u308b\u3068\u3059\u308b\u3068\u3001\u305d\u306e\u3088\u3046\u306a\u578b\u306e\u914d\u5217\u306b\u305d\u306e\u7d99\u627f\u3057\u305f\u578b\u304c\u8ffd\u52a0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u5404\u8981\u7d20\u6bce\u306b\u78ba\u4fdd\u3059\u308b\u5927\u304d\u3055\u3092\u305d\u308c\u3060\u3051\u5927\u304d\u304f\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u4e88\u60f3\u3057\u3066\u3044\u306a\u3044\u6319\u52d5\u3067\u3059\u3002\u305d\u306e\u305f\u3081 abstract \u3067\u306a\u3044\u69cb\u9020\u4f53\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3002\u4e00\u65b9\u3001abstract \u306a\u69cb\u9020\u4f53\u306f\u660e\u3089\u304b\u306b\u5b50\u5b6b\u3092\u6301\u3064\u3082\u306e\u306a\u306e\u3067\u3001\u3053\u306e\u578b\u306e\u914d\u5217\u304c\u8907\u6570\u306e\u578b\u306e\u5024\u304c\u8ffd\u52a0\u3055\u308c\u308b\u305f\u3081\u306b\u5927\u304d\u3081\u306b\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3059\u308b\u3053\u3068\u3082\u4e88\u60f3\u3067\u304d\u308b\u6319\u52d5\u3067\u3059\u3002 \u307e\u305f\u3001\u30af\u30e9\u30b9\u3068\u540c\u69d8\u306b\u3001\u69cb\u9020\u4f53\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u308a\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002","title":"\u69cb\u9020\u4f53 (Struct)"},{"location":"syntax_and_semantics/structs.html#struct","text":"\u3042\u308b\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u3001 class \u3067\u306f\u306a\u304f struct \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 struct Point property x , y def initialize ( @x : Int32 , @y : Int32 ) end end \u69cb\u9020\u4f53\u306f Value \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u30b9\u30bf\u30c3\u30af\u306b\u78ba\u4fdd\u3055\u308c\u3001\u5024\u6e21\u3057\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u5024\u6e21\u3057\u3068\u3044\u3046\u306e\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u3068\u304d\u3084\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u5024\u304c\u8fd4\u308b\u3068\u304d\u3001\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u3068\u304d\u306b\u3001\u5024\u306e\u30b3\u30d4\u30fc\u304c\u5b9f\u969b\u306b\u306f\u6e21\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059 (\u4e00\u65b9 Reference \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5834\u5408\u306f\u3001\u5024\u306f\u30d2\u30fc\u30d7\u306b\u78ba\u4fdd\u3055\u308c\u3001\u53c2\u7167\u6e21\u3057\u3055\u308c\u307e\u3059)\u3002 \u305d\u306e\u305f\u3081\u3001\u69cb\u9020\u4f53\u306f\u5909\u66f4\u3055\u308c\u306a\u3044 (immutable) \u30c7\u30fc\u30bf\u578b\u3084\u3001\u72b6\u614b\u3092\u6301\u305f\u306a\u3044\u4ed6\u306e\u578b\u306e\u30e9\u30c3\u30d1\u30fc\u306a\u3069\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u5c0f\u3055\u3044\u30b3\u30d4\u30fc\u3092\u6e21\u3059\u65b9\u304c\u3088\u308a\u52b9\u7387\u7684\u3067\u3042\u308b\u3068\u304d\u3001\u69cb\u9020\u4f53\u3092\u4f7f\u3046\u3068\u3001\u308f\u305a\u304b\u306a\u30e1\u30e2\u30ea\u5272\u308a\u5f53\u3066\u304c\u5927\u91cf\u306b\u767a\u751f\u3059\u308b\u3053\u3068\u3092\u907f\u3051\u3089\u308c\u308b\u305f\u3081\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u6709\u5229\u3067\u3059 (\u3088\u308a\u8a73\u7d30\u306b\u306f \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30ac\u30a4\u30c9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044)\u3002 \u5909\u66f4\u3055\u308c\u308b (mutable) \u69cb\u9020\u4f53\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u304c\u3001\u5024\u3092\u5909\u66f4\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3068\u304d\u306b\u3001\u4e0b\u3067\u8aac\u660e\u3059\u308b\u3088\u3046\u306a\u3053\u3068\u3067\u4e88\u60f3\u5916\u306e\u6319\u52d5\u3092\u3059\u308b\u3053\u3068\u306b\u5341\u5206\u306b\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u69cb\u9020\u4f53 (Struct)"},{"location":"syntax_and_semantics/structs.html#_1","text":"\u69cb\u9020\u4f53\u306f_\u5e38\u306b_\u5024\u6e21\u3057\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u69cb\u9020\u4f53\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089 self \u3092\u8fd4\u3057\u305f\u5834\u5408\u3082\u4f8b\u5916\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 struct Counter def initialize ( @count : Int32 ) end def plus @count += 1 self end end counter = Counter . new ( 0 ) counter . plus . plus # => Counter(@count=2) puts counter # => Counter(@count=1) \u9023\u7d9a\u3059\u308b plus \u306e\u547c\u3073\u51fa\u3057\u306e\u623b\u308a\u5024\u306f\u4e88\u60f3\u901a\u308a\u306e\u7d50\u679c\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u3060\u3051\u304c counter \u3092\u5909\u66f4\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u30022\u756a\u76ee\u306e\u547c\u3073\u51fa\u3057\u306f\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u3067\u8fd4\u3063\u305f\u69cb\u9020\u4f53\u306e_\u30b3\u30d4\u30fc_\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u3053\u306e\u30b3\u30d4\u30fc\u306f\u547c\u3073\u51fa\u3057\u5f8c\u306b\u7834\u68c4\u3055\u308c\u307e\u3059\u3002 \u69cb\u9020\u4f53\u306e\u4e2d\u306b\u5909\u66f4\u3055\u308c\u308b (mutable) \u578b\u3092\u4f7f\u3063\u305f\u5834\u5408\u306e\u6319\u52d5\u306b\u3064\u3044\u3066\u3082\u6ce8\u610f\u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 class Klass property array = [ \"str\" ] end struct Strukt property array = [ \"str\" ] end def modify ( object ) object . array << \"foo\" object . array = [ \"new\" ] object . array << \"bar\" end klass = Klass . new puts modify ( klass ) # => [\"new\", \"bar\"] puts klass . array # => [\"new\", \"bar\"] strukt = Strukt . new puts modify ( strukt ) # => [\"new\", \"bar\"] puts strukt . array # => [\"str\", \"foo\"] \u3053\u3053\u3067 strukt \u306b\u4e00\u4f53\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u304b\u3068\u3044\u3046\u3068\u3001 Array \u306f\u53c2\u7167\u6e21\u3057\u3055\u308c\u308b\u306e\u3067\u3001 [\"str\"] \u306e\u53c2\u7167\u304c strukt \u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002 strukt \u3092 modify \u306e\u5f15\u6570\u306b\u3057\u305f\u3068\u304d\u3001\u914d\u5217\u3078\u306e\u53c2\u7167\u3092\u5185\u90e8\u306b\u6301\u3063\u305f strukt \u306e_\u30b3\u30d4\u30fc_\u304c\u5b9f\u969b\u306b\u306f\u6e21\u3055\u308c\u307e\u3059\u3002 \u914d\u5217\u306e\u53c2\u7167\u306e array \u304c object.array << \"foo\" \u306b\u3088\u3063\u3066\u5909\u66f4\u3055\u308c (\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c) \u307e\u3059\u3002 \u3053\u308c\u306f\u5143\u306e strukt \u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u540c\u3058\u914d\u5217\u3067\u3059\u3002 object.array = [\"new\"] \u306f strukt \u306e_\u30b3\u30d4\u30fc_\u306e\u6301\u3063\u3066\u3044\u308b\u914d\u5217\u3078\u306e\u53c2\u7167\u3092\u3001\u65b0\u3057\u304f\u78ba\u4fdd\u3057\u305f\u3082\u306e\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002 object.array << \"bar\" \u306f\u3001\u305d\u306e\u65b0\u3057\u304f\u4f5c\u6210\u3057\u305f\u914d\u5217\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 modify \u306f\u305d\u306e\u65b0\u3057\u3044\u914d\u5217\u306e\u53c2\u7167\u3092\u8fd4\u3057\u3066\u3001\u305d\u3057\u3066\u305d\u306e\u5185\u5bb9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u65b0\u3057\u3044\u914d\u5217\u306e\u53c2\u7167\u306f strukt \u306e_\u30b3\u30d4\u30fc_\u304c\u6240\u6301\u3055\u308c\u3066\u3044\u3066\u3001\u5143\u306e\u3082\u306e\u306f\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081 strukt \u306f\u6700\u521d\u306e\u5909\u66f4\u306e\u5f71\u97ff\u306e\u307f\u3092\u53d7\u3051\u3066\u3044\u3066\u3001\u6b8b\u308a\u306e\u51e6\u7406\u306e\u5f71\u97ff\u3092\u53d7\u3051\u3066\u3044\u307e\u305b\u3093\u3002 Klass \u306f\u30af\u30e9\u30b9\u306e\u305f\u3081 modify \u306b\u53c2\u7167\u6e21\u3057\u3055\u308c\u3001 object.array = [\"new\"] \u306e\u884c\u3067\u3001\u5143\u306e klass \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u65b0\u3057\u3044\u914d\u5217\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u70b9\u3067\u3001\u30b3\u30d4\u30fc\u3057\u305f\u3082\u306e\u306b\u683c\u7d0d\u3057\u3066\u3044\u305f\u3001 strukt \u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002","title":"\u5024\u6e21\u3057"},{"location":"syntax_and_semantics/structs.html#_2","text":"\u69cb\u9020\u4f53\u306f\u6697\u9ed9\u306b Struct \u3092\u7d99\u627f\u3057\u3066\u304a\u308a\u3001\u3053\u308c\u306f Value \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\u4e00\u65b9\u30af\u30e9\u30b9\u306f Reference \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002 \u69cb\u9020\u4f53\u306f abstract \u3067\u306a\u3044\u69cb\u9020\u4f53\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 2\u756a\u76ee\u306e\u3082\u306e\u306b\u306f\u3001\u69cb\u9020\u4f53\u306f\u30e1\u30e2\u30ea\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u53b3\u5bc6\u306b\u5b9a\u307e\u3063\u3066\u3044\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3001\u3068\u3044\u3046\u4e8b\u60c5\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6b21\u306e Point \u3068\u3044\u3046\u69cb\u9020\u4f53\u306f8\u30d0\u30a4\u30c8\u306e\u5927\u304d\u3055\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u914d\u5217\u306e\u30d0\u30c3\u30d5\u30a1\u306b\u5404\u70b9\u306e\u60c5\u5831\u304c\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 # \u5404 Point \u6bce\u306b\u914d\u5217\u306e\u30d0\u30c3\u30d5\u30a1\u304c8\u30d0\u30a4\u30c8\u78ba\u4fdd\u3055\u308c\u308b ary = [] of Point \u3082\u3057 Point \u304c\u7d99\u627f\u3055\u308c\u308b\u3068\u3059\u308b\u3068\u3001\u305d\u306e\u3088\u3046\u306a\u578b\u306e\u914d\u5217\u306b\u305d\u306e\u7d99\u627f\u3057\u305f\u578b\u304c\u8ffd\u52a0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u5404\u8981\u7d20\u6bce\u306b\u78ba\u4fdd\u3059\u308b\u5927\u304d\u3055\u3092\u305d\u308c\u3060\u3051\u5927\u304d\u304f\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u4e88\u60f3\u3057\u3066\u3044\u306a\u3044\u6319\u52d5\u3067\u3059\u3002\u305d\u306e\u305f\u3081 abstract \u3067\u306a\u3044\u69cb\u9020\u4f53\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3002\u4e00\u65b9\u3001abstract \u306a\u69cb\u9020\u4f53\u306f\u660e\u3089\u304b\u306b\u5b50\u5b6b\u3092\u6301\u3064\u3082\u306e\u306a\u306e\u3067\u3001\u3053\u306e\u578b\u306e\u914d\u5217\u304c\u8907\u6570\u306e\u578b\u306e\u5024\u304c\u8ffd\u52a0\u3055\u308c\u308b\u305f\u3081\u306b\u5927\u304d\u3081\u306b\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3059\u308b\u3053\u3068\u3082\u4e88\u60f3\u3067\u304d\u308b\u6319\u52d5\u3067\u3059\u3002 \u307e\u305f\u3001\u30af\u30e9\u30b9\u3068\u540c\u69d8\u306b\u3001\u69cb\u9020\u4f53\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u308a\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002","title":"\u7d99\u627f"},{"location":"syntax_and_semantics/ternary_if.html","text":"3\u9805\u6f14\u7b97\u5b50 if \u3092\u3088\u308a\u7c21\u6f54\u306b\u66f8\u304f\u65b9\u6cd5\u3068\u3057\u3066\u30013\u9805\u6f14\u7b97\u5b50\u3068\u3044\u3046\u69cb\u6587\u304c\u3042\u308a\u307e\u3059\u3002 a = 1 > 2 ? 3 : 4 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 a = if 1 > 2 3 else 4 end","title":"3\u9805\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/ternary_if.html#3","text":"if \u3092\u3088\u308a\u7c21\u6f54\u306b\u66f8\u304f\u65b9\u6cd5\u3068\u3057\u3066\u30013\u9805\u6f14\u7b97\u5b50\u3068\u3044\u3046\u69cb\u6587\u304c\u3042\u308a\u307e\u3059\u3002 a = 1 > 2 ? 3 : 4 # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u3068\u540c\u3058 a = if 1 > 2 3 else 4 end","title":"3\u9805\u6f14\u7b97\u5b50"},{"location":"syntax_and_semantics/the_program.html","text":"\u30d7\u30ed\u30b0\u30e9\u30e0 \u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u305d\u308c\u81ea\u4f53\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u305d\u306e\u4e2d\u3067\u3001\u578b\u3084\u30e1\u30bd\u30c3\u30c9\u3001\u305d\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u30ed\u30fc\u30ab\u30eb\u306a\u5909\u6570\u306e\u5b9a\u7fa9\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 # \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9 def add ( x , y ) x + y end # \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059 add ( 1 , 2 ) # => 3 \u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001\u305d\u306e\u6700\u5f8c\u306e\u5f0f\u306e\u5024\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u660e\u793a\u7684\u306b return \u3092\u66f8\u304f\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u3060\u3001\u660e\u793a\u7684\u306b return \u3092\u66f8\u304f\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 def even? ( num ) if num % 2 == 0 return true end return false end add(1, 2) \u306e\u3088\u3046\u306b\u3001\u30ec\u30b7\u30fc\u30d0\u3092\u6307\u5b9a\u305b\u305a\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3068\u304d\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u73fe\u5728\u306e\u578b\u3084\u305d\u306e\u7d99\u627f\u5143\u306b\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u63a2\u7d22\u3055\u308c\u307e\u3059\u3002 def add ( x , y ) x + y end class Foo def bar # \u30d7\u30ed\u30b0\u30e9\u30e0\u306e add \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c add ( 1 , 2 ) # Foo \u306e baz \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c baz ( 1 , 2 ) end def baz ( x , y ) x * y end end \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3044\u3051\u308c\u3069\u3001\u73fe\u5728\u306e\u578b\u306b\u3082\u540c\u540d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306f\u3001 :: \u3092\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u306b\u3057\u3066\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def baz ( x , y ) x + y end class Foo def bar baz ( 4 , 2 ) # => 2 :: baz ( 4 , 2 ) # => 6 end def baz ( x , y ) x - y end end \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u5909\u6570\u306b\u5bfe\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 x = 1 def add ( y ) x + y # error: undefined local variable or method 'x' end add ( 2 ) \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u969b\u306e\u62ec\u5f27\u306f\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 add 1 , 2 # add(1, 2) \u3068\u540c\u3058 \u30e1\u30a4\u30f3\u3068\u306a\u308b\u30b3\u30fc\u30c9 \u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u5b9f\u884c\u3055\u308c\u308b\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u76f4\u63a5\u66f8\u304d\u307e\u3059\u3002\"main\" \u30e1\u30bd\u30c3\u30c9\u306e\u3088\u3046\u306a\u7279\u5225\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u542b\u3081\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 # \"Hello Crystal!\" \u3068\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0 puts \"Hello Crystal!\" \u30e1\u30a4\u30f3\u3068\u306a\u308b\u30b3\u30fc\u30c9\u306f\u578b\u5b9a\u7fa9\u306e\u4e2d\u306b\u73fe\u308c\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002 # \"Hello\" \u3068\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0 class Hello # \u3053\u3053\u3067\u306e 'self' \u306f Hello \u30af\u30e9\u30b9 puts self end","title":"\u30d7\u30ed\u30b0\u30e9\u30e0"},{"location":"syntax_and_semantics/the_program.html#_1","text":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u305d\u308c\u81ea\u4f53\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u305d\u306e\u4e2d\u3067\u3001\u578b\u3084\u30e1\u30bd\u30c3\u30c9\u3001\u305d\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u30ed\u30fc\u30ab\u30eb\u306a\u5909\u6570\u306e\u5b9a\u7fa9\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 # \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9 def add ( x , y ) x + y end # \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059 add ( 1 , 2 ) # => 3 \u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001\u305d\u306e\u6700\u5f8c\u306e\u5f0f\u306e\u5024\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u660e\u793a\u7684\u306b return \u3092\u66f8\u304f\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u3060\u3001\u660e\u793a\u7684\u306b return \u3092\u66f8\u304f\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 def even? ( num ) if num % 2 == 0 return true end return false end add(1, 2) \u306e\u3088\u3046\u306b\u3001\u30ec\u30b7\u30fc\u30d0\u3092\u6307\u5b9a\u305b\u305a\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3068\u304d\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u73fe\u5728\u306e\u578b\u3084\u305d\u306e\u7d99\u627f\u5143\u306b\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u63a2\u7d22\u3055\u308c\u307e\u3059\u3002 def add ( x , y ) x + y end class Foo def bar # \u30d7\u30ed\u30b0\u30e9\u30e0\u306e add \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c add ( 1 , 2 ) # Foo \u306e baz \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c baz ( 1 , 2 ) end def baz ( x , y ) x * y end end \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3044\u3051\u308c\u3069\u3001\u73fe\u5728\u306e\u578b\u306b\u3082\u540c\u540d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306f\u3001 :: \u3092\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u306b\u3057\u3066\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def baz ( x , y ) x + y end class Foo def bar baz ( 4 , 2 ) # => 2 :: baz ( 4 , 2 ) # => 6 end def baz ( x , y ) x - y end end \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u5909\u6570\u306b\u5bfe\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 x = 1 def add ( y ) x + y # error: undefined local variable or method 'x' end add ( 2 ) \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u969b\u306e\u62ec\u5f27\u306f\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 add 1 , 2 # add(1, 2) \u3068\u540c\u3058","title":"\u30d7\u30ed\u30b0\u30e9\u30e0"},{"location":"syntax_and_semantics/the_program.html#_2","text":"\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u5b9f\u884c\u3055\u308c\u308b\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u76f4\u63a5\u66f8\u304d\u307e\u3059\u3002\"main\" \u30e1\u30bd\u30c3\u30c9\u306e\u3088\u3046\u306a\u7279\u5225\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u542b\u3081\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 # \"Hello Crystal!\" \u3068\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0 puts \"Hello Crystal!\" \u30e1\u30a4\u30f3\u3068\u306a\u308b\u30b3\u30fc\u30c9\u306f\u578b\u5b9a\u7fa9\u306e\u4e2d\u306b\u73fe\u308c\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002 # \"Hello\" \u3068\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0 class Hello # \u3053\u3053\u3067\u306e 'self' \u306f Hello \u30af\u30e9\u30b9 puts self end","title":"\u30e1\u30a4\u30f3\u3068\u306a\u308b\u30b3\u30fc\u30c9"},{"location":"syntax_and_semantics/truthy_and_falsey_values.html","text":"\u771f\u306b\u306a\u308b\u5024\u3068\u507d\u306b\u306a\u308b\u5024 \u771f\u306b\u306a\u308b \u5024\u3068\u3044\u3046\u306e\u306f\u3001 if \u3001 unless \u3001 while \u3001\u305d\u3057\u3066 until \u306e\u6761\u4ef6\u3067\u771f (true) \u3068\u306a\u308b\u5024\u3092\u6307\u3057\u307e\u3059\u3002\u4e00\u65b9\u3001 \u507d\u306b\u306a\u308b \u5024\u306f\u3001\u4e0a\u8a18\u3067\u507d (false) \u3068\u306a\u308b\u5024\u3067\u3059\u3002 nil \u3068 false \u305d\u3057\u3066\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf (\u30e1\u30e2\u30ea\u306e\u30a2\u30c9\u30ec\u30b9\u304c0\u306e\u30dd\u30a4\u30f3\u30bf) \u306e\u307f\u304c\u507d\u306e\u5024\u3068\u306a\u308a\u3001\u305d\u306e\u4ed6\u306e\u5024\u306f\u3059\u3079\u3066\u771f\u3068\u306a\u308a\u307e\u3059\u3002","title":"\u771f\u306b\u306a\u308b\u5024\u3068\u507d\u306b\u306a\u308b\u5024"},{"location":"syntax_and_semantics/truthy_and_falsey_values.html#_1","text":"\u771f\u306b\u306a\u308b \u5024\u3068\u3044\u3046\u306e\u306f\u3001 if \u3001 unless \u3001 while \u3001\u305d\u3057\u3066 until \u306e\u6761\u4ef6\u3067\u771f (true) \u3068\u306a\u308b\u5024\u3092\u6307\u3057\u307e\u3059\u3002\u4e00\u65b9\u3001 \u507d\u306b\u306a\u308b \u5024\u306f\u3001\u4e0a\u8a18\u3067\u507d (false) \u3068\u306a\u308b\u5024\u3067\u3059\u3002 nil \u3068 false \u305d\u3057\u3066\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf (\u30e1\u30e2\u30ea\u306e\u30a2\u30c9\u30ec\u30b9\u304c0\u306e\u30dd\u30a4\u30f3\u30bf) \u306e\u307f\u304c\u507d\u306e\u5024\u3068\u306a\u308a\u3001\u305d\u306e\u4ed6\u306e\u5024\u306f\u3059\u3079\u3066\u771f\u3068\u306a\u308a\u307e\u3059\u3002","title":"\u771f\u306b\u306a\u308b\u5024\u3068\u507d\u306b\u306a\u308b\u5024"},{"location":"syntax_and_semantics/type_grammar.html","text":"\u578b\u306e\u6587\u6cd5 \u4ee5\u4e0b\u306e\u5834\u5408\u3001 \u578b\u5236\u7d04 \u3092\u6307\u5b9a\u3059\u308b\u3068\u304d \u578b\u5f15\u6570 \u3092\u6307\u5b9a\u3059\u308b\u3068\u304d \u5909\u6570\u306e\u5ba3\u8a00 \u306e\u3068\u304d \u578b\u30a8\u30a4\u30ea\u30a2\u30b9 \u306e\u3068\u304d typedef \u306e\u5ba3\u8a00\u306e\u3068\u304d is_a? \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570 as \u5f0f\u306e\u5f15\u6570 sizeof \u5f0f\u306e\u5f15\u6570 instance_sizeof \u5f0f\u306e\u5f15\u6570 \u30e1\u30bd\u30c3\u30c9\u306e \u623b\u308a\u5024\u306e\u578b \u3092\u6307\u5b9a\u3059\u308b\u3068\u304d \u4e00\u822c\u7684\u306a\u578b\u306b\u5bfe\u3059\u308b\u4fbf\u5229\u306a\u8a18\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u7279\u306b C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 \u3092\u66f8\u304f\u3068\u304d\u306b\u6709\u52b9\u3067\u3059\u304c\u3001\u4e0a\u8a18\u3057\u305f\u7b87\u6240\u3067\u3042\u308c\u3070\u3069\u3053\u3067\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30d1\u30b9\u3068\u30b8\u30a7\u30cd\u30ea\u30af\u30b9 \u4e00\u822c\u7684\u306a\u578b\u3068\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5229\u7528\u3057\u307e\u3059\u3002 Int32 My :: Nested :: Type Array ( String ) \u30e6\u30cb\u30aa\u30f3\u578b alias Int32OrString = Int32 | String \u578b\u3067\u30d1\u30a4\u30d7\u8a18\u53f7 ( | ) \u3092\u4f7f\u3046\u3068\u3001\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002 Int32 | String \u306f\u300cInt32 \u3082\u3057\u304f\u306f String\u300d\u3068\u8aad\u307f\u307e\u3059\u3002\u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 Int32 | String \u304c\u610f\u5473\u3059\u308b\u306e\u306f Int32 \u306b\u5bfe\u3057\u3066 String \u3092\u5f15\u6570\u3068\u3057\u3066 | \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 Nil \u8a31\u5bb9\u578b (Nilable) alias Int32OrNil = Int32 ? \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32OrNil = Int32 | :: Nil \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u3082\u3001 Int32? \u306f Int32 | ::Nil \u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u8868\u3057\u307e\u3059\u3002 \u30dd\u30a4\u30f3\u30bf\u578b alias Int32Ptr = Int32 * \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32Ptr = Pointer ( Int32 ) \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 Int32* \u304c\u610f\u5473\u3059\u308b\u306e\u306f Int32 \u306b\u5bfe\u3057\u3066 * \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u9759\u7684\u914d\u5217 (StaticArray) alias Int32_8 = Int32 [ 8 ] \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32_8 = StaticArray ( Int32 , 8 ) \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 Int32[8] \u306f Int32 \u306b\u5bfe\u3057\u3066 8 \u3092\u5f15\u6570\u3068\u3057\u3066 [] \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u30bf\u30d7\u30eb (Tuple) alias Int32StringTuple = { Int32 , String } \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32StringTuple = Tuple ( Int32 , String ) \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 {Int32, String} \u306f Int32 \u3068 String \u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3064\u30bf\u30d7\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u4e0a\u8a18\u306e\u30bf\u30d7\u30eb \u578b \u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb (NamedTuple) alias Int32StringNamedTuple = { x : Int32 , y : String } \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32StringNamedTuple = NamedTuple ( x : Int32 , y : String ) \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 {x: Int32, y: String} \u306f Int32 \u3068 String \u3092\u30ad\u30fc x \u3068 y \u306e\u5024\u3068\u3057\u3066\u6301\u3064\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u4e0a\u8a18\u306e\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb \u578b \u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002 Proc alias Int32ToString = Int32 -> String \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32ToString = Proc ( Int32 , String ) \u5f15\u6570\u3092\u6301\u305f\u306a\u3044 Proc \u3092\u6307\u5b9a\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 alias ProcThatReturnsInt32 = -> Int32 \u8907\u6570\u306e\u5f15\u6570\u3092\u6301\u3064 Proc \u3092\u6307\u5b9a\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 alias Int32AndCharToString = Int32 , Char -> String \u30cd\u30b9\u30c8\u3055\u308c\u305f Proc \u306b\u5bfe\u3057\u3066\u306f (\u304a\u3088\u3073\u5b9f\u969b\u306b\u306f\u3069\u3093\u306a\u578b\u3067\u3042\u3063\u3066\u3082) \u30ab\u30c3\u30b3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 alias ComplexProc = ( Int32 -> Int32 ) -> String \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u3067\u306f Int32 -> String \u306f\u69cb\u6587\u30a8\u30e9\u30fc\u3067\u3059\u3002 self \u578b\u306e\u6587\u6cd5\u3067\u306f self \u306f self \u578b\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u305f\u3081\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306f \u578b\u5236\u7d04 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 class \u578b class \u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u578b\u3067\u306f\u306a\u304f\u3001\u30af\u30e9\u30b9\u81ea\u8eab\u306e\u578b\u3092\u53c2\u7167\u3059\u308b\u305f\u3081\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def foo ( x : Int32 ) \"instance\" end def foo ( x : Int32 . class ) \"class\" end foo 1 # \"instance\" foo Int32 # \"class\" class \u306f\u30af\u30e9\u30b9\u306e\u578b\u3092\u6301\u3064\u914d\u5217\u3084\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u5834\u5408\u306b\u3082\u6709\u52b9\u306b\u4f7f\u3048\u307e\u3059\u3002 class Parent end class Child1 < Parent end class Child2 < Parent end ary = [] of Parent . class ary << Child1 ary << Child2 \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 \u578b\u5236\u7d04\u3067\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u4f7f\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u308c\u306f\u3059\u3079\u3066\u306b\u30de\u30c3\u30c1\u3059\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002 # \u578b\u5236\u7d04\u3092\u6307\u5b9a\u3057\u306a\u3044\u3053\u3068\u3068\u540c\u3058\u3067\u3059\u3002\u3042\u307e\u308a\u4fbf\u5229\u306a\u4f8b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3002 def foo ( x : _ ) end # \u3082\u3046\u5c11\u3057\u6709\u7528\u306a\u4f8b\u3068\u3057\u3066\u3001\u3053\u308c\u306f\u5f15\u6570\u30922\u3064\u53d7\u3051\u53d6\u3063\u3066 Int32 \u3092\u8fd4\u3059 Proc \u3092\u8868\u3057\u307e\u3059 def foo ( x : _ , _ -> Int32 ) end \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 _ \u306f \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 \u305d\u306e\u3082\u306e\u306e\u540d\u524d\u306e\u5909\u6570\u3092\u8868\u3057\u307e\u3059\u3002 typeof typeof \u3092\u578b\u306e\u6587\u6cd5\u3067\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u6e21\u3055\u308c\u305f\u5f0f\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b) \u3092\u8fd4\u3057\u307e\u3059\u3002 typeof ( 1 + 2 ) # => Int32 typeof ( 1 , \"a\" ) # => (Int32 | String)","title":"\u578b\u306e\u6587\u6cd5"},{"location":"syntax_and_semantics/type_grammar.html#_1","text":"\u4ee5\u4e0b\u306e\u5834\u5408\u3001 \u578b\u5236\u7d04 \u3092\u6307\u5b9a\u3059\u308b\u3068\u304d \u578b\u5f15\u6570 \u3092\u6307\u5b9a\u3059\u308b\u3068\u304d \u5909\u6570\u306e\u5ba3\u8a00 \u306e\u3068\u304d \u578b\u30a8\u30a4\u30ea\u30a2\u30b9 \u306e\u3068\u304d typedef \u306e\u5ba3\u8a00\u306e\u3068\u304d is_a? \u7591\u4f3c\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570 as \u5f0f\u306e\u5f15\u6570 sizeof \u5f0f\u306e\u5f15\u6570 instance_sizeof \u5f0f\u306e\u5f15\u6570 \u30e1\u30bd\u30c3\u30c9\u306e \u623b\u308a\u5024\u306e\u578b \u3092\u6307\u5b9a\u3059\u308b\u3068\u304d \u4e00\u822c\u7684\u306a\u578b\u306b\u5bfe\u3059\u308b\u4fbf\u5229\u306a\u8a18\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u7279\u306b C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 \u3092\u66f8\u304f\u3068\u304d\u306b\u6709\u52b9\u3067\u3059\u304c\u3001\u4e0a\u8a18\u3057\u305f\u7b87\u6240\u3067\u3042\u308c\u3070\u3069\u3053\u3067\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u578b\u306e\u6587\u6cd5"},{"location":"syntax_and_semantics/type_grammar.html#_2","text":"\u4e00\u822c\u7684\u306a\u578b\u3068\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5229\u7528\u3057\u307e\u3059\u3002 Int32 My :: Nested :: Type Array ( String )","title":"\u30d1\u30b9\u3068\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"},{"location":"syntax_and_semantics/type_grammar.html#_3","text":"alias Int32OrString = Int32 | String \u578b\u3067\u30d1\u30a4\u30d7\u8a18\u53f7 ( | ) \u3092\u4f7f\u3046\u3068\u3001\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002 Int32 | String \u306f\u300cInt32 \u3082\u3057\u304f\u306f String\u300d\u3068\u8aad\u307f\u307e\u3059\u3002\u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 Int32 | String \u304c\u610f\u5473\u3059\u308b\u306e\u306f Int32 \u306b\u5bfe\u3057\u3066 String \u3092\u5f15\u6570\u3068\u3057\u3066 | \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002","title":"\u30e6\u30cb\u30aa\u30f3\u578b"},{"location":"syntax_and_semantics/type_grammar.html#nil-nilable","text":"alias Int32OrNil = Int32 ? \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32OrNil = Int32 | :: Nil \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u3082\u3001 Int32? \u306f Int32 | ::Nil \u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u8868\u3057\u307e\u3059\u3002","title":"Nil \u8a31\u5bb9\u578b (Nilable)"},{"location":"syntax_and_semantics/type_grammar.html#_4","text":"alias Int32Ptr = Int32 * \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32Ptr = Pointer ( Int32 ) \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 Int32* \u304c\u610f\u5473\u3059\u308b\u306e\u306f Int32 \u306b\u5bfe\u3057\u3066 * \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002","title":"\u30dd\u30a4\u30f3\u30bf\u578b"},{"location":"syntax_and_semantics/type_grammar.html#staticarray","text":"alias Int32_8 = Int32 [ 8 ] \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32_8 = StaticArray ( Int32 , 8 ) \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 Int32[8] \u306f Int32 \u306b\u5bfe\u3057\u3066 8 \u3092\u5f15\u6570\u3068\u3057\u3066 [] \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002","title":"\u9759\u7684\u914d\u5217 (StaticArray)"},{"location":"syntax_and_semantics/type_grammar.html#tuple","text":"alias Int32StringTuple = { Int32 , String } \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32StringTuple = Tuple ( Int32 , String ) \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 {Int32, String} \u306f Int32 \u3068 String \u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3064\u30bf\u30d7\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u4e0a\u8a18\u306e\u30bf\u30d7\u30eb \u578b \u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002","title":"\u30bf\u30d7\u30eb (Tuple)"},{"location":"syntax_and_semantics/type_grammar.html#namedtuple","text":"alias Int32StringNamedTuple = { x : Int32 , y : String } \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32StringNamedTuple = NamedTuple ( x : Int32 , y : String ) \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 {x: Int32, y: String} \u306f Int32 \u3068 String \u3092\u30ad\u30fc x \u3068 y \u306e\u5024\u3068\u3057\u3066\u6301\u3064\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u4e0a\u8a18\u306e\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb \u578b \u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002","title":"\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb (NamedTuple)"},{"location":"syntax_and_semantics/type_grammar.html#proc","text":"alias Int32ToString = Int32 -> String \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u3058\u3067\u3059\u3002 alias Int32ToString = Proc ( Int32 , String ) \u5f15\u6570\u3092\u6301\u305f\u306a\u3044 Proc \u3092\u6307\u5b9a\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 alias ProcThatReturnsInt32 = -> Int32 \u8907\u6570\u306e\u5f15\u6570\u3092\u6301\u3064 Proc \u3092\u6307\u5b9a\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 alias Int32AndCharToString = Int32 , Char -> String \u30cd\u30b9\u30c8\u3055\u308c\u305f Proc \u306b\u5bfe\u3057\u3066\u306f (\u304a\u3088\u3073\u5b9f\u969b\u306b\u306f\u3069\u3093\u306a\u578b\u3067\u3042\u3063\u3066\u3082) \u30ab\u30c3\u30b3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 alias ComplexProc = ( Int32 -> Int32 ) -> String \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u3067\u306f Int32 -> String \u306f\u69cb\u6587\u30a8\u30e9\u30fc\u3067\u3059\u3002","title":"Proc"},{"location":"syntax_and_semantics/type_grammar.html#self","text":"\u578b\u306e\u6587\u6cd5\u3067\u306f self \u306f self \u578b\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u305f\u3081\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306f \u578b\u5236\u7d04 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"self"},{"location":"syntax_and_semantics/type_grammar.html#class","text":"class \u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u578b\u3067\u306f\u306a\u304f\u3001\u30af\u30e9\u30b9\u81ea\u8eab\u306e\u578b\u3092\u53c2\u7167\u3059\u308b\u305f\u3081\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 def foo ( x : Int32 ) \"instance\" end def foo ( x : Int32 . class ) \"class\" end foo 1 # \"instance\" foo Int32 # \"class\" class \u306f\u30af\u30e9\u30b9\u306e\u578b\u3092\u6301\u3064\u914d\u5217\u3084\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u5834\u5408\u306b\u3082\u6709\u52b9\u306b\u4f7f\u3048\u307e\u3059\u3002 class Parent end class Child1 < Parent end class Child2 < Parent end ary = [] of Parent . class ary << Child1 ary << Child2","title":"class \u578b"},{"location":"syntax_and_semantics/type_grammar.html#_5","text":"\u578b\u5236\u7d04\u3067\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u4f7f\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u308c\u306f\u3059\u3079\u3066\u306b\u30de\u30c3\u30c1\u3059\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002 # \u578b\u5236\u7d04\u3092\u6307\u5b9a\u3057\u306a\u3044\u3053\u3068\u3068\u540c\u3058\u3067\u3059\u3002\u3042\u307e\u308a\u4fbf\u5229\u306a\u4f8b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3002 def foo ( x : _ ) end # \u3082\u3046\u5c11\u3057\u6709\u7528\u306a\u4f8b\u3068\u3057\u3066\u3001\u3053\u308c\u306f\u5f15\u6570\u30922\u3064\u53d7\u3051\u53d6\u3063\u3066 Int32 \u3092\u8fd4\u3059 Proc \u3092\u8868\u3057\u307e\u3059 def foo ( x : _ , _ -> Int32 ) end \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u306f\u3001 _ \u306f \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 \u305d\u306e\u3082\u306e\u306e\u540d\u524d\u306e\u5909\u6570\u3092\u8868\u3057\u307e\u3059\u3002","title":"\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2"},{"location":"syntax_and_semantics/type_grammar.html#typeof","text":"typeof \u3092\u578b\u306e\u6587\u6cd5\u3067\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u6e21\u3055\u308c\u305f\u5f0f\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b) \u3092\u8fd4\u3057\u307e\u3059\u3002 typeof ( 1 + 2 ) # => Int32 typeof ( 1 , \"a\" ) # => (Int32 | String)","title":"typeof"},{"location":"syntax_and_semantics/type_inference.html","text":"\u578b\u63a8\u8ad6 Crystal \u306e\u54f2\u5b66\u306f\u578b\u5236\u7d04\u3092\u306a\u308b\u3079\u304f\u6e1b\u3089\u3059\u3053\u3068\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u3069\u3046\u3057\u3066\u3082\u578b\u5236\u7d04\u304c\u5fc5\u8981\u306b\u306a\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u3092\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 class Person def initialize ( @name ) @age = 0 end end @age \u304c\u6574\u6570\u578b\u3060\u3068\u3044\u3046\u3053\u3068\u306f\u4e00\u76ee\u3067\u5206\u304b\u308a\u307e\u3059\u304c\u3001 @name \u306e\u578b\u306f\u5206\u304b\u308a\u307e\u305b\u3093\u3002 Person \u30af\u30e9\u30b9\u3067\u306e\u3059\u3079\u3066\u306e\u4f7f\u308f\u308c\u65b9\u304b\u3089\u578b\u3092\u63a8\u8ad6\u3059\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3067\u3059\u304c\u3001\u305d\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u304f\u3064\u304b\u306e\u554f\u984c\u304c\u751f\u3058\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u8aad\u3080\u969b\u306b\u578b\u304c\u660e\u78ba\u3067\u306a\u3044\u3002\u578b\u3092\u77e5\u308b\u305f\u3081\u306b\u306f Person \u4e2d\u3067\u3069\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3059\u3079\u3066\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u901f\u5ea6\u306e\u554f\u984c\u3002\u30e1\u30bd\u30c3\u30c9\u306e\u89e3\u6790\u3092\u4e00\u5ea6\u306b\u51e6\u7406\u3057\u305f\u308a\u3001\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u3059\u308b\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u4e0d\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u304c\u80b2\u3063\u3066\u304d\u305f\u3068\u304d\u306b\u3053\u308c\u3089\u306e\u554f\u984c\u306f\u9855\u8457\u306b\u306a\u308a\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5168\u5bb9\u306e\u628a\u63e1\u306f\u56f0\u96e3\u306b\u306a\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u9593\u306f\u8010\u3048\u96e3\u3044\u307b\u3069\u9577\u304f\u306a\u308b\u3067\u3057\u3087\u3046\u3002 \u3053\u308c\u3089\u306e\u7406\u7531\u304b\u3089\u3001Crystal \u3067\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3068 \u30af\u30e9\u30b9 \u5909\u6570\u306e\u578b\u306f\u306f\u3063\u304d\u308a\u5206\u304b\u308b\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3092\u8981\u6c42\u3057\u307e\u3059\u3002 Crystal \u306b\u578b\u3092\u7406\u89e3\u3055\u305b\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 \u578b\u5236\u7d04\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408 \u3082\u3063\u3068\u3082\u5358\u7d14\u3067\u3001\u305d\u3057\u3066\u304a\u305d\u3089\u304f\u3082\u3063\u3068\u3082\u9762\u767d\u304f\u306a\u3044\u65b9\u6cd5\u304c\u3001\u660e\u793a\u7684\u306b\u578b\u5236\u7d04\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3059\u3002 class Person @name : String @age : Int32 def initialize ( @name ) @age = 0 end end \u578b\u5236\u7d04\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408 \u660e\u793a\u7684\u306b\u578b\u5236\u7d04\u3092\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u69cb\u6587\u4e0a\u306e\u898f\u5247\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u30fb\u30af\u30e9\u30b9\u5909\u6570\u306e\u578b\u3092\u63a8\u8ad6\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002 \u3042\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u30fb\u30af\u30e9\u30b9\u5909\u6570\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u898f\u5247\u304c\u9069\u7528\u3055\u308c\u3066\u578b\u304c\u4e88\u60f3\u3067\u304d\u305f\u3068\u304d\u3001\u305d\u306e\u578b\u306f\u4e00\u65e6\u8a18\u61b6\u3055\u308c\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u4ee5\u4e0a\u9069\u7528\u3059\u308b\u898f\u5247\u304c\u306a\u304f\u306a\u3063\u305f\u3068\u304d\u3001\u8a18\u61b6\u3055\u308c\u305f\u578b\u306e \u30e6\u30cb\u30aa\u30f3\u578b \u3068\u3057\u3066\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u578b\u3092\u63a8\u8ad6\u3057\u305f\u5909\u6570\u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\u3001 Nil \u3082\u578b\u306b\u52a0\u3048\u3089\u308c\u307e\u3059\u3002 \u898f\u5247\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u6700\u521d\u306e\u3082\u306e\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\u4ed6\u306e\u3082\u306e\u306f\u8a18\u61b6\u3057\u306a\u304f\u3066\u3082\u3088\u3044\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u578b\u3092\u63a8\u8ad6\u3067\u304d\u305a\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u3063\u305f\u3068\u304d\u306f\u3001\u660e\u793a\u7684\u306b\u578b\u5236\u9650\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u898f\u5247\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u95a2\u3059\u308b\u3082\u306e\u3068\u3057\u3066\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30af\u30e9\u30b9\u5909\u6570\u306b\u5bfe\u3057\u3066\u3082\u540c\u69d8\u306b\u6271\u308f\u308c\u307e\u3059\u3002\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002 1. \u30ea\u30c6\u30e9\u30eb\u306e\u4ee3\u5165 \u30ea\u30c6\u30e9\u30eb\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u3001\u30ea\u30c6\u30e9\u30eb\u306e\u578b\u304c\u4e88\u60f3\u3055\u308c\u305f\u578b\u3068\u3057\u3066\u8a18\u61b6\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e \u30ea\u30c6\u30e9\u30eb \u306f\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u578b\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u3001 @name \u306f String \u306b\u3001 @age \u306f Int32 \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize @name = \"John Doe\" @age = 0 end end \u3053\u306e\u898f\u5247\u3084\u305d\u306e\u4ed6\u3059\u3079\u3066\u306e\u898f\u5247\u306f\u3001 initialize \u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u3082\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class SomeObject def lucky_number @lucky_number = 42 end end \u3053\u306e\u5834\u5408\u3001 @lucky_number \u306f Int32 | Nil \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 Int32 \u306f 42 \u304c\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3067\u3001 Nil \u306f\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u306b\u3001\u305d\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 2. \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 new \u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u306e\u4ee3\u5165 Type.new(...) \u306e\u3088\u3046\u306a\u5f0f\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u3044\u308b\u3068\u304d\u3001\u578b Type \u304c\u4e88\u60f3\u3055\u308c\u305f\u578b\u3068\u3057\u3066\u8a18\u61b6\u3055\u308c\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u3001 @address \u306f Address \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize @address = Address . new ( \"somewhere\" ) end end \u3053\u306e\u898f\u5247\u306f\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306b\u3082\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u3001 @values \u306f Array(Int32) \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Something def initialize @values = Array ( Int32 ) . new end end \u6ce8\u610f : new \u30e1\u30bd\u30c3\u30c9\u304c\u518d\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u305d\u306e\u4ed6\u306e\u898f\u5247\u3067\u578b\u304c\u63a8\u8ad6\u3067\u304d\u308c\u3070\u3001 new \u3067\u8fd4\u308b\u578b\u306b\u63a8\u8ad6\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002 3. Assigning a variable that is a method parameter with a type restriction In the following example @name is inferred to be String because the method parameter name has a type restriction of type String , and that parameter is assigned to @name . class Person def initialize ( name : String ) @name = name end end Note that the name of the method parameter is not important; this works as well: class Person def initialize ( obj : String ) @name = obj end end Using the shorter syntax to assign an instance variable from a method parameter has the same effect: class Person def initialize ( @name : String ) end end Also note that the compiler doesn't check whether a method parameter is reassigned a different value: class Person def initialize ( name : String ) name = 1 @name = name end end \u4e0a\u306e\u4f8b\u3067\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f @name \u3092 String \u3068\u3057\u3066\u3001\u305d\u308c\u304b\u3089 Int32 \u306e\u5024\u3092 String \u578b\u306e\u5909\u6570\u306b\u4ee3\u5165\u3067\u304d\u306a\u3044\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3057\u307e\u3059\u3002 @name \u304c String \u3068\u63a8\u6e2c\u3055\u308c\u308b\u3079\u304d\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u660e\u793a\u7684\u306a\u578b\u5236\u7d04\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 4. \u578b\u5236\u7d04\u306e\u3042\u308b\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u306e\u4ee3\u5165 \u6b21\u306e\u4f8b\u3067\u3001 @address \u306f Address \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 Address.unknown \u306b\u623b\u308a\u5024\u306e\u578b\u5236\u7d04\u3068\u3057\u3066 Address \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002 class Person def initialize @address = Address . unknown end end class Address def self . unknown : Address new ( \"unknown\" ) end def initialize ( @name : String ) end end \u5b9f\u969b\u306e\u3068\u3053\u308d\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f self.unknown \u306e\u578b\u5236\u7d04\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u672c\u4f53\u3092\u898b\u3066\u3001\u3053\u308c\u307e\u3067\u8aac\u660e\u3057\u3066\u304d\u305f\u898f\u5247 ( new \u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3001\u5358\u7d14\u306a\u30ea\u30c6\u30e9\u30eb\u3001\u306a\u3069) \u304c\u9069\u7528\u3067\u304d\u308b\u5834\u5408\u306b\u3001\u5f0f\u306e\u578b\u3092\u63a8\u8ad6\u3059\u308b\u305f\u3081\u3067\u3059\u3002\u3088\u3063\u3066\u3001\u4e0a\u8a18\u306f\u6b21\u306e\u3088\u3046\u306b\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u3002 class Person def initialize @address = Address . unknown end end class Address # \u3053\u3053\u306e\u623b\u308a\u5024\u306e\u578b\u5236\u7d04\u306f\u5fc5\u8981\u306a\u3044 def self . unknown new ( \"unknown\" ) end def initialize ( @name : String ) end end \u3053\u306e\u8ffd\u52a0\u306e\u898f\u5247\u306f\u3001\u3088\u304f\u3042\u308b new \u3092\u547c\u3076\u3060\u3051\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u52d5\u4f5c\u3059\u308b\u305f\u3081\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002 5. Assigning a variable that is a method parameter with a default value \u6b21\u306e\u4f8b\u3067\u3001 name \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u3001\u305d\u308c\u304c @name \u306b\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u7d50\u679c String \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize ( name = \"John Doe\" ) @name = name end end \u3053\u308c\u306f\u77ed\u304b\u3044\u66f8\u304d\u65b9\u3092\u3057\u3066\u3082\u540c\u69d8\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002 class Person def initialize ( @name = \"John Doe\" ) end end The default parameter value can also be a Type.new(...) method or a class method with a return type restriction. 6. lib \u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u306e\u4ee3\u5165 lib \u95a2\u6570 \u306f\u660e\u793a\u7684\u306a\u578b\u3092\u6301\u3064\u305f\u3081\u3001\u305d\u308c\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4ee3\u5165\u3055\u308c\u305f\u3068\u304d\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u623b\u308a\u5024\u306e\u578b\u3092\u4e88\u60f3\u3067\u304d\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u3001 @age \u306f Int32 \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize @age = LibPerson . compute_default_age end end lib LibPerson fun compute_default_age : Int32 end 7. lib \u5f0f\u306e out \u306e\u5229\u7528 lib \u95a2\u6570 \u306f\u660e\u793a\u7684\u306a\u578b\u3092\u6301\u3064\u305f\u3081\u3001\u30dd\u30a4\u30f3\u30bf\u578b\u306e\u5f15\u6570\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u6240\u3067 out \u5f62\u5f0f\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u304c\u6e21\u3055\u308c\u305f\u3068\u304d\u3001\u305d\u306e\u30dd\u30a4\u30f3\u30bf\u578b\u3092\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3057\u305f\u3082\u306e\u3068\u3057\u3066\u4e88\u60f3\u3057\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u3001 @age \u306f Int32 \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize LibPerson . compute_default_age ( out @age ) end end lib LibPerson fun compute_default_age ( age_ptr : Int32 * ) end \u305d\u306e\u4ed6\u306e\u898f\u5247 \u306a\u308b\u3079\u304f\u660e\u793a\u7684\u306a\u578b\u5236\u7d04\u3092\u5c11\u306a\u304f\u3067\u304d\u308b\u3088\u3046\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u8ce2\u304f\u52d5\u4f5c\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 if \u5f0f\u306e then \u7bc0\u3068 else \u7bc0\u3067\u578b\u63a8\u8ad6\u3055\u308c\u305f\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002 class Person def initialize @age = some_condition ? 1 : 2 end end \u4e0a\u8a18\u306e if (\u6b63\u78ba\u306b\u306f\u53c2\u8003\u6f14\u7b97\u5b50\u3067\u3059\u304c if \u3068\u540c\u69d8\u3067\u3059) \u306f\u6574\u6570\u30ea\u30c6\u30e9\u30eb\u3092\u8fd4\u3059\u306e\u3067\u3001 @age \u306f\u6b63\u3057\u304f Int32 \u3068\u63a8\u8ad6\u3055\u308c\u3001\u578b\u5236\u7d04\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 \u4ed6\u306b\u3082 || \u3084 ||= \u306e\u5834\u5408\u306b\u3082\u4e0a\u624b\u304f\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 class SomeObject def lucky_number @lucky_number ||= 42 end end \u4e0a\u306e\u4f8b\u3067 @lucky_number \u306f Int32 | Nil \u3068\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u521d\u671f\u5316\u304c\u9045\u5ef6\u3055\u308c\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3057\u3087\u3046\u3002 \u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3068\u3063\u3066 (\u305d\u3057\u3066\u4eba\u9593\u304b\u3089\u3057\u3066\u3082) \u5bb9\u6613\u306a\u5834\u5408\u3001\u5b9a\u6570\u3092\u4f7f\u3063\u305f\u5834\u5408\u3082\u4e0a\u624b\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002 class SomeObject DEFAULT_LUCKY_NUMBER = 42 def initialize ( @lucky_number = DEFAULT_LUCKY_NUMBER ) end end \u3053\u3053\u3067\u306f\u898f\u52475 (\u5f15\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024) \u304c\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u5b9a\u6570\u304c\u6574\u6570\u30ea\u30c6\u30e9\u30eb\u306b\u89e3\u6c7a\u3055\u308c\u308b\u306e\u3067\u3001 @lucky_number \u306f Int32 \u3068\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002","title":"\u578b\u63a8\u8ad6"},{"location":"syntax_and_semantics/type_inference.html#_1","text":"Crystal \u306e\u54f2\u5b66\u306f\u578b\u5236\u7d04\u3092\u306a\u308b\u3079\u304f\u6e1b\u3089\u3059\u3053\u3068\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u3069\u3046\u3057\u3066\u3082\u578b\u5236\u7d04\u304c\u5fc5\u8981\u306b\u306a\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u3092\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 class Person def initialize ( @name ) @age = 0 end end @age \u304c\u6574\u6570\u578b\u3060\u3068\u3044\u3046\u3053\u3068\u306f\u4e00\u76ee\u3067\u5206\u304b\u308a\u307e\u3059\u304c\u3001 @name \u306e\u578b\u306f\u5206\u304b\u308a\u307e\u305b\u3093\u3002 Person \u30af\u30e9\u30b9\u3067\u306e\u3059\u3079\u3066\u306e\u4f7f\u308f\u308c\u65b9\u304b\u3089\u578b\u3092\u63a8\u8ad6\u3059\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3067\u3059\u304c\u3001\u305d\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u304f\u3064\u304b\u306e\u554f\u984c\u304c\u751f\u3058\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u8aad\u3080\u969b\u306b\u578b\u304c\u660e\u78ba\u3067\u306a\u3044\u3002\u578b\u3092\u77e5\u308b\u305f\u3081\u306b\u306f Person \u4e2d\u3067\u3069\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3059\u3079\u3066\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u901f\u5ea6\u306e\u554f\u984c\u3002\u30e1\u30bd\u30c3\u30c9\u306e\u89e3\u6790\u3092\u4e00\u5ea6\u306b\u51e6\u7406\u3057\u305f\u308a\u3001\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u3059\u308b\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u4e0d\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u304c\u80b2\u3063\u3066\u304d\u305f\u3068\u304d\u306b\u3053\u308c\u3089\u306e\u554f\u984c\u306f\u9855\u8457\u306b\u306a\u308a\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5168\u5bb9\u306e\u628a\u63e1\u306f\u56f0\u96e3\u306b\u306a\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u9593\u306f\u8010\u3048\u96e3\u3044\u307b\u3069\u9577\u304f\u306a\u308b\u3067\u3057\u3087\u3046\u3002 \u3053\u308c\u3089\u306e\u7406\u7531\u304b\u3089\u3001Crystal \u3067\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3068 \u30af\u30e9\u30b9 \u5909\u6570\u306e\u578b\u306f\u306f\u3063\u304d\u308a\u5206\u304b\u308b\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3092\u8981\u6c42\u3057\u307e\u3059\u3002 Crystal \u306b\u578b\u3092\u7406\u89e3\u3055\u305b\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002","title":"\u578b\u63a8\u8ad6"},{"location":"syntax_and_semantics/type_inference.html#_2","text":"\u3082\u3063\u3068\u3082\u5358\u7d14\u3067\u3001\u305d\u3057\u3066\u304a\u305d\u3089\u304f\u3082\u3063\u3068\u3082\u9762\u767d\u304f\u306a\u3044\u65b9\u6cd5\u304c\u3001\u660e\u793a\u7684\u306b\u578b\u5236\u7d04\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3059\u3002 class Person @name : String @age : Int32 def initialize ( @name ) @age = 0 end end","title":"\u578b\u5236\u7d04\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408"},{"location":"syntax_and_semantics/type_inference.html#_3","text":"\u660e\u793a\u7684\u306b\u578b\u5236\u7d04\u3092\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u69cb\u6587\u4e0a\u306e\u898f\u5247\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u30fb\u30af\u30e9\u30b9\u5909\u6570\u306e\u578b\u3092\u63a8\u8ad6\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002 \u3042\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u30fb\u30af\u30e9\u30b9\u5909\u6570\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u898f\u5247\u304c\u9069\u7528\u3055\u308c\u3066\u578b\u304c\u4e88\u60f3\u3067\u304d\u305f\u3068\u304d\u3001\u305d\u306e\u578b\u306f\u4e00\u65e6\u8a18\u61b6\u3055\u308c\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u4ee5\u4e0a\u9069\u7528\u3059\u308b\u898f\u5247\u304c\u306a\u304f\u306a\u3063\u305f\u3068\u304d\u3001\u8a18\u61b6\u3055\u308c\u305f\u578b\u306e \u30e6\u30cb\u30aa\u30f3\u578b \u3068\u3057\u3066\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u578b\u3092\u63a8\u8ad6\u3057\u305f\u5909\u6570\u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\u3001 Nil \u3082\u578b\u306b\u52a0\u3048\u3089\u308c\u307e\u3059\u3002 \u898f\u5247\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u6700\u521d\u306e\u3082\u306e\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\u4ed6\u306e\u3082\u306e\u306f\u8a18\u61b6\u3057\u306a\u304f\u3066\u3082\u3088\u3044\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u578b\u3092\u63a8\u8ad6\u3067\u304d\u305a\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u3063\u305f\u3068\u304d\u306f\u3001\u660e\u793a\u7684\u306b\u578b\u5236\u9650\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u898f\u5247\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u95a2\u3059\u308b\u3082\u306e\u3068\u3057\u3066\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30af\u30e9\u30b9\u5909\u6570\u306b\u5bfe\u3057\u3066\u3082\u540c\u69d8\u306b\u6271\u308f\u308c\u307e\u3059\u3002\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002","title":"\u578b\u5236\u7d04\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408"},{"location":"syntax_and_semantics/type_inference.html#1","text":"\u30ea\u30c6\u30e9\u30eb\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u3001\u30ea\u30c6\u30e9\u30eb\u306e\u578b\u304c\u4e88\u60f3\u3055\u308c\u305f\u578b\u3068\u3057\u3066\u8a18\u61b6\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e \u30ea\u30c6\u30e9\u30eb \u306f\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u578b\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u3001 @name \u306f String \u306b\u3001 @age \u306f Int32 \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize @name = \"John Doe\" @age = 0 end end \u3053\u306e\u898f\u5247\u3084\u305d\u306e\u4ed6\u3059\u3079\u3066\u306e\u898f\u5247\u306f\u3001 initialize \u4ee5\u5916\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u3082\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class SomeObject def lucky_number @lucky_number = 42 end end \u3053\u306e\u5834\u5408\u3001 @lucky_number \u306f Int32 | Nil \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 Int32 \u306f 42 \u304c\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3067\u3001 Nil \u306f\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u306b\u3001\u305d\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","title":"1. \u30ea\u30c6\u30e9\u30eb\u306e\u4ee3\u5165"},{"location":"syntax_and_semantics/type_inference.html#2-new","text":"Type.new(...) \u306e\u3088\u3046\u306a\u5f0f\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u3044\u308b\u3068\u304d\u3001\u578b Type \u304c\u4e88\u60f3\u3055\u308c\u305f\u578b\u3068\u3057\u3066\u8a18\u61b6\u3055\u308c\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u3001 @address \u306f Address \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize @address = Address . new ( \"somewhere\" ) end end \u3053\u306e\u898f\u5247\u306f\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306b\u3082\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u3001 @values \u306f Array(Int32) \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Something def initialize @values = Array ( Int32 ) . new end end \u6ce8\u610f : new \u30e1\u30bd\u30c3\u30c9\u304c\u518d\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u305d\u306e\u4ed6\u306e\u898f\u5247\u3067\u578b\u304c\u63a8\u8ad6\u3067\u304d\u308c\u3070\u3001 new \u3067\u8fd4\u308b\u578b\u306b\u63a8\u8ad6\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002","title":"2. \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 new \u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u306e\u4ee3\u5165"},{"location":"syntax_and_semantics/type_inference.html#3-assigning-a-variable-that-is-a-method-parameter-with-a-type-restriction","text":"In the following example @name is inferred to be String because the method parameter name has a type restriction of type String , and that parameter is assigned to @name . class Person def initialize ( name : String ) @name = name end end Note that the name of the method parameter is not important; this works as well: class Person def initialize ( obj : String ) @name = obj end end Using the shorter syntax to assign an instance variable from a method parameter has the same effect: class Person def initialize ( @name : String ) end end Also note that the compiler doesn't check whether a method parameter is reassigned a different value: class Person def initialize ( name : String ) name = 1 @name = name end end \u4e0a\u306e\u4f8b\u3067\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f @name \u3092 String \u3068\u3057\u3066\u3001\u305d\u308c\u304b\u3089 Int32 \u306e\u5024\u3092 String \u578b\u306e\u5909\u6570\u306b\u4ee3\u5165\u3067\u304d\u306a\u3044\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3057\u307e\u3059\u3002 @name \u304c String \u3068\u63a8\u6e2c\u3055\u308c\u308b\u3079\u304d\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u660e\u793a\u7684\u306a\u578b\u5236\u7d04\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"3. Assigning a variable that is a method parameter with a type restriction"},{"location":"syntax_and_semantics/type_inference.html#4","text":"\u6b21\u306e\u4f8b\u3067\u3001 @address \u306f Address \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 Address.unknown \u306b\u623b\u308a\u5024\u306e\u578b\u5236\u7d04\u3068\u3057\u3066 Address \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002 class Person def initialize @address = Address . unknown end end class Address def self . unknown : Address new ( \"unknown\" ) end def initialize ( @name : String ) end end \u5b9f\u969b\u306e\u3068\u3053\u308d\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f self.unknown \u306e\u578b\u5236\u7d04\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u672c\u4f53\u3092\u898b\u3066\u3001\u3053\u308c\u307e\u3067\u8aac\u660e\u3057\u3066\u304d\u305f\u898f\u5247 ( new \u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3001\u5358\u7d14\u306a\u30ea\u30c6\u30e9\u30eb\u3001\u306a\u3069) \u304c\u9069\u7528\u3067\u304d\u308b\u5834\u5408\u306b\u3001\u5f0f\u306e\u578b\u3092\u63a8\u8ad6\u3059\u308b\u305f\u3081\u3067\u3059\u3002\u3088\u3063\u3066\u3001\u4e0a\u8a18\u306f\u6b21\u306e\u3088\u3046\u306b\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u3002 class Person def initialize @address = Address . unknown end end class Address # \u3053\u3053\u306e\u623b\u308a\u5024\u306e\u578b\u5236\u7d04\u306f\u5fc5\u8981\u306a\u3044 def self . unknown new ( \"unknown\" ) end def initialize ( @name : String ) end end \u3053\u306e\u8ffd\u52a0\u306e\u898f\u5247\u306f\u3001\u3088\u304f\u3042\u308b new \u3092\u547c\u3076\u3060\u3051\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u52d5\u4f5c\u3059\u308b\u305f\u3081\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002","title":"4. \u578b\u5236\u7d04\u306e\u3042\u308b\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u306e\u4ee3\u5165"},{"location":"syntax_and_semantics/type_inference.html#5-assigning-a-variable-that-is-a-method-parameter-with-a-default-value","text":"\u6b21\u306e\u4f8b\u3067\u3001 name \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u3001\u305d\u308c\u304c @name \u306b\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u7d50\u679c String \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize ( name = \"John Doe\" ) @name = name end end \u3053\u308c\u306f\u77ed\u304b\u3044\u66f8\u304d\u65b9\u3092\u3057\u3066\u3082\u540c\u69d8\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002 class Person def initialize ( @name = \"John Doe\" ) end end The default parameter value can also be a Type.new(...) method or a class method with a return type restriction.","title":"5. Assigning a variable that is a method parameter with a default value"},{"location":"syntax_and_semantics/type_inference.html#6-lib","text":"lib \u95a2\u6570 \u306f\u660e\u793a\u7684\u306a\u578b\u3092\u6301\u3064\u305f\u3081\u3001\u305d\u308c\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4ee3\u5165\u3055\u308c\u305f\u3068\u304d\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u623b\u308a\u5024\u306e\u578b\u3092\u4e88\u60f3\u3067\u304d\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u3001 @age \u306f Int32 \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize @age = LibPerson . compute_default_age end end lib LibPerson fun compute_default_age : Int32 end","title":"6. lib \u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u306e\u4ee3\u5165"},{"location":"syntax_and_semantics/type_inference.html#7-lib-out","text":"lib \u95a2\u6570 \u306f\u660e\u793a\u7684\u306a\u578b\u3092\u6301\u3064\u305f\u3081\u3001\u30dd\u30a4\u30f3\u30bf\u578b\u306e\u5f15\u6570\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u6240\u3067 out \u5f62\u5f0f\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u304c\u6e21\u3055\u308c\u305f\u3068\u304d\u3001\u305d\u306e\u30dd\u30a4\u30f3\u30bf\u578b\u3092\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3057\u305f\u3082\u306e\u3068\u3057\u3066\u4e88\u60f3\u3057\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u3001 @age \u306f Int32 \u306b\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 class Person def initialize LibPerson . compute_default_age ( out @age ) end end lib LibPerson fun compute_default_age ( age_ptr : Int32 * ) end","title":"7. lib \u5f0f\u306e out \u306e\u5229\u7528"},{"location":"syntax_and_semantics/type_inference.html#_4","text":"\u306a\u308b\u3079\u304f\u660e\u793a\u7684\u306a\u578b\u5236\u7d04\u3092\u5c11\u306a\u304f\u3067\u304d\u308b\u3088\u3046\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u8ce2\u304f\u52d5\u4f5c\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 if \u5f0f\u306e then \u7bc0\u3068 else \u7bc0\u3067\u578b\u63a8\u8ad6\u3055\u308c\u305f\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002 class Person def initialize @age = some_condition ? 1 : 2 end end \u4e0a\u8a18\u306e if (\u6b63\u78ba\u306b\u306f\u53c2\u8003\u6f14\u7b97\u5b50\u3067\u3059\u304c if \u3068\u540c\u69d8\u3067\u3059) \u306f\u6574\u6570\u30ea\u30c6\u30e9\u30eb\u3092\u8fd4\u3059\u306e\u3067\u3001 @age \u306f\u6b63\u3057\u304f Int32 \u3068\u63a8\u8ad6\u3055\u308c\u3001\u578b\u5236\u7d04\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 \u4ed6\u306b\u3082 || \u3084 ||= \u306e\u5834\u5408\u306b\u3082\u4e0a\u624b\u304f\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 class SomeObject def lucky_number @lucky_number ||= 42 end end \u4e0a\u306e\u4f8b\u3067 @lucky_number \u306f Int32 | Nil \u3068\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u521d\u671f\u5316\u304c\u9045\u5ef6\u3055\u308c\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3057\u3087\u3046\u3002 \u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3068\u3063\u3066 (\u305d\u3057\u3066\u4eba\u9593\u304b\u3089\u3057\u3066\u3082) \u5bb9\u6613\u306a\u5834\u5408\u3001\u5b9a\u6570\u3092\u4f7f\u3063\u305f\u5834\u5408\u3082\u4e0a\u624b\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002 class SomeObject DEFAULT_LUCKY_NUMBER = 42 def initialize ( @lucky_number = DEFAULT_LUCKY_NUMBER ) end end \u3053\u3053\u3067\u306f\u898f\u52475 (\u5f15\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024) \u304c\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u5b9a\u6570\u304c\u6574\u6570\u30ea\u30c6\u30e9\u30eb\u306b\u89e3\u6c7a\u3055\u308c\u308b\u306e\u3067\u3001 @lucky_number \u306f Int32 \u3068\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002","title":"\u305d\u306e\u4ed6\u306e\u898f\u5247"},{"location":"syntax_and_semantics/type_reflection.html","text":"\u578b\u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3 Crystal \u306f\u578b\u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3084\u30ad\u30e3\u30b9\u30c8\u3001\u305d\u3057\u3066\u30a4\u30f3\u30c8\u30ed\u30b9\u30da\u30af\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u57fa\u672c\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u578b\u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3"},{"location":"syntax_and_semantics/type_reflection.html#_1","text":"Crystal \u306f\u578b\u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3084\u30ad\u30e3\u30b9\u30c8\u3001\u305d\u3057\u3066\u30a4\u30f3\u30c8\u30ed\u30b9\u30da\u30af\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u57fa\u672c\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u578b\u306e\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3"},{"location":"syntax_and_semantics/type_restrictions.html","text":"\u578b\u5236\u7d04 \u578b\u5236\u7d04\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u9069\u7528\u3055\u308c\u3066\u3001\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u578b\u3092\u5236\u7d04\u3059\u308b\u3082\u306e\u3067\u3059\u3002 def add ( x : Number , y : Number ) x + y end # Ok add 1 , 2 # Error: no overload matches 'add' with types Bool, Bool add true , false \u305f\u3060\u3057\u3001 add \u306b\u578b\u5236\u7d04\u3092\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u3067\u3082\u3001\u3053\u306e\u30b3\u30fc\u30c9\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002 def add ( x , y ) x + y end add true , false \u3053\u306e\u3068\u304d\u4ee5\u4e0b\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002 Error in foo.cr:6: instantiating 'add(Bool, Bool)' add true, false ^~~ in foo.cr:2: undefined method '+' for Bool x + y ^ \u3053\u306e\u7406\u7531\u306f\u3001 add \u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5f15\u6570\u306e\u578b\u306b\u3057\u305f\u304c\u3063\u3066\u5b9f\u4f53\u5316\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002\u7570\u306a\u308b\u578b\u3092\u4e0e\u3048\u305f\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u305d\u308c\u305e\u308c\u5225\u306e\u3082\u306e\u3068\u3057\u3066\u5b9f\u4f53\u5316\u3055\u308c\u307e\u3059\u3002 \u524d\u8005\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u65b9\u304c\u3088\u308a\u660e\u5feb\u3067\u3042\u308b\u3068\u3044\u3046\u5c11\u3057\u306e\u9055\u3044\u306f\u3042\u308b\u3082\u306e\u306e\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3068\u3044\u3046\u70b9\u3067\u306f\u3001\u3053\u308c\u3089\u306f\u3069\u3061\u3089\u3082\u5b89\u5168\u306a\u5b9a\u7fa9\u306e\u3057\u304b\u305f\u3067\u3042\u308b\u3068\u8a00\u3048\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u901a\u5e38\u306f\u578b\u5236\u7d04\u3092\u4f7f\u308f\u305a\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u3068\u304d\u306b\u306e\u307f\u4f7f\u7528\u3059\u308b\u304f\u3089\u3044\u304c\u597d\u307e\u3057\u3044\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u65b9\u304c\u3088\u308a\u6c4e\u7528\u7684\u3067\u3001\u518d\u5229\u7528\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 Number \u3067\u306f\u306a\u3044\u30af\u30e9\u30b9\u304c + \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\u3092\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3082\u3057 add \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u578b\u5236\u7d04\u3092\u6301\u305f\u306a\u3044\u5834\u5408\u3001\u305d\u306e\u30af\u30e9\u30b9\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u304c\u3001 add \u30e1\u30bd\u30c3\u30c9\u304c\u578b\u5236\u7d04\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u305d\u308c\u304c\u3067\u304d\u307e\u305b\u3093\u3002 # + \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u3051\u308c\u3069 Number \u3067\u306f\u306a\u3044\u30af\u30e9\u30b9 class Six def + ( other ) 6 + other end end # \u578b\u5236\u7d04\u3092\u6301\u305f\u306a\u3044 add \u30e1\u30bd\u30c3\u30c9 def add ( x , y ) x + y end # OK add Six . new , 10 # \u578b\u5236\u7d04\u3092\u6301\u3064 add \u30e1\u30bd\u30c3\u30c9 def restricted_add ( x : Number , y : Number ) x + y end # Error: no overload matches 'restricted_add' with types Six, Int32 restricted_add Six . new , 10 \u578b\u5236\u7d04\u306b\u6307\u5b9a\u3059\u308b\u578b\u306e\u8a18\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5b9f\u969b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u672c\u4f53\u3067\u306e\u5f15\u6570\u306e\u578b\u304c\u578b\u5236\u7d04\u306b\u3088\u3063\u3066\u5236\u7d04\u3055\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u306f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 def handle_path ( path : String ) path = Path . new ( path ) # *path* \u306f\u3053\u308c\u306b\u3088\u3063\u3066 Path \u578b\u306b\u306a\u3063\u305f # *path* \u3092\u4f7f\u3046 end self \u578b\u5236\u7d04 self \u3068\u3044\u3046\u7279\u5225\u306a\u578b\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002 class Person def == ( other : self ) other . name == name end def == ( other ) false end end john = Person . new \"John\" another_john = Person . new \"John\" peter = Person . new \"Peter\" john == another_john # => true john == peter # => false (\u540d\u524d\u304c\u7570\u306a\u308b\u305f\u3081) john == 1 # => false (1 \u306f Person \u578b\u3067\u306f\u306a\u3044\u305f\u3081) \u4e0a\u8a18\u306e\u4f8b\u3067\u306f self \u3092\u6307\u5b9a\u3059\u308b\u306e\u306f\u3001\u305d\u306e\u307e\u307e Person \u3068\u66f8\u304f\u3053\u3068\u3068\u540c\u3058\u3067\u3059\u3002\u3057\u304b\u3057\u3001 self \u3068\u66f8\u304f\u3053\u3068\u306f\u6700\u7d42\u7684\u306b\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u969b\u306e\u81ea\u8eab\u306e\u578b\u3068\u306a\u308b\u306e\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u306e\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002 \u307e\u305f\u3001\u3053\u308c\u306f\u88dc\u8db3\u3067\u3059\u304c\u3001 Person \u306f Reference \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u5b9f\u969b\u306b\u306f2\u3064\u76ee\u306e == \u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u540c\u69d8\u306e\u30e1\u30bd\u30c3\u30c9\u304c Reference \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u305d\u3057\u3066\u3001\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3082 self \u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u578b\u3092\u8868\u3059\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 class Person getter name : String def initialize ( @name ) end def self . compare ( p1 : self , p2 : self ) p1 . name == p2 . name end end john = Person . new \"John\" peter = Person . new \"Peter\" Person . compare ( john , peter ) # OK \u5236\u7d04\u306e\u5bfe\u8c61\u3092 Person \u30af\u30e9\u30b9\u306b\u3059\u308b\u5834\u5408\u306b\u306f\u3001 self.class \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6b21\u3067\u578b\u5236\u7d04\u306b\u304a\u3051\u308b .class \u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u306b\u3064\u3044\u3066\u306f\u8aac\u660e\u3057\u307e\u3059\u3002 \u30af\u30e9\u30b9\u306b\u3088\u308b\u5236\u7d04 \u4f8b\u3048\u3070 Int32 \u3092\u578b\u5236\u7d04\u306b\u6307\u5b9a\u3057\u305f\u3068\u304d\u3001\u30e1\u30bd\u30c3\u30c9\u306f Int32 \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u307f\u3057\u304b\u53d7\u3051\u5165\u308c\u307e\u305b\u3093\u3002 def foo ( x : Int32 ) end foo 1 # OK foo \"hello\" # Error \u3082\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u304c(\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u306a\u304f) Int32 \u30af\u30e9\u30b9\u3060\u3051\u3092\u53d7\u3051\u5165\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u5834\u5408\u3001 .class \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 def foo ( x : Int32 . class ) end foo Int32 # OK foo String # Error \u3053\u308c\u306f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u306a\u304f\u578b\u306b\u3088\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u305f\u3044\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002 def foo ( x : Int32 . class ) puts \"Got Int32\" end def foo ( x : String . class ) puts \"Got String\" end foo Int32 # \"Got Int32\" \u3068\u8868\u793a foo String # \"Got String\" \u3068\u8868\u793a \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3067\u306e\u578b\u5236\u7d04 \u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3067\u3082\u578b\u5236\u7d04\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def foo ( * args : Int32 ) end def foo ( * args : String ) end foo 1 , 2 , 3 # OK, invokes first overload foo \"a\" , \"b\" , \"c\" # OK, invokes second overload foo 1 , 2 , \"hello\" # Error foo () # Error \u3053\u306e\u3088\u3046\u306b\u578b\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30bf\u30d7\u30eb\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u305d\u306e\u578b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u7a7a\u306e\u30bf\u30d7\u30eb\u306f\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u30de\u30c3\u30c1\u3057\u307e\u305b\u3093\u3002\u3082\u3057\u7a7a\u306e\u30bf\u30d7\u30eb\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u3082\u30461\u3064\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 def foo # \u30bf\u30d7\u30eb\u304c\u7a7a\u306e\u5834\u5408 end \u3069\u3093\u306a\u578b\u306e1\u3064\u4ee5\u4e0a\u306e\u5f15\u6570\u306b\u5bfe\u3057\u3066\u3082\u30de\u30c3\u30c1\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u5834\u5408\u3001 Object \u3092\u578b\u5236\u7d04\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def foo ( * args : Object ) end foo () # Error foo ( 1 ) # OK foo ( 1 , \"x\" ) # OK \u81ea\u7531\u5909\u6570 forall \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u578b\u5236\u7d04\u3067\u5f15\u6570\u306e\u578b\u3084\u578b\u306e\u4e00\u90e8\u5206\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def foo ( x : T ) forall T T end foo ( 1 ) # => Int32 foo ( \"hello\" ) # => String \u3053\u3053\u3067\u3001 T \u306f\u5b9f\u4f53\u5316\u306e\u969b\u306b\u5b9f\u969b\u306b\u5229\u7528\u3055\u308c\u305f\u578b\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u81ea\u7531\u5909\u6570\u306f\u3001\u578b\u5236\u7d04\u306e\u4e2d\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002 def foo ( x : Array ( T )) forall T T end foo ( [ 1 , 2 ] ) # => Int32 foo ( [ 1 , \"a\" ] ) # => (Int32 | String) \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u578b\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u306e\u578b\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u3001\u81ea\u7531\u5909\u6570\u306b .class \u3092\u4ed8\u3051\u305f\u3082\u306e\u3092\u578b\u5236\u7d04\u306b\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 def foo ( x : T . class ) forall T Array ( T ) end foo ( Int32 ) # => Array(Int32) foo ( String ) # => Array(String) \u8907\u6570\u306e\u5f15\u6570\u306b\u5bfe\u3057\u3066\u3001\u8907\u6570\u306e\u81ea\u7531\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def push ( element : T , array : Array ( T )) forall T array << element end push ( 4 , [ 1 , 2 , 3 ] ) # OK push ( \"oops\" , [ 1 , 2 , 3 ] ) # Error","title":"\u578b\u5236\u7d04"},{"location":"syntax_and_semantics/type_restrictions.html#_1","text":"\u578b\u5236\u7d04\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u9069\u7528\u3055\u308c\u3066\u3001\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u578b\u3092\u5236\u7d04\u3059\u308b\u3082\u306e\u3067\u3059\u3002 def add ( x : Number , y : Number ) x + y end # Ok add 1 , 2 # Error: no overload matches 'add' with types Bool, Bool add true , false \u305f\u3060\u3057\u3001 add \u306b\u578b\u5236\u7d04\u3092\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u3067\u3082\u3001\u3053\u306e\u30b3\u30fc\u30c9\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002 def add ( x , y ) x + y end add true , false \u3053\u306e\u3068\u304d\u4ee5\u4e0b\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002 Error in foo.cr:6: instantiating 'add(Bool, Bool)' add true, false ^~~ in foo.cr:2: undefined method '+' for Bool x + y ^ \u3053\u306e\u7406\u7531\u306f\u3001 add \u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5f15\u6570\u306e\u578b\u306b\u3057\u305f\u304c\u3063\u3066\u5b9f\u4f53\u5316\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002\u7570\u306a\u308b\u578b\u3092\u4e0e\u3048\u305f\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u305d\u308c\u305e\u308c\u5225\u306e\u3082\u306e\u3068\u3057\u3066\u5b9f\u4f53\u5316\u3055\u308c\u307e\u3059\u3002 \u524d\u8005\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u65b9\u304c\u3088\u308a\u660e\u5feb\u3067\u3042\u308b\u3068\u3044\u3046\u5c11\u3057\u306e\u9055\u3044\u306f\u3042\u308b\u3082\u306e\u306e\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3068\u3044\u3046\u70b9\u3067\u306f\u3001\u3053\u308c\u3089\u306f\u3069\u3061\u3089\u3082\u5b89\u5168\u306a\u5b9a\u7fa9\u306e\u3057\u304b\u305f\u3067\u3042\u308b\u3068\u8a00\u3048\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u901a\u5e38\u306f\u578b\u5236\u7d04\u3092\u4f7f\u308f\u305a\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u3068\u304d\u306b\u306e\u307f\u4f7f\u7528\u3059\u308b\u304f\u3089\u3044\u304c\u597d\u307e\u3057\u3044\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u65b9\u304c\u3088\u308a\u6c4e\u7528\u7684\u3067\u3001\u518d\u5229\u7528\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 Number \u3067\u306f\u306a\u3044\u30af\u30e9\u30b9\u304c + \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\u3092\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3082\u3057 add \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u578b\u5236\u7d04\u3092\u6301\u305f\u306a\u3044\u5834\u5408\u3001\u305d\u306e\u30af\u30e9\u30b9\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u304c\u3001 add \u30e1\u30bd\u30c3\u30c9\u304c\u578b\u5236\u7d04\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u305d\u308c\u304c\u3067\u304d\u307e\u305b\u3093\u3002 # + \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u3051\u308c\u3069 Number \u3067\u306f\u306a\u3044\u30af\u30e9\u30b9 class Six def + ( other ) 6 + other end end # \u578b\u5236\u7d04\u3092\u6301\u305f\u306a\u3044 add \u30e1\u30bd\u30c3\u30c9 def add ( x , y ) x + y end # OK add Six . new , 10 # \u578b\u5236\u7d04\u3092\u6301\u3064 add \u30e1\u30bd\u30c3\u30c9 def restricted_add ( x : Number , y : Number ) x + y end # Error: no overload matches 'restricted_add' with types Six, Int32 restricted_add Six . new , 10 \u578b\u5236\u7d04\u306b\u6307\u5b9a\u3059\u308b\u578b\u306e\u8a18\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5b9f\u969b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u672c\u4f53\u3067\u306e\u5f15\u6570\u306e\u578b\u304c\u578b\u5236\u7d04\u306b\u3088\u3063\u3066\u5236\u7d04\u3055\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u306f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 def handle_path ( path : String ) path = Path . new ( path ) # *path* \u306f\u3053\u308c\u306b\u3088\u3063\u3066 Path \u578b\u306b\u306a\u3063\u305f # *path* \u3092\u4f7f\u3046 end","title":"\u578b\u5236\u7d04"},{"location":"syntax_and_semantics/type_restrictions.html#self","text":"self \u3068\u3044\u3046\u7279\u5225\u306a\u578b\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002 class Person def == ( other : self ) other . name == name end def == ( other ) false end end john = Person . new \"John\" another_john = Person . new \"John\" peter = Person . new \"Peter\" john == another_john # => true john == peter # => false (\u540d\u524d\u304c\u7570\u306a\u308b\u305f\u3081) john == 1 # => false (1 \u306f Person \u578b\u3067\u306f\u306a\u3044\u305f\u3081) \u4e0a\u8a18\u306e\u4f8b\u3067\u306f self \u3092\u6307\u5b9a\u3059\u308b\u306e\u306f\u3001\u305d\u306e\u307e\u307e Person \u3068\u66f8\u304f\u3053\u3068\u3068\u540c\u3058\u3067\u3059\u3002\u3057\u304b\u3057\u3001 self \u3068\u66f8\u304f\u3053\u3068\u306f\u6700\u7d42\u7684\u306b\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u969b\u306e\u81ea\u8eab\u306e\u578b\u3068\u306a\u308b\u306e\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u306e\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002 \u307e\u305f\u3001\u3053\u308c\u306f\u88dc\u8db3\u3067\u3059\u304c\u3001 Person \u306f Reference \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u5b9f\u969b\u306b\u306f2\u3064\u76ee\u306e == \u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u540c\u69d8\u306e\u30e1\u30bd\u30c3\u30c9\u304c Reference \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u305d\u3057\u3066\u3001\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3082 self \u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u578b\u3092\u8868\u3059\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 class Person getter name : String def initialize ( @name ) end def self . compare ( p1 : self , p2 : self ) p1 . name == p2 . name end end john = Person . new \"John\" peter = Person . new \"Peter\" Person . compare ( john , peter ) # OK \u5236\u7d04\u306e\u5bfe\u8c61\u3092 Person \u30af\u30e9\u30b9\u306b\u3059\u308b\u5834\u5408\u306b\u306f\u3001 self.class \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6b21\u3067\u578b\u5236\u7d04\u306b\u304a\u3051\u308b .class \u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u306b\u3064\u3044\u3066\u306f\u8aac\u660e\u3057\u307e\u3059\u3002","title":"self \u578b\u5236\u7d04"},{"location":"syntax_and_semantics/type_restrictions.html#_2","text":"\u4f8b\u3048\u3070 Int32 \u3092\u578b\u5236\u7d04\u306b\u6307\u5b9a\u3057\u305f\u3068\u304d\u3001\u30e1\u30bd\u30c3\u30c9\u306f Int32 \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u307f\u3057\u304b\u53d7\u3051\u5165\u308c\u307e\u305b\u3093\u3002 def foo ( x : Int32 ) end foo 1 # OK foo \"hello\" # Error \u3082\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u304c(\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u306a\u304f) Int32 \u30af\u30e9\u30b9\u3060\u3051\u3092\u53d7\u3051\u5165\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u5834\u5408\u3001 .class \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 def foo ( x : Int32 . class ) end foo Int32 # OK foo String # Error \u3053\u308c\u306f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u306a\u304f\u578b\u306b\u3088\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u305f\u3044\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002 def foo ( x : Int32 . class ) puts \"Got Int32\" end def foo ( x : String . class ) puts \"Got String\" end foo Int32 # \"Got Int32\" \u3068\u8868\u793a foo String # \"Got String\" \u3068\u8868\u793a","title":"\u30af\u30e9\u30b9\u306b\u3088\u308b\u5236\u7d04"},{"location":"syntax_and_semantics/type_restrictions.html#_3","text":"\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3067\u3082\u578b\u5236\u7d04\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def foo ( * args : Int32 ) end def foo ( * args : String ) end foo 1 , 2 , 3 # OK, invokes first overload foo \"a\" , \"b\" , \"c\" # OK, invokes second overload foo 1 , 2 , \"hello\" # Error foo () # Error \u3053\u306e\u3088\u3046\u306b\u578b\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30bf\u30d7\u30eb\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u305d\u306e\u578b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u7a7a\u306e\u30bf\u30d7\u30eb\u306f\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u30de\u30c3\u30c1\u3057\u307e\u305b\u3093\u3002\u3082\u3057\u7a7a\u306e\u30bf\u30d7\u30eb\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u3082\u30461\u3064\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 def foo # \u30bf\u30d7\u30eb\u304c\u7a7a\u306e\u5834\u5408 end \u3069\u3093\u306a\u578b\u306e1\u3064\u4ee5\u4e0a\u306e\u5f15\u6570\u306b\u5bfe\u3057\u3066\u3082\u30de\u30c3\u30c1\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u5834\u5408\u3001 Object \u3092\u578b\u5236\u7d04\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def foo ( * args : Object ) end foo () # Error foo ( 1 ) # OK foo ( 1 , \"x\" ) # OK","title":"\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b\u3067\u306e\u578b\u5236\u7d04"},{"location":"syntax_and_semantics/type_restrictions.html#_4","text":"forall \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u578b\u5236\u7d04\u3067\u5f15\u6570\u306e\u578b\u3084\u578b\u306e\u4e00\u90e8\u5206\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def foo ( x : T ) forall T T end foo ( 1 ) # => Int32 foo ( \"hello\" ) # => String \u3053\u3053\u3067\u3001 T \u306f\u5b9f\u4f53\u5316\u306e\u969b\u306b\u5b9f\u969b\u306b\u5229\u7528\u3055\u308c\u305f\u578b\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u81ea\u7531\u5909\u6570\u306f\u3001\u578b\u5236\u7d04\u306e\u4e2d\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002 def foo ( x : Array ( T )) forall T T end foo ( [ 1 , 2 ] ) # => Int32 foo ( [ 1 , \"a\" ] ) # => (Int32 | String) \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u578b\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u306e\u578b\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u3001\u81ea\u7531\u5909\u6570\u306b .class \u3092\u4ed8\u3051\u305f\u3082\u306e\u3092\u578b\u5236\u7d04\u306b\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 def foo ( x : T . class ) forall T Array ( T ) end foo ( Int32 ) # => Array(Int32) foo ( String ) # => Array(String) \u8907\u6570\u306e\u5f15\u6570\u306b\u5bfe\u3057\u3066\u3001\u8907\u6570\u306e\u81ea\u7531\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def push ( element : T , array : Array ( T )) forall T array << element end push ( 4 , [ 1 , 2 , 3 ] ) # OK push ( \"oops\" , [ 1 , 2 , 3 ] ) # Error","title":"\u81ea\u7531\u5909\u6570"},{"location":"syntax_and_semantics/typeof.html","text":"typeof typeof \u5f0f\u306f\u3042\u308b\u5f0f\u306e\u578b\u3092\u8fd4\u3057\u307e\u3059\u3002 a = 1 b = typeof ( a ) # => Int32 \u8907\u6570\u306e\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u305d\u308c\u305e\u308c\u306e\u5f0f\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u578b\u3068\u306a\u308a\u307e\u3059\u3002 typeof ( 1 , \"a\" , 'a' ) # => (Int32 | String | Char) \u3053\u308c\u306f\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u578b\u63a8\u8ad6\u306e\u529b\u3092\u5229\u7528\u3057\u305f\u3044\u3068\u304d\u306b\u3057\u3070\u3057\u3070\u4f7f\u308f\u308c\u307e\u3059\u3002 hash = {} of Int32 => String another_hash = typeof ( hash ) . new # :: Hash(Int32, String) typeof \u306f\u5b9f\u969b\u306b\u306f\u5f0f\u3092\u8a55\u4fa1\u305b\u305a\u3001\u5229\u7528\u3055\u308c\u308b\u306e\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u3068\u304d\u306e\u307f\u3067\u3059\u3002 \u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001\u30cd\u30b9\u30c8\u3055\u308c\u305f\u578b\u304b\u3089\u3001\u518d\u5e30\u7684\u306b\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b) \u3092\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002 class Array def self . elem_type ( typ ) if typ . is_a? ( Array ) elem_type ( typ . first ) else typ end end end nest = [ 1 , [ \"b\" , [ :c , [ 'd' ]]]] flat = Array ( typeof ( Array . elem_type ( nest ))) . new typeof ( nest ) # => Array(Int32 | Array(String | Array(Symbol | Array(Char)))) typeof ( flat ) # => Array(String | Int32 | Symbol | Char) \u3053\u306e\u5f0f\u306f \u578b\u306e\u6587\u6cd5 \u3067\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002","title":"typeof"},{"location":"syntax_and_semantics/typeof.html#typeof","text":"typeof \u5f0f\u306f\u3042\u308b\u5f0f\u306e\u578b\u3092\u8fd4\u3057\u307e\u3059\u3002 a = 1 b = typeof ( a ) # => Int32 \u8907\u6570\u306e\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u305d\u308c\u305e\u308c\u306e\u5f0f\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u578b\u3068\u306a\u308a\u307e\u3059\u3002 typeof ( 1 , \"a\" , 'a' ) # => (Int32 | String | Char) \u3053\u308c\u306f\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u578b\u63a8\u8ad6\u306e\u529b\u3092\u5229\u7528\u3057\u305f\u3044\u3068\u304d\u306b\u3057\u3070\u3057\u3070\u4f7f\u308f\u308c\u307e\u3059\u3002 hash = {} of Int32 => String another_hash = typeof ( hash ) . new # :: Hash(Int32, String) typeof \u306f\u5b9f\u969b\u306b\u306f\u5f0f\u3092\u8a55\u4fa1\u305b\u305a\u3001\u5229\u7528\u3055\u308c\u308b\u306e\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u3068\u304d\u306e\u307f\u3067\u3059\u3002 \u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001\u30cd\u30b9\u30c8\u3055\u308c\u305f\u578b\u304b\u3089\u3001\u518d\u5e30\u7684\u306b\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b) \u3092\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002 class Array def self . elem_type ( typ ) if typ . is_a? ( Array ) elem_type ( typ . first ) else typ end end end nest = [ 1 , [ \"b\" , [ :c , [ 'd' ]]]] flat = Array ( typeof ( Array . elem_type ( nest ))) . new typeof ( nest ) # => Array(Int32 | Array(String | Array(Symbol | Array(Char)))) typeof ( flat ) # => Array(String | Int32 | Symbol | Char) \u3053\u306e\u5f0f\u306f \u578b\u306e\u6587\u6cd5 \u3067\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002","title":"typeof"},{"location":"syntax_and_semantics/types_and_methods.html","text":"\u578b\u3068\u30e1\u30bd\u30c3\u30c9 \u3053\u3053\u304b\u3089\u306e\u7ae0\u306f \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u306b\u3064\u3044\u3066\u306e\u57fa\u672c\u7684\u306a\u77e5\u8b58\u3068\u3057\u3066\u3001 \u30af\u30e9\u30b9 \u3084 \u30e1\u30bd\u30c3\u30c9 \u3068\u3044\u3063\u305f\u6982\u5ff5\u3092\u7406\u89e3\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u578b\u3068\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/types_and_methods.html#_1","text":"\u3053\u3053\u304b\u3089\u306e\u7ae0\u306f \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u306b\u3064\u3044\u3066\u306e\u57fa\u672c\u7684\u306a\u77e5\u8b58\u3068\u3057\u3066\u3001 \u30af\u30e9\u30b9 \u3084 \u30e1\u30bd\u30c3\u30c9 \u3068\u3044\u3063\u305f\u6982\u5ff5\u3092\u7406\u89e3\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u578b\u3068\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/union_types.html","text":"\u30e6\u30cb\u30aa\u30f3\u578b \u5909\u6570\u3084\u5f0f\u306e\u578b\u306f\u8907\u6570\u306e\u5f0f\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u547c\u3073\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u7570\u306a\u308b if \u306e\u5206\u5c90\u7bc0\u3067\u540c\u3058\u5909\u6570\u306b\u4ee3\u5165\u3057\u305f\u3068\u304d\u3092\u8003\u3048\u307e\u3059\u3002 if 1 + 2 == 3 a = 1 else a = \"hello\" end a # : Int32 | String if \u5f0f\u306e\u7d42\u308f\u308a\u3067\u306f\u3001 a \u306f Int32 | String \u3068\u3044\u3046\u578b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u578b\u306f\u300cInt32 \u3068 String \u306e\u30e6\u30cb\u30aa\u30f3\u578b\u300d\u3092\u8868\u3057\u307e\u3059\u3002\u30e6\u30cb\u30aa\u30f3\u578b\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u4f5c\u3089\u308c\u307e\u3059\u3002\u5b9f\u884c\u6642\u306b\u306f a \u306f\u305f\u30601\u3064\u306e\u578b\u306e\u5024\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u578b\u306f class \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 # \u5b9f\u884c\u6642\u306e\u578b a . class # => Int32 \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b\u306f typeof \u3092\u4f7f\u3046\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 # \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b typeof ( a ) # => Int32 | String \u30e6\u30cb\u30aa\u30f3\u578b\u306f\u3044\u304f\u3089\u3067\u3082\u305f\u304f\u3055\u3093\u306e\u578b\u304b\u3089\u69cb\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u5f0f\u306b\u5bfe\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u3001\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u4e2d\u306e\u3059\u3079\u3066\u306e\u578b\u3067\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u98db\u3073\u51fa\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u305d\u306e\u547c\u3073\u51fa\u3057\u306e\u578b\u306f\u3001\u3059\u3079\u3066\u306e\u578b\u3067\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u306e\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306b\u306a\u308a\u307e\u3059\u3002 # to_s \u306f Int32 \u3068 String \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u3069\u3061\u3089\u3082 String \u3092\u8fd4\u3059 a . to_s # => String a + 1 # String#+(Int32) \u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3001\u5909\u6570\u3092\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 # \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b\u3092\u8a2d\u5b9a\u3059\u308b a = 0 . as ( Int32 | Nil | String ) typeof ( a ) # => Int32 | Nil | String \u30e6\u30cb\u30aa\u30f3\u578b\u306b\u95a2\u3059\u308b\u898f\u5247 \u4e00\u822c\u7684\u306b\u3001 T1 \u3068 T2 \u304b\u3089\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u69cb\u6210\u3059\u308b\u3068\u304d\u3001\u305d\u306e\u7d50\u679c\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306f T1 | T2 \u3068\u306a\u308a\u307e\u3059\u3002\u3067\u3059\u304c\u3001\u3044\u304f\u3064\u304b\u306e\u5834\u5408\u306b\u305d\u308c\u3068\u306f\u7570\u306a\u308b\u578b\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u7d99\u627f\u5143\u306e\u540c\u3058\u30af\u30e9\u30b9/\u69cb\u9020\u4f53\u306e\u30e6\u30cb\u30aa\u30f3\u578b T1 \u3068 T2 \u304c\u7d99\u627f\u5143\u3092\u5171\u6709\u3057\u3066\u3044\u3066\u3001\u5171\u901a\u3059\u308b\u7956\u5148\u306e\u578b Parent \u304c Reference \u3001 Struct \u3001 Int \u3001 Float \u3082\u3057\u304f\u306f Value \u3067\u306f\u306a\u3044\u3068\u304d\u30012\u3064\u304b\u3089\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u69cb\u6210\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u304d\u306e\u7d50\u679c\u306e\u578b\u306f Parent+ \u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u578b\u306f\u30d0\u30fc\u30c1\u30e3\u30eb\u578b\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u308c\u3092\u3001 Parent \u3082\u3057\u304f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u8868\u3059\u3082\u306e\u3068\u898b\u306a\u3057\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Foo end class Bar < Foo end class Baz < Foo end bar = Bar . new baz = Baz . new # \u3053\u3053\u3067 foo \u306e\u578b\u306f Bar | Baz \u3068\u306a\u308a\u305d\u3046\u3060\u304c\u3001 # Bar \u3082 Baz \u3082 Foo \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u3067\u3001 # \u7d50\u679c\u7684\u306b\u578b\u306f Foo+ \u3068\u306a\u308b\u3002 foo = rand < 0.5 ? bar : baz typeof ( foo ) # => Foo+ \u540c\u3058\u5927\u304d\u3055\u306e\u30bf\u30d7\u30eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b \u540c\u3058\u5927\u304d\u3055\u306e\u30bf\u30d7\u30eb\u540c\u58eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306f\u3001\u30bf\u30d7\u30eb\u306e\u5404\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u53d6\u3063\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 t1 = { 1 , \"hi\" } # Tuple(Int32, String) t2 = { true , nil } # Tuple(Bool, Nil) t3 = rand < 0.5 ? t1 : t2 typeof ( t3 ) # Tuple(Int32 | Bool, String | Nil) \u30ad\u30fc\u306e\u540c\u3058\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b \u30ad\u30fc\u306e\u540c\u3058(\u9806\u5e8f\u306f\u8003\u616e\u3057\u306a\u3044)\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u540c\u58eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306f\u3001\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u5bfe\u5fdc\u3059\u308b\u30ad\u30fc\u306e\u578b\u540c\u58eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002\u30ad\u30fc\u306e\u9806\u5e8f\u306f\u5de6\u8fba\u306e\u578b\u306e\u9806\u5e8f\u306e\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 t1 = { x : 1 , y : \"hi\" } # Tuple(x: Int32, y: String) t2 = { y : true , x : nil } # Tuple(y: Bool, x: Nil) t3 = rand < 0.5 ? t1 : t2 typeof ( t3 ) # NamedTuple(x: Int32 | Nil, y: String | Bool)","title":"\u30e6\u30cb\u30aa\u30f3\u578b"},{"location":"syntax_and_semantics/union_types.html#_1","text":"\u5909\u6570\u3084\u5f0f\u306e\u578b\u306f\u8907\u6570\u306e\u5f0f\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u547c\u3073\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u7570\u306a\u308b if \u306e\u5206\u5c90\u7bc0\u3067\u540c\u3058\u5909\u6570\u306b\u4ee3\u5165\u3057\u305f\u3068\u304d\u3092\u8003\u3048\u307e\u3059\u3002 if 1 + 2 == 3 a = 1 else a = \"hello\" end a # : Int32 | String if \u5f0f\u306e\u7d42\u308f\u308a\u3067\u306f\u3001 a \u306f Int32 | String \u3068\u3044\u3046\u578b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u578b\u306f\u300cInt32 \u3068 String \u306e\u30e6\u30cb\u30aa\u30f3\u578b\u300d\u3092\u8868\u3057\u307e\u3059\u3002\u30e6\u30cb\u30aa\u30f3\u578b\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u4f5c\u3089\u308c\u307e\u3059\u3002\u5b9f\u884c\u6642\u306b\u306f a \u306f\u305f\u30601\u3064\u306e\u578b\u306e\u5024\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u578b\u306f class \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 # \u5b9f\u884c\u6642\u306e\u578b a . class # => Int32 \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b\u306f typeof \u3092\u4f7f\u3046\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 # \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b typeof ( a ) # => Int32 | String \u30e6\u30cb\u30aa\u30f3\u578b\u306f\u3044\u304f\u3089\u3067\u3082\u305f\u304f\u3055\u3093\u306e\u578b\u304b\u3089\u69cb\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u5f0f\u306b\u5bfe\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u3001\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u4e2d\u306e\u3059\u3079\u3066\u306e\u578b\u3067\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u98db\u3073\u51fa\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u305d\u306e\u547c\u3073\u51fa\u3057\u306e\u578b\u306f\u3001\u3059\u3079\u3066\u306e\u578b\u3067\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u306e\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306b\u306a\u308a\u307e\u3059\u3002 # to_s \u306f Int32 \u3068 String \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u3069\u3061\u3089\u3082 String \u3092\u8fd4\u3059 a . to_s # => String a + 1 # String#+(Int32) \u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3001\u5909\u6570\u3092\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 # \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b\u3092\u8a2d\u5b9a\u3059\u308b a = 0 . as ( Int32 | Nil | String ) typeof ( a ) # => Int32 | Nil | String","title":"\u30e6\u30cb\u30aa\u30f3\u578b"},{"location":"syntax_and_semantics/union_types.html#_2","text":"\u4e00\u822c\u7684\u306b\u3001 T1 \u3068 T2 \u304b\u3089\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u69cb\u6210\u3059\u308b\u3068\u304d\u3001\u305d\u306e\u7d50\u679c\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306f T1 | T2 \u3068\u306a\u308a\u307e\u3059\u3002\u3067\u3059\u304c\u3001\u3044\u304f\u3064\u304b\u306e\u5834\u5408\u306b\u305d\u308c\u3068\u306f\u7570\u306a\u308b\u578b\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u30e6\u30cb\u30aa\u30f3\u578b\u306b\u95a2\u3059\u308b\u898f\u5247"},{"location":"syntax_and_semantics/union_types.html#_3","text":"T1 \u3068 T2 \u304c\u7d99\u627f\u5143\u3092\u5171\u6709\u3057\u3066\u3044\u3066\u3001\u5171\u901a\u3059\u308b\u7956\u5148\u306e\u578b Parent \u304c Reference \u3001 Struct \u3001 Int \u3001 Float \u3082\u3057\u304f\u306f Value \u3067\u306f\u306a\u3044\u3068\u304d\u30012\u3064\u304b\u3089\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u69cb\u6210\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u304d\u306e\u7d50\u679c\u306e\u578b\u306f Parent+ \u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u578b\u306f\u30d0\u30fc\u30c1\u30e3\u30eb\u578b\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u308c\u3092\u3001 Parent \u3082\u3057\u304f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u8868\u3059\u3082\u306e\u3068\u898b\u306a\u3057\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Foo end class Bar < Foo end class Baz < Foo end bar = Bar . new baz = Baz . new # \u3053\u3053\u3067 foo \u306e\u578b\u306f Bar | Baz \u3068\u306a\u308a\u305d\u3046\u3060\u304c\u3001 # Bar \u3082 Baz \u3082 Foo \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u3067\u3001 # \u7d50\u679c\u7684\u306b\u578b\u306f Foo+ \u3068\u306a\u308b\u3002 foo = rand < 0.5 ? bar : baz typeof ( foo ) # => Foo+","title":"\u7d99\u627f\u5143\u306e\u540c\u3058\u30af\u30e9\u30b9/\u69cb\u9020\u4f53\u306e\u30e6\u30cb\u30aa\u30f3\u578b"},{"location":"syntax_and_semantics/union_types.html#_4","text":"\u540c\u3058\u5927\u304d\u3055\u306e\u30bf\u30d7\u30eb\u540c\u58eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306f\u3001\u30bf\u30d7\u30eb\u306e\u5404\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3092\u53d6\u3063\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 t1 = { 1 , \"hi\" } # Tuple(Int32, String) t2 = { true , nil } # Tuple(Bool, Nil) t3 = rand < 0.5 ? t1 : t2 typeof ( t3 ) # Tuple(Int32 | Bool, String | Nil)","title":"\u540c\u3058\u5927\u304d\u3055\u306e\u30bf\u30d7\u30eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b"},{"location":"syntax_and_semantics/union_types.html#_5","text":"\u30ad\u30fc\u306e\u540c\u3058(\u9806\u5e8f\u306f\u8003\u616e\u3057\u306a\u3044)\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u540c\u58eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306f\u3001\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u5bfe\u5fdc\u3059\u308b\u30ad\u30fc\u306e\u578b\u540c\u58eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002\u30ad\u30fc\u306e\u9806\u5e8f\u306f\u5de6\u8fba\u306e\u578b\u306e\u9806\u5e8f\u306e\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 t1 = { x : 1 , y : \"hi\" } # Tuple(x: Int32, y: String) t2 = { y : true , x : nil } # Tuple(y: Bool, x: Nil) t3 = rand < 0.5 ? t1 : t2 typeof ( t3 ) # NamedTuple(x: Int32 | Nil, y: String | Bool)","title":"\u30ad\u30fc\u306e\u540c\u3058\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u30e6\u30cb\u30aa\u30f3\u578b"},{"location":"syntax_and_semantics/unless.html","text":"unless unless \u306f\u6761\u4ef6\u5f0f\u304c \u507d\u3068\u306a\u308b \u3068\u304d\u306bthen\u7bc0\u3092\u8a55\u4fa1\u3057\u3066\u3001\u305d\u3046\u3067\u306a\u3044\u3068\u304d\u306b else \u7bc0\u304c\u3042\u308c\u3070\u8a55\u4fa1\u3057\u307e\u3059\u3002\u8981\u3059\u308b\u306b\u3001 if \u3068\u53cd\u5bfe\u306e\u52d5\u304d\u3092\u3057\u307e\u3059\u3002 unless some_condition expression_when_falsey else expression_when_truthy end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058: if some_condition expression_when_truthy else expression_when_falsey end # \u3053\u306e\u3088\u3046\u306b\u5f8c\u7f6e\u3057\u3066\u3082\u4f7f\u3048\u308b close_door unless door_closed?","title":"unless"},{"location":"syntax_and_semantics/unless.html#unless","text":"unless \u306f\u6761\u4ef6\u5f0f\u304c \u507d\u3068\u306a\u308b \u3068\u304d\u306bthen\u7bc0\u3092\u8a55\u4fa1\u3057\u3066\u3001\u305d\u3046\u3067\u306a\u3044\u3068\u304d\u306b else \u7bc0\u304c\u3042\u308c\u3070\u8a55\u4fa1\u3057\u307e\u3059\u3002\u8981\u3059\u308b\u306b\u3001 if \u3068\u53cd\u5bfe\u306e\u52d5\u304d\u3092\u3057\u307e\u3059\u3002 unless some_condition expression_when_falsey else expression_when_truthy end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058: if some_condition expression_when_truthy else expression_when_falsey end # \u3053\u306e\u3088\u3046\u306b\u5f8c\u7f6e\u3057\u3066\u3082\u4f7f\u3048\u308b close_door unless door_closed?","title":"unless"},{"location":"syntax_and_semantics/unsafe.html","text":"\u5b89\u5168\u3067\u306a\u3044 (unsafe) \u30b3\u30fc\u30c9 \u672c\u8a00\u8a9e\u306b\u304a\u3044\u3066\u3001\u4ee5\u4e0b\u306f\u5b89\u5168\u3067\u306a\u3044 (unsafe) \u3068\u3055\u308c\u307e\u3059\u3002 \u751f\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3046\u30b3\u30fc\u30c9: Pointer \u578b\u3068 pointerof \u3002 allocate \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9 \u521d\u671f\u5316\u3057\u306a\u3044\u5909\u6570\u5ba3\u8a00 \u300c\u5b89\u5168\u3067\u306a\u3044\u300d\u3068\u3044\u3046\u306e\u306f\u3001\u30e1\u30e2\u30ea\u306e\u7834\u58ca\u3001\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u3001\u305d\u3057\u3066\u30af\u30e9\u30c3\u30b7\u30e5\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 ptr = pointerof ( a ) ptr [ 100_000 ] = 2 # \u672a\u5b9a\u7fa9\u306e\u632f\u821e\u3044\u306e\u3067\u3001\u304a\u305d\u3089\u304f\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u3092\u8d77\u3053\u3059 \u305f\u3060\u3001\u901a\u5e38\u306e\u30b3\u30fc\u30c9\u3067\u30dd\u30a4\u30f3\u30bf\u64cd\u4f5c\u3084\u521d\u671f\u5316\u3057\u306a\u3044\u5909\u6570\u3092\u6271\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u307e\u305f\u3001C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306f\u3001\u666e\u901a\u306f\u3001NULL \u30dd\u30a4\u30f3\u30bf\u3084\u30d0\u30a6\u30f3\u30c9\u30c1\u30a7\u30c3\u30af\u3092\u542b\u3080\u3088\u308a\u5b89\u5168\u306a\u30e9\u30c3\u30d1\u30fc\u3067\u5305\u307f\u307e\u3059\u3002 100% \u5b89\u5168\u306a\u8a00\u8a9e\u3068\u3044\u3046\u306e\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u30ed\u30fc\u30ec\u30d9\u30eb\u306a\u51e6\u7406\u3084\u3001OS \u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3001\u305d\u3057\u3066\u30dd\u30a4\u30f3\u30bf\u306e\u64cd\u4f5c\u3092\u3069\u3053\u304b\u3067\u5fc5\u305a\u542b\u307f\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u3089\u3092\u62bd\u8c61\u5316\u3057\u3001\u3088\u308a\u9ad8\u3044\u30ec\u30d9\u30eb\u3067\u306e\u64cd\u4f5c\u3092\u884c\u3044\u3001\u3055\u3089\u306b\u3001(\u6570\u5b66\u7684\u306a\u8a3c\u660e\u3084\u30c6\u30b9\u30c8\u3092\u901a\u3057\u3066) \u4f4e\u3044\u30ec\u30d9\u30eb\u306e\u5730\u76e4\u304c\u5b89\u5168\u306a\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308c\u3070\u3001\u81ea\u4fe1\u3092\u6301\u3063\u3066\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u5168\u4f53\u304c\u5b89\u5168\u3067\u3042\u308b\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002","title":"\u5b89\u5168\u3067\u306a\u3044 (unsafe) \u30b3\u30fc\u30c9"},{"location":"syntax_and_semantics/unsafe.html#unsafe","text":"\u672c\u8a00\u8a9e\u306b\u304a\u3044\u3066\u3001\u4ee5\u4e0b\u306f\u5b89\u5168\u3067\u306a\u3044 (unsafe) \u3068\u3055\u308c\u307e\u3059\u3002 \u751f\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3046\u30b3\u30fc\u30c9: Pointer \u578b\u3068 pointerof \u3002 allocate \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9 \u521d\u671f\u5316\u3057\u306a\u3044\u5909\u6570\u5ba3\u8a00 \u300c\u5b89\u5168\u3067\u306a\u3044\u300d\u3068\u3044\u3046\u306e\u306f\u3001\u30e1\u30e2\u30ea\u306e\u7834\u58ca\u3001\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u3001\u305d\u3057\u3066\u30af\u30e9\u30c3\u30b7\u30e5\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 a = 1 ptr = pointerof ( a ) ptr [ 100_000 ] = 2 # \u672a\u5b9a\u7fa9\u306e\u632f\u821e\u3044\u306e\u3067\u3001\u304a\u305d\u3089\u304f\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u3092\u8d77\u3053\u3059 \u305f\u3060\u3001\u901a\u5e38\u306e\u30b3\u30fc\u30c9\u3067\u30dd\u30a4\u30f3\u30bf\u64cd\u4f5c\u3084\u521d\u671f\u5316\u3057\u306a\u3044\u5909\u6570\u3092\u6271\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u307e\u305f\u3001C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306f\u3001\u666e\u901a\u306f\u3001NULL \u30dd\u30a4\u30f3\u30bf\u3084\u30d0\u30a6\u30f3\u30c9\u30c1\u30a7\u30c3\u30af\u3092\u542b\u3080\u3088\u308a\u5b89\u5168\u306a\u30e9\u30c3\u30d1\u30fc\u3067\u5305\u307f\u307e\u3059\u3002 100% \u5b89\u5168\u306a\u8a00\u8a9e\u3068\u3044\u3046\u306e\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u30ed\u30fc\u30ec\u30d9\u30eb\u306a\u51e6\u7406\u3084\u3001OS \u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3001\u305d\u3057\u3066\u30dd\u30a4\u30f3\u30bf\u306e\u64cd\u4f5c\u3092\u3069\u3053\u304b\u3067\u5fc5\u305a\u542b\u307f\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u3089\u3092\u62bd\u8c61\u5316\u3057\u3001\u3088\u308a\u9ad8\u3044\u30ec\u30d9\u30eb\u3067\u306e\u64cd\u4f5c\u3092\u884c\u3044\u3001\u3055\u3089\u306b\u3001(\u6570\u5b66\u7684\u306a\u8a3c\u660e\u3084\u30c6\u30b9\u30c8\u3092\u901a\u3057\u3066) \u4f4e\u3044\u30ec\u30d9\u30eb\u306e\u5730\u76e4\u304c\u5b89\u5168\u306a\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308c\u3070\u3001\u81ea\u4fe1\u3092\u6301\u3063\u3066\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u5168\u4f53\u304c\u5b89\u5168\u3067\u3042\u308b\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002","title":"\u5b89\u5168\u3067\u306a\u3044 (unsafe) \u30b3\u30fc\u30c9"},{"location":"syntax_and_semantics/until.html","text":"until until \u306f\u6761\u4ef6\u5f0f\u304c \u771f\u3068\u306a\u308b \u307e\u3067\u7e70\u308a\u8fd4\u3057\u672c\u4f53\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 until \u306f while \u306b\u6761\u4ef6\u5f0f\u3092\u5426\u5b9a\u3057\u305f\u3082\u306e\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 until some_condition do_this end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 while ! some_condition do_this end until \u306e\u4e2d\u3067\u3082 break \u3068 next \u306f\u5229\u7528\u3067\u304d\u307e\u3059\u3002","title":"until"},{"location":"syntax_and_semantics/until.html#until","text":"until \u306f\u6761\u4ef6\u5f0f\u304c \u771f\u3068\u306a\u308b \u307e\u3067\u7e70\u308a\u8fd4\u3057\u672c\u4f53\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 until \u306f while \u306b\u6761\u4ef6\u5f0f\u3092\u5426\u5b9a\u3057\u305f\u3082\u306e\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 until some_condition do_this end # \u4e0a\u8a18\u306f\u4ee5\u4e0b\u306b\u540c\u3058 while ! some_condition do_this end until \u306e\u4e2d\u3067\u3082 break \u3068 next \u306f\u5229\u7528\u3067\u304d\u307e\u3059\u3002","title":"until"},{"location":"syntax_and_semantics/virtual_and_abstract_types.html","text":"virtual \u578b\u3068 abstract \u578b \u3042\u308b\u5909\u6570\u304c\u3001\u540c\u4e00\u306e\u30af\u30e9\u30b9\u968e\u5c64\u4e0b\u306e\u7570\u306a\u308b\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3042\u308b\u3068\u304d\u3001\u305d\u306e\u578b\u306f virtual \u578b \u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u306f Reference \u3001 Value \u3001 Int \u305d\u3057\u3066 Float \u3092\u9664\u304f\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3057\u3087\u3046\u3002 class Animal end class Dog < Animal def talk \"Woof!\" end end class Cat < Animal def talk \"Miau\" end end class Person getter pet def initialize ( @name : String , @pet : Animal ) end end john = Person . new \"John\" , Dog . new peter = Person . new \"Peter\" , Cat . new \u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5bfe\u3057\u3066 tool hierarchy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 Person \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002 - class Object | +- class Reference | +- class Person @name : String @pet : Animal+ @pet \u304c Animal+ \u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u306e + \u306f virtual \u578b\u3067\u3042\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u300c Animal \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u4efb\u610f\u306e\u30af\u30e9\u30b9 ( Animal \u578b\u81ea\u8eab\u3092\u542b\u3080)\u300d\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u5e38\u306b\u3001\u540c\u4e00\u306e\u30af\u30e9\u30b9\u968e\u5c64\u4e0b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3092 virtual \u578b\u306b\u89e3\u6c7a\u3057\u307e\u3059\u3002 if some_condition pet = Dog . new else pet = Cat . new end # pet : Animal+ \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001 Reference \u3001 Value \u3001 Int \u3001 Float \u306e\u3044\u305a\u308c\u306e\u30af\u30e9\u30b9\u306e\u5834\u5408\u3092\u9664\u3044\u3066\u3001\u5171\u6709\u3059\u308b\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u304c\u3042\u308b\u5834\u5408\u306b\u5e38\u306b\u3053\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3082\u3057\u540c\u4e00\u968e\u5c64\u4e0b\u306b\u898b\u3064\u304b\u3089\u306a\u3044\u578b\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u307e\u307e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u3057\u3066\u6b8b\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u3053\u306e\u4ed5\u69d8\u3068\u306a\u3063\u3066\u3044\u308b\u672c\u5f53\u306e\u7406\u7531\u306f\u3001\u540c\u3058\u7a2e\u985e\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b) \u3092\u3044\u304f\u3064\u3082\u4f5c\u3089\u306a\u3044\u3053\u3068\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u9ad8\u901f\u5316\u3057\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306e\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3059\u308b\u305f\u3081\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u4ee5\u5916\u306b\u3082\u3053\u306e\u4ed5\u69d8\u306b\u306f\u610f\u5473\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f\u3001\u540c\u4e00\u968e\u5c64\u4e0b\u306e\u30af\u30e9\u30b9\u306f\u540c\u3058\u3088\u3046\u306b\u632f\u308b\u821e\u3046\u3079\u304d\u3001\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002 \u305d\u308c\u3067\u306f\u3001John \u306e\u30da\u30c3\u30c8\u306b\u558b\u3089\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002 john . pet . talk # Error: undefined method 'talk' for Animal \u3053\u308c\u304c\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u306e\u306f\u3001 @pet \u306e\u578b\u306f Animal+ \u3067 Animal \u81ea\u8eab\u3092\u542b\u3093\u3067\u3044\u308b\u305f\u3081\u3067\u3059\u3002\u305d\u3057\u3066\u3001 talk \u30e1\u30bd\u30c3\u30c9\u306f\u305d\u3053\u306b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3088\u3063\u3066\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3057\u305f\u3002 Animal \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306b\u306f\u610f\u5473\u304c\u306a\u3044\u305f\u3081\u3001\u76f4\u63a5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u3053\u3068\u306f\u7d76\u5bfe\u306b\u3042\u308a\u3048\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u305f\u3060\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u306f\u305d\u306e\u4e8b\u60c5\u304c\u5206\u304b\u308a\u307e\u305b\u3093\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u305d\u306e\u3053\u3068\u3092\u793a\u3059\u306b\u306f\u3001\u30af\u30e9\u30b9\u306b abstract \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 abstract class Animal end \u3053\u308c\u3067\u30b3\u30fc\u30c9\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 john . pet . talk # => \"Woof!\" abstract \u30af\u30e9\u30b9\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30af\u30e9\u30b9\u3092\u76f4\u63a5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u306e\u3092\u907f\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 Animal . new # Error: can't instantiate abstract class Animal \u3053\u308c\u3092\u3088\u308a\u660e\u78ba\u306b\u793a\u3059\u305f\u3081\u306b\u3001 Animal \u306b abstract \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066 talk \u30e1\u30bd\u30c3\u30c9\u3092 Animal \u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 abstract class Animal # Animal \u306b talk \u3092\u5b9a\u7fa9 abstract def talk end \u30e1\u30bd\u30c3\u30c9\u3092 abstract \u3068\u6307\u5b9a\u3059\u308b\u3068\u3001\u4eee\u306b\u4f7f\u308f\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3059\u3079\u3066\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u691c\u67fb\u3057\u307e\u3059\u3002 abstract \u30e1\u30bd\u30c3\u30c9\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u3066\u3001\u305d\u306e\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u5148\u306e\u30af\u30e9\u30b9\u3067\u305d\u308c\u3089\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u691c\u67fb\u3057\u307e\u3059\u3002","title":"virtual \u578b\u3068 abstract \u578b"},{"location":"syntax_and_semantics/virtual_and_abstract_types.html#virtual-abstract","text":"\u3042\u308b\u5909\u6570\u304c\u3001\u540c\u4e00\u306e\u30af\u30e9\u30b9\u968e\u5c64\u4e0b\u306e\u7570\u306a\u308b\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3042\u308b\u3068\u304d\u3001\u305d\u306e\u578b\u306f virtual \u578b \u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u306f Reference \u3001 Value \u3001 Int \u305d\u3057\u3066 Float \u3092\u9664\u304f\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3057\u3087\u3046\u3002 class Animal end class Dog < Animal def talk \"Woof!\" end end class Cat < Animal def talk \"Miau\" end end class Person getter pet def initialize ( @name : String , @pet : Animal ) end end john = Person . new \"John\" , Dog . new peter = Person . new \"Peter\" , Cat . new \u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5bfe\u3057\u3066 tool hierarchy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 Person \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002 - class Object | +- class Reference | +- class Person @name : String @pet : Animal+ @pet \u304c Animal+ \u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u306e + \u306f virtual \u578b\u3067\u3042\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u300c Animal \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u4efb\u610f\u306e\u30af\u30e9\u30b9 ( Animal \u578b\u81ea\u8eab\u3092\u542b\u3080)\u300d\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u5e38\u306b\u3001\u540c\u4e00\u306e\u30af\u30e9\u30b9\u968e\u5c64\u4e0b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3092 virtual \u578b\u306b\u89e3\u6c7a\u3057\u307e\u3059\u3002 if some_condition pet = Dog . new else pet = Cat . new end # pet : Animal+ \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001 Reference \u3001 Value \u3001 Int \u3001 Float \u306e\u3044\u305a\u308c\u306e\u30af\u30e9\u30b9\u306e\u5834\u5408\u3092\u9664\u3044\u3066\u3001\u5171\u6709\u3059\u308b\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u304c\u3042\u308b\u5834\u5408\u306b\u5e38\u306b\u3053\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3082\u3057\u540c\u4e00\u968e\u5c64\u4e0b\u306b\u898b\u3064\u304b\u3089\u306a\u3044\u578b\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u307e\u307e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u3057\u3066\u6b8b\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u3053\u306e\u4ed5\u69d8\u3068\u306a\u3063\u3066\u3044\u308b\u672c\u5f53\u306e\u7406\u7531\u306f\u3001\u540c\u3058\u7a2e\u985e\u306e\u578b\u306e\u7d44\u307f\u5408\u308f\u305b (\u30e6\u30cb\u30aa\u30f3\u578b) \u3092\u3044\u304f\u3064\u3082\u4f5c\u3089\u306a\u3044\u3053\u3068\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u9ad8\u901f\u5316\u3057\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306e\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3059\u308b\u305f\u3081\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u4ee5\u5916\u306b\u3082\u3053\u306e\u4ed5\u69d8\u306b\u306f\u610f\u5473\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f\u3001\u540c\u4e00\u968e\u5c64\u4e0b\u306e\u30af\u30e9\u30b9\u306f\u540c\u3058\u3088\u3046\u306b\u632f\u308b\u821e\u3046\u3079\u304d\u3001\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002 \u305d\u308c\u3067\u306f\u3001John \u306e\u30da\u30c3\u30c8\u306b\u558b\u3089\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002 john . pet . talk # Error: undefined method 'talk' for Animal \u3053\u308c\u304c\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u306e\u306f\u3001 @pet \u306e\u578b\u306f Animal+ \u3067 Animal \u81ea\u8eab\u3092\u542b\u3093\u3067\u3044\u308b\u305f\u3081\u3067\u3059\u3002\u305d\u3057\u3066\u3001 talk \u30e1\u30bd\u30c3\u30c9\u306f\u305d\u3053\u306b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3088\u3063\u3066\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3057\u305f\u3002 Animal \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306b\u306f\u610f\u5473\u304c\u306a\u3044\u305f\u3081\u3001\u76f4\u63a5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u3053\u3068\u306f\u7d76\u5bfe\u306b\u3042\u308a\u3048\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u305f\u3060\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u306f\u305d\u306e\u4e8b\u60c5\u304c\u5206\u304b\u308a\u307e\u305b\u3093\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u305d\u306e\u3053\u3068\u3092\u793a\u3059\u306b\u306f\u3001\u30af\u30e9\u30b9\u306b abstract \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 abstract class Animal end \u3053\u308c\u3067\u30b3\u30fc\u30c9\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 john . pet . talk # => \"Woof!\" abstract \u30af\u30e9\u30b9\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30af\u30e9\u30b9\u3092\u76f4\u63a5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u306e\u3092\u907f\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 Animal . new # Error: can't instantiate abstract class Animal \u3053\u308c\u3092\u3088\u308a\u660e\u78ba\u306b\u793a\u3059\u305f\u3081\u306b\u3001 Animal \u306b abstract \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066 talk \u30e1\u30bd\u30c3\u30c9\u3092 Animal \u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 abstract class Animal # Animal \u306b talk \u3092\u5b9a\u7fa9 abstract def talk end \u30e1\u30bd\u30c3\u30c9\u3092 abstract \u3068\u6307\u5b9a\u3059\u308b\u3068\u3001\u4eee\u306b\u4f7f\u308f\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3059\u3079\u3066\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u691c\u67fb\u3057\u307e\u3059\u3002 abstract \u30e1\u30bd\u30c3\u30c9\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u3066\u3001\u305d\u306e\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u5148\u306e\u30af\u30e9\u30b9\u3067\u305d\u308c\u3089\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u691c\u67fb\u3057\u307e\u3059\u3002","title":"virtual \u578b\u3068 abstract \u578b"},{"location":"syntax_and_semantics/visibility.html","text":"\u53ef\u8996\u6027 \u30e1\u30bd\u30c3\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u53ef\u8996\u6027\u306f public \u306b\u306a\u3063\u3066\u304a\u308a\u3001\u3069\u3053\u304b\u3089\u3067\u3082\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u305f\u3081 public \u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002 \u30e1\u30bd\u30c3\u30c9\u306f private \u3082\u3057\u304f\u306f protected \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c_\u3067\u304d\u307e\u3059_\u3002 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9 private \u30e1\u30bd\u30c3\u30c9\u306f\u30ec\u30b7\u30fc\u30d0\u306e\u306a\u3044\u5f62\u5f0f\u3067\u306e\u307f\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u5916\u3068\u3057\u3066\u3001 self \u3092\u30ec\u30b7\u30fc\u30d0\u3068\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u3002 class Person private def say ( message ) puts message end def say_hello say \"hello\" # \u30ec\u30b7\u30fc\u30d0\u304c\u7121\u3044\u305f\u3081 OK self . say \"hello\" # self \u304c\u30ec\u30b7\u30fc\u30d0\u306e\u305f\u3081 OK other = Person . new other . say \"hello\" # other \u304c\u30ec\u30b7\u30fc\u30d0\u306e\u305f\u3081\u30a8\u30e9\u30fc end end private \u30e1\u30bd\u30c3\u30c9\u306f\u30b5\u30d6\u30af\u30e9\u30b9\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u308b\u3053\u3068\u306b\u306f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 class Employee < Person def say_bye say \"bye\" # OK end end \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u578b \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u578b\u306f\u81ea\u8eab\u306e\u5b9a\u7fa9\u3055\u308c\u305f\u540d\u524d\u7a7a\u9593\u306e\u5185\u5074\u304b\u3089\u306e\u307f\u53c2\u7167\u3067\u304d\u3066\u3001\u5b8c\u5168\u306a\u30d1\u30b9\u3067\u53c2\u7167\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u306a\u3044\u578b\u3067\u3059\u3002 class Foo private class Bar end Bar # OK Foo :: Bar # Error end Foo :: Bar # Error \u3053\u306e\u5834\u5408\u306e private \u306f class \u3001 module \u3001 lib \u3001 enum \u3001\u305d\u3057\u3066 alias \u3068\u5b9a\u6570\u306b\u5bfe\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Foo private ONE = 1 ONE # => 1 end Foo :: ONE # Error \u30d7\u30ed\u30c6\u30af\u30c6\u30c3\u30c9\u30e1\u30bd\u30c3\u30c9 protected \u30e1\u30bd\u30c3\u30c9\u306f\u6b21\u306e\u30ec\u30b7\u30fc\u30d0\u306b\u5bfe\u3057\u3066\u306e\u307f\u547c\u3073\u51fa\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 \u73fe\u5728\u306e\u578b\u3068\u540c\u3058\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \u73fe\u5728\u306e\u578b\u3068\u540c\u3058\u540d\u524d\u7a7a\u9593 (\u30af\u30e9\u30b9\u3001\u69cb\u9020\u4f53\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306a\u3069) \u306e\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 # 1 \u306e\u5834\u5408\u306e\u4f8b class Person protected def say ( message ) puts message end def say_hello say \"hello\" # \u6697\u9ed9\u306e self \u306f Person \u306a\u306e\u3067 OK self . say \"hello\" # self \u306f Person \u306a\u306e\u3067 OK other = Person . new \"Other\" other . say \"hello\" # other \u306f Person \u306a\u306e\u3067 OK end end class Animal def make_a_person_talk person = Person . new person . say \"hello\" # person \u306f Person \u3060\u3051\u3069\u3001\u73fe\u5728\u306e\u578b\u306f Animal \u306a\u306e\u3067\u30a8\u30e9\u30fc end end one_more = Person . new \"One more\" one_more . say \"hello\" # one_more \u306f Person \u3060\u3051\u3069\u73fe\u5728\u306e\u578b\u306f Program \u306a\u306e\u3067\u30a8\u30e9\u30fc # 2 \u306e\u5834\u5408\u306e\u4f8b module Namespace class Foo protected def foo puts \"Hello\" end end class Bar def bar # Foo \u3068 Bar \u306f Namespace \u4ee5\u4e0b\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002 Foo . new . foo end end end Namespace :: Bar . new . bar protected \u30e1\u30bd\u30c3\u30c9\u306f\u73fe\u5728\u306e\u30b9\u30b3\u30fc\u30d7\u3084\u3001\u305d\u306e\u3055\u3089\u306b\u4e0b\u306e\u30b9\u30b3\u30fc\u30d7\u304b\u3089\u306e\u307f\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30af\u30e9\u30b9\u306e\u30b9\u30b3\u30fc\u30d7\u3084\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u672c\u4f53\u90e8\u5206\u3001\u30d7\u30ed\u30c6\u30af\u30c6\u30c3\u30c9\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u305f\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u542b\u307f\u3001\u305d\u306e\u578b\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3084\u540c\u3058\u540d\u524d\u7a7a\u9593\u306e\u3059\u3079\u3066\u578b\u306b\u5bfe\u3057\u3066\u3082\u540c\u69d8\u3067\u3059\u3002 class Parent protected def self . protected_method end Parent . protected_method # OK def instance_method Parent . protected_method # OK end def self . class_method Parent . protected_method # OK end end class Child < Parent Parent . protected_method # OK def instance_method Parent . protected_method # OK end def self . class_method Parent . protected_method # OK end end class Parent:: Sub Parent . protected_method # OK def instance_method Parent . protected_method # OK end def self . class_method Parent . protected_method # OK end end \u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9 private \u3092\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3051\u308b\u3068\u3001\u73fe\u5728\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u307f\u898b\u3048\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 one.cr ```crystal private def greet puts \"Hello\" end greet # => \"Hello\" ``` two.cr ```crystal require \"./one\" greet # undefined local variable or method 'greet' ``` \u3053\u306e\u3053\u3068\u3067\u3001\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u3067\u306e\u307f\u5229\u7528\u3067\u304d\u308b\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u578b private \u3092\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u578b\u306b\u3064\u3051\u308b\u3068\u3001\u73fe\u5728\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u307f\u898b\u3048\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 one.cr ```crystal private class Greeter def self.greet \"Hello\" end end Greeter.greet # => \"Hello\" ``` two.cr ```crystal require \"./one\" Greeter.greet # undefined constant 'Greeter' ```","title":"\u53ef\u8996\u6027"},{"location":"syntax_and_semantics/visibility.html#_1","text":"\u30e1\u30bd\u30c3\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u53ef\u8996\u6027\u306f public \u306b\u306a\u3063\u3066\u304a\u308a\u3001\u3069\u3053\u304b\u3089\u3067\u3082\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u305f\u3081 public \u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002 \u30e1\u30bd\u30c3\u30c9\u306f private \u3082\u3057\u304f\u306f protected \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c_\u3067\u304d\u307e\u3059_\u3002","title":"\u53ef\u8996\u6027"},{"location":"syntax_and_semantics/visibility.html#_2","text":"private \u30e1\u30bd\u30c3\u30c9\u306f\u30ec\u30b7\u30fc\u30d0\u306e\u306a\u3044\u5f62\u5f0f\u3067\u306e\u307f\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u5916\u3068\u3057\u3066\u3001 self \u3092\u30ec\u30b7\u30fc\u30d0\u3068\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u3002 class Person private def say ( message ) puts message end def say_hello say \"hello\" # \u30ec\u30b7\u30fc\u30d0\u304c\u7121\u3044\u305f\u3081 OK self . say \"hello\" # self \u304c\u30ec\u30b7\u30fc\u30d0\u306e\u305f\u3081 OK other = Person . new other . say \"hello\" # other \u304c\u30ec\u30b7\u30fc\u30d0\u306e\u305f\u3081\u30a8\u30e9\u30fc end end private \u30e1\u30bd\u30c3\u30c9\u306f\u30b5\u30d6\u30af\u30e9\u30b9\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u308b\u3053\u3068\u306b\u306f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 class Employee < Person def say_bye say \"bye\" # OK end end","title":"\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/visibility.html#_3","text":"\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u578b\u306f\u81ea\u8eab\u306e\u5b9a\u7fa9\u3055\u308c\u305f\u540d\u524d\u7a7a\u9593\u306e\u5185\u5074\u304b\u3089\u306e\u307f\u53c2\u7167\u3067\u304d\u3066\u3001\u5b8c\u5168\u306a\u30d1\u30b9\u3067\u53c2\u7167\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u306a\u3044\u578b\u3067\u3059\u3002 class Foo private class Bar end Bar # OK Foo :: Bar # Error end Foo :: Bar # Error \u3053\u306e\u5834\u5408\u306e private \u306f class \u3001 module \u3001 lib \u3001 enum \u3001\u305d\u3057\u3066 alias \u3068\u5b9a\u6570\u306b\u5bfe\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 class Foo private ONE = 1 ONE # => 1 end Foo :: ONE # Error","title":"\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u578b"},{"location":"syntax_and_semantics/visibility.html#_4","text":"protected \u30e1\u30bd\u30c3\u30c9\u306f\u6b21\u306e\u30ec\u30b7\u30fc\u30d0\u306b\u5bfe\u3057\u3066\u306e\u307f\u547c\u3073\u51fa\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 \u73fe\u5728\u306e\u578b\u3068\u540c\u3058\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \u73fe\u5728\u306e\u578b\u3068\u540c\u3058\u540d\u524d\u7a7a\u9593 (\u30af\u30e9\u30b9\u3001\u69cb\u9020\u4f53\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306a\u3069) \u306e\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 # 1 \u306e\u5834\u5408\u306e\u4f8b class Person protected def say ( message ) puts message end def say_hello say \"hello\" # \u6697\u9ed9\u306e self \u306f Person \u306a\u306e\u3067 OK self . say \"hello\" # self \u306f Person \u306a\u306e\u3067 OK other = Person . new \"Other\" other . say \"hello\" # other \u306f Person \u306a\u306e\u3067 OK end end class Animal def make_a_person_talk person = Person . new person . say \"hello\" # person \u306f Person \u3060\u3051\u3069\u3001\u73fe\u5728\u306e\u578b\u306f Animal \u306a\u306e\u3067\u30a8\u30e9\u30fc end end one_more = Person . new \"One more\" one_more . say \"hello\" # one_more \u306f Person \u3060\u3051\u3069\u73fe\u5728\u306e\u578b\u306f Program \u306a\u306e\u3067\u30a8\u30e9\u30fc # 2 \u306e\u5834\u5408\u306e\u4f8b module Namespace class Foo protected def foo puts \"Hello\" end end class Bar def bar # Foo \u3068 Bar \u306f Namespace \u4ee5\u4e0b\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002 Foo . new . foo end end end Namespace :: Bar . new . bar protected \u30e1\u30bd\u30c3\u30c9\u306f\u73fe\u5728\u306e\u30b9\u30b3\u30fc\u30d7\u3084\u3001\u305d\u306e\u3055\u3089\u306b\u4e0b\u306e\u30b9\u30b3\u30fc\u30d7\u304b\u3089\u306e\u307f\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30af\u30e9\u30b9\u306e\u30b9\u30b3\u30fc\u30d7\u3084\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u672c\u4f53\u90e8\u5206\u3001\u30d7\u30ed\u30c6\u30af\u30c6\u30c3\u30c9\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u305f\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u542b\u307f\u3001\u305d\u306e\u578b\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3084\u540c\u3058\u540d\u524d\u7a7a\u9593\u306e\u3059\u3079\u3066\u578b\u306b\u5bfe\u3057\u3066\u3082\u540c\u69d8\u3067\u3059\u3002 class Parent protected def self . protected_method end Parent . protected_method # OK def instance_method Parent . protected_method # OK end def self . class_method Parent . protected_method # OK end end class Child < Parent Parent . protected_method # OK def instance_method Parent . protected_method # OK end def self . class_method Parent . protected_method # OK end end class Parent:: Sub Parent . protected_method # OK def instance_method Parent . protected_method # OK end def self . class_method Parent . protected_method # OK end end","title":"\u30d7\u30ed\u30c6\u30af\u30c6\u30c3\u30c9\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/visibility.html#_5","text":"private \u3092\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3051\u308b\u3068\u3001\u73fe\u5728\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u307f\u898b\u3048\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 one.cr ```crystal private def greet puts \"Hello\" end greet # => \"Hello\" ``` two.cr ```crystal require \"./one\" greet # undefined local variable or method 'greet' ``` \u3053\u306e\u3053\u3068\u3067\u3001\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u3067\u306e\u307f\u5229\u7528\u3067\u304d\u308b\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002","title":"\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/visibility.html#_6","text":"private \u3092\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u578b\u306b\u3064\u3051\u308b\u3068\u3001\u73fe\u5728\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u307f\u898b\u3048\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 one.cr ```crystal private class Greeter def self.greet \"Hello\" end end Greeter.greet # => \"Hello\" ``` two.cr ```crystal require \"./one\" Greeter.greet # undefined constant 'Greeter' ```","title":"\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u578b"},{"location":"syntax_and_semantics/while.html","text":"while while \u306f\u6761\u4ef6\u5f0f\u304c \u771f\u3068\u306a\u308b \u9593\u306f\u7e70\u308a\u8fd4\u3057\u3066\u672c\u4f53\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 while some_condition do_this end \u307e\u305a\u6761\u4ef6\u5f0f\u306b\u5bfe\u3057\u3066\u5224\u5b9a\u304c\u884c\u306a\u308f\u308c\u3066\u3001 \u771f\u3067\u3042\u3063\u305f \u3068\u304d\u306b\u672c\u4f53\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3064\u307e\u308a\u3001\u672c\u4f53\u304c1\u5ea6\u3082\u5b9f\u884c\u3055\u308c\u306a\u3044\u5834\u5408\u3082\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 while \u306e\u578b\u304c\u5e38\u306b Nil \u3067\u3059\u3002 if \u306e\u3088\u3046\u306b\u3001 while \u306e\u6761\u4ef6\u5f0f\u304c\u5909\u6570\u3067\u3042\u3063\u305f\u5834\u5408\u3001\u672c\u4f53\u3067\u306f\u305d\u306e\u5909\u6570\u306f nil \u3067\u306f\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002\u6761\u4ef6\u5f0f\u304c var.is_a?(Type) \u3068\u3044\u3046\u5f62\u306a\u3089\u3001\u672c\u4f53\u3067\u306f var \u306f Type \u578b\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002\u3055\u3089\u306b\u3001 var.responds_to?(:method) \u3068\u3044\u3046\u5f62\u306a\u3089\u3001\u672c\u4f53\u3067\u306f var \u304c\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 while \u3092\u5b9f\u884c\u3057\u305f\u3042\u3068\u306e\u5909\u6570\u306e\u578b\u306f\u3001 while \u4ee5\u524d\u306e\u578b\u3068\u3001 while \u3092\u629c\u3051\u308b\u76f4\u524d\u306e\u578b\u306b\u3088\u3063\u3066\u6c7a\u307e\u308a\u307e\u3059\u3002 a = 1 while some_condition # a : Int32 | String a = \"hello\" # a : String a . size end # a : Int32 | String \u6761\u4ef6\u306b\u3088\u3063\u3066\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b \u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u305f\u3081\u306e\u6761\u4ef6\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u5fc5\u305a1\u56de\u306f\u672c\u4f53\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 while true do_something break if some_condition end \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e loop \u3092\u5229\u7528\u3057\u3066\u3082\u540c\u3058\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 loop do do_something break if some_condition end","title":"while"},{"location":"syntax_and_semantics/while.html#while","text":"while \u306f\u6761\u4ef6\u5f0f\u304c \u771f\u3068\u306a\u308b \u9593\u306f\u7e70\u308a\u8fd4\u3057\u3066\u672c\u4f53\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 while some_condition do_this end \u307e\u305a\u6761\u4ef6\u5f0f\u306b\u5bfe\u3057\u3066\u5224\u5b9a\u304c\u884c\u306a\u308f\u308c\u3066\u3001 \u771f\u3067\u3042\u3063\u305f \u3068\u304d\u306b\u672c\u4f53\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3064\u307e\u308a\u3001\u672c\u4f53\u304c1\u5ea6\u3082\u5b9f\u884c\u3055\u308c\u306a\u3044\u5834\u5408\u3082\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 while \u306e\u578b\u304c\u5e38\u306b Nil \u3067\u3059\u3002 if \u306e\u3088\u3046\u306b\u3001 while \u306e\u6761\u4ef6\u5f0f\u304c\u5909\u6570\u3067\u3042\u3063\u305f\u5834\u5408\u3001\u672c\u4f53\u3067\u306f\u305d\u306e\u5909\u6570\u306f nil \u3067\u306f\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002\u6761\u4ef6\u5f0f\u304c var.is_a?(Type) \u3068\u3044\u3046\u5f62\u306a\u3089\u3001\u672c\u4f53\u3067\u306f var \u306f Type \u578b\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002\u3055\u3089\u306b\u3001 var.responds_to?(:method) \u3068\u3044\u3046\u5f62\u306a\u3089\u3001\u672c\u4f53\u3067\u306f var \u304c\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002 while \u3092\u5b9f\u884c\u3057\u305f\u3042\u3068\u306e\u5909\u6570\u306e\u578b\u306f\u3001 while \u4ee5\u524d\u306e\u578b\u3068\u3001 while \u3092\u629c\u3051\u308b\u76f4\u524d\u306e\u578b\u306b\u3088\u3063\u3066\u6c7a\u307e\u308a\u307e\u3059\u3002 a = 1 while some_condition # a : Int32 | String a = \"hello\" # a : String a . size end # a : Int32 | String","title":"while"},{"location":"syntax_and_semantics/while.html#_1","text":"\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u305f\u3081\u306e\u6761\u4ef6\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u5fc5\u305a1\u56de\u306f\u672c\u4f53\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 while true do_something break if some_condition end \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e loop \u3092\u5229\u7528\u3057\u3066\u3082\u540c\u3058\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 loop do do_something break if some_condition end","title":"\u6761\u4ef6\u306b\u3088\u3063\u3066\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b"},{"location":"syntax_and_semantics/annotations/index.html","text":"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3 \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3068\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u7279\u5b9a\u306e\u6a5f\u80fd\u306b\u95a2\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u578b\u3001\u30e1\u30bd\u30c3\u30c9\u3001\u305d\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e JSON::Field \u306e\u3088\u3046\u306a\u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f annotation \u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306e \u7d44\u307f\u8fbc\u307f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3 \u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002 \u30e6\u30fc\u30b6\u30fc\u306f class \u3084 struct \u3092\u5b9a\u7fa9\u3059\u308b\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u72ec\u81ea\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092 annotation \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 annotation MyAnnotation end \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u6b21\u306e\u3082\u306e\u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 \u30af\u30e9\u30b9\u3001\u69cb\u9020\u4f53\u3001\u5217\u6319\u578b\u3001\u305d\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb annotation MyAnnotation end @[ MyAnnotation ] def foo \"foo\" end @[ MyAnnotation ] class Klass end @[ MyAnnotation ] module MyModule end \u5fdc\u7528 \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3084\u578b\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u308b\u306e\u306b\u6700\u9069\u306a\u6a5f\u80fd\u3067\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u3046\u3057\u3066\u4e0e\u3048\u305f\u30e1\u30bf\u30c7\u30fc\u30bf\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u8aad\u307f\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4e3b\u306a\u5229\u70b9\u306e\u4e00\u3064\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u306b\u76f4\u63a5\u9069\u7528\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308b\u305f\u3081\u306b\u6a19\u6e96\u306e\u30de\u30af\u30ed\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u306a\u304f\u3001\u30af\u30e9\u30b9\u304c\u3088\u308a\u81ea\u7136\u306b\u898b\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3044\u304f\u3064\u304b\u306e\u5fdc\u7528\u4f8b: \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u304c\u3069\u306e\u3088\u3046\u306b\u3001\u3069\u3093\u306a\u30ad\u30fc\u3068\u3057\u3066\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u308b\u304b\u3092\u6c7a\u3081\u308b\u305f\u3081\u306b\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Crystal \u306e JSON::Serializable \u3068 YAML::Serializable \u306f\u305d\u306e\u3088\u3046\u306a\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f8b\u3067\u3059\u3002 ORM \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3092ORM\u306e\u30ab\u30e9\u30e0\u306b\u6307\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u578b\u3068\u540d\u524d\u306f TypeNode \u304b\u3089\u8aad\u307f\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066ORM\u306b\u56fa\u6709\u306e\u30de\u30af\u30ed\u3092\u7121\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001nil\u3092\u8a31\u5bb9\u3059\u308b\u3053\u3068\u3084\u3001\u30ab\u30e9\u30e0\u306e\u540d\u524d\u3001\u4e3b\u30ad\u30fc\u304b\u3069\u3046\u304b\u306a\u3069\u306e\u30ab\u30e9\u30e0\u306b\u95a2\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u81ea\u8eab\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u30d5\u30a3\u30fc\u30eb\u30c9 \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 annotation MyAnnotaion end # \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u30ad\u30fc/\u5024\u306e\u30da\u30a2\u306b\u3067\u304d\u308b @[ MyAnnotation ( key : \"value\" , value : 123 ) ] # \u4f4d\u7f6e\u6307\u5b9a\u3067\u3082\u3088\u3044 @[ MyAnnotation ( \"foo\" , 123 , false ) ] \u30ad\u30fc/\u5024 \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u683c\u7d0d\u3057\u305f\u30ad\u30fc/\u5024\u306e\u30da\u30a2\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b [] \u30e1\u30bd\u30c3\u30c9\u7d4c\u7531\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 annotation MyAnnotation end @[ MyAnnotation ( value : 2 ) ] def annotation_value # \u30ad\u30fc\u540d\u306f `String`\u3001`Symbol` \u3082\u3057\u304f\u306f `MacroId` \u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 {{ @def . annotation ( MyAnnotation ) [ :value ] }} end annotation_value # => 2 named_args \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3059\u3079\u3066\u306e\u30ad\u30fc/\u5024\u306e\u30da\u30a2\u3092 NamedTupleLiteral \u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3079\u3066\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u306e\u7d50\u679c\u306f\u5404\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3054\u3068\u306b\u4e00\u610f\u3067\u3059\u3002 annotation MyAnnotation end @[ MyAnnotation ( value : 2 , name : \"Jim\" ) ] def annotation_named_args {{ @def . annotation ( MyAnnotation ) . named_args }} end annotation_named_args # => {value: 2, name: \"Jim\"} \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f NamedTupleLiteral \u3092\u8fd4\u3059\u306e\u3067\u3001\u3053\u306e\u578b\u306e\u6301\u3064\u3059\u3079\u3066\u306e \u30e1\u30bd\u30c3\u30c9 \u304c\u4f7f\u3048\u307e\u3059\u3002\u7279\u306b #double_splat \u3092\u4f7f\u3046\u3068\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3092\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u306e\u306f\u5bb9\u6613\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 annotation MyAnnotation end class SomeClass def initialize ( @value : Int32 , @name : String ); end end @[ MyAnnotation ( value : 2 , name : \"Jim\" ) ] def new_test {% begin %} SomeClass . new {{ @def . annotation ( MyAnnotation ) . named_args . double_splat }} {% end %} end new_test # => #<SomeClass:0x5621a19ddf00 @name=\"Jim\", @value=2> \u4f4d\u7f6e\u6307\u5b9a \u4f4d\u7f6e\u6307\u5b9a\u306e\u5024\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b [] \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u4e00\u5ea6\u306b1\u3064\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3002 annotation MyAnnotation end @[ MyAnnotation ( 1 , 2 , 3 , 4 ) ] def annotation_read {% for idx in [ 0 , 1 , 2 , 3 , 4 ] %} {% value = @def . annotation ( MyAnnotation ) [ idx ] %} pp \"{{ idx }} = {{ value }}\" {% end %} end annotation_read # \u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059 \"0 = 1\" \"1 = 2\" \"2 = 3\" \"3 = 4\" \"4 = nil\" args \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3059\u3079\u3066\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3092 TupleLiteral \u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3079\u3066\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u306e\u7d50\u679c\u306f\u5404\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3054\u3068\u306b\u4e00\u610f\u3067\u3059\u3002 annotation MyAnnotation end @[ MyAnnotation ( 1 , 2 , 3 , 4 ) ] def annotation_args {{ @def . annotation ( MyAnnotation ) . args }} end annotation_args # => {1, 2, 3, 4} \u623b\u308a\u5024\u306e\u578b\u306e TupleLiteral \u306f\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u306e\u3067\u3001\u4ee5\u524d\u306e\u4f8b\u3092\u3088\u308a\u826f\u3044\u65b9\u6cd5\u3067\u66f8\u304d\u76f4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002By extension, all of the methods on TupleLiteral are available for use as well. annotation MyAnnotation end @[ MyAnnotation ( 1 , \"foo\" , true , 17.0 ) ] def annotation_read {% for value , idx in @def . annotation ( MyAnnotation ) . args %} pp \"{{ idx }} = #{{{ value }}} \" {% end %} end annotation_read # \u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059 \"0 = 1\" \"1 = foo\" \"2 = true\" \"3 = 17.0\" \u8aad\u307f\u51fa\u3057\u65b9\u6cd5 \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f TypeNode \u3001 Def \u3001\u305d\u3057\u3066 MetaVar \u304b\u3089 .annotation(type : TypeNode) \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3067\u8aad\u307f\u51fa\u305b\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u4e0e\u3048\u3089\u308c\u305f\u578b\u306e\u9069\u7528\u3055\u308c\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8868\u3059 Annotation \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002 Note \u3082\u3057\u8907\u6570\u306e\u540c\u3058\u578b\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u9069\u7528\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u3001 .annotation \u30e1\u30bd\u30c3\u30c9\u306f_\u6700\u5f8c_\u306e\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002 @type \u3068 @def \u3068\u3044\u3046\u5909\u6570\u306f TypeNode \u3042\u308b\u3044\u306f Def \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067 .annotation \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001 TypeNode \u306e\u305d\u306e\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u53d6\u5f97\u3057\u305f TypeNode \u3082\u3057\u304f\u306f Def \u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u53d6\u5f97\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 TypeNode.all_subclasses \u3082\u3057\u304f\u306f TypeNode.methods \u3068\u3044\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002 TypeNode.instance_vars \u3092\u4f7f\u3046\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u8868\u3059 MetaVar \u306e\u914d\u5217\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u3089\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4e0e\u3048\u3089\u308c\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Note TypeNode.instance_vars \u306f\u4eca\u306e\u3068\u3053\u308d\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9/\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u306e\u307f\u52d5\u4f5c\u3057\u307e\u3059\u3002 annotation MyClass end annotation MyMethod end annotation MyIvar end @[ MyClass ] class Foo pp {{ @type . annotation ( MyClass ) . stringify }} @[ MyIvar ] @num : Int32 = 1 @[ MyIvar ] property name : String = \"jim\" def properties {% for ivar in @type . instance_vars %} pp {{ ivar . annotation ( MyIvar ) . stringify }} {% end %} end end @[ MyMethod ] def my_method pp {{ @def . annotation ( MyMethod ) . stringify }} end Foo . new . properties my_method pp {{ Foo . annotation ( MyClass ) . stringify }} # \u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059 \"@[MyClass]\" \"@[MyIvar]\" \"@[MyIvar]\" \"@[MyMethod]\" \"@[MyClass]\" \u8907\u6570\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8aad\u307f\u51fa\u3059 \u540c\u3058\u578b\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c1\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3001\u30e1\u30bd\u30c3\u30c9\u3001\u578b\u306b\u9069\u7528\u3055\u308c\u3066\u3044\u305f\u3068\u304d\u3001 .annotations(type : TypeNode) \u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u307e\u3059\u3002\u3053\u308c\u306f .annotation(type : TypeNode) \u304c\u3059\u308b\u3088\u3046\u306b\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001 ArrayLiteral(Annotation) \u3092\u8fd4\u3057\u307e\u3059\u3002 annotation MyAnnotation end @[ MyAnnotation ( \"foo\" ) ] @[ MyAnnotation ( 123 ) ] @[ MyAnnotation ( 123 ) ] def annotation_read {% for ann , idx in @def . annotations ( MyAnnotation ) %} pp \"Annotation {{ idx }} = {{ ann[0].id }}\" {% end %} end annotation_read # \u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059 \"Annotation 0 = foo\" \"Annotation 1 = 123\" \"Annotation 2 = 123\"","title":"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3"},{"location":"syntax_and_semantics/annotations/index.html#_1","text":"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3068\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u7279\u5b9a\u306e\u6a5f\u80fd\u306b\u95a2\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u578b\u3001\u30e1\u30bd\u30c3\u30c9\u3001\u305d\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e JSON::Field \u306e\u3088\u3046\u306a\u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f annotation \u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306e \u7d44\u307f\u8fbc\u307f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3 \u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002 \u30e6\u30fc\u30b6\u30fc\u306f class \u3084 struct \u3092\u5b9a\u7fa9\u3059\u308b\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u72ec\u81ea\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092 annotation \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 annotation MyAnnotation end \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u6b21\u306e\u3082\u306e\u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 \u30af\u30e9\u30b9\u3001\u69cb\u9020\u4f53\u3001\u5217\u6319\u578b\u3001\u305d\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb annotation MyAnnotation end @[ MyAnnotation ] def foo \"foo\" end @[ MyAnnotation ] class Klass end @[ MyAnnotation ] module MyModule end","title":"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3"},{"location":"syntax_and_semantics/annotations/index.html#_2","text":"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3084\u578b\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u308b\u306e\u306b\u6700\u9069\u306a\u6a5f\u80fd\u3067\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u3046\u3057\u3066\u4e0e\u3048\u305f\u30e1\u30bf\u30c7\u30fc\u30bf\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u8aad\u307f\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4e3b\u306a\u5229\u70b9\u306e\u4e00\u3064\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u306b\u76f4\u63a5\u9069\u7528\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308b\u305f\u3081\u306b\u6a19\u6e96\u306e\u30de\u30af\u30ed\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u306a\u304f\u3001\u30af\u30e9\u30b9\u304c\u3088\u308a\u81ea\u7136\u306b\u898b\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3044\u304f\u3064\u304b\u306e\u5fdc\u7528\u4f8b:","title":"\u5fdc\u7528"},{"location":"syntax_and_semantics/annotations/index.html#_3","text":"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u304c\u3069\u306e\u3088\u3046\u306b\u3001\u3069\u3093\u306a\u30ad\u30fc\u3068\u3057\u3066\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u308b\u304b\u3092\u6c7a\u3081\u308b\u305f\u3081\u306b\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Crystal \u306e JSON::Serializable \u3068 YAML::Serializable \u306f\u305d\u306e\u3088\u3046\u306a\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f8b\u3067\u3059\u3002","title":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba"},{"location":"syntax_and_semantics/annotations/index.html#orm","text":"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3092ORM\u306e\u30ab\u30e9\u30e0\u306b\u6307\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u578b\u3068\u540d\u524d\u306f TypeNode \u304b\u3089\u8aad\u307f\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066ORM\u306b\u56fa\u6709\u306e\u30de\u30af\u30ed\u3092\u7121\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001nil\u3092\u8a31\u5bb9\u3059\u308b\u3053\u3068\u3084\u3001\u30ab\u30e9\u30e0\u306e\u540d\u524d\u3001\u4e3b\u30ad\u30fc\u304b\u3069\u3046\u304b\u306a\u3069\u306e\u30ab\u30e9\u30e0\u306b\u95a2\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u81ea\u8eab\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002","title":"ORM"},{"location":"syntax_and_semantics/annotations/index.html#_4","text":"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 annotation MyAnnotaion end # \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u30ad\u30fc/\u5024\u306e\u30da\u30a2\u306b\u3067\u304d\u308b @[ MyAnnotation ( key : \"value\" , value : 123 ) ] # \u4f4d\u7f6e\u6307\u5b9a\u3067\u3082\u3088\u3044 @[ MyAnnotation ( \"foo\" , 123 , false ) ]","title":"\u30d5\u30a3\u30fc\u30eb\u30c9"},{"location":"syntax_and_semantics/annotations/index.html#_5","text":"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u683c\u7d0d\u3057\u305f\u30ad\u30fc/\u5024\u306e\u30da\u30a2\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b [] \u30e1\u30bd\u30c3\u30c9\u7d4c\u7531\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 annotation MyAnnotation end @[ MyAnnotation ( value : 2 ) ] def annotation_value # \u30ad\u30fc\u540d\u306f `String`\u3001`Symbol` \u3082\u3057\u304f\u306f `MacroId` \u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 {{ @def . annotation ( MyAnnotation ) [ :value ] }} end annotation_value # => 2 named_args \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3059\u3079\u3066\u306e\u30ad\u30fc/\u5024\u306e\u30da\u30a2\u3092 NamedTupleLiteral \u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3079\u3066\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u306e\u7d50\u679c\u306f\u5404\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3054\u3068\u306b\u4e00\u610f\u3067\u3059\u3002 annotation MyAnnotation end @[ MyAnnotation ( value : 2 , name : \"Jim\" ) ] def annotation_named_args {{ @def . annotation ( MyAnnotation ) . named_args }} end annotation_named_args # => {value: 2, name: \"Jim\"} \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f NamedTupleLiteral \u3092\u8fd4\u3059\u306e\u3067\u3001\u3053\u306e\u578b\u306e\u6301\u3064\u3059\u3079\u3066\u306e \u30e1\u30bd\u30c3\u30c9 \u304c\u4f7f\u3048\u307e\u3059\u3002\u7279\u306b #double_splat \u3092\u4f7f\u3046\u3068\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3092\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u306e\u306f\u5bb9\u6613\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 annotation MyAnnotation end class SomeClass def initialize ( @value : Int32 , @name : String ); end end @[ MyAnnotation ( value : 2 , name : \"Jim\" ) ] def new_test {% begin %} SomeClass . new {{ @def . annotation ( MyAnnotation ) . named_args . double_splat }} {% end %} end new_test # => #<SomeClass:0x5621a19ddf00 @name=\"Jim\", @value=2>","title":"\u30ad\u30fc/\u5024"},{"location":"syntax_and_semantics/annotations/index.html#_6","text":"\u4f4d\u7f6e\u6307\u5b9a\u306e\u5024\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b [] \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u4e00\u5ea6\u306b1\u3064\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3002 annotation MyAnnotation end @[ MyAnnotation ( 1 , 2 , 3 , 4 ) ] def annotation_read {% for idx in [ 0 , 1 , 2 , 3 , 4 ] %} {% value = @def . annotation ( MyAnnotation ) [ idx ] %} pp \"{{ idx }} = {{ value }}\" {% end %} end annotation_read # \u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059 \"0 = 1\" \"1 = 2\" \"2 = 3\" \"3 = 4\" \"4 = nil\" args \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3059\u3079\u3066\u306e\u4f4d\u7f6e\u6307\u5b9a\u306e\u5f15\u6570\u3092 TupleLiteral \u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3079\u3066\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u306e\u7d50\u679c\u306f\u5404\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3054\u3068\u306b\u4e00\u610f\u3067\u3059\u3002 annotation MyAnnotation end @[ MyAnnotation ( 1 , 2 , 3 , 4 ) ] def annotation_args {{ @def . annotation ( MyAnnotation ) . args }} end annotation_args # => {1, 2, 3, 4} \u623b\u308a\u5024\u306e\u578b\u306e TupleLiteral \u306f\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u306e\u3067\u3001\u4ee5\u524d\u306e\u4f8b\u3092\u3088\u308a\u826f\u3044\u65b9\u6cd5\u3067\u66f8\u304d\u76f4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002By extension, all of the methods on TupleLiteral are available for use as well. annotation MyAnnotation end @[ MyAnnotation ( 1 , \"foo\" , true , 17.0 ) ] def annotation_read {% for value , idx in @def . annotation ( MyAnnotation ) . args %} pp \"{{ idx }} = #{{{ value }}} \" {% end %} end annotation_read # \u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059 \"0 = 1\" \"1 = foo\" \"2 = true\" \"3 = 17.0\"","title":"\u4f4d\u7f6e\u6307\u5b9a"},{"location":"syntax_and_semantics/annotations/index.html#_7","text":"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f TypeNode \u3001 Def \u3001\u305d\u3057\u3066 MetaVar \u304b\u3089 .annotation(type : TypeNode) \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3067\u8aad\u307f\u51fa\u305b\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u4e0e\u3048\u3089\u308c\u305f\u578b\u306e\u9069\u7528\u3055\u308c\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8868\u3059 Annotation \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002 Note \u3082\u3057\u8907\u6570\u306e\u540c\u3058\u578b\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u9069\u7528\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u3001 .annotation \u30e1\u30bd\u30c3\u30c9\u306f_\u6700\u5f8c_\u306e\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002 @type \u3068 @def \u3068\u3044\u3046\u5909\u6570\u306f TypeNode \u3042\u308b\u3044\u306f Def \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067 .annotation \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001 TypeNode \u306e\u305d\u306e\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u53d6\u5f97\u3057\u305f TypeNode \u3082\u3057\u304f\u306f Def \u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u53d6\u5f97\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 TypeNode.all_subclasses \u3082\u3057\u304f\u306f TypeNode.methods \u3068\u3044\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002 TypeNode.instance_vars \u3092\u4f7f\u3046\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u8868\u3059 MetaVar \u306e\u914d\u5217\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u3089\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u4e0e\u3048\u3089\u308c\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Note TypeNode.instance_vars \u306f\u4eca\u306e\u3068\u3053\u308d\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9/\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u306e\u307f\u52d5\u4f5c\u3057\u307e\u3059\u3002 annotation MyClass end annotation MyMethod end annotation MyIvar end @[ MyClass ] class Foo pp {{ @type . annotation ( MyClass ) . stringify }} @[ MyIvar ] @num : Int32 = 1 @[ MyIvar ] property name : String = \"jim\" def properties {% for ivar in @type . instance_vars %} pp {{ ivar . annotation ( MyIvar ) . stringify }} {% end %} end end @[ MyMethod ] def my_method pp {{ @def . annotation ( MyMethod ) . stringify }} end Foo . new . properties my_method pp {{ Foo . annotation ( MyClass ) . stringify }} # \u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059 \"@[MyClass]\" \"@[MyIvar]\" \"@[MyIvar]\" \"@[MyMethod]\" \"@[MyClass]\"","title":"\u8aad\u307f\u51fa\u3057\u65b9\u6cd5"},{"location":"syntax_and_semantics/annotations/index.html#_8","text":"\u540c\u3058\u578b\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c1\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3001\u30e1\u30bd\u30c3\u30c9\u3001\u578b\u306b\u9069\u7528\u3055\u308c\u3066\u3044\u305f\u3068\u304d\u3001 .annotations(type : TypeNode) \u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u307e\u3059\u3002\u3053\u308c\u306f .annotation(type : TypeNode) \u304c\u3059\u308b\u3088\u3046\u306b\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001 ArrayLiteral(Annotation) \u3092\u8fd4\u3057\u307e\u3059\u3002 annotation MyAnnotation end @[ MyAnnotation ( \"foo\" ) ] @[ MyAnnotation ( 123 ) ] @[ MyAnnotation ( 123 ) ] def annotation_read {% for ann , idx in @def . annotations ( MyAnnotation ) %} pp \"Annotation {{ idx }} = {{ ann[0].id }}\" {% end %} end annotation_read # \u3053\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059 \"Annotation 0 = foo\" \"Annotation 1 = 123\" \"Annotation 2 = 123\"","title":"\u8907\u6570\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8aad\u307f\u51fa\u3059"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html","text":"Crystal \u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\u3053\u308c\u3089\u306e\u4e8b\u524d\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002 Link C \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30f3\u30af\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6307\u793a\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f lib \u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Extern \u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3064\u3051\u305f Crystal \u306e\u69cb\u9020\u4f53\u306f lib \u5ba3\u8a00\u306e\u4e2d\u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 @[ Extern ] struct MyStruct end lib MyLib fun my_func ( s : MyStruct ) # OK (gives an error without the Extern annotation) end \u69cb\u9020\u4f53\u3092C\u306e\u5171\u7528\u4f53\u306e\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u3082\u4f7f\u3048\u307e\u3059 (\u3053\u308c\u306f\u304b\u306a\u308a\u5b89\u5168\u3067\u306f\u3042\u308a\u307e\u305b\u3093)\u3002 # Int32 \u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3068\u6587\u5b57\u5217\u306e\u9593\u3067\u7c21\u5358\u306b\u5909\u63db\u3067\u304d\u308b\u69cb\u9020\u4f53 @[ Extern ( union : true ) ] struct Int32OrChar property int = 0 property char = '\\0' end s = Int32OrChar . new s . char = 'A' s . int # => 65 s . int = 66 s . char # => 'B' ThreadLocal @[ThreadLocal] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u30af\u30e9\u30b9\u5909\u6570\u3068 C \u306e\u5916\u90e8\u5909\u6570\u306b\u5bfe\u3057\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u305d\u308c\u3089\u306e\u5909\u6570\u304c\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u306b\u306a\u308a\u307e\u3059\u3002 class DontUseThis # \u30b9\u30ec\u30c3\u30c9\u3054\u3068\u306b1\u3064\u305a\u3064 @[ ThreadLocal ] @@values = [] of Int32 end ThreadLocal \u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u5916\u3067\u4f7f\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002 Packed C \u306e\u69cb\u9020\u4f53 \u3092\u30d1\u30c3\u30af\u3057\u3001\u81ea\u52d5\u3067\u30d5\u30a3\u30fc\u30eb\u30c9\u9593\u306e\u30d1\u30c7\u30a3\u30f3\u30b0\u304c\u633f\u5165\u3055\u308c\u308b\u306e\u3092\u9632\u304e\u307e\u3059\u3002C \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30d1\u30c3\u30af\u3055\u308c\u305f\u69cb\u9020\u4f53\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306b\u3001\u3053\u308c\u306f\u5fc5\u8981\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 AlwaysInline \u5e38\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u30a4\u30f3\u30e9\u30a4\u30f3\u306b\u3059\u308b\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6307\u793a\u3057\u307e\u3059\u3002 @[ AlwaysInline ] def foo 1 end NoInline \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3092\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u306b\u3057\u306a\u3044\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6307\u793a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u30e1\u30bd\u30c3\u30c9\u304c yield \u3059\u308b\u5834\u5408\u306b\u306f\u52b9\u679c\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u305d\u306e\u5834\u5408\u306f\u5e38\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002 @[ NoInline ] def foo 1 end ReturnsTwice \u30e1\u30bd\u30c3\u30c9\u3082\u3057\u304f\u306f lib \u4e2d\u306e fun \u304c2\u5ea6\u30ea\u30bf\u30fc\u30f3\u3059\u308b\u3053\u3068\u3092\u6307\u793a\u3057\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u95a2\u6570\u3068\u3057\u3066\u306f\u3001C\u8a00\u8a9e\u306e setjmp \u304c\u3042\u3052\u3089\u308c\u307e\u3059\u3002 Raises \u30e1\u30bd\u30c3\u30c9\u3082\u3057\u304f\u306f lib \u4e2d\u306e fun \u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u6307\u793a\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f \u30b3\u30fc\u30eb\u30d0\u30c3\u30af \u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 CallConvention lib fun \u306e\u547c\u3073\u51fa\u3057\u898f\u7d04\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 lib LibFoo @[ CallConvention ( \"X86_StdCall\" ) ] fun foo : Int32 end \u6709\u52b9\u306a\u547c\u51fa\u898f\u7d04\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002 C (\u30c7\u30d5\u30a9\u30eb\u30c8) Fast Cold WebKit_JS AnyReg X86_StdCall X86_FastCall \u8a73\u3057\u3044\u8aac\u660e\u306f \u3053\u3061\u3089 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Flags \u5217\u6319\u578b \u3092\u300c\u30d5\u30e9\u30b0\u5217\u6319\u578b\u300d\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001 to_s \u306a\u3069\u3044\u304f\u3064\u304b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u6319\u52d5\u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002","title":"\u7d44\u307f\u8fbc\u307f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#link","text":"C \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30f3\u30af\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6307\u793a\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f lib \u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Link"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#extern","text":"\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3064\u3051\u305f Crystal \u306e\u69cb\u9020\u4f53\u306f lib \u5ba3\u8a00\u306e\u4e2d\u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 @[ Extern ] struct MyStruct end lib MyLib fun my_func ( s : MyStruct ) # OK (gives an error without the Extern annotation) end \u69cb\u9020\u4f53\u3092C\u306e\u5171\u7528\u4f53\u306e\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u3082\u4f7f\u3048\u307e\u3059 (\u3053\u308c\u306f\u304b\u306a\u308a\u5b89\u5168\u3067\u306f\u3042\u308a\u307e\u305b\u3093)\u3002 # Int32 \u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3068\u6587\u5b57\u5217\u306e\u9593\u3067\u7c21\u5358\u306b\u5909\u63db\u3067\u304d\u308b\u69cb\u9020\u4f53 @[ Extern ( union : true ) ] struct Int32OrChar property int = 0 property char = '\\0' end s = Int32OrChar . new s . char = 'A' s . int # => 65 s . int = 66 s . char # => 'B'","title":"Extern"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#threadlocal","text":"@[ThreadLocal] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u30af\u30e9\u30b9\u5909\u6570\u3068 C \u306e\u5916\u90e8\u5909\u6570\u306b\u5bfe\u3057\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u305d\u308c\u3089\u306e\u5909\u6570\u304c\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u306b\u306a\u308a\u307e\u3059\u3002 class DontUseThis # \u30b9\u30ec\u30c3\u30c9\u3054\u3068\u306b1\u3064\u305a\u3064 @[ ThreadLocal ] @@values = [] of Int32 end ThreadLocal \u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u5916\u3067\u4f7f\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002","title":"ThreadLocal"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#packed","text":"C \u306e\u69cb\u9020\u4f53 \u3092\u30d1\u30c3\u30af\u3057\u3001\u81ea\u52d5\u3067\u30d5\u30a3\u30fc\u30eb\u30c9\u9593\u306e\u30d1\u30c7\u30a3\u30f3\u30b0\u304c\u633f\u5165\u3055\u308c\u308b\u306e\u3092\u9632\u304e\u307e\u3059\u3002C \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30d1\u30c3\u30af\u3055\u308c\u305f\u69cb\u9020\u4f53\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306b\u3001\u3053\u308c\u306f\u5fc5\u8981\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002","title":"Packed"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#alwaysinline","text":"\u5e38\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u30a4\u30f3\u30e9\u30a4\u30f3\u306b\u3059\u308b\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6307\u793a\u3057\u307e\u3059\u3002 @[ AlwaysInline ] def foo 1 end","title":"AlwaysInline"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#noinline","text":"\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3092\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u306b\u3057\u306a\u3044\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6307\u793a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u30e1\u30bd\u30c3\u30c9\u304c yield \u3059\u308b\u5834\u5408\u306b\u306f\u52b9\u679c\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u305d\u306e\u5834\u5408\u306f\u5e38\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002 @[ NoInline ] def foo 1 end","title":"NoInline"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#returnstwice","text":"\u30e1\u30bd\u30c3\u30c9\u3082\u3057\u304f\u306f lib \u4e2d\u306e fun \u304c2\u5ea6\u30ea\u30bf\u30fc\u30f3\u3059\u308b\u3053\u3068\u3092\u6307\u793a\u3057\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u95a2\u6570\u3068\u3057\u3066\u306f\u3001C\u8a00\u8a9e\u306e setjmp \u304c\u3042\u3052\u3089\u308c\u307e\u3059\u3002","title":"ReturnsTwice"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#raises","text":"\u30e1\u30bd\u30c3\u30c9\u3082\u3057\u304f\u306f lib \u4e2d\u306e fun \u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u6307\u793a\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f \u30b3\u30fc\u30eb\u30d0\u30c3\u30af \u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Raises"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#callconvention","text":"lib fun \u306e\u547c\u3073\u51fa\u3057\u898f\u7d04\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 lib LibFoo @[ CallConvention ( \"X86_StdCall\" ) ] fun foo : Int32 end \u6709\u52b9\u306a\u547c\u51fa\u898f\u7d04\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002 C (\u30c7\u30d5\u30a9\u30eb\u30c8) Fast Cold WebKit_JS AnyReg X86_StdCall X86_FastCall \u8a73\u3057\u3044\u8aac\u660e\u306f \u3053\u3061\u3089 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"CallConvention"},{"location":"syntax_and_semantics/annotations/built_in_annotations.html#flags","text":"\u5217\u6319\u578b \u3092\u300c\u30d5\u30e9\u30b0\u5217\u6319\u578b\u300d\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001 to_s \u306a\u3069\u3044\u304f\u3064\u304b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u6319\u52d5\u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002","title":"Flags"},{"location":"syntax_and_semantics/c_bindings/index.html","text":"C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 Crystal \u3067\u306f\u3001\u65e2\u5b58\u306e C \u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5bfe\u3057\u3066\u3001C \u30921\u884c\u3082\u66f8\u304b\u305a\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3055\u3089\u306b\u3001 out \u3084 to_unsafe \u3068\u3044\u3063\u305f\u4fbf\u5229\u306a\u3082\u306e\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u53ef\u80fd\u306a\u9650\u308a\u697d\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002","title":"C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0"},{"location":"syntax_and_semantics/c_bindings/index.html#c","text":"Crystal \u3067\u306f\u3001\u65e2\u5b58\u306e C \u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5bfe\u3057\u3066\u3001C \u30921\u884c\u3082\u66f8\u304b\u305a\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3055\u3089\u306b\u3001 out \u3084 to_unsafe \u3068\u3044\u3063\u305f\u4fbf\u5229\u306a\u3082\u306e\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u53ef\u80fd\u306a\u9650\u308a\u697d\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002","title":"C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0"},{"location":"syntax_and_semantics/c_bindings/alias.html","text":"\u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias) lib \u306e\u4e2d\u3067 alias \u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067 C typedef \u304c\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib X alias MyInt = Int32 end \u3053\u308c\u3067 Int32 \u3068 MyInt \u306f\u76f8\u4e92\u306b\u4ea4\u63db\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 lib X alias MyInt = Int32 fun some_fun ( value : MyInt ) end X . some_fun 1 # OK alias \u304c\u4fbf\u5229\u306a\u306e\u306f\u3001\u9577\u3044\u578b\u540d\u3092\u4f55\u5ea6\u3082\u66f8\u304b\u305a\u306b\u6e08\u3080\u3088\u3046\u306b\u3067\u304d\u308b\u3053\u3068\u306b\u9650\u3089\u305a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0\u306b\u57fa\u3065\u304f\u578b\u5ba3\u8a00\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 lib C {% if flag? ( :x86_64 ) %} alias SizeT = Int64 {% else %} alias SizeT = Int32 {% end %} fun memcmp ( p1 : Void * , p2 : Void * , size : C :: SizeT ) : Int32 end \u3053\u306e\u5ba3\u8a00\u306e\u578b\u3092\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias)"},{"location":"syntax_and_semantics/c_bindings/alias.html#alias","text":"lib \u306e\u4e2d\u3067 alias \u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067 C typedef \u304c\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib X alias MyInt = Int32 end \u3053\u308c\u3067 Int32 \u3068 MyInt \u306f\u76f8\u4e92\u306b\u4ea4\u63db\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 lib X alias MyInt = Int32 fun some_fun ( value : MyInt ) end X . some_fun 1 # OK alias \u304c\u4fbf\u5229\u306a\u306e\u306f\u3001\u9577\u3044\u578b\u540d\u3092\u4f55\u5ea6\u3082\u66f8\u304b\u305a\u306b\u6e08\u3080\u3088\u3046\u306b\u3067\u304d\u308b\u3053\u3068\u306b\u9650\u3089\u305a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30d5\u30e9\u30b0\u306b\u57fa\u3065\u304f\u578b\u5ba3\u8a00\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 lib C {% if flag? ( :x86_64 ) %} alias SizeT = Int64 {% else %} alias SizeT = Int32 {% end %} fun memcmp ( p1 : Void * , p2 : Void * , size : C :: SizeT ) : Int32 end \u3053\u306e\u5ba3\u8a00\u306e\u578b\u3092\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u578b\u30a8\u30a4\u30ea\u30a2\u30b9 (alias)"},{"location":"syntax_and_semantics/c_bindings/callbacks.html","text":"\u30b3\u30fc\u30eb\u30d0\u30c3\u30af C \u306e\u5ba3\u8a00\u306e\u4e2d\u3067\u95a2\u6570\u578b\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 lib X # C \u3067\u306f: # # void callback(int (*f)(int)); fun callback ( f : Int32 -> Int32 ) end \u305d\u308c\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u95a2\u6570 ( Proc ) \u3092\u6e21\u305b\u307e\u3059\u3002 f = -> ( x : Int32 ) { x + 1 } X . callback ( f ) \u547c\u3073\u51fa\u3057\u3068\u540c\u6642\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001\u5f15\u6570\u306e\u578b\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c fun \u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u306b\u57fa\u3065\u3044\u3066\u578b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 X . callback -> ( x ) { x + 1 } \u305f\u3060\u3001C \u306b\u6e21\u3055\u308c\u308b\u95a2\u6570\u306f\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u306f\u306a\u308c\u307e\u305b\u3093\u3002\u3082\u3057\u3001\u30af\u30ed\u30fc\u30b8\u30e3\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3055\u308c\u308b\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002 y = 2 X . callback -> ( x ) { x + y } # Error: can't send closure to C function \u3082\u3057\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3053\u306e\u3053\u3068\u3092\u691c\u51fa\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002 \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3068 Proc \u306b\u4f7f\u7528\u3059\u308b\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u306f\u306a\u304f NULL \u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u5358\u7d14\u306b nil \u3092\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002 # C \u3067\u306e callback(NULL) \u3068\u540c\u3058 X . callback nil C \u306e\u95a2\u6570\u306b\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u6e21\u3059 \u307b\u3068\u3093\u3069\u306e C \u95a2\u6570\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u72ec\u81ea\u306e\u30c7\u30fc\u30bf\u306e\u305f\u3081\u306e\u5f15\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u72ec\u81ea\u306e\u30c7\u30fc\u30bf\u306f\u5f15\u6570\u3068\u3057\u3066\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\u4f8b\u3068\u3057\u3066\u3001\u4e00\u5b9a\u306e\u5468\u671f\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306a C \u306e\u95a2\u6570\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 lib LibTicker fun on_tick ( callback : ( Int32 , Void * -> ), data : Void * ) end \u3053\u306e\u95a2\u6570\u306e\u307e\u3063\u3068\u3046\u306a\u30e9\u30c3\u30d1\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u3001 Proc \u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3057\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u4e2d\u3067\u5143\u306e Proc \u306b\u623b\u3057\u3001\u305d\u308c\u3092\u547c\u3073\u51fa\u3059\u3001\u3068\u3044\u3046\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 module Ticker # \u30e6\u30fc\u30b6\u30fc\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f Void* \u3092\u6301\u3061\u307e\u305b\u3093 @@box : Pointer ( Void )? def self . on_tick ( & callback : Int32 -> ) # Proc \u306f\u5185\u90e8\u7684\u306b\u306f {Void*, Void*} \u306a\u306e\u3067 Void* \u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 # \u305d\u3053\u3067\u3001\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3057\u3066 Proc \u3092\u305d\u3053\u306b\u4fdd\u5b58\u3059\u308b\u300c\u30dc\u30c3\u30af\u30b9\u5316\u300d\u3092\u3057\u307e\u3059\u3002 boxed_data = Box . box ( callback ) # \u52dd\u624b\u306b GC \u3055\u308c\u308b\u306e\u3092\u9632\u3050\u305f\u3081\u3001Crystal \u4e0a\u306b\u4fdd\u6301\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 (*) @@box = boxed_data # \u30af\u30ed\u30fc\u30b8\u30e3\u3067\u306f\u306a\u3044\u5f62\u306b\u306a\u308b\u3088\u3046\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6e21\u3057\u3001boxed_data \u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af # \u306e\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3057\u307e\u3059 LibTicker . on_tick ( -> ( tick , data ) { # \u3053\u3053\u3067 Box.unbox \u3092\u4f7f\u3044 data \u3092 Proc \u306b\u623b\u3057\u307e\u3059 data_as_callback = Box ( typeof ( callback )) . unbox ( data ) # \u305d\u3057\u3066\u3001\u6700\u7d42\u7684\u306b\u30e6\u30fc\u30b6\u30fc\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3057\u307e\u3059 data_as_callback . call ( tick ) }, boxed_data ) end end Ticker . on_tick do | tick | puts tick end \u30dc\u30c3\u30af\u30b9\u5316\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092 @@box \u306b\u4fdd\u6301\u3057\u305f\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u7406\u7531\u306f\u3001\u305d\u3046\u3057\u306a\u3051\u308c\u3070\u3069\u3053\u304b\u3089\u3082\u53c2\u7167\u3057\u3066\u3044\u308b\u3068\u898b\u306a\u3055\u308c\u305a\u3001GC \u304c\u305d\u308c\u3092\u56de\u53ce\u3057\u3066\u3057\u307e\u3046\u304b\u3089\u3067\u3059\u3002C \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5f53\u7136\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057 Crystal \u306e GC \u304c\u305d\u308c\u3092\u77e5\u308b\u8853\u306f\u306a\u3044\u306e\u3067\u3059\u3002 Raises \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3 \u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092 C \u306e\u95a2\u6570\u304c\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b\u306f @[Raises] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f @[Raises] \u304c\u6307\u5b9a\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3084\u3001\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u3082 (\u518d\u5e30\u7684\u306b) \u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002 \u3057\u304b\u3057\u3001C \u306e\u95a2\u6570\u306b\u306f\u3001\u4ed6\u306e C \u95a2\u6570\u306b\u3088\u3063\u3066\u5b9f\u884c\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 lib LibFoo fun store_callback ( callback : -> ) fun execute_callback end LibFoo . store_callback -> { raise \"OH NO!\" } LibFoo . execute_callback \u3053\u306e\u3068\u304d\u3001\u3082\u3057 store_callback \u306b\u6e21\u3055\u308c\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3082\u306e\u3067\u3042\u308b\u3068\u304d\u306b\u306f\u3001 execute_callback \u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u3001 execute_callback \u306b @[Raises] \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u308c\u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3082\u306e\u3067\u3042\u308b\u3053\u3068\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u3046\u3044\u3063\u305f\u30b1\u30fc\u30b9\u3067\u306f\u3001\u305d\u308c\u3089\u306e\u95a2\u6570\u306b\u624b\u52d5\u3067\u6307\u793a\u3092\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 lib LibFoo fun store_callback ( callback : -> ) @[ Raises ] fun execute_callback end \u3082\u3057\u4e0a\u8a18\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u3053\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u56f2\u3080 begin/rescue \u30d6\u30ed\u30c3\u30af\u306f\u671f\u5f85\u901a\u308a\u306b\u52d5\u3044\u3066\u304f\u308c\u307e\u305b\u3093\u3002","title":"\u30b3\u30fc\u30eb\u30d0\u30c3\u30af"},{"location":"syntax_and_semantics/c_bindings/callbacks.html#_1","text":"C \u306e\u5ba3\u8a00\u306e\u4e2d\u3067\u95a2\u6570\u578b\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 lib X # C \u3067\u306f: # # void callback(int (*f)(int)); fun callback ( f : Int32 -> Int32 ) end \u305d\u308c\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u95a2\u6570 ( Proc ) \u3092\u6e21\u305b\u307e\u3059\u3002 f = -> ( x : Int32 ) { x + 1 } X . callback ( f ) \u547c\u3073\u51fa\u3057\u3068\u540c\u6642\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001\u5f15\u6570\u306e\u578b\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c fun \u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u306b\u57fa\u3065\u3044\u3066\u578b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 X . callback -> ( x ) { x + 1 } \u305f\u3060\u3001C \u306b\u6e21\u3055\u308c\u308b\u95a2\u6570\u306f\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u306f\u306a\u308c\u307e\u305b\u3093\u3002\u3082\u3057\u3001\u30af\u30ed\u30fc\u30b8\u30e3\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3055\u308c\u308b\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002 y = 2 X . callback -> ( x ) { x + y } # Error: can't send closure to C function \u3082\u3057\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3053\u306e\u3053\u3068\u3092\u691c\u51fa\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002 \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3068 Proc \u306b\u4f7f\u7528\u3059\u308b\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u306f\u306a\u304f NULL \u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u5358\u7d14\u306b nil \u3092\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002 # C \u3067\u306e callback(NULL) \u3068\u540c\u3058 X . callback nil","title":"\u30b3\u30fc\u30eb\u30d0\u30c3\u30af"},{"location":"syntax_and_semantics/c_bindings/callbacks.html#c","text":"\u307b\u3068\u3093\u3069\u306e C \u95a2\u6570\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u72ec\u81ea\u306e\u30c7\u30fc\u30bf\u306e\u305f\u3081\u306e\u5f15\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u72ec\u81ea\u306e\u30c7\u30fc\u30bf\u306f\u5f15\u6570\u3068\u3057\u3066\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\u4f8b\u3068\u3057\u3066\u3001\u4e00\u5b9a\u306e\u5468\u671f\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306a C \u306e\u95a2\u6570\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 lib LibTicker fun on_tick ( callback : ( Int32 , Void * -> ), data : Void * ) end \u3053\u306e\u95a2\u6570\u306e\u307e\u3063\u3068\u3046\u306a\u30e9\u30c3\u30d1\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u3001 Proc \u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3057\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u4e2d\u3067\u5143\u306e Proc \u306b\u623b\u3057\u3001\u305d\u308c\u3092\u547c\u3073\u51fa\u3059\u3001\u3068\u3044\u3046\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 module Ticker # \u30e6\u30fc\u30b6\u30fc\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f Void* \u3092\u6301\u3061\u307e\u305b\u3093 @@box : Pointer ( Void )? def self . on_tick ( & callback : Int32 -> ) # Proc \u306f\u5185\u90e8\u7684\u306b\u306f {Void*, Void*} \u306a\u306e\u3067 Void* \u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 # \u305d\u3053\u3067\u3001\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3057\u3066 Proc \u3092\u305d\u3053\u306b\u4fdd\u5b58\u3059\u308b\u300c\u30dc\u30c3\u30af\u30b9\u5316\u300d\u3092\u3057\u307e\u3059\u3002 boxed_data = Box . box ( callback ) # \u52dd\u624b\u306b GC \u3055\u308c\u308b\u306e\u3092\u9632\u3050\u305f\u3081\u3001Crystal \u4e0a\u306b\u4fdd\u6301\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 (*) @@box = boxed_data # \u30af\u30ed\u30fc\u30b8\u30e3\u3067\u306f\u306a\u3044\u5f62\u306b\u306a\u308b\u3088\u3046\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6e21\u3057\u3001boxed_data \u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af # \u306e\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3057\u307e\u3059 LibTicker . on_tick ( -> ( tick , data ) { # \u3053\u3053\u3067 Box.unbox \u3092\u4f7f\u3044 data \u3092 Proc \u306b\u623b\u3057\u307e\u3059 data_as_callback = Box ( typeof ( callback )) . unbox ( data ) # \u305d\u3057\u3066\u3001\u6700\u7d42\u7684\u306b\u30e6\u30fc\u30b6\u30fc\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3057\u307e\u3059 data_as_callback . call ( tick ) }, boxed_data ) end end Ticker . on_tick do | tick | puts tick end \u30dc\u30c3\u30af\u30b9\u5316\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092 @@box \u306b\u4fdd\u6301\u3057\u305f\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u7406\u7531\u306f\u3001\u305d\u3046\u3057\u306a\u3051\u308c\u3070\u3069\u3053\u304b\u3089\u3082\u53c2\u7167\u3057\u3066\u3044\u308b\u3068\u898b\u306a\u3055\u308c\u305a\u3001GC \u304c\u305d\u308c\u3092\u56de\u53ce\u3057\u3066\u3057\u307e\u3046\u304b\u3089\u3067\u3059\u3002C \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5f53\u7136\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057 Crystal \u306e GC \u304c\u305d\u308c\u3092\u77e5\u308b\u8853\u306f\u306a\u3044\u306e\u3067\u3059\u3002","title":"C \u306e\u95a2\u6570\u306b\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u6e21\u3059"},{"location":"syntax_and_semantics/c_bindings/callbacks.html#raises","text":"\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092 C \u306e\u95a2\u6570\u304c\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b\u306f @[Raises] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f @[Raises] \u304c\u6307\u5b9a\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3084\u3001\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u3082 (\u518d\u5e30\u7684\u306b) \u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002 \u3057\u304b\u3057\u3001C \u306e\u95a2\u6570\u306b\u306f\u3001\u4ed6\u306e C \u95a2\u6570\u306b\u3088\u3063\u3066\u5b9f\u884c\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 lib LibFoo fun store_callback ( callback : -> ) fun execute_callback end LibFoo . store_callback -> { raise \"OH NO!\" } LibFoo . execute_callback \u3053\u306e\u3068\u304d\u3001\u3082\u3057 store_callback \u306b\u6e21\u3055\u308c\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3082\u306e\u3067\u3042\u308b\u3068\u304d\u306b\u306f\u3001 execute_callback \u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u3001 execute_callback \u306b @[Raises] \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305d\u308c\u304c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3082\u306e\u3067\u3042\u308b\u3053\u3068\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u3046\u3044\u3063\u305f\u30b1\u30fc\u30b9\u3067\u306f\u3001\u305d\u308c\u3089\u306e\u95a2\u6570\u306b\u624b\u52d5\u3067\u6307\u793a\u3092\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 lib LibFoo fun store_callback ( callback : -> ) @[ Raises ] fun execute_callback end \u3082\u3057\u4e0a\u8a18\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u3053\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u56f2\u3080 begin/rescue \u30d6\u30ed\u30c3\u30af\u306f\u671f\u5f85\u901a\u308a\u306b\u52d5\u3044\u3066\u304f\u308c\u307e\u305b\u3093\u3002","title":"Raises \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3"},{"location":"syntax_and_semantics/c_bindings/constants.html","text":"\u5b9a\u6570 lib \u5ba3\u8a00\u306e\u5185\u90e8\u3067\u5b9a\u6570\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 @[ Link ( \"pcre\" ) ] lib PCRE INFO_CAPTURECOUNT = 2 end PCRE :: INFO_CAPTURECOUNT # => 2","title":"\u5b9a\u6570"},{"location":"syntax_and_semantics/c_bindings/constants.html#_1","text":"lib \u5ba3\u8a00\u306e\u5185\u90e8\u3067\u5b9a\u6570\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 @[ Link ( \"pcre\" ) ] lib PCRE INFO_CAPTURECOUNT = 2 end PCRE :: INFO_CAPTURECOUNT # => 2","title":"\u5b9a\u6570"},{"location":"syntax_and_semantics/c_bindings/enum.html","text":"enum lib \u306e\u4e2d\u3067 enum \u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067 C \u306e\u5217\u6319\u578b\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib X # C \u3067\u306f: # # enum SomeEnum { # Zero, # One, # Two, # Three, # }; enum SomeEnum Zero One Two Three end end C \u3068\u540c\u3058\u304f\u3001\u5217\u6319\u578b\u306e\u6700\u521d\u306e\u8981\u7d20\u306f\u30bc\u30ed\u3067\u3001\u4ee5\u964d\u306e\u8981\u7d20\u306f\u305d\u308c\u305e\u308c1\u305a\u3064\u5897\u52a0\u3057\u305f\u5024\u3068\u306a\u308a\u307e\u3059\u3002 \u5024\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5229\u7528\u3057\u307e\u3059\u3002 X :: SomeEnum :: One # => One \u8981\u7d20\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 lib X enum SomeEnum Ten = 10 Twenty = 10 * 2 ThirtyTwo = 1 << 5 end end \u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001\u8981\u7d20\u306e\u5024\u306b\u306f + \u3001 - \u3001 * \u3001 / \u3001 & \u3001 | \u3001 << \u3001 >> \u3001 % \u3068\u3044\u3063\u305f\u57fa\u672c\u7684\u306a\u8a08\u7b97\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u5217\u6319\u578b\u306e\u8981\u7d20\u306e\u578b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 Int32 \u3067\u3059\u3002\u3053\u308c\u306f\u3001\u5b9a\u6570\u306e\u5024\u306b\u5225\u306e\u578b\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3067\u3042\u3063\u3066\u3082\u540c\u69d8\u3067\u3059\u3002 lib X enum SomeEnum A = 1_u32 end end X :: SomeEnum # => 1_i32 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u578b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 lib X enum SomeEnum : Int8 Zero Two = 2 end end X :: SomeEnum :: Zero # => 0_i8 X :: SomeEnum :: Two # => 2_i8 fun \u306e\u5f15\u6570\u3084\u3001 struct \u3084 union \u306e\u30e1\u30f3\u30d0\u3068\u3057\u3066\u3082\u5217\u6319\u578b\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 lib X enum SomeEnum One Two end fun some_fun ( value : SomeEnum ) end","title":"enum"},{"location":"syntax_and_semantics/c_bindings/enum.html#enum","text":"lib \u306e\u4e2d\u3067 enum \u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067 C \u306e\u5217\u6319\u578b\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib X # C \u3067\u306f: # # enum SomeEnum { # Zero, # One, # Two, # Three, # }; enum SomeEnum Zero One Two Three end end C \u3068\u540c\u3058\u304f\u3001\u5217\u6319\u578b\u306e\u6700\u521d\u306e\u8981\u7d20\u306f\u30bc\u30ed\u3067\u3001\u4ee5\u964d\u306e\u8981\u7d20\u306f\u305d\u308c\u305e\u308c1\u305a\u3064\u5897\u52a0\u3057\u305f\u5024\u3068\u306a\u308a\u307e\u3059\u3002 \u5024\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5229\u7528\u3057\u307e\u3059\u3002 X :: SomeEnum :: One # => One \u8981\u7d20\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 lib X enum SomeEnum Ten = 10 Twenty = 10 * 2 ThirtyTwo = 1 << 5 end end \u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001\u8981\u7d20\u306e\u5024\u306b\u306f + \u3001 - \u3001 * \u3001 / \u3001 & \u3001 | \u3001 << \u3001 >> \u3001 % \u3068\u3044\u3063\u305f\u57fa\u672c\u7684\u306a\u8a08\u7b97\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u5217\u6319\u578b\u306e\u8981\u7d20\u306e\u578b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 Int32 \u3067\u3059\u3002\u3053\u308c\u306f\u3001\u5b9a\u6570\u306e\u5024\u306b\u5225\u306e\u578b\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3067\u3042\u3063\u3066\u3082\u540c\u69d8\u3067\u3059\u3002 lib X enum SomeEnum A = 1_u32 end end X :: SomeEnum # => 1_i32 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u578b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 lib X enum SomeEnum : Int8 Zero Two = 2 end end X :: SomeEnum :: Zero # => 0_i8 X :: SomeEnum :: Two # => 2_i8 fun \u306e\u5f15\u6570\u3084\u3001 struct \u3084 union \u306e\u30e1\u30f3\u30d0\u3068\u3057\u3066\u3082\u5217\u6319\u578b\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 lib X enum SomeEnum One Two end fun some_fun ( value : SomeEnum ) end","title":"enum"},{"location":"syntax_and_semantics/c_bindings/fun.html","text":"fun lib \u306e\u4e2d\u3067 fun \u3092\u5ba3\u8a00\u3059\u308b\u3068\u3001C \u95a2\u6570\u3078\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3068\u306a\u308a\u307e\u3059\u3002 lib C # C \u3067\u306f double cos(double x) \u3068\u306a\u3063\u3066\u3044\u308b fun cos ( value : Float64 ) : Float64 end \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u8a2d\u5b9a\u3057\u305f\u3089\u3001\u305d\u306e\u95a2\u6570\u306f C \u578b\u3067\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u3088\u3046\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 C . cos ( 1.5 ) # => 0.0707372 \u3082\u3057\u95a2\u6570\u304c\u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u3082\u306e\u3067\u3042\u308c\u3070\u3001\u62ec\u5f27\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 (\u547c\u3073\u51fa\u3057\u306e\u969b\u306b\u3082\u540c\u69d8\u3067\u3059)\u3002 lib C fun getch : Int32 end C . getch \u3082\u3057\u623b\u308a\u5024\u306e\u578b\u304c void \u3067\u3042\u308c\u3070\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 lib C fun srand ( seed : UInt32 ) end C . srand ( 1_u32 ) \u53ef\u5909\u9577\u5f15\u6570\u3092\u6301\u3064\u95a2\u6570\u3092\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 lib X fun variadic ( value : Int32 , ... ) : Int32 end X . variadic ( 1 , 2 , 3 , 4 ) C \u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306b (\u5f8c\u306b\u8aac\u660e\u3059\u308b to_unsafe \u3092\u9664\u3044\u3066\u306f) \u6697\u9ed9\u7684\u306a\u5909\u63db\u306f\u884c\u308f\u308c\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3064\u307e\u308a\u3001\u671f\u5f85\u3055\u308c\u308b\u578b\u3092\u6b63\u78ba\u306b\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6574\u6570\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306b\u95a2\u3057\u3066\u306f to_... \u30e1\u30bd\u30c3\u30c9\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u95a2\u6570\u540d lib \u4e2d\u3067\u306e\u95a2\u6570\u540d\u306f\u5927\u6587\u5b57\u304b\u3089\u306f\u3058\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 lib \u306e\u5916\u3067\u306f\u95a2\u6570\u540d\u306f\u5c0f\u6587\u5b57\u304b\u3089\u59cb\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u3053\u3053\u306f\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u306f\u3001Crystal \u306e\u95a2\u6570\u540d\u306f C \u3067\u306e\u305d\u308c\u3068\u306f\u7570\u306a\u308b\u305f\u3081\u3067\u3059\u3002\u6b21\u306f SDL_Init \u3068\u3044\u3046\u540d\u524d\u306e C \u306e\u95a2\u6570\u3092 Crystal \u3067\u306f LibSDL.init \u3068\u3057\u3066\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u4f8b\u3067\u3059\u3002 lib LibSDL fun init = SDL_Init ( flags : UInt32 ) : Int32 end C \u3067\u306e\u540d\u524d\u304c\u6709\u52b9\u306a\u8b58\u5225\u5b50\u3067\u306f\u306a\u3044\u5834\u5408\u3001\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u3067\u56f2\u3063\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002 lib LLVMIntrinsics fun ceil_f32 = \"llvm.ceil.f32\" ( value : Float32 ) : Float32 end C \u306e\u95a2\u6570\u540d\u306f\u9577\u3044\u50be\u5411\u304c\u3042\u308a\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u540d\u3067\u4fee\u98fe\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3082\u3042\u308b\u305f\u3081\u3001\u3088\u308a\u77ed\u304b\u304f\u5206\u304b\u308a\u3084\u3059\u3044\u540d\u524d\u3092\u3064\u3051\u308b\u305f\u3081\u306b\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u4e2d\u306e\u578b C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u4e2d\u3067\u6709\u52b9\u306a\u578b\u306f\u3001 \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b ( Int8 \u3001\u2026\u2026\u3001 Int64 \u3001 UInt8 \u3001\u2026\u2026\u3001 UInt64 \u3001 Float32 \u3001 Float64 ) \u30dd\u30a4\u30f3\u30bf\u578b ( Pointer(Int32) \u3001\u3053\u308c\u306f Int32* \u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059) \u9759\u7684\u914d\u5217 ( StaticArray(Int32, 8) \u3001\u3053\u308c\u306f Int32[8] \u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059) \u95a2\u6570\u578b ( Function(Int32, Int32) \u3001\u3053\u308c\u306f Int32 -> Int32 \u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059) \u305d\u306e\u4ed6\u306e\u3001\u3053\u308c\u307e\u3067\u306b\u5ba3\u8a00\u3055\u308c\u305f struct \u3001 union \u3001 enum \u3001 type \u3082\u3057\u304f\u306f alias Void : \u623b\u308a\u5024\u304c\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059 NoReturn : Void \u3068\u4f3c\u3066\u3044\u308b\u304c\u3001\u547c\u3073\u51fa\u3057\u5f8c\u306b\u7d9a\u304f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u306a\u3044\u3053\u3068\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u7406\u89e3\u3057\u307e\u3059 @[Extern] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u6307\u5b9a\u3055\u308c\u305f Crystal \u306e\u69cb\u9020\u4f53 fun \u306e\u578b\u3092\u66f8\u304f\u969b\u306b\u5229\u7528\u3067\u304d\u308b\u69cb\u6587\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f LibC \u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001 int \u3084 short \u3001 size_t \u3068\u3044\u3063\u305f\u4e00\u822c\u7684\u306a C \u306e\u578b\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3089\u306f\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 lib MyLib fun my_fun ( some_size : LibC :: SizeT ) end Note C \u306e char \u578b\u306f Crystal \u3067\u306f UInt8 \u3067\u3059\u3002\u306a\u306e\u3067\u3001 char* \u3084 const char* \u306f UInt8* \u306b\u306a\u308a\u307e\u3059\u3002Crystal \u306e Char \u578b\u306f Unicode \u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b\u305f\u3081\u30014\u30d0\u30a4\u30c8\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a UInt8 \u3067\u306f\u306a\u304f Int32 \u306b\u8fd1\u3044\u3067\u3059\u3002\u3082\u3057\u6c17\u306b\u306a\u308b\u306e\u3067\u3042\u308c\u3070\u3001 LibC::Char \u3068\u3044\u3046\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002","title":"fun"},{"location":"syntax_and_semantics/c_bindings/fun.html#fun","text":"lib \u306e\u4e2d\u3067 fun \u3092\u5ba3\u8a00\u3059\u308b\u3068\u3001C \u95a2\u6570\u3078\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3068\u306a\u308a\u307e\u3059\u3002 lib C # C \u3067\u306f double cos(double x) \u3068\u306a\u3063\u3066\u3044\u308b fun cos ( value : Float64 ) : Float64 end \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u8a2d\u5b9a\u3057\u305f\u3089\u3001\u305d\u306e\u95a2\u6570\u306f C \u578b\u3067\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u3088\u3046\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 C . cos ( 1.5 ) # => 0.0707372 \u3082\u3057\u95a2\u6570\u304c\u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u3082\u306e\u3067\u3042\u308c\u3070\u3001\u62ec\u5f27\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 (\u547c\u3073\u51fa\u3057\u306e\u969b\u306b\u3082\u540c\u69d8\u3067\u3059)\u3002 lib C fun getch : Int32 end C . getch \u3082\u3057\u623b\u308a\u5024\u306e\u578b\u304c void \u3067\u3042\u308c\u3070\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 lib C fun srand ( seed : UInt32 ) end C . srand ( 1_u32 ) \u53ef\u5909\u9577\u5f15\u6570\u3092\u6301\u3064\u95a2\u6570\u3092\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 lib X fun variadic ( value : Int32 , ... ) : Int32 end X . variadic ( 1 , 2 , 3 , 4 ) C \u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306b (\u5f8c\u306b\u8aac\u660e\u3059\u308b to_unsafe \u3092\u9664\u3044\u3066\u306f) \u6697\u9ed9\u7684\u306a\u5909\u63db\u306f\u884c\u308f\u308c\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3064\u307e\u308a\u3001\u671f\u5f85\u3055\u308c\u308b\u578b\u3092\u6b63\u78ba\u306b\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6574\u6570\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306b\u95a2\u3057\u3066\u306f to_... \u30e1\u30bd\u30c3\u30c9\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002","title":"fun"},{"location":"syntax_and_semantics/c_bindings/fun.html#_1","text":"lib \u4e2d\u3067\u306e\u95a2\u6570\u540d\u306f\u5927\u6587\u5b57\u304b\u3089\u306f\u3058\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 lib \u306e\u5916\u3067\u306f\u95a2\u6570\u540d\u306f\u5c0f\u6587\u5b57\u304b\u3089\u59cb\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u3053\u3053\u306f\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u306f\u3001Crystal \u306e\u95a2\u6570\u540d\u306f C \u3067\u306e\u305d\u308c\u3068\u306f\u7570\u306a\u308b\u305f\u3081\u3067\u3059\u3002\u6b21\u306f SDL_Init \u3068\u3044\u3046\u540d\u524d\u306e C \u306e\u95a2\u6570\u3092 Crystal \u3067\u306f LibSDL.init \u3068\u3057\u3066\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u4f8b\u3067\u3059\u3002 lib LibSDL fun init = SDL_Init ( flags : UInt32 ) : Int32 end C \u3067\u306e\u540d\u524d\u304c\u6709\u52b9\u306a\u8b58\u5225\u5b50\u3067\u306f\u306a\u3044\u5834\u5408\u3001\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u3067\u56f2\u3063\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002 lib LLVMIntrinsics fun ceil_f32 = \"llvm.ceil.f32\" ( value : Float32 ) : Float32 end C \u306e\u95a2\u6570\u540d\u306f\u9577\u3044\u50be\u5411\u304c\u3042\u308a\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u540d\u3067\u4fee\u98fe\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3082\u3042\u308b\u305f\u3081\u3001\u3088\u308a\u77ed\u304b\u304f\u5206\u304b\u308a\u3084\u3059\u3044\u540d\u524d\u3092\u3064\u3051\u308b\u305f\u3081\u306b\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002","title":"\u95a2\u6570\u540d"},{"location":"syntax_and_semantics/c_bindings/fun.html#c","text":"C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u4e2d\u3067\u6709\u52b9\u306a\u578b\u306f\u3001 \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b ( Int8 \u3001\u2026\u2026\u3001 Int64 \u3001 UInt8 \u3001\u2026\u2026\u3001 UInt64 \u3001 Float32 \u3001 Float64 ) \u30dd\u30a4\u30f3\u30bf\u578b ( Pointer(Int32) \u3001\u3053\u308c\u306f Int32* \u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059) \u9759\u7684\u914d\u5217 ( StaticArray(Int32, 8) \u3001\u3053\u308c\u306f Int32[8] \u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059) \u95a2\u6570\u578b ( Function(Int32, Int32) \u3001\u3053\u308c\u306f Int32 -> Int32 \u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059) \u305d\u306e\u4ed6\u306e\u3001\u3053\u308c\u307e\u3067\u306b\u5ba3\u8a00\u3055\u308c\u305f struct \u3001 union \u3001 enum \u3001 type \u3082\u3057\u304f\u306f alias Void : \u623b\u308a\u5024\u304c\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059 NoReturn : Void \u3068\u4f3c\u3066\u3044\u308b\u304c\u3001\u547c\u3073\u51fa\u3057\u5f8c\u306b\u7d9a\u304f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u306a\u3044\u3053\u3068\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u7406\u89e3\u3057\u307e\u3059 @[Extern] \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u6307\u5b9a\u3055\u308c\u305f Crystal \u306e\u69cb\u9020\u4f53 fun \u306e\u578b\u3092\u66f8\u304f\u969b\u306b\u5229\u7528\u3067\u304d\u308b\u69cb\u6587\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f LibC \u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001 int \u3084 short \u3001 size_t \u3068\u3044\u3063\u305f\u4e00\u822c\u7684\u306a C \u306e\u578b\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3089\u306f\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 lib MyLib fun my_fun ( some_size : LibC :: SizeT ) end Note C \u306e char \u578b\u306f Crystal \u3067\u306f UInt8 \u3067\u3059\u3002\u306a\u306e\u3067\u3001 char* \u3084 const char* \u306f UInt8* \u306b\u306a\u308a\u307e\u3059\u3002Crystal \u306e Char \u578b\u306f Unicode \u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b\u305f\u3081\u30014\u30d0\u30a4\u30c8\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a UInt8 \u3067\u306f\u306a\u304f Int32 \u306b\u8fd1\u3044\u3067\u3059\u3002\u3082\u3057\u6c17\u306b\u306a\u308b\u306e\u3067\u3042\u308c\u3070\u3001 LibC::Char \u3068\u3044\u3046\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002","title":"C \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u4e2d\u306e\u578b"},{"location":"syntax_and_semantics/c_bindings/lib.html","text":"lib lib \u5ba3\u8a00\u306b\u3088\u3063\u3066\u3001C \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u95a2\u6570\u7fa4\u3084\u578b\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u3002 @[ Link ( \"pcre\" ) ] lib LibPCRE end \u306a\u304a\u3001\u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5f37\u5236\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u901a\u5e38\u306f lib \u306e\u540d\u524d\u306f Lib \u304b\u3089\u59cb\u307e\u308b\u3082\u306e\u306b\u3057\u307e\u3059\u3002 \u307e\u305f\u3001\u5c5e\u6027\u306f\u30ea\u30f3\u30ab\u306b\u30d5\u30e9\u30b0\u3092\u6e21\u3059\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u3001\u30ea\u30f3\u30ab\u306f\u305d\u308c\u306b\u3057\u305f\u304c\u3063\u3066\u5916\u90e8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3057\u307e\u3059\u3002 @[Link(\"pcre\")] \u306f -lpcre \u3092\u30ea\u30f3\u30ab\u306b\u6e21\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u307e\u305a\u6700\u521d\u306b pkg-config \u306e\u5229\u7528\u3092\u8a66\u307f\u307e\u3059\u3002 @[Link(ldflags: \"...\")] \u306f\u6307\u5b9a\u3057\u305f\u30d5\u30e9\u30b0\u3092\u305d\u306e\u307e\u307e\u76f4\u63a5\u30ea\u30f3\u30ab\u306b\u6e21\u3057\u307e\u3059\u3002\u4f8b: @[Link(ldflags: \"-lpcre\")] \u3088\u304f\u4f7f\u308f\u308c\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3068\u3057\u3066\u30d0\u30c3\u30af\u30c6\u30a3\u30c3\u30af (\u30d0\u30c3\u30af\u30af\u30a9\u30fc\u30c8) \u3092\u6d3b\u7528\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 @[Link(ldflags: \"`pkg-config libpcre --libs`\")] @[Link(framework: \"Cocoa\")] \u306f -framework Cocoa \u3092\u30ea\u30f3\u30ab\u306b\u6e21\u3057\u307e\u3059 (macOS \u3067\u306e\u307f\u7528\u9014\u304c\u3042\u308b\u3067\u3057\u3087\u3046)\u3002 \u5c5e\u6027\u306f\u3001\u4f8b\u3048\u3070 libc \u306e\u3088\u3046\u306b\u3001\u6697\u9ed9\u7684\u306b\u30ea\u30f3\u30af\u3055\u308c\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5834\u5408\u306b\u306f\u4e0d\u8981\u3067\u3059\u3002","title":"lib"},{"location":"syntax_and_semantics/c_bindings/lib.html#lib","text":"lib \u5ba3\u8a00\u306b\u3088\u3063\u3066\u3001C \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u95a2\u6570\u7fa4\u3084\u578b\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u3002 @[ Link ( \"pcre\" ) ] lib LibPCRE end \u306a\u304a\u3001\u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5f37\u5236\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u901a\u5e38\u306f lib \u306e\u540d\u524d\u306f Lib \u304b\u3089\u59cb\u307e\u308b\u3082\u306e\u306b\u3057\u307e\u3059\u3002 \u307e\u305f\u3001\u5c5e\u6027\u306f\u30ea\u30f3\u30ab\u306b\u30d5\u30e9\u30b0\u3092\u6e21\u3059\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u3001\u30ea\u30f3\u30ab\u306f\u305d\u308c\u306b\u3057\u305f\u304c\u3063\u3066\u5916\u90e8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3057\u307e\u3059\u3002 @[Link(\"pcre\")] \u306f -lpcre \u3092\u30ea\u30f3\u30ab\u306b\u6e21\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u307e\u305a\u6700\u521d\u306b pkg-config \u306e\u5229\u7528\u3092\u8a66\u307f\u307e\u3059\u3002 @[Link(ldflags: \"...\")] \u306f\u6307\u5b9a\u3057\u305f\u30d5\u30e9\u30b0\u3092\u305d\u306e\u307e\u307e\u76f4\u63a5\u30ea\u30f3\u30ab\u306b\u6e21\u3057\u307e\u3059\u3002\u4f8b: @[Link(ldflags: \"-lpcre\")] \u3088\u304f\u4f7f\u308f\u308c\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3068\u3057\u3066\u30d0\u30c3\u30af\u30c6\u30a3\u30c3\u30af (\u30d0\u30c3\u30af\u30af\u30a9\u30fc\u30c8) \u3092\u6d3b\u7528\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 @[Link(ldflags: \"`pkg-config libpcre --libs`\")] @[Link(framework: \"Cocoa\")] \u306f -framework Cocoa \u3092\u30ea\u30f3\u30ab\u306b\u6e21\u3057\u307e\u3059 (macOS \u3067\u306e\u307f\u7528\u9014\u304c\u3042\u308b\u3067\u3057\u3087\u3046)\u3002 \u5c5e\u6027\u306f\u3001\u4f8b\u3048\u3070 libc \u306e\u3088\u3046\u306b\u3001\u6697\u9ed9\u7684\u306b\u30ea\u30f3\u30af\u3055\u308c\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5834\u5408\u306b\u306f\u4e0d\u8981\u3067\u3059\u3002","title":"lib"},{"location":"syntax_and_semantics/c_bindings/out.html","text":"out waitpid \u95a2\u6570\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 lib C fun waitpid ( pid : Int32 , status_ptr : Int32 * , options : Int32 ) : Int32 end \u3053\u306e\u95a2\u6570\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067\u3059\u3002 status_ptr \u304c\u6307\u3059\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u5b50\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u60c5\u5831 \u3053\u306e\u95a2\u6570\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 status_ptr = uninitialized Int32 C . waitpid ( pid , pointerof ( status_ptr ), options ) \u3053\u306e\u3068\u304d\u3001 status_ptr \u306e\u30dd\u30a4\u30f3\u30bf\u3092\u95a2\u6570\u306b\u6e21\u3057\u3001\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u3089\u3063\u3066\u3044\u307e\u3059\u3002 \u4e0a\u8a18\u306f out \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u3046\u3053\u3068\u3067\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 C . waitpid ( pid , out status_ptr , options ) \u3053\u306e\u3068\u304d\u3001\u5f15\u6570\u306e\u578b\u304c Int32* \u3067\u3042\u308b\u305f\u3081\u3001 Int32 \u578b\u306e\u5909\u6570 status_ptr \u3092\u81ea\u52d5\u7684\u306b\u5ba3\u8a00\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001 fun \u306e\u5f15\u6570\u304c\u305d\u306e\u578b\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u578b\u306b\u5bfe\u3057\u3066\u3082\u6709\u52b9\u3067\u3059 (\u3082\u3061\u308d\u3093\u3001\u30dd\u30a4\u30f3\u30bf\u304c\u5dee\u3059\u5024\u304c\u95a2\u6570\u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3055\u308c\u308b\u3053\u3068\u304c\u524d\u63d0\u3067\u3059)\u3002","title":"out"},{"location":"syntax_and_semantics/c_bindings/out.html#out","text":"waitpid \u95a2\u6570\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 lib C fun waitpid ( pid : Int32 , status_ptr : Int32 * , options : Int32 ) : Int32 end \u3053\u306e\u95a2\u6570\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067\u3059\u3002 status_ptr \u304c\u6307\u3059\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u5b50\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u60c5\u5831 \u3053\u306e\u95a2\u6570\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 status_ptr = uninitialized Int32 C . waitpid ( pid , pointerof ( status_ptr ), options ) \u3053\u306e\u3068\u304d\u3001 status_ptr \u306e\u30dd\u30a4\u30f3\u30bf\u3092\u95a2\u6570\u306b\u6e21\u3057\u3001\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u3089\u3063\u3066\u3044\u307e\u3059\u3002 \u4e0a\u8a18\u306f out \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u3046\u3053\u3068\u3067\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 C . waitpid ( pid , out status_ptr , options ) \u3053\u306e\u3068\u304d\u3001\u5f15\u6570\u306e\u578b\u304c Int32* \u3067\u3042\u308b\u305f\u3081\u3001 Int32 \u578b\u306e\u5909\u6570 status_ptr \u3092\u81ea\u52d5\u7684\u306b\u5ba3\u8a00\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001 fun \u306e\u5f15\u6570\u304c\u305d\u306e\u578b\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u578b\u306b\u5bfe\u3057\u3066\u3082\u6709\u52b9\u3067\u3059 (\u3082\u3061\u308d\u3093\u3001\u30dd\u30a4\u30f3\u30bf\u304c\u5dee\u3059\u5024\u304c\u95a2\u6570\u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3055\u308c\u308b\u3053\u3068\u304c\u524d\u63d0\u3067\u3059)\u3002","title":"out"},{"location":"syntax_and_semantics/c_bindings/struct.html","text":"struct lib \u306e\u5185\u90e8\u3067 struct \u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067\u3001C \u306e\u69cb\u9020\u4f53\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib C # C \u3067\u306f: # # struct TimeZone { # int minutes_west; # int dst_time; # }; struct TimeZone minutes_west : Int32 dst_time : Int32 end end \u540c\u3058\u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 lib C struct TimeZone minutes_west , dst_time : Int32 end end \u518d\u5e30\u7684\u306a\u69cb\u9020\u4f53\u3082\u671f\u5f85\u901a\u308a\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002 lib C struct LinkedListNode prev , _next : LinkedListNode * end struct LinkedList head : LinkedListNode * end end \u69cb\u9020\u4f53\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u306b\u306f new \u3092\u5229\u7528\u3057\u307e\u3059\u3002 tz = C :: TimeZone . new \u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30b9\u30bf\u30c3\u30af\u306b\u69cb\u9020\u4f53\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 C \u306e\u69cb\u9020\u4f53\u306f\u3001\u521d\u671f\u72b6\u614b\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u5024\u304c\u300c\u30bc\u30ed\u300d\u306e\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6574\u6570\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306f\u30bc\u30ed\u3067\u3001\u30dd\u30a4\u30f3\u30bf\u306f\u30bc\u30ed\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u3057\u3066\u3044\u308b\u3001\u306a\u3069\u306e\u72b6\u614b\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u521d\u671f\u5316\u3055\u308c\u308b\u3053\u3068\u3092\u907f\u3051\u305f\u3044\u5834\u5408\u306f uninitialized \u3092\u5229\u7528\u3057\u307e\u3059\u3002 tz = uninitialized C :: TimeZone tz . minutes_west # => some garbage value \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a\u3001\u304a\u3088\u3073\u53c2\u7167\u304c\u53ef\u80fd\u3067\u3059\u3002 tz = C :: TimeZone . new tz . minutes_west = 1 tz . minutes_west # => 1 \u4ee3\u5165\u3055\u308c\u305f\u5024\u304c\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b\u3068\u6b63\u78ba\u306b\u540c\u3058\u3082\u306e\u3067\u306a\u3044\u5834\u5408\u3001 to_unsafe \u3092\u547c\u3073\u51fa\u3057\u3066\u578b\u3092\u4e00\u81f4\u3055\u305b\u3088\u3046\u3068\u3057\u307e\u3059\u3002 \u307e\u305f\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306f \u540d\u524d\u4ed8\u304d\u5f15\u6570 \u3068\u540c\u69d8\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u3092\u4f7f\u3063\u3066\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 tz = C :: TimeZone . new minutes_west : 1 , dst_time : 2 tz . minutes_west # => 1 tz . dst_time # => 2 C \u306e\u69cb\u9020\u4f53\u306f\u95a2\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u306b (\u30b3\u30d4\u30fc\u3068\u3057\u3066) \u5024\u6e21\u3057\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u8fd4\u308b\u3068\u304d\u3082\u5024\u3067\u6e21\u3055\u308c\u307e\u3059\u3002 def change_it ( tz ) tz . minutes_west = 1 end tz = C :: TimeZone . new change_it tz tz . minutes_west # => 0 \u69cb\u9020\u4f53\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4f7f\u7528\u53ef\u80fd\u306a\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"struct"},{"location":"syntax_and_semantics/c_bindings/struct.html#struct","text":"lib \u306e\u5185\u90e8\u3067 struct \u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067\u3001C \u306e\u69cb\u9020\u4f53\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib C # C \u3067\u306f: # # struct TimeZone { # int minutes_west; # int dst_time; # }; struct TimeZone minutes_west : Int32 dst_time : Int32 end end \u540c\u3058\u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 lib C struct TimeZone minutes_west , dst_time : Int32 end end \u518d\u5e30\u7684\u306a\u69cb\u9020\u4f53\u3082\u671f\u5f85\u901a\u308a\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002 lib C struct LinkedListNode prev , _next : LinkedListNode * end struct LinkedList head : LinkedListNode * end end \u69cb\u9020\u4f53\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u306b\u306f new \u3092\u5229\u7528\u3057\u307e\u3059\u3002 tz = C :: TimeZone . new \u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30b9\u30bf\u30c3\u30af\u306b\u69cb\u9020\u4f53\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 C \u306e\u69cb\u9020\u4f53\u306f\u3001\u521d\u671f\u72b6\u614b\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u5024\u304c\u300c\u30bc\u30ed\u300d\u306e\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6574\u6570\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306f\u30bc\u30ed\u3067\u3001\u30dd\u30a4\u30f3\u30bf\u306f\u30bc\u30ed\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u3057\u3066\u3044\u308b\u3001\u306a\u3069\u306e\u72b6\u614b\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u521d\u671f\u5316\u3055\u308c\u308b\u3053\u3068\u3092\u907f\u3051\u305f\u3044\u5834\u5408\u306f uninitialized \u3092\u5229\u7528\u3057\u307e\u3059\u3002 tz = uninitialized C :: TimeZone tz . minutes_west # => some garbage value \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a\u3001\u304a\u3088\u3073\u53c2\u7167\u304c\u53ef\u80fd\u3067\u3059\u3002 tz = C :: TimeZone . new tz . minutes_west = 1 tz . minutes_west # => 1 \u4ee3\u5165\u3055\u308c\u305f\u5024\u304c\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b\u3068\u6b63\u78ba\u306b\u540c\u3058\u3082\u306e\u3067\u306a\u3044\u5834\u5408\u3001 to_unsafe \u3092\u547c\u3073\u51fa\u3057\u3066\u578b\u3092\u4e00\u81f4\u3055\u305b\u3088\u3046\u3068\u3057\u307e\u3059\u3002 \u307e\u305f\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306f \u540d\u524d\u4ed8\u304d\u5f15\u6570 \u3068\u540c\u69d8\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u3092\u4f7f\u3063\u3066\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 tz = C :: TimeZone . new minutes_west : 1 , dst_time : 2 tz . minutes_west # => 1 tz . dst_time # => 2 C \u306e\u69cb\u9020\u4f53\u306f\u95a2\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u306b (\u30b3\u30d4\u30fc\u3068\u3057\u3066) \u5024\u6e21\u3057\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u8fd4\u308b\u3068\u304d\u3082\u5024\u3067\u6e21\u3055\u308c\u307e\u3059\u3002 def change_it ( tz ) tz . minutes_west = 1 end tz = C :: TimeZone . new change_it tz tz . minutes_west # => 0 \u69cb\u9020\u4f53\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4f7f\u7528\u53ef\u80fd\u306a\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"struct"},{"location":"syntax_and_semantics/c_bindings/to_unsafe.html","text":"to_unsafe \u3082\u3057\u3001\u3042\u308b\u65b9\u306b to_unsafe \u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u3001C \u306b\u6e21\u3055\u308c\u308b\u306e\u306f\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u306e\u623b\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 lib C fun exit ( status : Int32 ) : NoReturn end class IntWrapper def initialize ( @value ) end def to_unsafe @value end end wrapper = IntWrapper . new ( 1 ) C . exit ( wrapper ) # wrapper.to_unsafe is passed to C function which has type Int32 \u3053\u308c\u306f\u3001C \u306e\u578b\u306e\u30e9\u30c3\u30d1\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\u969b\u306b\u3001\u660e\u793a\u7684\u306b\u305d\u308c\u3089\u3092\u30e9\u30c3\u30d7\u3055\u308c\u308b\u578b\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u305f\u3081\u306b\u4fbf\u5229\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 String \u30af\u30e9\u30b9\u304c UInt8* \u3092\u8fd4\u3059 to_unsafe \u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u5834\u5408\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 lib C fun printf ( format : UInt8 * , ... ) : Int32 end a = 1 b = 2 C . printf \"%d + %d = %d \\n \" , a , b , a + b","title":"to_unsafe"},{"location":"syntax_and_semantics/c_bindings/to_unsafe.html#to_unsafe","text":"\u3082\u3057\u3001\u3042\u308b\u65b9\u306b to_unsafe \u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u3001C \u306b\u6e21\u3055\u308c\u308b\u306e\u306f\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u306e\u623b\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 lib C fun exit ( status : Int32 ) : NoReturn end class IntWrapper def initialize ( @value ) end def to_unsafe @value end end wrapper = IntWrapper . new ( 1 ) C . exit ( wrapper ) # wrapper.to_unsafe is passed to C function which has type Int32 \u3053\u308c\u306f\u3001C \u306e\u578b\u306e\u30e9\u30c3\u30d1\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\u969b\u306b\u3001\u660e\u793a\u7684\u306b\u305d\u308c\u3089\u3092\u30e9\u30c3\u30d7\u3055\u308c\u308b\u578b\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u305f\u3081\u306b\u4fbf\u5229\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 String \u30af\u30e9\u30b9\u304c UInt8* \u3092\u8fd4\u3059 to_unsafe \u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u5834\u5408\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 lib C fun printf ( format : UInt8 * , ... ) : Int32 end a = 1 b = 2 C . printf \"%d + %d = %d \\n \" , a , b , a + b","title":"to_unsafe"},{"location":"syntax_and_semantics/c_bindings/type.html","text":"type lib \u5ba3\u8a00\u306e\u5185\u90e8\u3067 type \u3092\u5ba3\u8a00\u3059\u308b\u3068\u3001C \u306e typedef \u5ba3\u8a00\u306b\u8fd1\u3044\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3088\u308a\u53b3\u5bc6\u306b\u632f\u821e\u3044\u307e\u3059\u3002 lib X type MyInt = Int32 end C \u3068\u306f\u7570\u306a\u308a\u3001 Int32 \u3068 MyInt \u3092\u76f8\u4e92\u306b\u4ea4\u63db\u3057\u3066\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 lib X type MyInt = Int32 fun some_fun ( value : MyInt ) end X . some_fun 1 # Error: argument 'value' of 'X#some_fun' must be X::MyInt, not Int32 \u3057\u305f\u304c\u3063\u3066\u3001\u30e9\u30c3\u30d7\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b C \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u751f\u6210\u3059\u308b opaque \u306a\u578b\u306b\u5bfe\u3057\u3066 type \u5ba3\u8a00\u3092\u6709\u52b9\u3067\u3059\u3002\u3053\u306e\u4f8b\u3068\u3057\u3066\u306f\u3001 fopen \u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b C \u306e FILE \u578b\u304c\u3042\u3052\u3089\u308c\u307e\u3059\u3002 \u3053\u306e\u5ba3\u8a00\u306e\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"type"},{"location":"syntax_and_semantics/c_bindings/type.html#type","text":"lib \u5ba3\u8a00\u306e\u5185\u90e8\u3067 type \u3092\u5ba3\u8a00\u3059\u308b\u3068\u3001C \u306e typedef \u5ba3\u8a00\u306b\u8fd1\u3044\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3088\u308a\u53b3\u5bc6\u306b\u632f\u821e\u3044\u307e\u3059\u3002 lib X type MyInt = Int32 end C \u3068\u306f\u7570\u306a\u308a\u3001 Int32 \u3068 MyInt \u3092\u76f8\u4e92\u306b\u4ea4\u63db\u3057\u3066\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 lib X type MyInt = Int32 fun some_fun ( value : MyInt ) end X . some_fun 1 # Error: argument 'value' of 'X#some_fun' must be X::MyInt, not Int32 \u3057\u305f\u304c\u3063\u3066\u3001\u30e9\u30c3\u30d7\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b C \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u751f\u6210\u3059\u308b opaque \u306a\u578b\u306b\u5bfe\u3057\u3066 type \u5ba3\u8a00\u3092\u6709\u52b9\u3067\u3059\u3002\u3053\u306e\u4f8b\u3068\u3057\u3066\u306f\u3001 fopen \u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b C \u306e FILE \u578b\u304c\u3042\u3052\u3089\u308c\u307e\u3059\u3002 \u3053\u306e\u5ba3\u8a00\u306e\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"type"},{"location":"syntax_and_semantics/c_bindings/union.html","text":"union lib \u306e\u5185\u90e8\u3067 union \u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067 C \u306e\u5171\u7528\u4f53\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib U # C \u3067\u306f: # # union IntOrFloat { # int some_int; # double some_float; # }; union IntOrFloat some_int : Int32 some_float : Float64 end end \u5171\u7528\u4f53\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u306b\u306f new \u3092\u5229\u7528\u3057\u307e\u3059\u3002 value = U :: IntOrFloat . new \u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30b9\u30bf\u30c3\u30af\u306b\u5171\u7528\u4f53\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 C \u306e\u5171\u7528\u4f53\u306f\u3001\u521d\u671f\u72b6\u614b\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u5024\u304c\u300c\u30bc\u30ed\u300d\u306e\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6574\u6570\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306f\u30bc\u30ed\u3067\u3001\u30dd\u30a4\u30f3\u30bf\u306f\u30bc\u30ed\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u3057\u3066\u3044\u308b\u3001\u306a\u3069\u306e\u72b6\u614b\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u521d\u671f\u5316\u3055\u308c\u308b\u3053\u3068\u3092\u907f\u3051\u305f\u3044\u5834\u5408\u306f uninitialized \u3092\u5229\u7528\u3057\u307e\u3059\u3002 value = uninitialized U :: IntOrFloat value . some_int # => \u4f55\u304b\u30b4\u30df\u306e\u5024 \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a\u3001\u304a\u3088\u3073\u53c2\u7167\u304c\u53ef\u80fd\u3067\u3059\u3002 value = U :: IntOrFloat . new value . some_int = 1 value . some_int # => 1 value . some_float # => 4.94066e-324 \u4ee3\u5165\u3055\u308c\u305f\u5024\u304c\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b\u3068\u6b63\u78ba\u306b\u540c\u3058\u3082\u306e\u3067\u306a\u3044\u5834\u5408\u3001 to_unsafe \u3092\u547c\u3073\u51fa\u3057\u3066\u578b\u3092\u4e00\u81f4\u3055\u305b\u3088\u3046\u3068\u3057\u307e\u3059\u3002 C \u306e\u5171\u7528\u4f53\u306f\u95a2\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u306b (\u30b3\u30d4\u30fc\u3068\u3057\u3066) \u5024\u6e21\u3057\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u8fd4\u308b\u3068\u304d\u3082\u5024\u3067\u6e21\u3055\u308c\u307e\u3059\u3002 def change_it ( value ) value . some_int = 1 end value = U :: IntOrFloat . new change_it value value . some_int # => 0 \u5171\u7528\u4f53\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4f7f\u7528\u53ef\u80fd\u306a\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"union"},{"location":"syntax_and_semantics/c_bindings/union.html#union","text":"lib \u306e\u5185\u90e8\u3067 union \u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067 C \u306e\u5171\u7528\u4f53\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib U # C \u3067\u306f: # # union IntOrFloat { # int some_int; # double some_float; # }; union IntOrFloat some_int : Int32 some_float : Float64 end end \u5171\u7528\u4f53\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u306b\u306f new \u3092\u5229\u7528\u3057\u307e\u3059\u3002 value = U :: IntOrFloat . new \u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30b9\u30bf\u30c3\u30af\u306b\u5171\u7528\u4f53\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002 C \u306e\u5171\u7528\u4f53\u306f\u3001\u521d\u671f\u72b6\u614b\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u5024\u304c\u300c\u30bc\u30ed\u300d\u306e\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6574\u6570\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306f\u30bc\u30ed\u3067\u3001\u30dd\u30a4\u30f3\u30bf\u306f\u30bc\u30ed\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u3057\u3066\u3044\u308b\u3001\u306a\u3069\u306e\u72b6\u614b\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u521d\u671f\u5316\u3055\u308c\u308b\u3053\u3068\u3092\u907f\u3051\u305f\u3044\u5834\u5408\u306f uninitialized \u3092\u5229\u7528\u3057\u307e\u3059\u3002 value = uninitialized U :: IntOrFloat value . some_int # => \u4f55\u304b\u30b4\u30df\u306e\u5024 \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a\u3001\u304a\u3088\u3073\u53c2\u7167\u304c\u53ef\u80fd\u3067\u3059\u3002 value = U :: IntOrFloat . new value . some_int = 1 value . some_int # => 1 value . some_float # => 4.94066e-324 \u4ee3\u5165\u3055\u308c\u305f\u5024\u304c\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b\u3068\u6b63\u78ba\u306b\u540c\u3058\u3082\u306e\u3067\u306a\u3044\u5834\u5408\u3001 to_unsafe \u3092\u547c\u3073\u51fa\u3057\u3066\u578b\u3092\u4e00\u81f4\u3055\u305b\u3088\u3046\u3068\u3057\u307e\u3059\u3002 C \u306e\u5171\u7528\u4f53\u306f\u95a2\u6570\u3084\u30e1\u30bd\u30c3\u30c9\u306b (\u30b3\u30d4\u30fc\u3068\u3057\u3066) \u5024\u6e21\u3057\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u8fd4\u308b\u3068\u304d\u3082\u5024\u3067\u6e21\u3055\u308c\u307e\u3059\u3002 def change_it ( value ) value . some_int = 1 end value = U :: IntOrFloat . new change_it value value . some_int # => 0 \u5171\u7528\u4f53\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4f7f\u7528\u53ef\u80fd\u306a\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"union"},{"location":"syntax_and_semantics/c_bindings/variables.html","text":"\u5909\u6570 C \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u516c\u958b\u3055\u308c\u308b\u5909\u6570\u306f\u3001 lib \u306e\u5185\u90e8\u3067\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u4f3c\u305f\u8a18\u6cd5\u3092\u4f7f\u3063\u3066\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib C $errno : Int32 end \u305d\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u53c2\u7167\u3068\u8a2d\u5b9a\u304c\u3067\u304d\u307e\u3059\u3002 C . errno # => some value C . errno = 0 C . errno # => 0 A variable can be marked as thread local with an annotation: lib C @[ ThreadLocal ] $errno : Int32 end \u5916\u90e8\u5909\u6570\u306e\u4f7f\u7528\u53ef\u80fd\u306a\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u5909\u6570"},{"location":"syntax_and_semantics/c_bindings/variables.html#_1","text":"C \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u516c\u958b\u3055\u308c\u308b\u5909\u6570\u306f\u3001 lib \u306e\u5185\u90e8\u3067\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u4f3c\u305f\u8a18\u6cd5\u3092\u4f7f\u3063\u3066\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 lib C $errno : Int32 end \u305d\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u53c2\u7167\u3068\u8a2d\u5b9a\u304c\u3067\u304d\u307e\u3059\u3002 C . errno # => some value C . errno = 0 C . errno # => 0 A variable can be marked as thread local with an annotation: lib C @[ ThreadLocal ] $errno : Int32 end \u5916\u90e8\u5909\u6570\u306e\u4f7f\u7528\u53ef\u80fd\u306a\u578b\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f \u578b\u306e\u6587\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u5909\u6570"},{"location":"syntax_and_semantics/literals/index.html","text":"\u30ea\u30c6\u30e9\u30eb Crystal \u306b\u306f\u3001\u6570\u591a\u304f\u306e\u57fa\u672c\u7684\u306a\u578b\u306b\u5bfe\u5fdc\u3057\u305f\u30ea\u30c6\u30e9\u30eb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u30ea\u30c6\u30e9\u30eb \u5024\u306e\u30b5\u30f3\u30d7\u30eb Nil nil \u771f\u507d\u5024 (Bool) true , false \u6574\u6570 (Integer) 18 , -12 , 19_i64 , 14_u32 , 64_u8 \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (Float) 1.0 , 1.0_f32 , 1e10 , -0.5 \u6587\u5b57 (Char) 'a' , '\\n' , '\u3042' \u6587\u5b57\u5217 (String) \"foo\\tbar\" , %(\"\u3042\") , %q(foo #{foo}) \u30b7\u30f3\u30dc\u30eb (Symbol) :symbol , :\"foo bar\" \u914d\u5217 (Array) [1, 2, 3] , [1, 2, 3] of Int32 , %w(one two three) \u914d\u5217\u30e9\u30a4\u30af Set{1, 2, 3} \u30cf\u30c3\u30b7\u30e5 (Hash) {\"foo\" => 2} , {} of String => Int32 Hash\u30e9\u30a4\u30af MyType{\"foo\" => \"bar\"} \u7bc4\u56f2 (Range) 1..9 , 1...10 , 0..var \u6b63\u898f\u8868\u73fe (Regex) /(foo)?bar/ , /foo #{foo}/imx , %r(foo/) \u30bf\u30d7\u30eb (Tuple) {1, \"hello\", 'x'} \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb (NamedTuple) {name: \"Crystal\", year: 2011} , {\"this is a key\": 1} Proc ->(x : Int32, y : Int32) { x + y } \u30b3\u30de\u30f3\u30c9 (Command) `echo foo` , %x(echo foo)","title":"\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/index.html#_1","text":"Crystal \u306b\u306f\u3001\u6570\u591a\u304f\u306e\u57fa\u672c\u7684\u306a\u578b\u306b\u5bfe\u5fdc\u3057\u305f\u30ea\u30c6\u30e9\u30eb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u30ea\u30c6\u30e9\u30eb \u5024\u306e\u30b5\u30f3\u30d7\u30eb Nil nil \u771f\u507d\u5024 (Bool) true , false \u6574\u6570 (Integer) 18 , -12 , 19_i64 , 14_u32 , 64_u8 \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (Float) 1.0 , 1.0_f32 , 1e10 , -0.5 \u6587\u5b57 (Char) 'a' , '\\n' , '\u3042' \u6587\u5b57\u5217 (String) \"foo\\tbar\" , %(\"\u3042\") , %q(foo #{foo}) \u30b7\u30f3\u30dc\u30eb (Symbol) :symbol , :\"foo bar\" \u914d\u5217 (Array) [1, 2, 3] , [1, 2, 3] of Int32 , %w(one two three) \u914d\u5217\u30e9\u30a4\u30af Set{1, 2, 3} \u30cf\u30c3\u30b7\u30e5 (Hash) {\"foo\" => 2} , {} of String => Int32 Hash\u30e9\u30a4\u30af MyType{\"foo\" => \"bar\"} \u7bc4\u56f2 (Range) 1..9 , 1...10 , 0..var \u6b63\u898f\u8868\u73fe (Regex) /(foo)?bar/ , /foo #{foo}/imx , %r(foo/) \u30bf\u30d7\u30eb (Tuple) {1, \"hello\", 'x'} \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb (NamedTuple) {name: \"Crystal\", year: 2011} , {\"this is a key\": 1} Proc ->(x : Int32, y : Int32) { x + y } \u30b3\u30de\u30f3\u30c9 (Command) `echo foo` , %x(echo foo)","title":"\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/array.html","text":"\u914d\u5217 (Array) Array \u306f\u9806\u756a\u306b\u610f\u5473\u304c\u3042\u308a\u6574\u6570\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3055\u308c\u305f\u3001 T \u578b\u306e\u5024\u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3064\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002 \u914d\u5217\u306f\u901a\u5e38\u3001\u89d2\u62ec\u5f27 ( [] ) \u3068\u30b3\u30f3\u30de ( , ) \u306b\u3088\u3063\u3066\u533a\u5207\u3089\u308c\u305f\u500b\u3005\u306e\u8981\u7d20\u306b\u3088\u308b\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u751f\u6210\u3055\u308c\u307e\u3059\u3002 [ 1 , 2 , 3 ] \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u5f15\u6570 \u914d\u5217\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u5f15\u6570 T \u306f\u30ea\u30c6\u30e9\u30eb\u306e\u8981\u7d20\u306e\u578b\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u540c\u3058\u578b\u3092\u6301\u3063\u3066\u3044\u305f\u5834\u5408\u3001 T \u306f\u305d\u308c\u306b\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u306e\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002 [ 1 , 2 , 3 ] # => Array(Int32) [ 1 , \"hello\" , 'x' ] # => Array(Int32 | String | Char) \u9589\u3058\u89d2\u62ec\u5f27\u306e\u3042\u3068\u306b\u7d9a\u3051\u3066 of \u3068\u578b\u3092\u7f6e\u304f\u3053\u3068\u3067\u3001\u660e\u793a\u7684\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u63a8\u8ad6\u3055\u308c\u305f\u578b\u3092\u7f6e\u304d\u63db\u3048\u308b\u306e\u3067\u3001\u751f\u6210\u6642\u306b\u306f\u540c\u3058\u578b\u3057\u304b\u5165\u3063\u3066\u3044\u306a\u3044\u3051\u308c\u3069\u3001\u3042\u3068\u3067\u5225\u306e\u578b\u304c\u5165\u3063\u3066\u304f\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002 array_of_numbers = [ 1 , 2 , 3 ] of Float64 | Int32 # => Array(Float64 | Int32) array_of_numbers << 0.5 # => [1, 2, 3, 0.5] array_of_int_or_string = [ 1 , 2 , 3 ] of Int32 | String # => Array(Int32 | String) array_of_int_or_string << \"foo\" # => [1, 2, 3, \"foo\"] \u7a7a\u306e\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u5e38\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 [] of Int32 # => Array(Int32).new \u30d1\u30fc\u30bb\u30f3\u30c8\u914d\u5217\u30ea\u30c6\u30e9\u30eb \u6587\u5b57\u5217\u306e\u914d\u5217 \u3068 \u30b7\u30f3\u30dc\u30eb\u306e\u914d\u5217 \u3092\u30d1\u30fc\u30bb\u30f3\u30c8\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u751f\u6210\u3067\u304d\u307e\u3059\u3002 %w(one two three) # => [\"one\", \"two\", \"three\"] %i(one two three) # => [:one, :two, :three] \u914d\u5217\u30e9\u30a4\u30af\u306a\u578b\u306e\u30ea\u30c6\u30e9\u30eb Crystal \u306f\u3055\u3089\u306b\u3001\u914d\u5217\u30e9\u30a4\u30af\u306a\u578b\u306e\u305f\u3081\u306e\u30ea\u30c6\u30e9\u30eb\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u578b\u306e\u540d\u524d\u306b\u3072\u3052\u62ec\u5f27 ( {} ) \u3068\u30b3\u30f3\u30de ( , ) \u306b\u3088\u3063\u3066\u533a\u5207\u3089\u308c\u305f\u500b\u3005\u306e\u8981\u7d20\u3092\u7d9a\u3051\u308b\u3053\u3068\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002 Array { 1 , 2 , 3 } \u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068 << \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u4efb\u610f\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u3053\u306e\u69cb\u6587\u306f\u5229\u7528\u3067\u304d\u307e\u3059\u3002 IO :: Memory { 1 , 2 , 3 } Set { 1 , 2 , 3 } \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u306f\u306a\u3044\u578b IO::Memory \u306b\u5bfe\u3057\u3066\u306f\u3001\u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u3068\u7b49\u3057\u3044\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 array_like = IO :: Memory . new array_like << 1 array_like << 2 array_like << 3 \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u3042\u308b Set \u306b\u5bfe\u3057\u3066\u306f\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b T \u304c\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u8981\u7d20\u306e\u578b\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u3068\u7b49\u3057\u3044\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 array_like = Set ( typeof ( 1 , 2 , 3 )) . new array_like << 1 array_like << 2 array_like << 3 \u578b\u5f15\u6570\u306f\u578b\u540d\u306e\u90e8\u5206\u3067\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 Set ( Int32 ){ 1 , 2 , 3 }","title":"\u914d\u5217 (Array)"},{"location":"syntax_and_semantics/literals/array.html#array","text":"Array \u306f\u9806\u756a\u306b\u610f\u5473\u304c\u3042\u308a\u6574\u6570\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3055\u308c\u305f\u3001 T \u578b\u306e\u5024\u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3064\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002 \u914d\u5217\u306f\u901a\u5e38\u3001\u89d2\u62ec\u5f27 ( [] ) \u3068\u30b3\u30f3\u30de ( , ) \u306b\u3088\u3063\u3066\u533a\u5207\u3089\u308c\u305f\u500b\u3005\u306e\u8981\u7d20\u306b\u3088\u308b\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u751f\u6210\u3055\u308c\u307e\u3059\u3002 [ 1 , 2 , 3 ]","title":"\u914d\u5217 (Array)"},{"location":"syntax_and_semantics/literals/array.html#_1","text":"\u914d\u5217\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u5f15\u6570 T \u306f\u30ea\u30c6\u30e9\u30eb\u306e\u8981\u7d20\u306e\u578b\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u540c\u3058\u578b\u3092\u6301\u3063\u3066\u3044\u305f\u5834\u5408\u3001 T \u306f\u305d\u308c\u306b\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u306e\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002 [ 1 , 2 , 3 ] # => Array(Int32) [ 1 , \"hello\" , 'x' ] # => Array(Int32 | String | Char) \u9589\u3058\u89d2\u62ec\u5f27\u306e\u3042\u3068\u306b\u7d9a\u3051\u3066 of \u3068\u578b\u3092\u7f6e\u304f\u3053\u3068\u3067\u3001\u660e\u793a\u7684\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u63a8\u8ad6\u3055\u308c\u305f\u578b\u3092\u7f6e\u304d\u63db\u3048\u308b\u306e\u3067\u3001\u751f\u6210\u6642\u306b\u306f\u540c\u3058\u578b\u3057\u304b\u5165\u3063\u3066\u3044\u306a\u3044\u3051\u308c\u3069\u3001\u3042\u3068\u3067\u5225\u306e\u578b\u304c\u5165\u3063\u3066\u304f\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002 array_of_numbers = [ 1 , 2 , 3 ] of Float64 | Int32 # => Array(Float64 | Int32) array_of_numbers << 0.5 # => [1, 2, 3, 0.5] array_of_int_or_string = [ 1 , 2 , 3 ] of Int32 | String # => Array(Int32 | String) array_of_int_or_string << \"foo\" # => [1, 2, 3, \"foo\"] \u7a7a\u306e\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u5e38\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 [] of Int32 # => Array(Int32).new","title":"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u5f15\u6570"},{"location":"syntax_and_semantics/literals/array.html#_2","text":"\u6587\u5b57\u5217\u306e\u914d\u5217 \u3068 \u30b7\u30f3\u30dc\u30eb\u306e\u914d\u5217 \u3092\u30d1\u30fc\u30bb\u30f3\u30c8\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u751f\u6210\u3067\u304d\u307e\u3059\u3002 %w(one two three) # => [\"one\", \"two\", \"three\"] %i(one two three) # => [:one, :two, :three]","title":"\u30d1\u30fc\u30bb\u30f3\u30c8\u914d\u5217\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/array.html#_3","text":"Crystal \u306f\u3055\u3089\u306b\u3001\u914d\u5217\u30e9\u30a4\u30af\u306a\u578b\u306e\u305f\u3081\u306e\u30ea\u30c6\u30e9\u30eb\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u578b\u306e\u540d\u524d\u306b\u3072\u3052\u62ec\u5f27 ( {} ) \u3068\u30b3\u30f3\u30de ( , ) \u306b\u3088\u3063\u3066\u533a\u5207\u3089\u308c\u305f\u500b\u3005\u306e\u8981\u7d20\u3092\u7d9a\u3051\u308b\u3053\u3068\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002 Array { 1 , 2 , 3 } \u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068 << \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u4efb\u610f\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u3053\u306e\u69cb\u6587\u306f\u5229\u7528\u3067\u304d\u307e\u3059\u3002 IO :: Memory { 1 , 2 , 3 } Set { 1 , 2 , 3 } \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u306f\u306a\u3044\u578b IO::Memory \u306b\u5bfe\u3057\u3066\u306f\u3001\u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u3068\u7b49\u3057\u3044\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 array_like = IO :: Memory . new array_like << 1 array_like << 2 array_like << 3 \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u3042\u308b Set \u306b\u5bfe\u3057\u3066\u306f\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b T \u304c\u914d\u5217\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u8981\u7d20\u306e\u578b\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u3068\u7b49\u3057\u3044\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 array_like = Set ( typeof ( 1 , 2 , 3 )) . new array_like << 1 array_like << 2 array_like << 3 \u578b\u5f15\u6570\u306f\u578b\u540d\u306e\u90e8\u5206\u3067\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 Set ( Int32 ){ 1 , 2 , 3 }","title":"\u914d\u5217\u30e9\u30a4\u30af\u306a\u578b\u306e\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/bool.html","text":"\u771f\u507d\u5024 (Bool) Bool \u306b\u306f true \u3068 false \u3068\u3044\u30462\u3064\u306e\u5024\u3060\u3051\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u6b21\u306e\u3088\u3046\u306a\u30ea\u30c6\u30e9\u30eb\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002 true # \u771f\u306e Bool \u5024 false # \u507d\u306e Bool \u5024","title":"\u771f\u507d\u5024 (Bool)"},{"location":"syntax_and_semantics/literals/bool.html#bool","text":"Bool \u306b\u306f true \u3068 false \u3068\u3044\u30462\u3064\u306e\u5024\u3060\u3051\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u6b21\u306e\u3088\u3046\u306a\u30ea\u30c6\u30e9\u30eb\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002 true # \u771f\u306e Bool \u5024 false # \u507d\u306e Bool \u5024","title":"\u771f\u507d\u5024 (Bool)"},{"location":"syntax_and_semantics/literals/char.html","text":"\u6587\u5b57 (Char) Char \u306f 32bit \u306e Unicode \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8 \u3092\u8868\u3057\u307e\u3059\u3002 \u901a\u5e38\u3001\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3067UTF-8\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u6587\u5b57\u3092\u56f2\u3063\u3066\u6587\u5b57\u30ea\u30c6\u30e9\u30eb\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002 'a' 'z' '0' '_' '\u3042' \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u3088\u308b\u540d\u524d\u3064\u304d\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b9\u30fc\u30b1\u30f3\u30b9\u304b\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u6570\u5024\u8868\u73fe\u3067\u3001\u7279\u5225\u306a\u6587\u5b57\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 \u6b21\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u6709\u52b9\u3067\u3059\u3002 '\\'' # \u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8 '\\\\' # \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5 '\\a' # \u30a2\u30e9\u30fc\u30c8 '\\b' # \u30d0\u30c3\u30af\u30b9\u30da\u30fc\u30b9 '\\e' # \u30a8\u30b9\u30b1\u30fc\u30d7 '\\f' # \u30d5\u30a9\u30fc\u30e0\u30d5\u30a3\u30fc\u30c9 (\u6539\u30da\u30fc\u30b8) '\\n' # \u6539\u884c '\\r' # \u30ad\u30e3\u30ea\u30c3\u30b8\u30ea\u30bf\u30fc\u30f3 (\u5fa9\u5e30) '\\t' # \u30bf\u30d6\u6587\u5b57 '\\v' # \u5782\u76f4\u30bf\u30d6 '\\uFFFF' # 16\u9032\u6570\u306b\u3088\u308b\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57 '\\u{10FFFF}' # 16\u9032\u6570\u306b\u3088\u308b\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57 \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b u \u3092\u7d9a\u3051\u308b\u3053\u3068\u3067\u30e6\u30cb\u30b3\u30fc\u30c9\u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u30e6\u30cb\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u3001\u3061\u3087\u3046\u30694\u3064\u306e16\u9032\u6570\u306e\u6570\u5024\u304b ( \\u0000 to \\uFFFF ) \u304b\u3072\u3052\u62ec\u5f27\u3067\u56f2\u3063\u305f6\u3064\u307e\u3067\u306e16\u9032\u6570\u306e\u6570\u5024\u304c\u5229\u7528\u3067\u304d\u307e\u3059 ( \\u{0} to \\u{10FFFF} '\\u0041' # => 'A' '\\u{41}' # => 'A' '\\u{1F52E}' # => '\ud83d\udd2e'","title":"\u6587\u5b57 (Char)"},{"location":"syntax_and_semantics/literals/char.html#char","text":"Char \u306f 32bit \u306e Unicode \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8 \u3092\u8868\u3057\u307e\u3059\u3002 \u901a\u5e38\u3001\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3067UTF-8\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u6587\u5b57\u3092\u56f2\u3063\u3066\u6587\u5b57\u30ea\u30c6\u30e9\u30eb\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002 'a' 'z' '0' '_' '\u3042' \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u3088\u308b\u540d\u524d\u3064\u304d\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b9\u30fc\u30b1\u30f3\u30b9\u304b\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u6570\u5024\u8868\u73fe\u3067\u3001\u7279\u5225\u306a\u6587\u5b57\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 \u6b21\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u6709\u52b9\u3067\u3059\u3002 '\\'' # \u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8 '\\\\' # \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5 '\\a' # \u30a2\u30e9\u30fc\u30c8 '\\b' # \u30d0\u30c3\u30af\u30b9\u30da\u30fc\u30b9 '\\e' # \u30a8\u30b9\u30b1\u30fc\u30d7 '\\f' # \u30d5\u30a9\u30fc\u30e0\u30d5\u30a3\u30fc\u30c9 (\u6539\u30da\u30fc\u30b8) '\\n' # \u6539\u884c '\\r' # \u30ad\u30e3\u30ea\u30c3\u30b8\u30ea\u30bf\u30fc\u30f3 (\u5fa9\u5e30) '\\t' # \u30bf\u30d6\u6587\u5b57 '\\v' # \u5782\u76f4\u30bf\u30d6 '\\uFFFF' # 16\u9032\u6570\u306b\u3088\u308b\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57 '\\u{10FFFF}' # 16\u9032\u6570\u306b\u3088\u308b\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57 \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b u \u3092\u7d9a\u3051\u308b\u3053\u3068\u3067\u30e6\u30cb\u30b3\u30fc\u30c9\u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u30e6\u30cb\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u3001\u3061\u3087\u3046\u30694\u3064\u306e16\u9032\u6570\u306e\u6570\u5024\u304b ( \\u0000 to \\uFFFF ) \u304b\u3072\u3052\u62ec\u5f27\u3067\u56f2\u3063\u305f6\u3064\u307e\u3067\u306e16\u9032\u6570\u306e\u6570\u5024\u304c\u5229\u7528\u3067\u304d\u307e\u3059 ( \\u{0} to \\u{10FFFF} '\\u0041' # => 'A' '\\u{41}' # => 'A' '\\u{1F52E}' # => '\ud83d\udd2e'","title":"\u6587\u5b57 (Char)"},{"location":"syntax_and_semantics/literals/command.html","text":"\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb \u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u3068\u306f\u3001\u30d0\u30c3\u30af\u30c6\u30a3\u30c3\u30af ` \u3067\u56f2\u307e\u308c\u305f\u6587\u5b57\u5217\u3001\u3082\u3057\u304f\u306f %x \u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u306e\u3053\u3068\u3067\u3059\u3002 \u5b9f\u884c\u6642\u306b\u6587\u5b57\u5217\u306e\u5185\u5bb9\u3092\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u30b5\u30d6\u30b7\u30a7\u30eb\u3067\u5b9f\u884c\u3057\u3066\u3001\u305d\u306e\u51fa\u529b\u306e\u6587\u5b57\u5217\u304c\u7d50\u679c\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002 \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9 \u3068 \u88dc\u9593 \u306f\u901a\u5e38\u306e\u6587\u5b57\u5217\u3068\u540c\u69d8\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u306e\u5f62\u5f0f\u306e\u5834\u5408\u3001\u4ed6\u306e\u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u69d8\u306b %x \u3067\u306f\u3001\u62ec\u5f27 () \u3001\u89d2\u62ec\u5f27 [] \u3001\u3072\u3052\u62ec\u5f27 {} \u3001\u4e09\u89d2\u62ec\u5f27 <> \u305d\u3057\u3066\u30d1\u30a4\u30d7 || \u3068\u3044\u3063\u305f\u533a\u5207\u308a\u6587\u5b57\u304c\u6709\u52b9\u3067\u3059\u3002\u30d1\u30a4\u30d7\u6587\u5b57\u3092\u9664\u3044\u3066\u3001\u3059\u3079\u3066\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u30cd\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u9069\u5207\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \u7279\u6b8a\u5909\u6570 $? \u306f\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\u306e Process::Status \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u7279\u6b8a\u5909\u6570\u306f\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u3058\u30b9\u30b3\u30fc\u30d7\u306b\u9650\u308a\u6709\u52b9\u3067\u3059\u3002 `echo foo` # => \"foo\" $? . success? # => true \u5185\u90e8\u7684\u306b\u306f\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u3092 `() \u30e1\u30bd\u30c3\u30c9\u306b\u6587\u5b57\u5217\u3092\u6e21\u3059\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a `echo #{argument}` \u3068 %x(echo #{argument}) \u306f `(\"echo #{argument}\") \u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u61f8\u5ff5 \u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u306f\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u3088\u3046\u306a\u7c21\u6613\u7684\u306a\u5229\u7528\u6642\u306b\u4fbf\u5229\u3067\u3059\u304c\u3001\u88dc\u9593\u3092\u4f7f\u3046\u5834\u5408\u306b\u306f\u30b3\u30de\u30f3\u30c9\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u8d77\u3053\u3089\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\u3059\u308b\u7279\u5225\u306e\u6ce8\u610f\u3092\u6255\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 user_input = \"hello; rm -rf *\" `echo #{ user_input } ` \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f hello \u3068\u51fa\u529b\u3057\u305f\u3042\u3068\u306b\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u30d5\u30a9\u30eb\u30c0\u3092\u5168\u3066\u524a\u9664\u3057\u307e\u3059\u3002 \u3053\u308c\u3092\u907f\u3051\u308b\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u306e\u88dc\u9593\u306b\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3057\u305f\u5024\u3092\u7528\u3044\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3042\u308b Process \u3092\u4f7f\u3046\u3068\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3092\u5b89\u5168\u306b\u30b3\u30de\u30f3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 user_input = \"hello; rm -rf *\" process = Process . new ( \"echo\" , [ user_input ] , output : Process :: Redirect :: Pipe ) process . output . gets_to_end # => \"hello; rm -rf *\" process . wait . success? # => true","title":"\u30b3\u30de\u30f3\u30c9 (Command)"},{"location":"syntax_and_semantics/literals/command.html#_1","text":"\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u3068\u306f\u3001\u30d0\u30c3\u30af\u30c6\u30a3\u30c3\u30af ` \u3067\u56f2\u307e\u308c\u305f\u6587\u5b57\u5217\u3001\u3082\u3057\u304f\u306f %x \u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u306e\u3053\u3068\u3067\u3059\u3002 \u5b9f\u884c\u6642\u306b\u6587\u5b57\u5217\u306e\u5185\u5bb9\u3092\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u30b5\u30d6\u30b7\u30a7\u30eb\u3067\u5b9f\u884c\u3057\u3066\u3001\u305d\u306e\u51fa\u529b\u306e\u6587\u5b57\u5217\u304c\u7d50\u679c\u306e\u5024\u3068\u306a\u308a\u307e\u3059\u3002 \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9 \u3068 \u88dc\u9593 \u306f\u901a\u5e38\u306e\u6587\u5b57\u5217\u3068\u540c\u69d8\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u306e\u5f62\u5f0f\u306e\u5834\u5408\u3001\u4ed6\u306e\u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u69d8\u306b %x \u3067\u306f\u3001\u62ec\u5f27 () \u3001\u89d2\u62ec\u5f27 [] \u3001\u3072\u3052\u62ec\u5f27 {} \u3001\u4e09\u89d2\u62ec\u5f27 <> \u305d\u3057\u3066\u30d1\u30a4\u30d7 || \u3068\u3044\u3063\u305f\u533a\u5207\u308a\u6587\u5b57\u304c\u6709\u52b9\u3067\u3059\u3002\u30d1\u30a4\u30d7\u6587\u5b57\u3092\u9664\u3044\u3066\u3001\u3059\u3079\u3066\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u30cd\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u9069\u5207\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \u7279\u6b8a\u5909\u6570 $? \u306f\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\u306e Process::Status \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u7279\u6b8a\u5909\u6570\u306f\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u3058\u30b9\u30b3\u30fc\u30d7\u306b\u9650\u308a\u6709\u52b9\u3067\u3059\u3002 `echo foo` # => \"foo\" $? . success? # => true \u5185\u90e8\u7684\u306b\u306f\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u3092 `() \u30e1\u30bd\u30c3\u30c9\u306b\u6587\u5b57\u5217\u3092\u6e21\u3059\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a `echo #{argument}` \u3068 %x(echo #{argument}) \u306f `(\"echo #{argument}\") \u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/command.html#_2","text":"\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u306f\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u3088\u3046\u306a\u7c21\u6613\u7684\u306a\u5229\u7528\u6642\u306b\u4fbf\u5229\u3067\u3059\u304c\u3001\u88dc\u9593\u3092\u4f7f\u3046\u5834\u5408\u306b\u306f\u30b3\u30de\u30f3\u30c9\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u8d77\u3053\u3089\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\u3059\u308b\u7279\u5225\u306e\u6ce8\u610f\u3092\u6255\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 user_input = \"hello; rm -rf *\" `echo #{ user_input } ` \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f hello \u3068\u51fa\u529b\u3057\u305f\u3042\u3068\u306b\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u30d5\u30a9\u30eb\u30c0\u3092\u5168\u3066\u524a\u9664\u3057\u307e\u3059\u3002 \u3053\u308c\u3092\u907f\u3051\u308b\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u30ea\u30c6\u30e9\u30eb\u306e\u88dc\u9593\u306b\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3057\u305f\u5024\u3092\u7528\u3044\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3042\u308b Process \u3092\u4f7f\u3046\u3068\u30e6\u30fc\u30b6\u30fc\u306e\u5165\u529b\u3092\u5b89\u5168\u306b\u30b3\u30de\u30f3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 user_input = \"hello; rm -rf *\" process = Process . new ( \"echo\" , [ user_input ] , output : Process :: Redirect :: Pipe ) process . output . gets_to_end # => \"hello; rm -rf *\" process . wait . success? # => true","title":"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u61f8\u5ff5"},{"location":"syntax_and_semantics/literals/floats.html","text":"\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (Float) \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (Float) \u306b\u306f2\u3064\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f Float32 \u3068 Float64 \u3067\u3001\u305d\u308c\u305e\u308c IEEE \u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b binary32 \u3068 binary64 \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002 \u6d6e\u52d5\u5c0f\u6570\u70b9\u30ea\u30c6\u30e9\u30eb\u306f + (\u30aa\u30d7\u30b7\u30e7\u30f3) \u307e\u305f\u306f - \u7b26\u53f7\u306b\u7d9a\u304f\u6570\u5024\u3068\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304b\u3089\u306a\u308a\u3001\u3055\u3089\u306b\u6307\u6570\u90e8\u5206\u3068\u578b\u3092\u8868\u308f\u3059\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u306a\u3044\u5834\u5408\u306f\u30ea\u30c6\u30e9\u30eb\u306e\u578b\u306f Float64 \u3068\u306a\u308a\u307e\u3059\u3002 1.0 # Float64 1.0_f32 # Float32 1_f32 # Float32 1e10 # Float64 1.5e10 # Float64 1.5e-7 # Float64 + 1.3 # Float64 - 0.5 # Float64 \u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u524d\u306e\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 ( _ ) \u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306f\u3001\u6570\u5024\u3092\u8aad\u307f\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 1_000_000.111_111 # 1000000.111111 \u3092\u8aad\u307f\u3084\u3059\u304f\u3057\u305f\u3082\u306e\u3067\u3059","title":"\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (Float)"},{"location":"syntax_and_semantics/literals/floats.html#float","text":"\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (Float) \u306b\u306f2\u3064\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f Float32 \u3068 Float64 \u3067\u3001\u305d\u308c\u305e\u308c IEEE \u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b binary32 \u3068 binary64 \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002 \u6d6e\u52d5\u5c0f\u6570\u70b9\u30ea\u30c6\u30e9\u30eb\u306f + (\u30aa\u30d7\u30b7\u30e7\u30f3) \u307e\u305f\u306f - \u7b26\u53f7\u306b\u7d9a\u304f\u6570\u5024\u3068\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304b\u3089\u306a\u308a\u3001\u3055\u3089\u306b\u6307\u6570\u90e8\u5206\u3068\u578b\u3092\u8868\u308f\u3059\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u306a\u3044\u5834\u5408\u306f\u30ea\u30c6\u30e9\u30eb\u306e\u578b\u306f Float64 \u3068\u306a\u308a\u307e\u3059\u3002 1.0 # Float64 1.0_f32 # Float32 1_f32 # Float32 1e10 # Float64 1.5e10 # Float64 1.5e-7 # Float64 + 1.3 # Float64 - 0.5 # Float64 \u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u524d\u306e\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 ( _ ) \u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306f\u3001\u6570\u5024\u3092\u8aad\u307f\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 1_000_000.111_111 # 1000000.111111 \u3092\u8aad\u307f\u3084\u3059\u304f\u3057\u305f\u3082\u306e\u3067\u3059","title":"\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 (Float)"},{"location":"syntax_and_semantics/literals/hash.html","text":"\u30cf\u30c3\u30b7\u30e5 (Hash) Hash \u306f K \u578b\u306e\u30ad\u30fc\u3068 V \u578b\u306e\u5f53\u305f\u3044 \u306e\u30da\u30a2\u306e\u5bfe\u5fdc\u4ed8\u3051\u304b\u3089\u306a\u308b\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002 \u30cf\u30c3\u30b7\u30e5\u306f\u901a\u5e38\u3001\u3072\u3052\u62ec\u5f27 ( { } ) \u306b\u56f2\u308f\u308c\u305f\u4e2d\u306b\u3001\u30ad\u30fc\u3068\u5024\u3092 => \u3067\u7d44\u306b\u3057\u3066\u30b3\u30f3\u30de , \u3067\u533a\u5207\u3063\u3066\u4e26\u3079\u305f\u3082\u306e\u3067\u3042\u308b\u3001\u30cf\u30c3\u30b7\u30e5\u30ea\u30c6\u30e9\u30eb\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u307e\u3059\u3002 { \"one\" => 1 , \"two\" => 2 } \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u5f15\u6570 \u30ad\u30fc\u306e\u578b\u306e K \u3068\u5024\u306e\u578b\u306e V \u3068\u3044\u3046\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u5f15\u6570\u306f\u3001\u305d\u308c\u305e\u308c\u30ea\u30c6\u30e9\u30eb\u4e2d\u306e\u30ad\u30fc\u3068\u5024\u306e\u578b\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u540c\u3058\u578b\u3067\u3042\u308c\u3070\u3001 K \u304a\u3088\u3073 V \u306f\u305d\u308c\u306b\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001\u3059\u3079\u3066\u306e\u30ad\u30fc\u306e\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306a\u3044\u3057\u5024\u306e\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002 { 1 => 2 , 3 => 4 } # Hash(Int32, Int32) { 1 => 2 , 'a' => 3 } # Hash(Int32 | Char, Int32) \u9589\u3058\u3072\u3052\u62ec\u5f27\u306e\u3042\u3068\u306b\u7d9a\u3051\u3066 of \u3068\u30ad\u30fc\u306e\u578b ( K )\u3001\u3055\u3089\u306b => \u306b\u7d9a\u3051\u3066\u5024\u306e\u578b ( V ) \u3092\u7f6e\u304f\u3053\u3068\u3067\u3001\u660e\u793a\u7684\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u63a8\u8ad6\u3055\u308c\u305f\u578b\u3092\u7f6e\u304d\u63db\u3048\u308b\u306e\u3067\u3001\u521d\u671f\u5316\u6642\u306b\u306f\u540c\u3058\u578b\u306e\u307f\u3092\u6301\u3063\u3066\u3044\u308b\u304c\u3001\u4ed6\u306e\u578b\u3082\u53d7\u3051\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u306a\u30cf\u30c3\u30b7\u30e5\u3092\u751f\u6210\u3057\u305f\u3044\u5834\u5408\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002 \u7a7a\u306e\u30cf\u30c3\u30b7\u30e5\u30ea\u30c6\u30e9\u30eb\u306f\u5e38\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 {} of Int32 => Int32 # => Hash(Int32, Int32).new \u30cf\u30c3\u30b7\u30e5\u30e9\u30a4\u30af\u306a\u578b\u306e\u30ea\u30c6\u30e9\u30eb Crystal \u306f\u3055\u3089\u306b\u30cf\u30c3\u30b7\u30e5\u30e9\u30a4\u30af\u306a\u578b\u306e\u305f\u3081\u306e\u30ea\u30c6\u30e9\u30eb\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u578b\u306e\u540d\u524d\u306e\u3042\u3068\u306b\u7d9a\u3051\u305f\u3072\u3052\u62ec\u5f27 ( {} ) \u306e\u4e2d\u306b\u3001\u30b3\u30f3\u30de\u533a\u5207\u308a\u306e\u30ad\u30fc\u3068\u5024\u306e\u7d44\u3092\u4e26\u3079\u308b\u3053\u3068\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002 Hash { \"one\" => 1 , \"two\" => 2 } \u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068 []= \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u4efb\u610f\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u3053\u306e\u69cb\u6587\u306f\u5229\u7528\u3067\u304d\u307e\u3059\u3002 HTTP :: Headers { \"foo\" => \"bar\" } \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u306a\u3044\u578b HTTP::Headers \u306b\u5bfe\u3057\u3066\u306f\u3001\u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u3068\u7b49\u3057\u3044\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 headers = HTTP :: Headers . new headers [ \"foo\" ] = \"bar\" \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u5834\u5408\u3001\u578b\u5f15\u6570\u306f\u30cf\u30c3\u30b7\u30e5\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u30ad\u30fc\u3068\u5024\u306e\u578b\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 MyHash { \"foo\" => 1 , \"bar\" => \"baz\" } \u3053\u3053\u3067 MyHash \u304c\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u3042\u308c\u3070\u3001\u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u3068\u7b49\u3057\u3044\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 my_hash = MyHash ( typeof ( \"foo\" , \"bar\" ), typeof ( 1 , \"baz\" )) . new my_hash [ \"foo\" ] = 1 my_hash [ \"bar\" ] = \"baz\" \u578b\u5f15\u6570\u306f\u578b\u540d\u306e\u90e8\u5206\u3067\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 MyHash ( String , String | Int32 ){ \"foo\" => \"bar\" }","title":"\u30cf\u30c3\u30b7\u30e5 (Hash)"},{"location":"syntax_and_semantics/literals/hash.html#hash","text":"Hash \u306f K \u578b\u306e\u30ad\u30fc\u3068 V \u578b\u306e\u5f53\u305f\u3044 \u306e\u30da\u30a2\u306e\u5bfe\u5fdc\u4ed8\u3051\u304b\u3089\u306a\u308b\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002 \u30cf\u30c3\u30b7\u30e5\u306f\u901a\u5e38\u3001\u3072\u3052\u62ec\u5f27 ( { } ) \u306b\u56f2\u308f\u308c\u305f\u4e2d\u306b\u3001\u30ad\u30fc\u3068\u5024\u3092 => \u3067\u7d44\u306b\u3057\u3066\u30b3\u30f3\u30de , \u3067\u533a\u5207\u3063\u3066\u4e26\u3079\u305f\u3082\u306e\u3067\u3042\u308b\u3001\u30cf\u30c3\u30b7\u30e5\u30ea\u30c6\u30e9\u30eb\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u307e\u3059\u3002 { \"one\" => 1 , \"two\" => 2 }","title":"\u30cf\u30c3\u30b7\u30e5 (Hash)"},{"location":"syntax_and_semantics/literals/hash.html#_1","text":"\u30ad\u30fc\u306e\u578b\u306e K \u3068\u5024\u306e\u578b\u306e V \u3068\u3044\u3046\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u5f15\u6570\u306f\u3001\u305d\u308c\u305e\u308c\u30ea\u30c6\u30e9\u30eb\u4e2d\u306e\u30ad\u30fc\u3068\u5024\u306e\u578b\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u540c\u3058\u578b\u3067\u3042\u308c\u3070\u3001 K \u304a\u3088\u3073 V \u306f\u305d\u308c\u306b\u7b49\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001\u3059\u3079\u3066\u306e\u30ad\u30fc\u306e\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u306a\u3044\u3057\u5024\u306e\u578b\u306e\u30e6\u30cb\u30aa\u30f3\u578b\u3068\u306a\u308a\u307e\u3059\u3002 { 1 => 2 , 3 => 4 } # Hash(Int32, Int32) { 1 => 2 , 'a' => 3 } # Hash(Int32 | Char, Int32) \u9589\u3058\u3072\u3052\u62ec\u5f27\u306e\u3042\u3068\u306b\u7d9a\u3051\u3066 of \u3068\u30ad\u30fc\u306e\u578b ( K )\u3001\u3055\u3089\u306b => \u306b\u7d9a\u3051\u3066\u5024\u306e\u578b ( V ) \u3092\u7f6e\u304f\u3053\u3068\u3067\u3001\u660e\u793a\u7684\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u63a8\u8ad6\u3055\u308c\u305f\u578b\u3092\u7f6e\u304d\u63db\u3048\u308b\u306e\u3067\u3001\u521d\u671f\u5316\u6642\u306b\u306f\u540c\u3058\u578b\u306e\u307f\u3092\u6301\u3063\u3066\u3044\u308b\u304c\u3001\u4ed6\u306e\u578b\u3082\u53d7\u3051\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u306a\u30cf\u30c3\u30b7\u30e5\u3092\u751f\u6210\u3057\u305f\u3044\u5834\u5408\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002 \u7a7a\u306e\u30cf\u30c3\u30b7\u30e5\u30ea\u30c6\u30e9\u30eb\u306f\u5e38\u306b\u578b\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 {} of Int32 => Int32 # => Hash(Int32, Int32).new","title":"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u5f15\u6570"},{"location":"syntax_and_semantics/literals/hash.html#_2","text":"Crystal \u306f\u3055\u3089\u306b\u30cf\u30c3\u30b7\u30e5\u30e9\u30a4\u30af\u306a\u578b\u306e\u305f\u3081\u306e\u30ea\u30c6\u30e9\u30eb\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u578b\u306e\u540d\u524d\u306e\u3042\u3068\u306b\u7d9a\u3051\u305f\u3072\u3052\u62ec\u5f27 ( {} ) \u306e\u4e2d\u306b\u3001\u30b3\u30f3\u30de\u533a\u5207\u308a\u306e\u30ad\u30fc\u3068\u5024\u306e\u7d44\u3092\u4e26\u3079\u308b\u3053\u3068\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002 Hash { \"one\" => 1 , \"two\" => 2 } \u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068 []= \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u4efb\u610f\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u3053\u306e\u69cb\u6587\u306f\u5229\u7528\u3067\u304d\u307e\u3059\u3002 HTTP :: Headers { \"foo\" => \"bar\" } \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u306a\u3044\u578b HTTP::Headers \u306b\u5bfe\u3057\u3066\u306f\u3001\u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u3068\u7b49\u3057\u3044\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 headers = HTTP :: Headers . new headers [ \"foo\" ] = \"bar\" \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u5834\u5408\u3001\u578b\u5f15\u6570\u306f\u30cf\u30c3\u30b7\u30e5\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u30ad\u30fc\u3068\u5024\u306e\u578b\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 MyHash { \"foo\" => 1 , \"bar\" => \"baz\" } \u3053\u3053\u3067 MyHash \u304c\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3067\u3042\u308c\u3070\u3001\u4e0a\u306e\u4f8b\u306f\u4ee5\u4e0b\u3068\u7b49\u3057\u3044\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 my_hash = MyHash ( typeof ( \"foo\" , \"bar\" ), typeof ( 1 , \"baz\" )) . new my_hash [ \"foo\" ] = 1 my_hash [ \"bar\" ] = \"baz\" \u578b\u5f15\u6570\u306f\u578b\u540d\u306e\u90e8\u5206\u3067\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 MyHash ( String , String | Int32 ){ \"foo\" => \"bar\" }","title":"\u30cf\u30c3\u30b7\u30e5\u30e9\u30a4\u30af\u306a\u578b\u306e\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/integers.html","text":"\u6574\u6570 (Integer) 4\u3064\u7b26\u53f7\u4ed8\u304d\u6574\u6570\u578b\u3068\u30014\u3064\u306e\u7b26\u53f7\u7121\u3057\u6574\u6570\u578b\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 \u578b \u5927\u304d\u3055 \u6700\u5c0f\u5024 \u6700\u5927\u5024 Int8 8 -128 127 Int16 16 \u221232,768 32,767 Int32 32 \u22122,147,483,648 2,147,483,647 Int64 64 \u22122 63 2 63 - 1 UInt8 8 0 255 UInt16 16 0 65,535 UInt32 32 0 4,294,967,295 UInt64 64 0 2 64 - 1 \u6574\u6570\u30ea\u30c6\u30e9\u30eb\u306f + (\u30aa\u30d7\u30b7\u30e7\u30f3) \u307e\u305f\u306f - \u7b26\u53f7\u306b\u7d9a\u304f\u6570\u5024\u3068\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304b\u3089\u306a\u308a\u3001\u3055\u3089\u306b\u578b\u3092\u8868\u308f\u3059\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u306a\u3044\u5834\u5408\u306f\u30ea\u30c6\u30e9\u30eb\u306e\u578b\u306f Int32 \u304b Int64 \u307e\u305f\u306f UInt64 \u306e\u4e2d\u3067\u3001\u305d\u306e\u6570\u5024\u306b\u9069\u3057\u305f\u6700\u5c0f\u306e\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 1 # Int32 1_i8 # Int8 1_i16 # Int16 1_i32 # Int32 1_i64 # Int64 1_u8 # UInt8 1_u16 # UInt16 1_u32 # UInt32 1_u64 # UInt64 + 10 # Int32 - 20 # Int32 2147483648 # Int64 9223372036854775808 # UInt64 \u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u524d\u306e\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 ( _ ) \u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306f\u3001\u6570\u5024\u3092\u8aad\u307f\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 1_000_000 # better than 1000000 \u5148\u982d\u306b 0b \u3092\u3064\u3051\u308b\u30682\u9032\u6570\u306b\u306a\u308a\u307e\u3059\u3002 0b1101 # == 13 \u5148\u982d\u306b 0o \u3092\u3064\u3051\u308b\u30688\u9032\u6570\u306b\u306a\u308a\u307e\u3059\u3002 0o123 # == 83 \u5148\u982d\u306b 0x \u3092\u3064\u3051\u308b\u306816\u9032\u6570\u306b\u306a\u308a\u307e\u3059\u3002 0xFE012D # == 16646445 0xfe012d # == 16646445","title":"\u6574\u6570 (Integer)"},{"location":"syntax_and_semantics/literals/integers.html#integer","text":"4\u3064\u7b26\u53f7\u4ed8\u304d\u6574\u6570\u578b\u3068\u30014\u3064\u306e\u7b26\u53f7\u7121\u3057\u6574\u6570\u578b\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 \u578b \u5927\u304d\u3055 \u6700\u5c0f\u5024 \u6700\u5927\u5024 Int8 8 -128 127 Int16 16 \u221232,768 32,767 Int32 32 \u22122,147,483,648 2,147,483,647 Int64 64 \u22122 63 2 63 - 1 UInt8 8 0 255 UInt16 16 0 65,535 UInt32 32 0 4,294,967,295 UInt64 64 0 2 64 - 1 \u6574\u6570\u30ea\u30c6\u30e9\u30eb\u306f + (\u30aa\u30d7\u30b7\u30e7\u30f3) \u307e\u305f\u306f - \u7b26\u53f7\u306b\u7d9a\u304f\u6570\u5024\u3068\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u304b\u3089\u306a\u308a\u3001\u3055\u3089\u306b\u578b\u3092\u8868\u308f\u3059\u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u306a\u3044\u5834\u5408\u306f\u30ea\u30c6\u30e9\u30eb\u306e\u578b\u306f Int32 \u304b Int64 \u307e\u305f\u306f UInt64 \u306e\u4e2d\u3067\u3001\u305d\u306e\u6570\u5024\u306b\u9069\u3057\u305f\u6700\u5c0f\u306e\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 1 # Int32 1_i8 # Int8 1_i16 # Int16 1_i32 # Int32 1_i64 # Int64 1_u8 # UInt8 1_u16 # UInt16 1_u32 # UInt32 1_u64 # UInt64 + 10 # Int32 - 20 # Int32 2147483648 # Int64 9223372036854775808 # UInt64 \u30b5\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u524d\u306e\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 ( _ ) \u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306f\u3001\u6570\u5024\u3092\u8aad\u307f\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 1_000_000 # better than 1000000 \u5148\u982d\u306b 0b \u3092\u3064\u3051\u308b\u30682\u9032\u6570\u306b\u306a\u308a\u307e\u3059\u3002 0b1101 # == 13 \u5148\u982d\u306b 0o \u3092\u3064\u3051\u308b\u30688\u9032\u6570\u306b\u306a\u308a\u307e\u3059\u3002 0o123 # == 83 \u5148\u982d\u306b 0x \u3092\u3064\u3051\u308b\u306816\u9032\u6570\u306b\u306a\u308a\u307e\u3059\u3002 0xFE012D # == 16646445 0xfe012d # == 16646445","title":"\u6574\u6570 (Integer)"},{"location":"syntax_and_semantics/literals/named_tuple.html","text":"\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb (NamedTuple) NamedTuple \u306f\u901a\u5e38\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u306b\u3088\u308a\u751f\u6210\u3057\u307e\u3059\u3002 tuple = { name : \"Crystal\" , year : 2011 } # NamedTuple(name: String, year: Int32) tuple [ :name ] # => \"Crystal\" (String) tuple [ :year ] # => 2011 (Int32) \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u578b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u66f8\u3051\u307e\u3059\u3002 # x \u304c Int32 \u3067 y \u304c String \u3067\u3042\u308b\u3088\u3046\u306a\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u578b\u3092\u8868\u3059 NamedTuple ( x : Int32 , y : String ) \u578b\u5236\u7d04\u3084\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u578b\u5f15\u6570\u306a\u3069\u578b\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u6240\u3067\u3042\u308c\u3070\u3001 \u578b\u306e\u6587\u6cd5 \u3067\u8aac\u660e\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u77ed\u3044\u8a18\u6cd5\u3067\u578b\u3092\u66f8\u3051\u307e\u3059\u3002 # x \u304c Int32\u3001 y \u304c String \u3067\u3042\u308b\u3088\u3046\u306a\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u914d\u5217\u306e\u578b\u3092\u8868\u3059 Array ({ x : Int32 , y : String }) \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u30ad\u30fc\u306b\u306f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 { \"this is a key\" : 1 }","title":"\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb (NamedTuple)"},{"location":"syntax_and_semantics/literals/named_tuple.html#namedtuple","text":"NamedTuple \u306f\u901a\u5e38\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u306b\u3088\u308a\u751f\u6210\u3057\u307e\u3059\u3002 tuple = { name : \"Crystal\" , year : 2011 } # NamedTuple(name: String, year: Int32) tuple [ :name ] # => \"Crystal\" (String) tuple [ :year ] # => 2011 (Int32) \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u578b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u66f8\u3051\u307e\u3059\u3002 # x \u304c Int32 \u3067 y \u304c String \u3067\u3042\u308b\u3088\u3046\u306a\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u578b\u3092\u8868\u3059 NamedTuple ( x : Int32 , y : String ) \u578b\u5236\u7d04\u3084\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u578b\u5f15\u6570\u306a\u3069\u578b\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u6240\u3067\u3042\u308c\u3070\u3001 \u578b\u306e\u6587\u6cd5 \u3067\u8aac\u660e\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u77ed\u3044\u8a18\u6cd5\u3067\u578b\u3092\u66f8\u3051\u307e\u3059\u3002 # x \u304c Int32\u3001 y \u304c String \u3067\u3042\u308b\u3088\u3046\u306a\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u914d\u5217\u306e\u578b\u3092\u8868\u3059 Array ({ x : Int32 , y : String }) \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\u306e\u30ad\u30fc\u306b\u306f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 { \"this is a key\" : 1 }","title":"\u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb (NamedTuple)"},{"location":"syntax_and_semantics/literals/nil.html","text":"Nil Nil \u578b\u306f\u5024\u304c\u5b58\u5728\u3057\u306a\u3044\u3053\u3068\u3092\u8868\u3059\u3001\u4ed6\u306e\u8a00\u8a9e\u306b\u3042\u308b null \u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\u305f\u30601\u3064\u306e\u5024\u3092\u6301\u3061\u307e\u3059\u3002 nil","title":"Nil"},{"location":"syntax_and_semantics/literals/nil.html#nil","text":"Nil \u578b\u306f\u5024\u304c\u5b58\u5728\u3057\u306a\u3044\u3053\u3068\u3092\u8868\u3059\u3001\u4ed6\u306e\u8a00\u8a9e\u306b\u3042\u308b null \u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\u305f\u30601\u3064\u306e\u5024\u3092\u6301\u3061\u307e\u3059\u3002 nil","title":"Nil"},{"location":"syntax_and_semantics/literals/proc.html","text":"Proc Proc \u306f\u8ffd\u52a0\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 (\u30af\u30ed\u30fc\u30b8\u30e3) \u3092\u6301\u3064\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\u901a\u5e38\u3001Proc \u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3063\u3066\u751f\u6210\u3057\u307e\u3059\u3002 # \u5f15\u6570\u306a\u3057\u306e Proc -> { 1 } # Proc(Int32) # 1\u5f15\u6570\u306e Proc -> ( x : Int32 ) { x . to_s } # Proc(Int32, String) # 2\u5f15\u6570\u306e Proc -> ( x : Int32 , y : Int32 ) { x + y } # Proc(Int32, Int32, Int32) \u5f15\u6570\u306e\u578b\u6307\u5b9a\u306f\u5fc5\u9808\u3067\u3059\u3002\u305f\u3060\u3057 C\u8a00\u8a9e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e fun \u306b\u5bfe\u3057\u3066\u76f4\u63a5 Proc \u30ea\u30c6\u30e9\u30eb\u3092\u6e21\u3059\u3068\u304d\u3060\u3051\u306f\u4f8b\u5916\u3067\u3059\u3002 \u623b\u308a\u5024\u306e\u578b\u306f Proc \u306e\u5185\u5bb9\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001 new \u3092\u4f7f\u3063\u3066 Proc \u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 Proc ( Int32 , String ) . new { | x | x . to_s } # Proc(Int32, String) \u3053\u306e\u5f62\u5f0f\u306e\u5834\u5408\u3001\u623b\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3001Proc \u306e\u672c\u4f53\u306e\u623b\u308a\u5024\u304c\u6b63\u3057\u3044\u578b\u3067\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 Proc \u306e\u578b Proc \u306e\u578b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u66f8\u3051\u307e\u3059\u3002 # Int32 \u306e\u5f15\u6570\u3092\u53d7\u3051\u4ed8\u3051\u3066\u3001String \u3092\u8fd4\u3059 Proc \u306e\u578b\u3092\u8868\u3059 Proc ( Int32 , String ) # \u5f15\u6570\u3092\u53d7\u3051\u4ed8\u3051\u305a Void \u3092\u8fd4\u3059 Proc \u306e\u578b\u3092\u8868\u3059 Proc ( Void ) # Int32 \u3068 String \u3068\u3044\u30462\u3064\u306e\u5f15\u6570\u3092\u53d7\u3051\u4ed8\u3051 Char \u3092\u8fd4\u3059 Proc \u306e\u578b\u3092\u8868\u3059 Proc ( Int32 , String , Char ) \u578b\u5236\u7d04\u3084\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u578b\u5f15\u6570\u306a\u3069\u578b\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u6240\u3067\u3042\u308c\u3070\u3001 \u578b\u306e\u6587\u6cd5 \u3067\u8aac\u660e\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u77ed\u3044\u8a18\u6cd5\u3067\u578b\u3092\u66f8\u3051\u307e\u3059\u3002 # Proc(Int32, String, Char) \u306e\u914d\u5217\u306e\u578b\u3092\u8868\u3059 Array ( Int32 , String -> Char ) Proc \u306e\u547c\u3073\u51fa\u3057 Proc \u3092\u547c\u3073\u51fa\u3059 (\u5b9f\u884c\u3059\u308b) \u305f\u3081\u306b\u306f\u3001 call \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\u305d\u306e\u3068\u304d\u5f15\u6570\u306e\u578b\u306f Proc \u306e\u578b\u3068\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 proc = -> ( x : Int32 , y : Int32 ) { x + y } proc . call ( 1 , 2 ) # => 3 \u30e1\u30bd\u30c3\u30c9\u304b\u3089 Proc \u3092\u751f\u6210\u3059\u308b \u65e2\u5b58\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089 Proc \u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def one 1 end proc = -> one proc . call # => 1 \u5f15\u6570\u3092\u6301\u3064\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u578b\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 def plus_one ( x ) x + 1 end proc = -> plus_one ( Int32 ) proc . call ( 41 ) # => 42 \u30ec\u30b7\u30fc\u30d0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 str = \"hello\" proc = -> str . count ( Char ) proc . call ( 'e' ) # => 1 proc . call ( 'l' ) # => 2","title":"Proc"},{"location":"syntax_and_semantics/literals/proc.html#proc","text":"Proc \u306f\u8ffd\u52a0\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 (\u30af\u30ed\u30fc\u30b8\u30e3) \u3092\u6301\u3064\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\u901a\u5e38\u3001Proc \u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3063\u3066\u751f\u6210\u3057\u307e\u3059\u3002 # \u5f15\u6570\u306a\u3057\u306e Proc -> { 1 } # Proc(Int32) # 1\u5f15\u6570\u306e Proc -> ( x : Int32 ) { x . to_s } # Proc(Int32, String) # 2\u5f15\u6570\u306e Proc -> ( x : Int32 , y : Int32 ) { x + y } # Proc(Int32, Int32, Int32) \u5f15\u6570\u306e\u578b\u6307\u5b9a\u306f\u5fc5\u9808\u3067\u3059\u3002\u305f\u3060\u3057 C\u8a00\u8a9e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e fun \u306b\u5bfe\u3057\u3066\u76f4\u63a5 Proc \u30ea\u30c6\u30e9\u30eb\u3092\u6e21\u3059\u3068\u304d\u3060\u3051\u306f\u4f8b\u5916\u3067\u3059\u3002 \u623b\u308a\u5024\u306e\u578b\u306f Proc \u306e\u5185\u5bb9\u304b\u3089\u63a8\u8ad6\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001 new \u3092\u4f7f\u3063\u3066 Proc \u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 Proc ( Int32 , String ) . new { | x | x . to_s } # Proc(Int32, String) \u3053\u306e\u5f62\u5f0f\u306e\u5834\u5408\u3001\u623b\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3001Proc \u306e\u672c\u4f53\u306e\u623b\u308a\u5024\u304c\u6b63\u3057\u3044\u578b\u3067\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002","title":"Proc"},{"location":"syntax_and_semantics/literals/proc.html#proc_1","text":"Proc \u306e\u578b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u66f8\u3051\u307e\u3059\u3002 # Int32 \u306e\u5f15\u6570\u3092\u53d7\u3051\u4ed8\u3051\u3066\u3001String \u3092\u8fd4\u3059 Proc \u306e\u578b\u3092\u8868\u3059 Proc ( Int32 , String ) # \u5f15\u6570\u3092\u53d7\u3051\u4ed8\u3051\u305a Void \u3092\u8fd4\u3059 Proc \u306e\u578b\u3092\u8868\u3059 Proc ( Void ) # Int32 \u3068 String \u3068\u3044\u30462\u3064\u306e\u5f15\u6570\u3092\u53d7\u3051\u4ed8\u3051 Char \u3092\u8fd4\u3059 Proc \u306e\u578b\u3092\u8868\u3059 Proc ( Int32 , String , Char ) \u578b\u5236\u7d04\u3084\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u578b\u5f15\u6570\u306a\u3069\u578b\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u6240\u3067\u3042\u308c\u3070\u3001 \u578b\u306e\u6587\u6cd5 \u3067\u8aac\u660e\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u77ed\u3044\u8a18\u6cd5\u3067\u578b\u3092\u66f8\u3051\u307e\u3059\u3002 # Proc(Int32, String, Char) \u306e\u914d\u5217\u306e\u578b\u3092\u8868\u3059 Array ( Int32 , String -> Char )","title":"Proc \u306e\u578b"},{"location":"syntax_and_semantics/literals/proc.html#proc_2","text":"Proc \u3092\u547c\u3073\u51fa\u3059 (\u5b9f\u884c\u3059\u308b) \u305f\u3081\u306b\u306f\u3001 call \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\u305d\u306e\u3068\u304d\u5f15\u6570\u306e\u578b\u306f Proc \u306e\u578b\u3068\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 proc = -> ( x : Int32 , y : Int32 ) { x + y } proc . call ( 1 , 2 ) # => 3","title":"Proc \u306e\u547c\u3073\u51fa\u3057"},{"location":"syntax_and_semantics/literals/proc.html#proc_3","text":"\u65e2\u5b58\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089 Proc \u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 def one 1 end proc = -> one proc . call # => 1 \u5f15\u6570\u3092\u6301\u3064\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u578b\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 def plus_one ( x ) x + 1 end proc = -> plus_one ( Int32 ) proc . call ( 41 ) # => 42 \u30ec\u30b7\u30fc\u30d0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 str = \"hello\" proc = -> str . count ( Char ) proc . call ( 'e' ) # => 1 proc . call ( 'l' ) # => 2","title":"\u30e1\u30bd\u30c3\u30c9\u304b\u3089 Proc \u3092\u751f\u6210\u3059\u308b"},{"location":"syntax_and_semantics/literals/range.html","text":"\u7bc4\u56f2 (Range) Range \u306f2\u3064\u306e\u5024\u306b\u3088\u308b\u533a\u9593\u3092\u8868\u3057\u307e\u3059\u3002\u901a\u5e38\u3001\u7bc4\u56f2\u306f2\u3064\u3082\u3057\u304f\u306f3\u3064\u306e\u30c9\u30c3\u30c8\u304b\u3089\u306a\u308b\u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u307e\u3059\u3002 x..y : 2\u3064\u306e\u30c9\u30c3\u30c8\u306f\u53f3\u306e\u5024\u3092\u542b\u3080\u7bc4\u56f2\u3092\u8868\u3057\u307e\u3059\u3002\u3064\u307e\u308a x \u3068 y \u3001\u304a\u3088\u3073\u305d\u306e\u9593\u306e\u3059\u3079\u3066\u306e\u5024\u3092\u542b\u307f\u307e\u3059 (\u6570\u5b66\u7684\u306b\u306f\u9589\u533a\u9593 [x, y] \u3067\u3059)\u3002 x...y : 3\u3064\u306e\u30c9\u30c3\u30c8\u306f\u53f3\u306e\u5024\u3092\u542b\u307e\u306a\u3044\u7bc4\u56f2\u3092\u8868\u3057\u307e\u3059\u3002\u3064\u307e\u308a x \u3068 y \u307e\u3067\u306e\u5024\u3059\u3079\u3066\u3092\u542b\u307f\u307e\u3059 (\u6570\u5b66\u7684\u306b\u306f\u5de6\u9589\u53f3\u958b\u533a\u9593 [x, y) \u3067\u3059)\u3002 ( 0 .. 5 ) . to_a # => [0, 1, 2, 3, 4, 5] ( 0 ... 5 ) . to_a # => [0, 1, 2, 3, 4] Note \u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u3092\u30ec\u30b7\u30fc\u30d0\u306b\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u7d9a\u3051\u308b\u3088\u3046\u306a\u5834\u5408\u3001\u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u3092\u62ec\u5f27\u3067\u56f2\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 0..5.to_a \u306e\u3088\u3046\u306b\u62ec\u5f27\u3067\u56f2\u308f\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u3088\u308a\u3082\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u65b9\u304c\u512a\u5148\u5ea6\u304c\u9ad8\u3044\u305f\u3081 0..(5.to_a) \u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 \u4e0a\u8a18\u306e\u300c\u53f3\u306e\u5024\u3092\u542b\u3080/\u542b\u307e\u306a\u3044\u300d\u8a18\u6cd5\u306e\u7c21\u5358\u306a\u899a\u3048\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u30c9\u30c3\u30c8\u304c1\u3064\u591a\u304f\u3064\u3044\u3066\u3044\u308b\u3068\u3001\u305d\u308c\u3060\u3051 y \u304c\u5916\u306b\u62bc\u3057\u51fa\u3055\u308c\u3066\u3044\u308b\u306e\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3060\u304b\u3089\u3001\u305d\u306e\u3068\u304d\u7bc4\u56f2\u306b y \u306f\u542b\u307e\u308c\u306a\u3044\u306e\u3067\u3059\u3002 \u660e\u793a\u7684\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u547c\u3076\u5834\u5408\u3001 x..y \u306f Range.new(x, y) \u3068\u7b49\u3057\u304f\u3001 x...y \u306f Range.new(x, y, true) \u3068\u7b49\u3057\u3044\u3067\u3059\u3002 \u5de6\u53f3\u306e\u5024\u306f\u5fc5\u305a\u3057\u3082\u540c\u3058\u578b\u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070 true..1 \u306f\u6709\u52b9\u306a\u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u3053\u306e\u5834\u54082\u3064\u306e\u578b\u306f\u6bd4\u8f03\u4e0d\u80fd\u306e\u305f\u3081 Enumerable \u306e\u30e1\u30bd\u30c3\u30c9\u7fa4\u304c\u307b\u3068\u3093\u3069\u4f7f\u3048\u305a\u3001\u3042\u307e\u308a\u4fbf\u5229\u306a\u5834\u9762\u306f\u3042\u308a\u307e\u305b\u3093\u30022\u3064\u306e\u578b\u306f\u5c11\u306a\u304f\u3068\u3082\u6bd4\u8f03\u53ef\u80fd\u3067\u3042\u308b\u65b9\u304c\u597d\u307e\u3057\u3044\u3067\u3059\u3002 \u5de6\u306e\u5024\u3068\u3057\u3066 nil \u304c\u4e0e\u3048\u3089\u308c\u305f\u7bc4\u56f2\u3092 begin-less \u7bc4\u56f2\u3001\u53f3\u306e\u5024\u3068\u3057\u3066 nil \u304c\u4e0e\u3048\u3089\u308c\u305f\u7bc4\u56f2\u3092 end-less \u7bc4\u56f2\u3068\u547c\u3073\u307e\u3059\u3002\u30ea\u30c6\u30e9\u30eb\u3092\u66f8\u304f\u4e0a\u3067\u306f nil \u306f\u7701\u7565\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a x.. \u306f x \u304b\u3089\u59cb\u307e\u308b end-less \u7bc4\u56f2\u3067\u3001 ..x \u306f x \u3067\u7d42\u308f\u308b begin-less \u7bc4\u56f2\u3067\u3059\u3002 numbers = [ 1 , 10 , 3 , 4 , 5 , 8 ] numbers . select ( 6 .. ) # => [10, 8] numbers . select ( .. 6 ) # => [1, 3, 4, 5] numbers [ 2 ..] = [ 3 , 4 , 5 , 8 ] numbers [.. 2 ] = [ 1 , 10 , 3 ] .. \u3084 ... \u306e\u3088\u3046\u306a begin-less \u304b\u3064 end-less \u306a\u7bc4\u56f2\u3082\u30ea\u30c6\u30e9\u30eb\u3068\u3057\u3066\u6709\u52b9\u3067\u3059\u304c\u3001\u3042\u307e\u308a\u4f7f\u3044\u3069\u3053\u308d\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002","title":"\u7bc4\u56f2 (Range)"},{"location":"syntax_and_semantics/literals/range.html#range","text":"Range \u306f2\u3064\u306e\u5024\u306b\u3088\u308b\u533a\u9593\u3092\u8868\u3057\u307e\u3059\u3002\u901a\u5e38\u3001\u7bc4\u56f2\u306f2\u3064\u3082\u3057\u304f\u306f3\u3064\u306e\u30c9\u30c3\u30c8\u304b\u3089\u306a\u308b\u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u307e\u3059\u3002 x..y : 2\u3064\u306e\u30c9\u30c3\u30c8\u306f\u53f3\u306e\u5024\u3092\u542b\u3080\u7bc4\u56f2\u3092\u8868\u3057\u307e\u3059\u3002\u3064\u307e\u308a x \u3068 y \u3001\u304a\u3088\u3073\u305d\u306e\u9593\u306e\u3059\u3079\u3066\u306e\u5024\u3092\u542b\u307f\u307e\u3059 (\u6570\u5b66\u7684\u306b\u306f\u9589\u533a\u9593 [x, y] \u3067\u3059)\u3002 x...y : 3\u3064\u306e\u30c9\u30c3\u30c8\u306f\u53f3\u306e\u5024\u3092\u542b\u307e\u306a\u3044\u7bc4\u56f2\u3092\u8868\u3057\u307e\u3059\u3002\u3064\u307e\u308a x \u3068 y \u307e\u3067\u306e\u5024\u3059\u3079\u3066\u3092\u542b\u307f\u307e\u3059 (\u6570\u5b66\u7684\u306b\u306f\u5de6\u9589\u53f3\u958b\u533a\u9593 [x, y) \u3067\u3059)\u3002 ( 0 .. 5 ) . to_a # => [0, 1, 2, 3, 4, 5] ( 0 ... 5 ) . to_a # => [0, 1, 2, 3, 4] Note \u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u3092\u30ec\u30b7\u30fc\u30d0\u306b\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u7d9a\u3051\u308b\u3088\u3046\u306a\u5834\u5408\u3001\u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u3092\u62ec\u5f27\u3067\u56f2\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 0..5.to_a \u306e\u3088\u3046\u306b\u62ec\u5f27\u3067\u56f2\u308f\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u3088\u308a\u3082\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u65b9\u304c\u512a\u5148\u5ea6\u304c\u9ad8\u3044\u305f\u3081 0..(5.to_a) \u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 \u4e0a\u8a18\u306e\u300c\u53f3\u306e\u5024\u3092\u542b\u3080/\u542b\u307e\u306a\u3044\u300d\u8a18\u6cd5\u306e\u7c21\u5358\u306a\u899a\u3048\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u30c9\u30c3\u30c8\u304c1\u3064\u591a\u304f\u3064\u3044\u3066\u3044\u308b\u3068\u3001\u305d\u308c\u3060\u3051 y \u304c\u5916\u306b\u62bc\u3057\u51fa\u3055\u308c\u3066\u3044\u308b\u306e\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3060\u304b\u3089\u3001\u305d\u306e\u3068\u304d\u7bc4\u56f2\u306b y \u306f\u542b\u307e\u308c\u306a\u3044\u306e\u3067\u3059\u3002 \u660e\u793a\u7684\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u547c\u3076\u5834\u5408\u3001 x..y \u306f Range.new(x, y) \u3068\u7b49\u3057\u304f\u3001 x...y \u306f Range.new(x, y, true) \u3068\u7b49\u3057\u3044\u3067\u3059\u3002 \u5de6\u53f3\u306e\u5024\u306f\u5fc5\u305a\u3057\u3082\u540c\u3058\u578b\u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070 true..1 \u306f\u6709\u52b9\u306a\u7bc4\u56f2\u30ea\u30c6\u30e9\u30eb\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u3053\u306e\u5834\u54082\u3064\u306e\u578b\u306f\u6bd4\u8f03\u4e0d\u80fd\u306e\u305f\u3081 Enumerable \u306e\u30e1\u30bd\u30c3\u30c9\u7fa4\u304c\u307b\u3068\u3093\u3069\u4f7f\u3048\u305a\u3001\u3042\u307e\u308a\u4fbf\u5229\u306a\u5834\u9762\u306f\u3042\u308a\u307e\u305b\u3093\u30022\u3064\u306e\u578b\u306f\u5c11\u306a\u304f\u3068\u3082\u6bd4\u8f03\u53ef\u80fd\u3067\u3042\u308b\u65b9\u304c\u597d\u307e\u3057\u3044\u3067\u3059\u3002 \u5de6\u306e\u5024\u3068\u3057\u3066 nil \u304c\u4e0e\u3048\u3089\u308c\u305f\u7bc4\u56f2\u3092 begin-less \u7bc4\u56f2\u3001\u53f3\u306e\u5024\u3068\u3057\u3066 nil \u304c\u4e0e\u3048\u3089\u308c\u305f\u7bc4\u56f2\u3092 end-less \u7bc4\u56f2\u3068\u547c\u3073\u307e\u3059\u3002\u30ea\u30c6\u30e9\u30eb\u3092\u66f8\u304f\u4e0a\u3067\u306f nil \u306f\u7701\u7565\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a x.. \u306f x \u304b\u3089\u59cb\u307e\u308b end-less \u7bc4\u56f2\u3067\u3001 ..x \u306f x \u3067\u7d42\u308f\u308b begin-less \u7bc4\u56f2\u3067\u3059\u3002 numbers = [ 1 , 10 , 3 , 4 , 5 , 8 ] numbers . select ( 6 .. ) # => [10, 8] numbers . select ( .. 6 ) # => [1, 3, 4, 5] numbers [ 2 ..] = [ 3 , 4 , 5 , 8 ] numbers [.. 2 ] = [ 1 , 10 , 3 ] .. \u3084 ... \u306e\u3088\u3046\u306a begin-less \u304b\u3064 end-less \u306a\u7bc4\u56f2\u3082\u30ea\u30c6\u30e9\u30eb\u3068\u3057\u3066\u6709\u52b9\u3067\u3059\u304c\u3001\u3042\u307e\u308a\u4f7f\u3044\u3069\u3053\u308d\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002","title":"\u7bc4\u56f2 (Range)"},{"location":"syntax_and_semantics/literals/regex.html","text":"\u6b63\u898f\u8868\u73fe \u6b63\u898f\u8868\u73fe\u306f Regex \u30af\u30e9\u30b9\u3067\u8868\u3055\u308c\u307e\u3059\u3002 \u6b63\u898f\u8868\u73fe\u306b\u306f PCRE \u306e\u69cb\u6587\u3092\u4f7f\u3044\u307e\u3059\u3002\u30ea\u30c6\u30e9\u30eb\u3068\u3057\u3066\u306f\u3001UTF-8\u306e\u6587\u5b57\u5217\u3092\u30b9\u30e9\u30c3\u30b7\u30e5 ( / ) \u3067\u56f2\u3093\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002 /foo|bar/ /h(e+)llo/ /\\d+/ /\u3042/ \u30a8\u30b9\u30b1\u30fc\u30d7\u6587\u5b57 \u6b63\u898f\u8868\u73fe\u3067\u306f \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u69d8\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 /\\// # slash /\\\\/ # backslash /\\b/ # backspace /\\e/ # escape /\\f/ # form feed /\\n/ # newline /\\r/ # carriage return /\\t/ # tab /\\v/ # vertical tab /\\NNN/ # octal ASCII character /\\xNN/ # hexadecimal ASCII character /\\x{FFFF}/ # hexadecimal unicode character /\\x{10FFFF}/ # hexadecimal unicode character \u533a\u5207\u308a\u6587\u5b57\u3067\u3042\u308b / \u306f\u6b63\u898f\u8868\u73fe\u4e2d\u3067\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 PCRE \u306e\u69cb\u6587\u4e0a\u610f\u5473\u306e\u3042\u308b\u6587\u5b57\u3092\u901a\u5e38\u306e\u6587\u5b57\u3068\u3057\u3066\u6271\u3044\u305f\u3044\u5834\u5408\u3082\u30a8\u30b9\u30b1\u30fc\u30d7\u304c\u5fc5\u8981\u3067\u3059\u3002 \u6587\u5b57\u5217\u306e\u88dc\u9593 \u6587\u5b57\u5217\u306e\u88dc\u9593\u306f\u6b63\u898f\u8868\u73fe\u30ea\u30c6\u30e9\u30eb\u4e2d\u3067\u3082 \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb \u306e\u5834\u5408\u3068\u540c\u69d8\u306b\u6a5f\u80fd\u3057\u307e\u3059\u3002\u3053\u306e\u65b9\u6cd5\u3067\u6b63\u898f\u8868\u73fe\u3092\u751f\u6210\u3057\u305f\u5834\u5408\u3001\u69cb\u6587\u30a8\u30e9\u30fc\u306a\u3069\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3067\u304d\u305a\u5b9f\u884c\u6642\u306b\u8d77\u3053\u308b\u4f8b\u5916\u306b\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4fee\u98fe\u5b50 \u533a\u5207\u308a\u6587\u5b57\u3092\u9589\u3058\u305f\u3042\u3068\u306b\u3001\u3044\u304f\u3064\u304b\u306e\u4fee\u98fe\u5b50\u3092\u7d9a\u3051\u308b\u3053\u3068\u3067\u3001\u6b63\u898f\u8868\u73fe\u306e\u30de\u30c3\u30c1\u306e\u6319\u52d5\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002 i : \u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u3092\u533a\u5225\u3057\u306a\u3044\u30de\u30c3\u30c1\u3092\u884c\u3046 ( PCRE_CASELESS ) \u3002\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u306e\u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u3082\u533a\u5225\u3057\u306a\u3044\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 m : \u8907\u6570\u884c\u30de\u30c3\u30c1\u3092\u884c\u3046 ( PCRE_MULTILINE )\u3002 \u884c\u306e\u958b\u59cb ( ^ ) \u3068 \u884c\u306e\u7d42\u308f\u308a ( $ ) \u3092\u8868\u3059\u30e1\u30bf\u6587\u5b57\u304c\u3001\u6587\u5b57\u5217\u306e\u5192\u982d\u3084\u672b\u5c3e\u306b\u52a0\u3048\u3066\u3001\u6539\u884c\u306e\u76f4\u524d\u3084\u76f4\u5f8c\u306b\u3082\u30de\u30c3\u30c1\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 x : \u7a7a\u767d\u6587\u5b57\u3092\u7121\u8996\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059 ( PCRE_EXTENDED )\u3002\u6587\u5b57\u30af\u30e9\u30b9\u306e\u5185\u90e8\u3092\u9664\u304f\u30d1\u30bf\u30fc\u30f3\u4e2d\u306e\u7a7a\u767d\u6587\u5b57\u3092\u98db\u3070\u3057\u3066\u30de\u30c3\u30c1\u3092\u884c\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3044\u306a\u3044\u30cf\u30c3\u30b7\u30e5 # \u306f\u884c\u30b3\u30e1\u30f3\u30c8\u306e\u59cb\u307e\u308a\u3068\u898b\u306a\u3055\u308c\u3001\u6b21\u306e\u6539\u884c\u6587\u5b57\u307e\u3067\u98db\u3070\u3057\u3066\u30de\u30c3\u30c1\u3092\u884c\u3044\u307e\u3059\u3002 /foo/i . match ( \"FOO\" ) # => #<Regex::MatchData \"FOO\"> /foo/m . match ( \"bar \\n foo\" ) # => #<Regex::MatchData \"foo\"> /foo /x . match ( \"foo\" ) # => #<Regex::MatchData \"foo\"> /foo /imx . match ( \"bar \\n FOO\" ) # => #<Regex::MatchData \"FOO\"> \u30d1\u30fc\u30bb\u30f3\u30c8\u6b63\u898f\u8868\u73fe\u30ea\u30c6\u30e9\u30eb \u30b9\u30e9\u30c3\u30b7\u30e5\u533a\u5207\u308a\u306e\u30ea\u30c6\u30e9\u30eb\u306e\u4ed6\u306b\u3001\u6b63\u898f\u8868\u73fe\u30ea\u30c6\u30e9\u30eb\u306f %r \u3068\u533a\u5207\u308a\u6587\u5b57\u306e\u7d44\u304b\u3089\u306a\u308b\u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3063\u3066\u8868\u73fe\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u6709\u52b9\u306a\u533a\u5207\u308a\u6587\u5b57\u306f\u3001\u62ec\u5f27 () \u3001\u89d2\u62ec\u5f27 [] \u3001\u3072\u3052\u62ec\u5f27 {} \u3001\u4e09\u89d2\u62ec\u5f27 <> \u305d\u3057\u3066\u30d1\u30a4\u30d7\u6587\u5b57 || \u3067\u3059\u3002\u30d1\u30a4\u30d7\u6587\u5b57\u3092\u9664\u3044\u3066\u3001\u3059\u3079\u3066\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u30cd\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u9069\u5207\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \u30b9\u30e9\u30c3\u30b7\u30e5\u3092\u542b\u3080\u3088\u3046\u306a\u6b63\u898f\u8868\u73fe\u3092\u66f8\u304f\u306e\u306b\u3053\u308c\u3089\u306e\u30ea\u30c6\u30e9\u30eb\u306f\u4fbf\u5229\u3067\u3059\u3002 %r((/)) # => /(\\/)/ %r[[/]] # => /[\\/]/ %r{{/}} # => /{\\/}/ %r<</>> # => /<\\/>/ %r|/| # => /\\//","title":"\u6b63\u898f\u8868\u73fe (Regex)"},{"location":"syntax_and_semantics/literals/regex.html#_1","text":"\u6b63\u898f\u8868\u73fe\u306f Regex \u30af\u30e9\u30b9\u3067\u8868\u3055\u308c\u307e\u3059\u3002 \u6b63\u898f\u8868\u73fe\u306b\u306f PCRE \u306e\u69cb\u6587\u3092\u4f7f\u3044\u307e\u3059\u3002\u30ea\u30c6\u30e9\u30eb\u3068\u3057\u3066\u306f\u3001UTF-8\u306e\u6587\u5b57\u5217\u3092\u30b9\u30e9\u30c3\u30b7\u30e5 ( / ) \u3067\u56f2\u3093\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002 /foo|bar/ /h(e+)llo/ /\\d+/ /\u3042/","title":"\u6b63\u898f\u8868\u73fe"},{"location":"syntax_and_semantics/literals/regex.html#_2","text":"\u6b63\u898f\u8868\u73fe\u3067\u306f \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3068\u540c\u69d8\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 /\\// # slash /\\\\/ # backslash /\\b/ # backspace /\\e/ # escape /\\f/ # form feed /\\n/ # newline /\\r/ # carriage return /\\t/ # tab /\\v/ # vertical tab /\\NNN/ # octal ASCII character /\\xNN/ # hexadecimal ASCII character /\\x{FFFF}/ # hexadecimal unicode character /\\x{10FFFF}/ # hexadecimal unicode character \u533a\u5207\u308a\u6587\u5b57\u3067\u3042\u308b / \u306f\u6b63\u898f\u8868\u73fe\u4e2d\u3067\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 PCRE \u306e\u69cb\u6587\u4e0a\u610f\u5473\u306e\u3042\u308b\u6587\u5b57\u3092\u901a\u5e38\u306e\u6587\u5b57\u3068\u3057\u3066\u6271\u3044\u305f\u3044\u5834\u5408\u3082\u30a8\u30b9\u30b1\u30fc\u30d7\u304c\u5fc5\u8981\u3067\u3059\u3002","title":"\u30a8\u30b9\u30b1\u30fc\u30d7\u6587\u5b57"},{"location":"syntax_and_semantics/literals/regex.html#_3","text":"\u6587\u5b57\u5217\u306e\u88dc\u9593\u306f\u6b63\u898f\u8868\u73fe\u30ea\u30c6\u30e9\u30eb\u4e2d\u3067\u3082 \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb \u306e\u5834\u5408\u3068\u540c\u69d8\u306b\u6a5f\u80fd\u3057\u307e\u3059\u3002\u3053\u306e\u65b9\u6cd5\u3067\u6b63\u898f\u8868\u73fe\u3092\u751f\u6210\u3057\u305f\u5834\u5408\u3001\u69cb\u6587\u30a8\u30e9\u30fc\u306a\u3069\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3067\u304d\u305a\u5b9f\u884c\u6642\u306b\u8d77\u3053\u308b\u4f8b\u5916\u306b\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u6587\u5b57\u5217\u306e\u88dc\u9593"},{"location":"syntax_and_semantics/literals/regex.html#_4","text":"\u533a\u5207\u308a\u6587\u5b57\u3092\u9589\u3058\u305f\u3042\u3068\u306b\u3001\u3044\u304f\u3064\u304b\u306e\u4fee\u98fe\u5b50\u3092\u7d9a\u3051\u308b\u3053\u3068\u3067\u3001\u6b63\u898f\u8868\u73fe\u306e\u30de\u30c3\u30c1\u306e\u6319\u52d5\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002 i : \u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u3092\u533a\u5225\u3057\u306a\u3044\u30de\u30c3\u30c1\u3092\u884c\u3046 ( PCRE_CASELESS ) \u3002\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u306e\u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u3082\u533a\u5225\u3057\u306a\u3044\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 m : \u8907\u6570\u884c\u30de\u30c3\u30c1\u3092\u884c\u3046 ( PCRE_MULTILINE )\u3002 \u884c\u306e\u958b\u59cb ( ^ ) \u3068 \u884c\u306e\u7d42\u308f\u308a ( $ ) \u3092\u8868\u3059\u30e1\u30bf\u6587\u5b57\u304c\u3001\u6587\u5b57\u5217\u306e\u5192\u982d\u3084\u672b\u5c3e\u306b\u52a0\u3048\u3066\u3001\u6539\u884c\u306e\u76f4\u524d\u3084\u76f4\u5f8c\u306b\u3082\u30de\u30c3\u30c1\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 x : \u7a7a\u767d\u6587\u5b57\u3092\u7121\u8996\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059 ( PCRE_EXTENDED )\u3002\u6587\u5b57\u30af\u30e9\u30b9\u306e\u5185\u90e8\u3092\u9664\u304f\u30d1\u30bf\u30fc\u30f3\u4e2d\u306e\u7a7a\u767d\u6587\u5b57\u3092\u98db\u3070\u3057\u3066\u30de\u30c3\u30c1\u3092\u884c\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3044\u306a\u3044\u30cf\u30c3\u30b7\u30e5 # \u306f\u884c\u30b3\u30e1\u30f3\u30c8\u306e\u59cb\u307e\u308a\u3068\u898b\u306a\u3055\u308c\u3001\u6b21\u306e\u6539\u884c\u6587\u5b57\u307e\u3067\u98db\u3070\u3057\u3066\u30de\u30c3\u30c1\u3092\u884c\u3044\u307e\u3059\u3002 /foo/i . match ( \"FOO\" ) # => #<Regex::MatchData \"FOO\"> /foo/m . match ( \"bar \\n foo\" ) # => #<Regex::MatchData \"foo\"> /foo /x . match ( \"foo\" ) # => #<Regex::MatchData \"foo\"> /foo /imx . match ( \"bar \\n FOO\" ) # => #<Regex::MatchData \"FOO\">","title":"\u4fee\u98fe\u5b50"},{"location":"syntax_and_semantics/literals/regex.html#_5","text":"\u30b9\u30e9\u30c3\u30b7\u30e5\u533a\u5207\u308a\u306e\u30ea\u30c6\u30e9\u30eb\u306e\u4ed6\u306b\u3001\u6b63\u898f\u8868\u73fe\u30ea\u30c6\u30e9\u30eb\u306f %r \u3068\u533a\u5207\u308a\u6587\u5b57\u306e\u7d44\u304b\u3089\u306a\u308b\u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3063\u3066\u8868\u73fe\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u6709\u52b9\u306a\u533a\u5207\u308a\u6587\u5b57\u306f\u3001\u62ec\u5f27 () \u3001\u89d2\u62ec\u5f27 [] \u3001\u3072\u3052\u62ec\u5f27 {} \u3001\u4e09\u89d2\u62ec\u5f27 <> \u305d\u3057\u3066\u30d1\u30a4\u30d7\u6587\u5b57 || \u3067\u3059\u3002\u30d1\u30a4\u30d7\u6587\u5b57\u3092\u9664\u3044\u3066\u3001\u3059\u3079\u3066\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u30cd\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u9069\u5207\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \u30b9\u30e9\u30c3\u30b7\u30e5\u3092\u542b\u3080\u3088\u3046\u306a\u6b63\u898f\u8868\u73fe\u3092\u66f8\u304f\u306e\u306b\u3053\u308c\u3089\u306e\u30ea\u30c6\u30e9\u30eb\u306f\u4fbf\u5229\u3067\u3059\u3002 %r((/)) # => /(\\/)/ %r[[/]] # => /[\\/]/ %r{{/}} # => /{\\/}/ %r<</>> # => /<\\/>/ %r|/| # => /\\//","title":"\u30d1\u30fc\u30bb\u30f3\u30c8\u6b63\u898f\u8868\u73fe\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/string.html","text":"\u6587\u5b57\u5217 (String) String \u306f UTF-8 \u6587\u5b57\u306e\u4e0d\u5909\u306a\u5217\u3092\u8868\u3057\u307e\u3059\u3002 \u901a\u5e38\u3001\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8 ( \" ) \u3067\u56f2\u307e\u308c\u305fUTF-8\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u6587\u5b57\u306e\u4e26\u3073\u3067\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002 \"hello world\" \u30a8\u30b9\u30b1\u30fc\u30d7\u6587\u5b57 \u6587\u5b57\u5217\u4e2d\u3067\u306f\u3001\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u3088\u308b\u540d\u524d\u3064\u304d\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u3084\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u6570\u5024\u8868\u73fe\u306b\u3088\u3063\u3066\u3001\u7279\u5225\u306a\u6587\u5b57\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 \u6b21\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u6709\u52b9\u3067\u3059\u3002 \" \\\" \" # \u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8 \" \\\\ \" # \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5 \"\\a\" # \u30a2\u30e9\u30fc\u30c8 \" \\b \" # \u30d0\u30c3\u30af\u30b9\u30da\u30fc\u30b9 \" \\e \" # \u30a8\u30b9\u30b1\u30fc\u30d7 \" \\f \" # \u30d5\u30a9\u30fc\u30e0\u30d5\u30a3\u30fc\u30c9 (\u6539\u30da\u30fc\u30b8) \" \\n \" # \u6539\u884c \"\\r\" # \u30ad\u30e3\u30ea\u30c3\u30b8\u30ea\u30bf\u30fc\u30f3 (\u5fa9\u5e30) \" \\t \" # \u30bf\u30d6 \" \\v \" # \u5782\u76f4\u30bf\u30d6 \" \\377 \" # 8\u9032\u6570\u306b\u3088\u308b ASCII \u6587\u5b57 \" \\xFF \" # 16\u9032\u6570\u306b\u3088\u308b ASCII \u6587\u5b57 \"\\uFFFF\" # 16\u9032\u6570\u306b\u3088\u308b\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57 \"\\u{0}\" .. \"\\u{10FFFF}\" # 16\u9032\u6570\u306b\u3088\u308b\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57 \u305d\u306e\u4ed6\u306e\u6587\u5b57\u304c\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u7d9a\u3044\u305f\u5834\u5408\u3001\u305d\u306e\u6587\u5b57\u81ea\u8eab\u3092\u8868\u3059\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u7d9a\u304f\u6700\u59273\u3064\u306e0\u304b\u30897\u307e\u3067\u306e\u6570\u5024\u306f\u30018\u9032\u6570\u306b\u3088\u308b\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u8a18\u8ff0\u3068\u306a\u308a\u307e\u3059\u3002 \" \\101 \" # => \"A\" \" \\123 \" # => \"S\" \" \\12 \" # => \"\\n\" \" \\1 \" # \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c81\u306e\u6587\u5b57\u304c1\u3064\u3060\u3051\u306e\u6587\u5b57\u5217 \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b u \u3092\u7d9a\u3051\u308b\u3053\u3068\u3067\u30e6\u30cb\u30b3\u30fc\u30c9\u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u30e6\u30cb\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u3001\u3061\u3087\u3046\u30694\u3064\u306e16\u9032\u6570\u306e\u6570\u5024\u304b ( \\u0000 to \\uFFFF ) \u304b\u3072\u3052\u62ec\u5f27\u3067\u56f2\u3063\u305f6\u3064\u307e\u3067\u306e16\u9032\u6570\u306e\u6570\u5024\u304c\u5229\u7528\u3067\u304d\u307e\u3059 ( \\u{0} to \\u{10FFFF} \"\\u0041\" # => \"A\" \"\\u{41}\" # => \"A\" \"\\u{1F52E}\" # => \"\ud83d\udd2e\" 1\u3064\u306e\u3072\u3052\u62ec\u5f27\u306e\u4e2d\u306b\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3063\u3066\u8907\u6570\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u304c\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 \"\\u{48 45 4C 4C 4F}\" # => \"HELLO\" \u6587\u5b57\u5217\u306e\u88dc\u9593 \u88dc\u9593\u3092\u4f34\u3046\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u3001\u6587\u5b57\u5217\u306b\u5b9f\u884c\u6642\u306b\u5c55\u958b\u3055\u308c\u308b\u5f0f\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 a = 1 b = 2 \"sum: #{ a } + #{ b } = #{ a + b } \" # => \"sum: 1 + 2 = 3\" \u6587\u5b57\u5217\u306e\u88dc\u9593\u306f String#% \u3067\u3082\u53ef\u80fd\u3067\u3059\u3002 \u4efb\u610f\u306e\u5f0f\u3092\u6587\u5b57\u5217\u306e\u88dc\u9593\u3068\u3057\u3066\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u53ef\u8aad\u6027\u3092\u9ad8\u3081\u308b\u305f\u3081\u305d\u308c\u3089\u306e\u5f0f\u306f\u5c0f\u3055\u306a\u3082\u306e\u306b\u4fdd\u3063\u305f\u307b\u3046\u304c\u826f\u3044\u3067\u3059\u3002 # \u3092\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3067\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u304b\u3001 %q() \u306e\u3088\u3046\u306a\u88dc\u9593\u3092\u8a31\u53ef\u3057\u306a\u3044\u3088\u3046\u306a\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u88dc\u9593\u3092\u7121\u52b9\u306b\u3067\u304d\u307e\u3059\u3002 \" \\# {a + b}\" # => \"#{a + b}\" % q ( #{a + b}) # => \"#{a + b}\" \u6587\u5b57\u5217\u306e\u88dc\u9593\u306f String::Builder \u3092\u4f7f\u3044\u3001 #{...} \u306e\u4e2d\u306e\u5f0f\u306b\u5bfe\u3057\u3066 Object#to_s(IO) \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5f0f \"sum: #{a} + #{b} = #{a + b}\" \u306f\u6b21\u306b\u7b49\u3057\u3044\u3067\u3059\u3002 String . build do | io | io << \"sum: \" io << a io << \" + \" io << b io << \" = \" io << a + b end \u30d1\u30fc\u30bb\u30f3\u30c8\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb \u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u306b\u3088\u308b\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u4ed6\u306b\u3001Crystal\u306f\u30d1\u30fc\u30bb\u30f3\u30c8\u8a18\u53f7 ( % ) \u3068\u533a\u5207\u308a\u6587\u5b57\u306e\u7d44\u306b\u3088\u308b\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u6709\u52b9\u306a\u533a\u5207\u308a\u6587\u5b57\u306f\u3001\u62ec\u5f27 () \u3001\u89d2\u62ec\u5f27 [] \u3001\u3072\u3052\u62ec\u5f27 {} \u3001\u4e09\u89d2\u62ec\u5f27 <> \u305d\u3057\u3066\u30d1\u30a4\u30d7\u6587\u5b57 || \u3067\u3059\u3002\u30d1\u30a4\u30d7\u6587\u5b57\u3092\u9664\u3044\u3066\u3001\u3059\u3079\u3066\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u30cd\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u9069\u5207\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3092\u542b\u3080\u3088\u3046\u306a\u6587\u5b57\u5217\u3092\u66f8\u304f\u306e\u306b\u3053\u308c\u3089\u306e\u30ea\u30c6\u30e9\u30eb\u306f\u304a\u624b\u8efd\u3067\u3059\u3002 %(hello (\"world\")) # => \"hello (\\\"world\\\")\" %[hello [\"world\"]] # => \"hello [\\\"world\\\"]\" %{hello {\"world\"}} # => \"hello {\\\"world\\\"}\" %<hello <\"world\">> # => \"hello <\\\"world\\\">\" %| hello \"world\" | # => \"hello \\\"world\\\"\" %q \u3067\u8a18\u8ff0\u3055\u308c\u308b\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u3001\u6587\u5b57\u5217\u306e\u88dc\u9593\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u53d7\u3051\u4ed8\u3051\u307e\u305b\u3093\u3002\u307e\u305f %Q \u306f % \u3068\u540c\u3058\u610f\u5473\u3092\u6301\u3061\u307e\u3059\u3002 name = \"world\" % q ( hello \\ n #{name}) # => \"hello \\\\n \\#{name}\" % Q ( hello \\ n #{name}) # => \"hello \\n world\" \u30d1\u30fc\u30bb\u30f3\u30c8\u6587\u5b57\u5217\u914d\u5217\u30ea\u30c6\u30e9\u30eb 1\u3064\u306e\u6587\u5b57\u5217\u3092\u8868\u3059\u30ea\u30c6\u30e9\u30eb\u306e\u4ed6\u306b\u3001\u6587\u5b57\u5217\u306e \u914d\u5217 \u3092\u8868\u3059\u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f %w \u3068\u533a\u5207\u308a\u6587\u5b57\u306e\u7d44\u306b\u3088\u3063\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\u6709\u52b9\u306a\u533a\u5207\u308a\u6587\u5b57\u306f \u30d1\u30fc\u30bb\u30f3\u30c8\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb \u306e\u3068\u304d\u3068\u540c\u3058\u3067\u3059\u3002 %w(foo bar baz) # => [\"foo\", \"bar\", \"baz\"] %w(foo\\nbar baz) # => [\"foo\\\\nbar\", \"baz\"] %w(foo(bar) baz) # => [\"foo(bar)\", \"baz\"] %w \u3067\u8a18\u8ff0\u3055\u308c\u305f\u30ea\u30c6\u30e9\u30eb\u306f\u30b9\u30da\u30fc\u30b9\u3092\u9664\u304f\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u6587\u5b57\u5217\u306e\u88dc\u9593\u3092\u53d7\u3051\u4ed8\u3051\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3082\u3061\u308d\u3093\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u305f1\u3064\u306e\u30b9\u30da\u30fc\u30b9 ( ) \u3067\u306f\u6587\u5b57\u5217\u306f\u533a\u5207\u3089\u308c\u307e\u305b\u3093\u3002 %w(foo\\ bar baz) # => [\"foo bar\", \"baz\"] \u8907\u6570\u884c\u306e\u6587\u5b57\u5217 \u4efb\u610f\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u8907\u6570\u884c\u306b\u307e\u305f\u304c\u3063\u3066\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 \"hello world\" # => \"hello\\n world\" \u4e0a\u306e\u4f8b\u3067\u306f\u3001\u5148\u982d\u3068\u672b\u5c3e\u306e\u7a7a\u767d\u3001\u304a\u3088\u3073\u6539\u884c\u304c\u7d50\u679c\u306e\u6587\u5b57\u5217\u306b\u3082\u5165\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u884c\u6bce\u306b\u5206\u5272\u3057\u3066\u3001\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3067\u7d50\u5408\u3059\u308b\u3068\u3044\u3046\u624b\u6bb5\u3092\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \"hello \" \\ \"world, \" \\ \"no newlines\" # same as \"hello world, no newlines\" \u3082\u3057\u304f\u306f\u3001\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u6539\u884c\u3092\u7d9a\u3051\u305f\u3082\u306e\u3092\u6587\u5b57\u5217\u4e2d\u306b\u8ffd\u52a0\u3059\u308b\u3001\u3068\u3044\u3046\u624b\u6bb5\u3082\u3042\u308a\u307e\u3059\u3002 \"hello \\ world, \\ no newlines\" # same as \"hello world, no newlines\" \u3053\u306e\u5834\u5408\u3001\u5148\u982d\u306e\u7a7a\u767d\u304c\u7d50\u679c\u306e\u6587\u5b57\u5217\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306a\u3044\u3057 heredoc \u306f\u8907\u6570\u884c\u306b\u307e\u305f\u304c\u308b\u6587\u5b57\u5217\u306e\u4fbf\u5229\u306a\u66f8\u304d\u65b9\u3067\u3059\u3002 \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f <<- \u3068\u305d\u308c\u306b\u7d9a\u304f\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3068\u6570\u5b57 (\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3082\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b) \u306e\u4e26\u3073\u306e\u8b58\u5225\u5b50\u306b\u3088\u3063\u3066\u8a18\u8ff0\u3055\u308c\u307e\u3059\u3002\u30d2\u30a2\u30c9\u30e1\u30f3\u30c8\u306f\u7d9a\u304f\u884c\u304b\u3089\u958b\u59cb\u3057\u3066\u3001\u6b21\u306e\u884c\u306b\u6700\u521d\u306b\u6307\u5b9a\u3057\u305f\u8b58\u5225\u5b50 \u306e\u307f \u3092\u542b\u3080\u884c\u3067\u7d42\u4e86\u3057\u307e\u3059\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5148\u982d\u306b\u7a7a\u767d\u6587\u5b57\u3092\u5165\u308c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 <<- XML <parent> <child /> </parent> XML \u6700\u5f8c\u306e\u884c\u306e\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8b58\u5225\u5b50\u306e\u524d\u306e\u7a7a\u767d\u306e\u500b\u6570\u5206\u3060\u3051\u3001\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5185\u5bb9\u304b\u3089\u5148\u982d\u306e\u7a7a\u767d\u6587\u5b57\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 <<- STRING # => \"Hello\\n world\" Hello world STRING <<- STRING # => \" Hello\\n world\" Hello world STRING \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8b58\u5225\u5b50\u306e\u3042\u3068\u3067\u540c\u3058\u884c\u306e\u5834\u5408\u3001\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5185\u5bb9\u306e\u524d\u306b\u4efb\u610f\u306e\u5f0f\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8b58\u5225\u5b50\u306f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u7d42\u7aef\u306e\u3088\u3046\u306b\u6a5f\u80fd\u3057\u307e\u3059\u3002\u3067\u3059\u304c\u3001\u305d\u306e\u6587\u5b57\u5217\u306e\u5185\u5bb9\u306f\u7d42\u7aef\u306e\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8b58\u5225\u5b50\u307e\u3067\u306e\u5f8c\u7d9a\u306e\u884c\u306e\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002 <<- STRING . upcase # => \"HELLO\" hello STRING def upcase ( string ) string . upcase end upcase ( <<- STRING ) # => \"HELLO WORLD\" Hello World STRING \u3082\u3057\u8907\u6570\u306e\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u540c\u3058\u884c\u3067\u958b\u59cb\u3057\u305f\u5834\u5408\u3001\u305d\u308c\u3089\u306e\u5185\u5bb9\u306f\u9010\u6b21\u7684\u306b\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 print ( <<- FIRST , <<- SECOND ) # prints \"HelloWorld\" Hello FIRST World SECOND \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e2d\u3067\u306f\u4e00\u822c\u7684\u306b\u88dc\u9593\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e2d\u3067\u88dc\u9593\u3084\u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u7981\u6b62\u3057\u305f\u3044\u5834\u5408\u3001\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5192\u982d\u306e\u8b58\u5225\u5b50\u3092\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u3063\u3066\u304f\u3060\u3055\u3044\u3002 <<- ' HERE ' # => \"hello \\\\n \\#{world}\" hello \\n #{world} HERE","title":"\u6587\u5b57\u5217 (String)"},{"location":"syntax_and_semantics/literals/string.html#string","text":"String \u306f UTF-8 \u6587\u5b57\u306e\u4e0d\u5909\u306a\u5217\u3092\u8868\u3057\u307e\u3059\u3002 \u901a\u5e38\u3001\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8 ( \" ) \u3067\u56f2\u307e\u308c\u305fUTF-8\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u6587\u5b57\u306e\u4e26\u3073\u3067\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002 \"hello world\"","title":"\u6587\u5b57\u5217 (String)"},{"location":"syntax_and_semantics/literals/string.html#_1","text":"\u6587\u5b57\u5217\u4e2d\u3067\u306f\u3001\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u3088\u308b\u540d\u524d\u3064\u304d\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u3084\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u6570\u5024\u8868\u73fe\u306b\u3088\u3063\u3066\u3001\u7279\u5225\u306a\u6587\u5b57\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 \u6b21\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u6709\u52b9\u3067\u3059\u3002 \" \\\" \" # \u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8 \" \\\\ \" # \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5 \"\\a\" # \u30a2\u30e9\u30fc\u30c8 \" \\b \" # \u30d0\u30c3\u30af\u30b9\u30da\u30fc\u30b9 \" \\e \" # \u30a8\u30b9\u30b1\u30fc\u30d7 \" \\f \" # \u30d5\u30a9\u30fc\u30e0\u30d5\u30a3\u30fc\u30c9 (\u6539\u30da\u30fc\u30b8) \" \\n \" # \u6539\u884c \"\\r\" # \u30ad\u30e3\u30ea\u30c3\u30b8\u30ea\u30bf\u30fc\u30f3 (\u5fa9\u5e30) \" \\t \" # \u30bf\u30d6 \" \\v \" # \u5782\u76f4\u30bf\u30d6 \" \\377 \" # 8\u9032\u6570\u306b\u3088\u308b ASCII \u6587\u5b57 \" \\xFF \" # 16\u9032\u6570\u306b\u3088\u308b ASCII \u6587\u5b57 \"\\uFFFF\" # 16\u9032\u6570\u306b\u3088\u308b\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57 \"\\u{0}\" .. \"\\u{10FFFF}\" # 16\u9032\u6570\u306b\u3088\u308b\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57 \u305d\u306e\u4ed6\u306e\u6587\u5b57\u304c\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u7d9a\u3044\u305f\u5834\u5408\u3001\u305d\u306e\u6587\u5b57\u81ea\u8eab\u3092\u8868\u3059\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u7d9a\u304f\u6700\u59273\u3064\u306e0\u304b\u30897\u307e\u3067\u306e\u6570\u5024\u306f\u30018\u9032\u6570\u306b\u3088\u308b\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u8a18\u8ff0\u3068\u306a\u308a\u307e\u3059\u3002 \" \\101 \" # => \"A\" \" \\123 \" # => \"S\" \" \\12 \" # => \"\\n\" \" \\1 \" # \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c81\u306e\u6587\u5b57\u304c1\u3064\u3060\u3051\u306e\u6587\u5b57\u5217 \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b u \u3092\u7d9a\u3051\u308b\u3053\u3068\u3067\u30e6\u30cb\u30b3\u30fc\u30c9\u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u30e6\u30cb\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u3001\u3061\u3087\u3046\u30694\u3064\u306e16\u9032\u6570\u306e\u6570\u5024\u304b ( \\u0000 to \\uFFFF ) \u304b\u3072\u3052\u62ec\u5f27\u3067\u56f2\u3063\u305f6\u3064\u307e\u3067\u306e16\u9032\u6570\u306e\u6570\u5024\u304c\u5229\u7528\u3067\u304d\u307e\u3059 ( \\u{0} to \\u{10FFFF} \"\\u0041\" # => \"A\" \"\\u{41}\" # => \"A\" \"\\u{1F52E}\" # => \"\ud83d\udd2e\" 1\u3064\u306e\u3072\u3052\u62ec\u5f27\u306e\u4e2d\u306b\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3063\u3066\u8907\u6570\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u304c\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 \"\\u{48 45 4C 4C 4F}\" # => \"HELLO\"","title":"\u30a8\u30b9\u30b1\u30fc\u30d7\u6587\u5b57"},{"location":"syntax_and_semantics/literals/string.html#_2","text":"\u88dc\u9593\u3092\u4f34\u3046\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u3001\u6587\u5b57\u5217\u306b\u5b9f\u884c\u6642\u306b\u5c55\u958b\u3055\u308c\u308b\u5f0f\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 a = 1 b = 2 \"sum: #{ a } + #{ b } = #{ a + b } \" # => \"sum: 1 + 2 = 3\" \u6587\u5b57\u5217\u306e\u88dc\u9593\u306f String#% \u3067\u3082\u53ef\u80fd\u3067\u3059\u3002 \u4efb\u610f\u306e\u5f0f\u3092\u6587\u5b57\u5217\u306e\u88dc\u9593\u3068\u3057\u3066\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u53ef\u8aad\u6027\u3092\u9ad8\u3081\u308b\u305f\u3081\u305d\u308c\u3089\u306e\u5f0f\u306f\u5c0f\u3055\u306a\u3082\u306e\u306b\u4fdd\u3063\u305f\u307b\u3046\u304c\u826f\u3044\u3067\u3059\u3002 # \u3092\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3067\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u304b\u3001 %q() \u306e\u3088\u3046\u306a\u88dc\u9593\u3092\u8a31\u53ef\u3057\u306a\u3044\u3088\u3046\u306a\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u88dc\u9593\u3092\u7121\u52b9\u306b\u3067\u304d\u307e\u3059\u3002 \" \\# {a + b}\" # => \"#{a + b}\" % q ( #{a + b}) # => \"#{a + b}\" \u6587\u5b57\u5217\u306e\u88dc\u9593\u306f String::Builder \u3092\u4f7f\u3044\u3001 #{...} \u306e\u4e2d\u306e\u5f0f\u306b\u5bfe\u3057\u3066 Object#to_s(IO) \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5f0f \"sum: #{a} + #{b} = #{a + b}\" \u306f\u6b21\u306b\u7b49\u3057\u3044\u3067\u3059\u3002 String . build do | io | io << \"sum: \" io << a io << \" + \" io << b io << \" = \" io << a + b end","title":"\u6587\u5b57\u5217\u306e\u88dc\u9593"},{"location":"syntax_and_semantics/literals/string.html#_3","text":"\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u306b\u3088\u308b\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u4ed6\u306b\u3001Crystal\u306f\u30d1\u30fc\u30bb\u30f3\u30c8\u8a18\u53f7 ( % ) \u3068\u533a\u5207\u308a\u6587\u5b57\u306e\u7d44\u306b\u3088\u308b\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u6709\u52b9\u306a\u533a\u5207\u308a\u6587\u5b57\u306f\u3001\u62ec\u5f27 () \u3001\u89d2\u62ec\u5f27 [] \u3001\u3072\u3052\u62ec\u5f27 {} \u3001\u4e09\u89d2\u62ec\u5f27 <> \u305d\u3057\u3066\u30d1\u30a4\u30d7\u6587\u5b57 || \u3067\u3059\u3002\u30d1\u30a4\u30d7\u6587\u5b57\u3092\u9664\u3044\u3066\u3001\u3059\u3079\u3066\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u30cd\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u9069\u5207\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 \u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3092\u542b\u3080\u3088\u3046\u306a\u6587\u5b57\u5217\u3092\u66f8\u304f\u306e\u306b\u3053\u308c\u3089\u306e\u30ea\u30c6\u30e9\u30eb\u306f\u304a\u624b\u8efd\u3067\u3059\u3002 %(hello (\"world\")) # => \"hello (\\\"world\\\")\" %[hello [\"world\"]] # => \"hello [\\\"world\\\"]\" %{hello {\"world\"}} # => \"hello {\\\"world\\\"}\" %<hello <\"world\">> # => \"hello <\\\"world\\\">\" %| hello \"world\" | # => \"hello \\\"world\\\"\" %q \u3067\u8a18\u8ff0\u3055\u308c\u308b\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u3001\u6587\u5b57\u5217\u306e\u88dc\u9593\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u53d7\u3051\u4ed8\u3051\u307e\u305b\u3093\u3002\u307e\u305f %Q \u306f % \u3068\u540c\u3058\u610f\u5473\u3092\u6301\u3061\u307e\u3059\u3002 name = \"world\" % q ( hello \\ n #{name}) # => \"hello \\\\n \\#{name}\" % Q ( hello \\ n #{name}) # => \"hello \\n world\"","title":"\u30d1\u30fc\u30bb\u30f3\u30c8\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/string.html#_4","text":"1\u3064\u306e\u6587\u5b57\u5217\u3092\u8868\u3059\u30ea\u30c6\u30e9\u30eb\u306e\u4ed6\u306b\u3001\u6587\u5b57\u5217\u306e \u914d\u5217 \u3092\u8868\u3059\u30d1\u30fc\u30bb\u30f3\u30c8\u30ea\u30c6\u30e9\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f %w \u3068\u533a\u5207\u308a\u6587\u5b57\u306e\u7d44\u306b\u3088\u3063\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\u6709\u52b9\u306a\u533a\u5207\u308a\u6587\u5b57\u306f \u30d1\u30fc\u30bb\u30f3\u30c8\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb \u306e\u3068\u304d\u3068\u540c\u3058\u3067\u3059\u3002 %w(foo bar baz) # => [\"foo\", \"bar\", \"baz\"] %w(foo\\nbar baz) # => [\"foo\\\\nbar\", \"baz\"] %w(foo(bar) baz) # => [\"foo(bar)\", \"baz\"] %w \u3067\u8a18\u8ff0\u3055\u308c\u305f\u30ea\u30c6\u30e9\u30eb\u306f\u30b9\u30da\u30fc\u30b9\u3092\u9664\u304f\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u6587\u5b57\u5217\u306e\u88dc\u9593\u3092\u53d7\u3051\u4ed8\u3051\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3082\u3061\u308d\u3093\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u305f1\u3064\u306e\u30b9\u30da\u30fc\u30b9 ( ) \u3067\u306f\u6587\u5b57\u5217\u306f\u533a\u5207\u3089\u308c\u307e\u305b\u3093\u3002 %w(foo\\ bar baz) # => [\"foo bar\", \"baz\"]","title":"\u30d1\u30fc\u30bb\u30f3\u30c8\u6587\u5b57\u5217\u914d\u5217\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/string.html#_5","text":"\u4efb\u610f\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u8907\u6570\u884c\u306b\u307e\u305f\u304c\u3063\u3066\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 \"hello world\" # => \"hello\\n world\" \u4e0a\u306e\u4f8b\u3067\u306f\u3001\u5148\u982d\u3068\u672b\u5c3e\u306e\u7a7a\u767d\u3001\u304a\u3088\u3073\u6539\u884c\u304c\u7d50\u679c\u306e\u6587\u5b57\u5217\u306b\u3082\u5165\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u884c\u6bce\u306b\u5206\u5272\u3057\u3066\u3001\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3067\u7d50\u5408\u3059\u308b\u3068\u3044\u3046\u624b\u6bb5\u3092\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \"hello \" \\ \"world, \" \\ \"no newlines\" # same as \"hello world, no newlines\" \u3082\u3057\u304f\u306f\u3001\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306b\u6539\u884c\u3092\u7d9a\u3051\u305f\u3082\u306e\u3092\u6587\u5b57\u5217\u4e2d\u306b\u8ffd\u52a0\u3059\u308b\u3001\u3068\u3044\u3046\u624b\u6bb5\u3082\u3042\u308a\u307e\u3059\u3002 \"hello \\ world, \\ no newlines\" # same as \"hello world, no newlines\" \u3053\u306e\u5834\u5408\u3001\u5148\u982d\u306e\u7a7a\u767d\u304c\u7d50\u679c\u306e\u6587\u5b57\u5217\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"\u8907\u6570\u884c\u306e\u6587\u5b57\u5217"},{"location":"syntax_and_semantics/literals/string.html#_6","text":"\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306a\u3044\u3057 heredoc \u306f\u8907\u6570\u884c\u306b\u307e\u305f\u304c\u308b\u6587\u5b57\u5217\u306e\u4fbf\u5229\u306a\u66f8\u304d\u65b9\u3067\u3059\u3002 \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f <<- \u3068\u305d\u308c\u306b\u7d9a\u304f\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3068\u6570\u5b57 (\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3082\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b) \u306e\u4e26\u3073\u306e\u8b58\u5225\u5b50\u306b\u3088\u3063\u3066\u8a18\u8ff0\u3055\u308c\u307e\u3059\u3002\u30d2\u30a2\u30c9\u30e1\u30f3\u30c8\u306f\u7d9a\u304f\u884c\u304b\u3089\u958b\u59cb\u3057\u3066\u3001\u6b21\u306e\u884c\u306b\u6700\u521d\u306b\u6307\u5b9a\u3057\u305f\u8b58\u5225\u5b50 \u306e\u307f \u3092\u542b\u3080\u884c\u3067\u7d42\u4e86\u3057\u307e\u3059\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5148\u982d\u306b\u7a7a\u767d\u6587\u5b57\u3092\u5165\u308c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 <<- XML <parent> <child /> </parent> XML \u6700\u5f8c\u306e\u884c\u306e\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8b58\u5225\u5b50\u306e\u524d\u306e\u7a7a\u767d\u306e\u500b\u6570\u5206\u3060\u3051\u3001\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5185\u5bb9\u304b\u3089\u5148\u982d\u306e\u7a7a\u767d\u6587\u5b57\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 <<- STRING # => \"Hello\\n world\" Hello world STRING <<- STRING # => \" Hello\\n world\" Hello world STRING \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8b58\u5225\u5b50\u306e\u3042\u3068\u3067\u540c\u3058\u884c\u306e\u5834\u5408\u3001\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5185\u5bb9\u306e\u524d\u306b\u4efb\u610f\u306e\u5f0f\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8b58\u5225\u5b50\u306f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u7d42\u7aef\u306e\u3088\u3046\u306b\u6a5f\u80fd\u3057\u307e\u3059\u3002\u3067\u3059\u304c\u3001\u305d\u306e\u6587\u5b57\u5217\u306e\u5185\u5bb9\u306f\u7d42\u7aef\u306e\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8b58\u5225\u5b50\u307e\u3067\u306e\u5f8c\u7d9a\u306e\u884c\u306e\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002 <<- STRING . upcase # => \"HELLO\" hello STRING def upcase ( string ) string . upcase end upcase ( <<- STRING ) # => \"HELLO WORLD\" Hello World STRING \u3082\u3057\u8907\u6570\u306e\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u540c\u3058\u884c\u3067\u958b\u59cb\u3057\u305f\u5834\u5408\u3001\u305d\u308c\u3089\u306e\u5185\u5bb9\u306f\u9010\u6b21\u7684\u306b\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 print ( <<- FIRST , <<- SECOND ) # prints \"HelloWorld\" Hello FIRST World SECOND \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e2d\u3067\u306f\u4e00\u822c\u7684\u306b\u88dc\u9593\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e2d\u3067\u88dc\u9593\u3084\u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u7981\u6b62\u3057\u305f\u3044\u5834\u5408\u3001\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5192\u982d\u306e\u8b58\u5225\u5b50\u3092\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u3063\u3066\u304f\u3060\u3055\u3044\u3002 <<- ' HERE ' # => \"hello \\\\n \\#{world}\" hello \\n #{world} HERE","title":"\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"},{"location":"syntax_and_semantics/literals/symbol.html","text":"\u30b7\u30f3\u30dc\u30eb (Symbol) Symbol \u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u4f53\u3067\u4e00\u610f\u306a\u540d\u524d\u3092\u8868\u3057\u307e\u3059\u3002 \u30b7\u30f3\u30dc\u30eb\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u89e3\u91c8\u3055\u308c\u308b\u3082\u306e\u3067\u3001\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u30b7\u30f3\u30dc\u30eb\u3092\u751f\u6210\u3059\u308b\u552f\u4e00\u306e\u65b9\u6cd5\u306f\u30b7\u30f3\u30dc\u30eb\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\u3002\u305d\u308c\u306f\u3001\u30b3\u30ed\u30f3 ( : ) \u306e\u3042\u3068\u306b\u8b58\u5225\u5b50\u3092\u7d9a\u3051\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\u8b58\u5225\u5b50\u306e\u90e8\u5206\u306f\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8 ( \" ) \u3067\u56f2\u3080\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 :unquoted_symbol :\"quoted symbol\" :\"a\" # :a \u306b\u7b49\u3057\u3044 : \u3042 \u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u307e\u308c\u305f\u8b58\u5225\u5b50\u306f\u7a7a\u767d\u3092\u542b\u3080\u4efb\u610f\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u3066\u3001 \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb \u3067\u5229\u7528\u3067\u304d\u308b\u3082\u306e\u3068\u540c\u3058\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3059\u304c\u3001\u88dc\u9593\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u307e\u308c\u3066\u3044\u306a\u3044\u8b58\u5225\u5b50\u306e\u5834\u5408\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u3057\u3066\u53d7\u3051\u5165\u308c\u3089\u308c\u308b\u3082\u306e\u3068\u540c\u3058\u898f\u5247\u306e\u540d\u524d\u304c\u53d7\u3051\u5165\u308c\u3089\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3084\u6570\u5024\u3001\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 ( _ ) \u3001\u3082\u3057\u304f\u306f 159 ( 0x9F ) \u3088\u308a\u5927\u304d\u3044\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u6587\u5b57\u3092\u30b7\u30f3\u30dc\u30eb\u306e\u8b58\u5225\u5b50\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u6570\u5b57\u304b\u3089\u8b58\u5225\u5b50\u3092\u306f\u3058\u3081\u308b\u3053\u3068\u306f\u3067\u304d\u305a\u3001\u8b58\u5225\u5b50\u306e\u6700\u5f8c\u306b\u30a8\u30af\u30b9\u30c8\u30e9\u30e1\u30fc\u30b7\u30e7\u30f3\u30de\u30fc\u30af ( ! ) \u3084\u30af\u30a8\u30b9\u30c1\u30e7\u30f3\u30de\u30fc\u30af ( ? ) \u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 :question? :exclamation! \u3059\u3079\u3066\u306e Crystal \u306e\u6f14\u7b97\u5b50 \u3082\u30b7\u30f3\u30dc\u30eb\u306e\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u308f\u308c\u3066\u3044\u306a\u3044\u8b58\u5225\u5b50\u3068\u3057\u3066\u6709\u52b9\u3067\u3059\u3002 :+ :- :* :/ :% :& :| :^ :** :>> :<< :== :!= :< :<= :> :>= :<=> :=== :[] :[]? :[]= :! :~ :!~ :=~ \u5185\u90e8\u7684\u306b\u306f\u3001\u30b7\u30f3\u30dc\u30eb\u306f Int32 \u578b\u306e\u5b9a\u6570\u5024\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u30d1\u30fc\u30bb\u30f3\u30c8\u30b7\u30f3\u30dc\u30eb\u914d\u5217\u30ea\u30c6\u30e9\u30eb Besides the single symbol literal, there is also a percent literal to create an Array of symbols. \u305d\u308c\u306f %i \u3068\u533a\u5207\u308a\u6587\u5b57\u306e\u7d44\u306b\u3088\u3063\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\u6709\u52b9\u306a\u533a\u5207\u308a\u6587\u5b57\u306f\u3001\u62ec\u5f27 () \u3001\u89d2\u62ec\u5f27 [] \u3001\u3072\u3052\u62ec\u5f27 {} \u3001\u4e09\u89d2\u62ec\u5f27 <> \u305d\u3057\u3066\u30d1\u30a4\u30d7\u6587\u5b57 || \u3067\u3059\u3002\u30d1\u30a4\u30d7\u6587\u5b57\u3092\u9664\u3044\u3066\u3001\u3059\u3079\u3066\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u30cd\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u9069\u5207\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 %i(foo bar baz) # => [:foo, :bar, :baz] %i(foo\\nbar baz) # => [:\"foo\\nbar\", :baz] %i(foo(bar) baz) # => [:\"foo(bar)\", :baz] \u8b58\u5225\u5b50\u306b\u306f\u4efb\u610f\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u500b\u3005\u306e\u30b7\u30f3\u30dc\u30eb\u306f1\u3064\u306e\u30b9\u30da\u30fc\u30b9 ( ) \u3067\u533a\u5207\u3089\u308c\u3066\u3044\u3066\u3001\u30b9\u30da\u30fc\u30b9\u30921\u3064\u306e\u90e8\u5206\u306b\u542b\u3081\u305f\u3044\u5834\u5408\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u304c\u5fc5\u8981\u3067\u3059\u3002 %i(foo\\ bar baz) # => [:\"foo bar\", :baz]","title":"\u30b7\u30f3\u30dc\u30eb (Symbol)"},{"location":"syntax_and_semantics/literals/symbol.html#symbol","text":"Symbol \u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u4f53\u3067\u4e00\u610f\u306a\u540d\u524d\u3092\u8868\u3057\u307e\u3059\u3002 \u30b7\u30f3\u30dc\u30eb\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u89e3\u91c8\u3055\u308c\u308b\u3082\u306e\u3067\u3001\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u30b7\u30f3\u30dc\u30eb\u3092\u751f\u6210\u3059\u308b\u552f\u4e00\u306e\u65b9\u6cd5\u306f\u30b7\u30f3\u30dc\u30eb\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\u3002\u305d\u308c\u306f\u3001\u30b3\u30ed\u30f3 ( : ) \u306e\u3042\u3068\u306b\u8b58\u5225\u5b50\u3092\u7d9a\u3051\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\u8b58\u5225\u5b50\u306e\u90e8\u5206\u306f\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8 ( \" ) \u3067\u56f2\u3080\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 :unquoted_symbol :\"quoted symbol\" :\"a\" # :a \u306b\u7b49\u3057\u3044 : \u3042 \u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u307e\u308c\u305f\u8b58\u5225\u5b50\u306f\u7a7a\u767d\u3092\u542b\u3080\u4efb\u610f\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u3066\u3001 \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb \u3067\u5229\u7528\u3067\u304d\u308b\u3082\u306e\u3068\u540c\u3058\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3059\u304c\u3001\u88dc\u9593\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u307e\u308c\u3066\u3044\u306a\u3044\u8b58\u5225\u5b50\u306e\u5834\u5408\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u3057\u3066\u53d7\u3051\u5165\u308c\u3089\u308c\u308b\u3082\u306e\u3068\u540c\u3058\u898f\u5247\u306e\u540d\u524d\u304c\u53d7\u3051\u5165\u308c\u3089\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3084\u6570\u5024\u3001\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 ( _ ) \u3001\u3082\u3057\u304f\u306f 159 ( 0x9F ) \u3088\u308a\u5927\u304d\u3044\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u6587\u5b57\u3092\u30b7\u30f3\u30dc\u30eb\u306e\u8b58\u5225\u5b50\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u6570\u5b57\u304b\u3089\u8b58\u5225\u5b50\u3092\u306f\u3058\u3081\u308b\u3053\u3068\u306f\u3067\u304d\u305a\u3001\u8b58\u5225\u5b50\u306e\u6700\u5f8c\u306b\u30a8\u30af\u30b9\u30c8\u30e9\u30e1\u30fc\u30b7\u30e7\u30f3\u30de\u30fc\u30af ( ! ) \u3084\u30af\u30a8\u30b9\u30c1\u30e7\u30f3\u30de\u30fc\u30af ( ? ) \u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 :question? :exclamation! \u3059\u3079\u3066\u306e Crystal \u306e\u6f14\u7b97\u5b50 \u3082\u30b7\u30f3\u30dc\u30eb\u306e\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u56f2\u308f\u308c\u3066\u3044\u306a\u3044\u8b58\u5225\u5b50\u3068\u3057\u3066\u6709\u52b9\u3067\u3059\u3002 :+ :- :* :/ :% :& :| :^ :** :>> :<< :== :!= :< :<= :> :>= :<=> :=== :[] :[]? :[]= :! :~ :!~ :=~ \u5185\u90e8\u7684\u306b\u306f\u3001\u30b7\u30f3\u30dc\u30eb\u306f Int32 \u578b\u306e\u5b9a\u6570\u5024\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u30b7\u30f3\u30dc\u30eb (Symbol)"},{"location":"syntax_and_semantics/literals/symbol.html#_1","text":"Besides the single symbol literal, there is also a percent literal to create an Array of symbols. \u305d\u308c\u306f %i \u3068\u533a\u5207\u308a\u6587\u5b57\u306e\u7d44\u306b\u3088\u3063\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\u6709\u52b9\u306a\u533a\u5207\u308a\u6587\u5b57\u306f\u3001\u62ec\u5f27 () \u3001\u89d2\u62ec\u5f27 [] \u3001\u3072\u3052\u62ec\u5f27 {} \u3001\u4e09\u89d2\u62ec\u5f27 <> \u305d\u3057\u3066\u30d1\u30a4\u30d7\u6587\u5b57 || \u3067\u3059\u3002\u30d1\u30a4\u30d7\u6587\u5b57\u3092\u9664\u3044\u3066\u3001\u3059\u3079\u3066\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u30cd\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u9069\u5207\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002 %i(foo bar baz) # => [:foo, :bar, :baz] %i(foo\\nbar baz) # => [:\"foo\\nbar\", :baz] %i(foo(bar) baz) # => [:\"foo(bar)\", :baz] \u8b58\u5225\u5b50\u306b\u306f\u4efb\u610f\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u500b\u3005\u306e\u30b7\u30f3\u30dc\u30eb\u306f1\u3064\u306e\u30b9\u30da\u30fc\u30b9 ( ) \u3067\u533a\u5207\u3089\u308c\u3066\u3044\u3066\u3001\u30b9\u30da\u30fc\u30b9\u30921\u3064\u306e\u90e8\u5206\u306b\u542b\u3081\u305f\u3044\u5834\u5408\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u304c\u5fc5\u8981\u3067\u3059\u3002 %i(foo\\ bar baz) # => [:\"foo bar\", :baz]","title":"\u30d1\u30fc\u30bb\u30f3\u30c8\u30b7\u30f3\u30dc\u30eb\u914d\u5217\u30ea\u30c6\u30e9\u30eb"},{"location":"syntax_and_semantics/literals/tuple.html","text":"\u30bf\u30d7\u30eb (Tuple) Tuple \u306f\u901a\u5e38\u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u306b\u3088\u308a\u751f\u6210\u3057\u307e\u3059\u3002 tuple = { 1 , \"hello\" , 'x' } # Tuple(Int32, String, Char) tuple [ 0 ] # => 1 (Int32) tuple [ 1 ] # => \"hello\" (String) tuple [ 2 ] # => 'x' (Char) \u7a7a\u306e\u30bf\u30d7\u30eb\u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u306f\u3001 Tuple.new \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30bf\u30d7\u30eb\u306e\u578b\u306f\u6b21\u306e\u3088\u3046\u3057\u3066\u66f8\u3051\u307e\u3059\u3002 # Int32\u3001String\u3001Char \u306e\u30bf\u30d7\u30eb\u306e\u578b\u3092\u8868\u3059 Tuple ( Int32 , String , Char ) \u578b\u5236\u7d04\u3084\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u578b\u5f15\u6570\u306a\u3069\u578b\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u6240\u3067\u3042\u308c\u3070\u3001 \u578b\u306e\u6587\u6cd5 \u3067\u8aac\u660e\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u77ed\u3044\u8a18\u6cd5\u3067\u578b\u3092\u66f8\u3051\u307e\u3059\u3002 # Int32\u3001String\u3001Char \u306e\u30bf\u30d7\u30eb\u306e\u914d\u5217\u306e\u578b\u3092\u8868\u3059 Array ({ Int32 , String , Char })","title":"\u30bf\u30d7\u30eb (Tuple)"},{"location":"syntax_and_semantics/literals/tuple.html#tuple","text":"Tuple \u306f\u901a\u5e38\u30bf\u30d7\u30eb\u30ea\u30c6\u30e9\u30eb\u306b\u3088\u308a\u751f\u6210\u3057\u307e\u3059\u3002 tuple = { 1 , \"hello\" , 'x' } # Tuple(Int32, String, Char) tuple [ 0 ] # => 1 (Int32) tuple [ 1 ] # => \"hello\" (String) tuple [ 2 ] # => 'x' (Char) \u7a7a\u306e\u30bf\u30d7\u30eb\u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u306f\u3001 Tuple.new \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30bf\u30d7\u30eb\u306e\u578b\u306f\u6b21\u306e\u3088\u3046\u3057\u3066\u66f8\u3051\u307e\u3059\u3002 # Int32\u3001String\u3001Char \u306e\u30bf\u30d7\u30eb\u306e\u578b\u3092\u8868\u3059 Tuple ( Int32 , String , Char ) \u578b\u5236\u7d04\u3084\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306e\u578b\u5f15\u6570\u306a\u3069\u578b\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u6240\u3067\u3042\u308c\u3070\u3001 \u578b\u306e\u6587\u6cd5 \u3067\u8aac\u660e\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u77ed\u3044\u8a18\u6cd5\u3067\u578b\u3092\u66f8\u3051\u307e\u3059\u3002 # Int32\u3001String\u3001Char \u306e\u30bf\u30d7\u30eb\u306e\u914d\u5217\u306e\u578b\u3092\u8868\u3059 Array ({ Int32 , String , Char })","title":"\u30bf\u30d7\u30eb (Tuple)"},{"location":"syntax_and_semantics/macros/index.html","text":"\u30de\u30af\u30ed \u30de\u30af\u30ed\u3068\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b AST \u30ce\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u308a\u3001\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3066\u305d\u308c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u66f8\u304d\u8fbc\u3080\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 macro define_method ( name , content ) def {{ name }} {{ content }} end end # \u3053\u308c\u3067\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002 # # def foo # 1 # end define_method foo , 1 foo # => 1 \u30de\u30af\u30ed\u5b9a\u7fa9\u306e\u672c\u4f53\u306f\u307b\u307c\u901a\u5e38\u306e Crystal \u30b3\u30fc\u30c9\u3067\u3059\u304c\u3001AST \u30ce\u30fc\u30c9\u3092\u6271\u3046\u305f\u3081\u306e\u62e1\u5f35\u3055\u308c\u305f\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f\u6b63\u3057\u3044 Crystal \u30b3\u30fc\u30c9\u3067\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u5bfe\u5fdc\u3059\u308b end \u306e\u7121\u3044 def \u3084\u3001 case \u5f0f\u306e when \u90e8\u5206\u3060\u3051\u306e\u3082\u306e\u306a\u3069\u306f\u3001\u5b8c\u5168\u306a\u5f0f\u3068\u3057\u3066\u6b63\u3057\u3044\u3082\u306e\u3067\u306f\u306a\u3044\u306e\u3067\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u8a73\u3057\u304f\u306f \u843d\u3068\u3057\u7a74 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30b9\u30b3\u30fc\u30d7 \u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3067\u5ba3\u8a00\u3055\u308c\u305f\u30de\u30af\u30ed\u306f\u3069\u3053\u304b\u3089\u3067\u3082\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u3059\u3002\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30de\u30af\u30ed\u304c private \u6307\u5b9a\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u30af\u30e9\u30b9\u3084\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u308c\u306f\u305d\u306e\u30b9\u30b3\u30fc\u30d7\u5185\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30de\u30af\u30ed\u306f\u7d99\u627f\u30c1\u30a7\u30fc\u30f3 (\u30b9\u30fc\u30d1\u30af\u30e9\u30b9\u3068\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb) \u304b\u3089\u3082\u63a2\u7d22\u3055\u308c\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u30d6\u30ed\u30c3\u30af\u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u3066\u3001 with ... yield \u306b\u3088\u3063\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ec\u30b7\u30fc\u30d0\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306b\u306f\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7d99\u627f\u30c1\u30a7\u30fc\u30f3\u306e\u4e2d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30de\u30af\u30ed\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class Foo macro emphasize ( value ) \"*** #{ {{ value }} } ***\" end def yield_with_self with self yield end end Foo . new . yield_with_self { emphasize ( 10 ) } # => \"***10***\" \u30af\u30e9\u30b9\u3084\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30de\u30af\u30ed\u3092\u3001\u305d\u306e\u5916\u5074\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 class Foo macro emphasize ( value ) \"*** #{ {{ value }} } ***\" end end Foo . emphasize ( 10 ) # => \"***10***\" \u6587\u5b57\u5217\u306e\u88dc\u9593 \u524d\u8ff0\u3057\u305f\u4f8b\u306b\u3082\u3042\u3063\u305f\u3088\u3046\u306b\u3001AST \u30ce\u30fc\u30c9\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u3001\u3082\u3057\u304f\u306f\u57cb\u3081\u8fbc\u3080\u306b\u306f {{...}} \u3092\u4f7f\u3044\u307e\u3059\u3002 \u30ce\u30fc\u30c9\u306f\u300c\u305d\u306e\u307e\u307e\u300d\u8cbc\u308a\u4ed8\u3051\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3082\u3057\u3001\u4e0a\u8a18\u306e\u4f8b\u3067\u30b7\u30f3\u30dc\u30eb\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f\u4e0d\u6b63\u306a\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002 # \u3053\u308c\u3067\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u307e\u3059: # # def :foo # 1 # end define_method :foo , 1 \u30de\u30af\u30ed\u306b\u6e21\u3055\u308c\u305f\u3082\u306e\u304c\u305d\u306e\u307e\u307e\u57cb\u3081\u8fbc\u307e\u308c\u308b\u306e\u3067\u3001\u7d50\u679c\u306f :foo \u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3044\u3063\u305f\u3001\u8b58\u5225\u5b50\u3092\u5fc5\u8981\u3068\u3059\u308b\u5834\u5408\u306b\u306f ASTNode#id \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u30de\u30af\u30ed\u306b\u304a\u3051\u308b\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057 \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u306e \u65e2\u5b9a\u306e\u30b5\u30d6\u30bb\u30c3\u30c8 \u3092 AST \u30ce\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u306f Crystal::Macros \u3068\u3044\u3046\u30d5\u30a7\u30a4\u30af\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u4e0a\u306e\u4f8b\u3067\u306f ASTNode#id \u3092\u547c\u3073a\u51fa\u3059\u3053\u3068\u3067\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002 macro define_method ( name , content ) def {{ name . id }} {{ content }} end end # \u4ee5\u4e0b\u304c\u6b63\u3057\u304f\u751f\u6210\u3055\u308c\u308b: # # def foo # 1 # end define_method :foo , 1 \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u30af\u30e9\u30b9 \u30e2\u30b8\u30e5\u30fc\u30eb\u3084\u30af\u30e9\u30b9\u3001\u69cb\u9020\u4f53\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 macro define_class ( module_name , class_name , method , content ) module {{ module_name }} class {{ class_name }} def initialize ( @name : String ) end def {{ method }} {{ content }} + @name end end end end # \u3053\u308c\u3067\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u308b: # module Foo # class Bar # def initialize(@name : String) # end # # def say # \"hi \" + @name # end # end # end define_class Foo , Bar , say , \"hi \" p Foo :: Bar . new ( \"John\" ) . say # => \"hi John\" \u6761\u4ef6\u5206\u5c90 {% if condition %} ... {% end %} \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 macro define_method ( name , content ) def {{ name }} {% if content == 1 %} \"one\" {% elsif content == 2 %} \"two\" {% else %} {{ content }} {% end %} end end define_method foo , 1 define_method bar , 2 define_method baz , 3 foo # => one bar # => two baz # => 3 \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u3068\u540c\u69d8\u306b\u3001 Nop \u3068 NilLiteral \u3001\u305d\u3057\u3066\u507d\u306e BoolLiteral \u306f \u507d\u3068\u306a\u308a \u3001\u305d\u308c\u4ee5\u5916\u306f\u3059\u3079\u3066 \u771f\u3068\u306a\u308a \u307e\u3059\u3002 \u30de\u30af\u30ed\u306e\u6761\u4ef6\u5206\u5c90\u306f\u3001\u30de\u30af\u30ed\u306e\u5916\u5074\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 {% if env ( \"TEST\" ) %} puts \"We are in test mode\" {% end %} \u7e70\u308a\u8fd4\u3057 \u6709\u9650\u56de\u306e\u7e70\u308a\u8fd4\u3057\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 macro define_constants ( count ) {% for i in ( 1 .. count ) %} PI_ {{ i . id }} = Math :: PI * {{ i }} {% end %} end define_constants ( 3 ) PI_1 # => 3.14159... PI_2 # => 6.28318... PI_3 # => 9.42477... ArrayLiteral \u3092\u7e70\u308a\u8fd4\u3059\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 macro define_dummy_methods ( names ) {% for name , index in names %} def {{ name . id }} {{ index }} end {% end %} end define_dummy_methods [ foo , bar , baz ] foo # => 0 bar # => 1 baz # => 2 \u4e0a\u8a18\u306e index \u5909\u6570\u306f\u4efb\u610f\u3067\u3059\u3002 HashLiteral \u3092\u7e70\u308a\u8fd4\u3059\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 macro define_dummy_methods ( hash ) {% for key , value in hash %} def {{ key . id }} {{ value }} end {% end %} end define_dummy_methods ({ foo : 10 , bar : 20 }) foo # => 10 bar # => 20 \u30de\u30af\u30ed\u306e\u7e70\u308a\u8fd4\u3057\u69cb\u6587\u306f\u3001\u30de\u30af\u30ed\u306e\u5916\u5074\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 {% for name , index in [ \"foo\" , \"bar\" , \"baz\" ] %} def {{ name . id }} {{ index }} end {% end %} foo # => 0 bar # => 1 baz # => 2 \u53ef\u5909\u9577\u5f15\u6570\u3068\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b \u30de\u30af\u30ed\u306f\u53ef\u5909\u9577\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 macro define_dummy_methods ( * names ) {% for name , index in names %} def {{ name . id }} {{ index }} end {% end %} end define_dummy_methods foo , bar , baz foo # => 0 bar # => 1 baz # => 2 \u5f15\u6570\u306f TupleLiteral \u306b\u5909\u63db\u3055\u308c\u3066\u30de\u30af\u30ed\u306b\u6e21\u3055\u308c\u307e\u3059\u3002 \u3055\u3089\u306b\u3001 TupleLiteral \u3092\u57cb\u3081\u8fbc\u3080\u969b\u306b * \u3092\u4f7f\u3046\u3068\u3001\u8981\u7d20\u304c\u30ab\u30f3\u30de\u533a\u5207\u308a\u306e\u3082\u306e\u3068\u3057\u3066\u57cb\u3081\u8fbc\u307e\u308c\u307e\u3059\u3002 macro println ( * values ) print {{ * values }} , '\\n' end println 1 , 2 , 3 # outputs 123\\n \u578b\u306e\u60c5\u5831 \u30de\u30af\u30ed\u304c\u5b9f\u884c\u3055\u308c\u308b\u969b\u306b\u3001 @type \u3068\u3044\u3046\u9805\u5225\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u73fe\u5728\u306e\u30b9\u30b3\u30fc\u30d7\u3001\u3082\u3057\u304f\u306f\u578b\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u3053\u306e\u5909\u6570\u306e\u578b\u306f TypeNode \u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 @type \u306f\u5e38\u306b (\u3082\u3057\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u5b9f\u884c\u3055\u308c\u305f\u3068\u3057\u3066\u3082) \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \u306e\u578b\u306b\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 macro add_describe_methods def describe \"Class is: \" + {{ @type . stringify }} end def self . describe \"Class is: \" + {{ @type . stringify }} end end class Foo add_describe_methods end Foo . new . describe # => \"Class is Foo\" Foo . describe # => \"Class is Foo\" \u30e1\u30bd\u30c3\u30c9\u306e\u60c5\u5831 \u30de\u30af\u30ed\u304c\u5b9f\u884c\u3055\u308c\u308b\u969b\u306b\u3001 @def \u3068\u3044\u3046\u7279\u5225\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u3001\u3082\u3057\u304f\u306f\u30de\u30af\u30ed\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u3053\u306e\u5909\u6570\u306e\u578b\u306f Def \u3067\u3001\u3082\u3057\u30de\u30af\u30ed\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u5916\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306f NilLiteral \u3068\u306a\u308a\u307e\u3059\u3002 \u4f8b: module Foo def Foo . boo ( arg1 , arg2 ) {% @def . receiver %} # => Foo {% @def . name %} # => boo {% @def . args %} # => [arg1, arg2] end end Foo . boo ( 0 , 1 ) \u5b9a\u6570 \u30de\u30af\u30ed\u306f\u5b9a\u6570\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 VALUES = [ 1 , 2 , 3 ] {% for value in VALUES %} puts {{ value }} {% end %} \u3082\u3057\u5b9a\u6570\u304c\u578b\u3092\u793a\u3057\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u3068\u304d\u5f97\u3089\u308c\u308b\u306e\u306f TypeNode \u3068\u306a\u308a\u307e\u3059\u3002 \u30cd\u30b9\u30c8\u3057\u305f\u30de\u30af\u30ed \u3044\u304f\u3064\u304b\u306e\u30de\u30af\u30ed\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306a\u30de\u30af\u30ed\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u5185\u5074\u306e\u30de\u30af\u30ed\u304c\u5916\u5074\u306e\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u8a55\u4fa1\u3055\u308c\u308b\u306e\u3092\u9632\u3050\u305f\u3081\u3001\u30d0\u30c3\u30af\u30e9\u30c3\u30b7\u30e5\u3067\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 macro define_macros ( * names ) {% for name in names %} macro greeting_for_ {{ name . id }} ( greeting ) \\ {% if greeting == \"hola\" %} \"\u00a1hola {{name.id}}!\" \\ {% else %} \"\\{{greeting.id}} {{name.id}}\" \\ {% end %} end {% end %} end # \u3053\u308c\u306f\u4ee5\u4e0b\u3092\u751f\u6210\u3057\u307e\u3059: # # macro greeting_for_alice # {% if greeting == \"hola\" %} # \"\u00a1hola alice!\" # {% else %} # \"{{greeting.id}} alice\" # {% end %} # end # macro greeting_for_bob # {% if greeting == \"hola\" %} # \"\u00a1hola bob!\" # {% else %} # \"{{greeting.id}} bob\" # {% end %} # end define_macros alice , bob greeting_for_alice \"hello\" # => \"hello alice\" greeting_for_bob \"hallo\" # => \"hallo bob\" greeting_for_alice \"hej\" # => \"hej alice\" greeting_for_bob \"hola\" # => \"\u00a1hola bob!\" verbatim \u30cd\u30b9\u30c8\u3057\u305f\u30de\u30af\u30ed\u3092\u5b9a\u7fa9\u3059\u308b\u4ed6\u306e\u65b9\u6cd5\u3068\u3057\u3066\u306f\u3001 verbatim \u3068\u3044\u3046\u7279\u5225\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u5185\u5074\u306e\u30de\u30af\u30ed\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002 macro define_macros ( * names ) {% for name in names %} macro greeting_for_ {{ name . id }} ( greeting ) # name \u306f verbatim \u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u306f\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093 \\ {% name = {{ name . stringify }} %} {% verbatim do %} {% if greeting == \"hola\" %} \"\u00a1hola {{name.id}}!\" {% else %} \"{{greeting.id}} {{name.id}}\" {% end %} {% end %} end {% end %} end # \u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002 # # macro greeting_for_alice # {% name = \"alice\" %} # {% if greeting == \"hola\" %} # \"\u00a1hola alice!\" # {% else %} # \"{{greeting.id}} alice\" # {% end %} # end # macro greeting_for_bob # {% name = \"bob\" %} # {% if greeting == \"hola\" %} # \"\u00a1hola bob!\" # {% else %} # \"{{greeting.id}} bob\" # {% end %} # end define_macros alice , bob greeting_for_alice \"hello\" # => \"hello alice\" greeting_for_bob \"hallo\" # => \"hallo bob\" greeting_for_alice \"hej\" # => \"hej alice\" greeting_for_bob \"hola\" # => \"\u00a1hola bob!\" \u5185\u5074\u306e\u30de\u30af\u30ed\u306e\u5909\u6570\u306f verbatim \u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u306f\u6709\u52b9\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u8eab\u306f\u300c\u305d\u306e\u307e\u307e\u300d\u6587\u5b57\u5217\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6e21\u3055\u308c\u3001\u518d\u5ea6\u691c\u67fb\u3055\u308c\u307e\u3059\u3002 \u30b3\u30e1\u30f3\u30c8 \u30b3\u30e1\u30f3\u30c8\u4e2d\u306e\u30de\u30af\u30ed\u306e\u5f0f\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u30b3\u30fc\u30c9\u3068\u540c\u69d8\u306b\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u95a2\u4fc2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b3\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u4f7f\u3048\u307e\u3059\u3002 {% for name , index in [ \"foo\" , \"bar\" , \"baz\" ] %} # Provides a placeholder {{name.id}} method. Always returns {{index}}. def {{ name . id }} {{ index }} end {% end %} \u3053\u306e\u8a55\u4fa1\u306f\u57cb\u3081\u8fbc\u307f\u3060\u3051\u3067\u306a\u304f\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306b\u5bfe\u3057\u3066\u3082\u306f\u305f\u3089\u304d\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u3001\u30de\u30af\u30ed\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 macro a # {% if false %} puts 42 # {% end %} end a \u4e0a\u8a18\u306e\u5f0f\u306f\u4f55\u3082\u51fa\u529b\u3057\u306a\u3044\u3067\u3057\u3087\u3046\u3002 \u843d\u3068\u3057\u7a74 \u30de\u30af\u30ed\u3092\u66f8\u304f\u969b (\u3068\u304f\u306b\u30de\u30af\u30ed\u5b9a\u7fa9\u306e\u5916\u3067)\u3001\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f\u3001\u30e1\u30a4\u30f3\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30fc\u30c9\u306b\u30de\u30fc\u30b8\u3055\u308c\u308b\u524d\u304b\u3089\u3001\u305d\u308c\u81ea\u8eab\u3068\u3057\u3066\u6709\u52b9\u306a\u30b3\u30fc\u30c9\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3092\u899a\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u8981\u3059\u308b\u306b\u3001\u4f8b\u3048\u3070\u3001\u30de\u30af\u30ed\u306f\u5192\u982d\u306e case \u304c\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a case \u5f0f\u306e when \u7bc0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u6b21\u304c\u3001\u305d\u306e\u3088\u3046\u306a\u7121\u52b9\u306a\u30de\u30af\u30ed\u306e\u4f8b\u306b\u306a\u308a\u307e\u3059\u3002 case 42 {% for klass in [ Int32 , String ] %} # Syntax Error: unexpected token: {% (expecting when, else or end) when {{ klass . id }} p \"is {{klass}}\" {% end %} end case \u304c\u30de\u30af\u30ed\u306e\u5916\u5074\u306b\u3042\u308b\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f2\u3064\u306e\u5b64\u7acb\u3057\u305f when \u7bc0\u304b\u3089\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u6709\u52b9\u306a Crystal \u306e\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 case \u3092\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u30b3\u30fc\u30c9\u306b\u542b\u3081\u308b\u305f\u3081\u306b\u3001 begin \u3068 end \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 {% begin %} case 42 {% for klass in [ Int32 , String ] %} when {{ klass . id }} p \"is {{klass}}\" {% end %} end {% end %}","title":"\u30de\u30af\u30ed"},{"location":"syntax_and_semantics/macros/index.html#_1","text":"\u30de\u30af\u30ed\u3068\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b AST \u30ce\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u308a\u3001\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3066\u305d\u308c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u66f8\u304d\u8fbc\u3080\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 macro define_method ( name , content ) def {{ name }} {{ content }} end end # \u3053\u308c\u3067\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002 # # def foo # 1 # end define_method foo , 1 foo # => 1 \u30de\u30af\u30ed\u5b9a\u7fa9\u306e\u672c\u4f53\u306f\u307b\u307c\u901a\u5e38\u306e Crystal \u30b3\u30fc\u30c9\u3067\u3059\u304c\u3001AST \u30ce\u30fc\u30c9\u3092\u6271\u3046\u305f\u3081\u306e\u62e1\u5f35\u3055\u308c\u305f\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f\u6b63\u3057\u3044 Crystal \u30b3\u30fc\u30c9\u3067\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u5bfe\u5fdc\u3059\u308b end \u306e\u7121\u3044 def \u3084\u3001 case \u5f0f\u306e when \u90e8\u5206\u3060\u3051\u306e\u3082\u306e\u306a\u3069\u306f\u3001\u5b8c\u5168\u306a\u5f0f\u3068\u3057\u3066\u6b63\u3057\u3044\u3082\u306e\u3067\u306f\u306a\u3044\u306e\u3067\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u8a73\u3057\u304f\u306f \u843d\u3068\u3057\u7a74 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30de\u30af\u30ed"},{"location":"syntax_and_semantics/macros/index.html#_2","text":"\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3067\u5ba3\u8a00\u3055\u308c\u305f\u30de\u30af\u30ed\u306f\u3069\u3053\u304b\u3089\u3067\u3082\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u3059\u3002\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30de\u30af\u30ed\u304c private \u6307\u5b9a\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u30af\u30e9\u30b9\u3084\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u308c\u306f\u305d\u306e\u30b9\u30b3\u30fc\u30d7\u5185\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30de\u30af\u30ed\u306f\u7d99\u627f\u30c1\u30a7\u30fc\u30f3 (\u30b9\u30fc\u30d1\u30af\u30e9\u30b9\u3068\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb) \u304b\u3089\u3082\u63a2\u7d22\u3055\u308c\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u30d6\u30ed\u30c3\u30af\u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u3066\u3001 with ... yield \u306b\u3088\u3063\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ec\u30b7\u30fc\u30d0\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306b\u306f\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7d99\u627f\u30c1\u30a7\u30fc\u30f3\u306e\u4e2d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30de\u30af\u30ed\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 class Foo macro emphasize ( value ) \"*** #{ {{ value }} } ***\" end def yield_with_self with self yield end end Foo . new . yield_with_self { emphasize ( 10 ) } # => \"***10***\" \u30af\u30e9\u30b9\u3084\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30de\u30af\u30ed\u3092\u3001\u305d\u306e\u5916\u5074\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 class Foo macro emphasize ( value ) \"*** #{ {{ value }} } ***\" end end Foo . emphasize ( 10 ) # => \"***10***\"","title":"\u30b9\u30b3\u30fc\u30d7"},{"location":"syntax_and_semantics/macros/index.html#_3","text":"\u524d\u8ff0\u3057\u305f\u4f8b\u306b\u3082\u3042\u3063\u305f\u3088\u3046\u306b\u3001AST \u30ce\u30fc\u30c9\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u3001\u3082\u3057\u304f\u306f\u57cb\u3081\u8fbc\u3080\u306b\u306f {{...}} \u3092\u4f7f\u3044\u307e\u3059\u3002 \u30ce\u30fc\u30c9\u306f\u300c\u305d\u306e\u307e\u307e\u300d\u8cbc\u308a\u4ed8\u3051\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3082\u3057\u3001\u4e0a\u8a18\u306e\u4f8b\u3067\u30b7\u30f3\u30dc\u30eb\u3092\u6e21\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f\u4e0d\u6b63\u306a\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002 # \u3053\u308c\u3067\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u307e\u3059: # # def :foo # 1 # end define_method :foo , 1 \u30de\u30af\u30ed\u306b\u6e21\u3055\u308c\u305f\u3082\u306e\u304c\u305d\u306e\u307e\u307e\u57cb\u3081\u8fbc\u307e\u308c\u308b\u306e\u3067\u3001\u7d50\u679c\u306f :foo \u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3044\u3063\u305f\u3001\u8b58\u5225\u5b50\u3092\u5fc5\u8981\u3068\u3059\u308b\u5834\u5408\u306b\u306f ASTNode#id \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002","title":"\u6587\u5b57\u5217\u306e\u88dc\u9593"},{"location":"syntax_and_semantics/macros/index.html#_4","text":"\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u306e \u65e2\u5b9a\u306e\u30b5\u30d6\u30bb\u30c3\u30c8 \u3092 AST \u30ce\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u306f Crystal::Macros \u3068\u3044\u3046\u30d5\u30a7\u30a4\u30af\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u4e0a\u306e\u4f8b\u3067\u306f ASTNode#id \u3092\u547c\u3073a\u51fa\u3059\u3053\u3068\u3067\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002 macro define_method ( name , content ) def {{ name . id }} {{ content }} end end # \u4ee5\u4e0b\u304c\u6b63\u3057\u304f\u751f\u6210\u3055\u308c\u308b: # # def foo # 1 # end define_method :foo , 1","title":"\u30de\u30af\u30ed\u306b\u304a\u3051\u308b\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057"},{"location":"syntax_and_semantics/macros/index.html#_5","text":"\u30e2\u30b8\u30e5\u30fc\u30eb\u3084\u30af\u30e9\u30b9\u3001\u69cb\u9020\u4f53\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 macro define_class ( module_name , class_name , method , content ) module {{ module_name }} class {{ class_name }} def initialize ( @name : String ) end def {{ method }} {{ content }} + @name end end end end # \u3053\u308c\u3067\u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u308b: # module Foo # class Bar # def initialize(@name : String) # end # # def say # \"hi \" + @name # end # end # end define_class Foo , Bar , say , \"hi \" p Foo :: Bar . new ( \"John\" ) . say # => \"hi John\"","title":"\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u30af\u30e9\u30b9"},{"location":"syntax_and_semantics/macros/index.html#_6","text":"{% if condition %} ... {% end %} \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 macro define_method ( name , content ) def {{ name }} {% if content == 1 %} \"one\" {% elsif content == 2 %} \"two\" {% else %} {{ content }} {% end %} end end define_method foo , 1 define_method bar , 2 define_method baz , 3 foo # => one bar # => two baz # => 3 \u901a\u5e38\u306e\u30b3\u30fc\u30c9\u3068\u540c\u69d8\u306b\u3001 Nop \u3068 NilLiteral \u3001\u305d\u3057\u3066\u507d\u306e BoolLiteral \u306f \u507d\u3068\u306a\u308a \u3001\u305d\u308c\u4ee5\u5916\u306f\u3059\u3079\u3066 \u771f\u3068\u306a\u308a \u307e\u3059\u3002 \u30de\u30af\u30ed\u306e\u6761\u4ef6\u5206\u5c90\u306f\u3001\u30de\u30af\u30ed\u306e\u5916\u5074\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 {% if env ( \"TEST\" ) %} puts \"We are in test mode\" {% end %}","title":"\u6761\u4ef6\u5206\u5c90"},{"location":"syntax_and_semantics/macros/index.html#_7","text":"\u6709\u9650\u56de\u306e\u7e70\u308a\u8fd4\u3057\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 macro define_constants ( count ) {% for i in ( 1 .. count ) %} PI_ {{ i . id }} = Math :: PI * {{ i }} {% end %} end define_constants ( 3 ) PI_1 # => 3.14159... PI_2 # => 6.28318... PI_3 # => 9.42477... ArrayLiteral \u3092\u7e70\u308a\u8fd4\u3059\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 macro define_dummy_methods ( names ) {% for name , index in names %} def {{ name . id }} {{ index }} end {% end %} end define_dummy_methods [ foo , bar , baz ] foo # => 0 bar # => 1 baz # => 2 \u4e0a\u8a18\u306e index \u5909\u6570\u306f\u4efb\u610f\u3067\u3059\u3002 HashLiteral \u3092\u7e70\u308a\u8fd4\u3059\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 macro define_dummy_methods ( hash ) {% for key , value in hash %} def {{ key . id }} {{ value }} end {% end %} end define_dummy_methods ({ foo : 10 , bar : 20 }) foo # => 10 bar # => 20 \u30de\u30af\u30ed\u306e\u7e70\u308a\u8fd4\u3057\u69cb\u6587\u306f\u3001\u30de\u30af\u30ed\u306e\u5916\u5074\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 {% for name , index in [ \"foo\" , \"bar\" , \"baz\" ] %} def {{ name . id }} {{ index }} end {% end %} foo # => 0 bar # => 1 baz # => 2","title":"\u7e70\u308a\u8fd4\u3057"},{"location":"syntax_and_semantics/macros/index.html#_8","text":"\u30de\u30af\u30ed\u306f\u53ef\u5909\u9577\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 macro define_dummy_methods ( * names ) {% for name , index in names %} def {{ name . id }} {{ index }} end {% end %} end define_dummy_methods foo , bar , baz foo # => 0 bar # => 1 baz # => 2 \u5f15\u6570\u306f TupleLiteral \u306b\u5909\u63db\u3055\u308c\u3066\u30de\u30af\u30ed\u306b\u6e21\u3055\u308c\u307e\u3059\u3002 \u3055\u3089\u306b\u3001 TupleLiteral \u3092\u57cb\u3081\u8fbc\u3080\u969b\u306b * \u3092\u4f7f\u3046\u3068\u3001\u8981\u7d20\u304c\u30ab\u30f3\u30de\u533a\u5207\u308a\u306e\u3082\u306e\u3068\u3057\u3066\u57cb\u3081\u8fbc\u307e\u308c\u307e\u3059\u3002 macro println ( * values ) print {{ * values }} , '\\n' end println 1 , 2 , 3 # outputs 123\\n","title":"\u53ef\u5909\u9577\u5f15\u6570\u3068\u30b9\u30d7\u30e9\u30c3\u30c8\u5c55\u958b"},{"location":"syntax_and_semantics/macros/index.html#_9","text":"\u30de\u30af\u30ed\u304c\u5b9f\u884c\u3055\u308c\u308b\u969b\u306b\u3001 @type \u3068\u3044\u3046\u9805\u5225\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u73fe\u5728\u306e\u30b9\u30b3\u30fc\u30d7\u3001\u3082\u3057\u304f\u306f\u578b\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u3053\u306e\u5909\u6570\u306e\u578b\u306f TypeNode \u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 @type \u306f\u5e38\u306b (\u3082\u3057\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u5b9f\u884c\u3055\u308c\u305f\u3068\u3057\u3066\u3082) \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \u306e\u578b\u306b\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 macro add_describe_methods def describe \"Class is: \" + {{ @type . stringify }} end def self . describe \"Class is: \" + {{ @type . stringify }} end end class Foo add_describe_methods end Foo . new . describe # => \"Class is Foo\" Foo . describe # => \"Class is Foo\"","title":"\u578b\u306e\u60c5\u5831"},{"location":"syntax_and_semantics/macros/index.html#_10","text":"\u30de\u30af\u30ed\u304c\u5b9f\u884c\u3055\u308c\u308b\u969b\u306b\u3001 @def \u3068\u3044\u3046\u7279\u5225\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u3001\u3082\u3057\u304f\u306f\u30de\u30af\u30ed\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u3053\u306e\u5909\u6570\u306e\u578b\u306f Def \u3067\u3001\u3082\u3057\u30de\u30af\u30ed\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u5916\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306f NilLiteral \u3068\u306a\u308a\u307e\u3059\u3002 \u4f8b: module Foo def Foo . boo ( arg1 , arg2 ) {% @def . receiver %} # => Foo {% @def . name %} # => boo {% @def . args %} # => [arg1, arg2] end end Foo . boo ( 0 , 1 )","title":"\u30e1\u30bd\u30c3\u30c9\u306e\u60c5\u5831"},{"location":"syntax_and_semantics/macros/index.html#_11","text":"\u30de\u30af\u30ed\u306f\u5b9a\u6570\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 VALUES = [ 1 , 2 , 3 ] {% for value in VALUES %} puts {{ value }} {% end %} \u3082\u3057\u5b9a\u6570\u304c\u578b\u3092\u793a\u3057\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u3068\u304d\u5f97\u3089\u308c\u308b\u306e\u306f TypeNode \u3068\u306a\u308a\u307e\u3059\u3002","title":"\u5b9a\u6570"},{"location":"syntax_and_semantics/macros/index.html#_12","text":"\u3044\u304f\u3064\u304b\u306e\u30de\u30af\u30ed\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306a\u30de\u30af\u30ed\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u5185\u5074\u306e\u30de\u30af\u30ed\u304c\u5916\u5074\u306e\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u8a55\u4fa1\u3055\u308c\u308b\u306e\u3092\u9632\u3050\u305f\u3081\u3001\u30d0\u30c3\u30af\u30e9\u30c3\u30b7\u30e5\u3067\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 macro define_macros ( * names ) {% for name in names %} macro greeting_for_ {{ name . id }} ( greeting ) \\ {% if greeting == \"hola\" %} \"\u00a1hola {{name.id}}!\" \\ {% else %} \"\\{{greeting.id}} {{name.id}}\" \\ {% end %} end {% end %} end # \u3053\u308c\u306f\u4ee5\u4e0b\u3092\u751f\u6210\u3057\u307e\u3059: # # macro greeting_for_alice # {% if greeting == \"hola\" %} # \"\u00a1hola alice!\" # {% else %} # \"{{greeting.id}} alice\" # {% end %} # end # macro greeting_for_bob # {% if greeting == \"hola\" %} # \"\u00a1hola bob!\" # {% else %} # \"{{greeting.id}} bob\" # {% end %} # end define_macros alice , bob greeting_for_alice \"hello\" # => \"hello alice\" greeting_for_bob \"hallo\" # => \"hallo bob\" greeting_for_alice \"hej\" # => \"hej alice\" greeting_for_bob \"hola\" # => \"\u00a1hola bob!\"","title":"\u30cd\u30b9\u30c8\u3057\u305f\u30de\u30af\u30ed"},{"location":"syntax_and_semantics/macros/index.html#verbatim","text":"\u30cd\u30b9\u30c8\u3057\u305f\u30de\u30af\u30ed\u3092\u5b9a\u7fa9\u3059\u308b\u4ed6\u306e\u65b9\u6cd5\u3068\u3057\u3066\u306f\u3001 verbatim \u3068\u3044\u3046\u7279\u5225\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u5185\u5074\u306e\u30de\u30af\u30ed\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002 macro define_macros ( * names ) {% for name in names %} macro greeting_for_ {{ name . id }} ( greeting ) # name \u306f verbatim \u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u306f\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093 \\ {% name = {{ name . stringify }} %} {% verbatim do %} {% if greeting == \"hola\" %} \"\u00a1hola {{name.id}}!\" {% else %} \"{{greeting.id}} {{name.id}}\" {% end %} {% end %} end {% end %} end # \u4ee5\u4e0b\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002 # # macro greeting_for_alice # {% name = \"alice\" %} # {% if greeting == \"hola\" %} # \"\u00a1hola alice!\" # {% else %} # \"{{greeting.id}} alice\" # {% end %} # end # macro greeting_for_bob # {% name = \"bob\" %} # {% if greeting == \"hola\" %} # \"\u00a1hola bob!\" # {% else %} # \"{{greeting.id}} bob\" # {% end %} # end define_macros alice , bob greeting_for_alice \"hello\" # => \"hello alice\" greeting_for_bob \"hallo\" # => \"hallo bob\" greeting_for_alice \"hej\" # => \"hej alice\" greeting_for_bob \"hola\" # => \"\u00a1hola bob!\" \u5185\u5074\u306e\u30de\u30af\u30ed\u306e\u5909\u6570\u306f verbatim \u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u306f\u6709\u52b9\u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u8eab\u306f\u300c\u305d\u306e\u307e\u307e\u300d\u6587\u5b57\u5217\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6e21\u3055\u308c\u3001\u518d\u5ea6\u691c\u67fb\u3055\u308c\u307e\u3059\u3002","title":"verbatim"},{"location":"syntax_and_semantics/macros/index.html#_13","text":"\u30b3\u30e1\u30f3\u30c8\u4e2d\u306e\u30de\u30af\u30ed\u306e\u5f0f\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u30b3\u30fc\u30c9\u3068\u540c\u69d8\u306b\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u95a2\u4fc2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b3\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u4f7f\u3048\u307e\u3059\u3002 {% for name , index in [ \"foo\" , \"bar\" , \"baz\" ] %} # Provides a placeholder {{name.id}} method. Always returns {{index}}. def {{ name . id }} {{ index }} end {% end %} \u3053\u306e\u8a55\u4fa1\u306f\u57cb\u3081\u8fbc\u307f\u3060\u3051\u3067\u306a\u304f\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306b\u5bfe\u3057\u3066\u3082\u306f\u305f\u3089\u304d\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u3001\u30de\u30af\u30ed\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 macro a # {% if false %} puts 42 # {% end %} end a \u4e0a\u8a18\u306e\u5f0f\u306f\u4f55\u3082\u51fa\u529b\u3057\u306a\u3044\u3067\u3057\u3087\u3046\u3002","title":"\u30b3\u30e1\u30f3\u30c8"},{"location":"syntax_and_semantics/macros/index.html#_14","text":"\u30de\u30af\u30ed\u3092\u66f8\u304f\u969b (\u3068\u304f\u306b\u30de\u30af\u30ed\u5b9a\u7fa9\u306e\u5916\u3067)\u3001\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f\u3001\u30e1\u30a4\u30f3\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30fc\u30c9\u306b\u30de\u30fc\u30b8\u3055\u308c\u308b\u524d\u304b\u3089\u3001\u305d\u308c\u81ea\u8eab\u3068\u3057\u3066\u6709\u52b9\u306a\u30b3\u30fc\u30c9\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3092\u899a\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u8981\u3059\u308b\u306b\u3001\u4f8b\u3048\u3070\u3001\u30de\u30af\u30ed\u306f\u5192\u982d\u306e case \u304c\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a case \u5f0f\u306e when \u7bc0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u6b21\u304c\u3001\u305d\u306e\u3088\u3046\u306a\u7121\u52b9\u306a\u30de\u30af\u30ed\u306e\u4f8b\u306b\u306a\u308a\u307e\u3059\u3002 case 42 {% for klass in [ Int32 , String ] %} # Syntax Error: unexpected token: {% (expecting when, else or end) when {{ klass . id }} p \"is {{klass}}\" {% end %} end case \u304c\u30de\u30af\u30ed\u306e\u5916\u5074\u306b\u3042\u308b\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f2\u3064\u306e\u5b64\u7acb\u3057\u305f when \u7bc0\u304b\u3089\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u6709\u52b9\u306a Crystal \u306e\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 case \u3092\u30de\u30af\u30ed\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u30b3\u30fc\u30c9\u306b\u542b\u3081\u308b\u305f\u3081\u306b\u3001 begin \u3068 end \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 {% begin %} case 42 {% for klass in [ Int32 , String ] %} when {{ klass . id }} p \"is {{klass}}\" {% end %} end {% end %}","title":"\u843d\u3068\u3057\u7a74"},{"location":"syntax_and_semantics/macros/fresh_variables.html","text":"\u30d5\u30ec\u30c3\u30b7\u30e5\u5909\u6570 \u30de\u30af\u30ed\u304c\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306f\u901a\u5e38\u306e Crystal \u30d1\u30fc\u30b5\u30fc\u3067\u30d1\u30fc\u30b9\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u3068\u304d\u3001\u30de\u30af\u30ed\u547c\u3073\u51fa\u3057\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5185\u306e\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002 \u4f8b\u3092\u898b\u3066\u307f\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002 macro update_x x = 1 end x = 0 update_x x # => 1 \u3053\u308c\u306f\u3001\u6545\u610f\u306b\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3092\u8aad\u307f\u66f8\u304d\u3059\u308b\u30b3\u30fc\u30c9\u3092\u7e70\u308a\u8fd4\u3057\u66f8\u304f\u306e\u3092\u907f\u3051\u308b\u3053\u3068\u306b\u6709\u52b9\u3067\u3059\u304c\u3001\u4e00\u65b9\u3067\u8aa4\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3092\u4e0a\u66f8\u304d\u3057\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u81ea\u4f53\u3092\u907f\u3051\u308b\u305f\u3081\u3001\u30d5\u30ec\u30c3\u30b7\u30e5\u5909\u6570\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3092 %name \u3067\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 macro dont_update_x % x = 1 puts % x end x = 0 dont_update_x # outputs 1 x # => 0 \u4e0a\u8a18\u306e\u4f8b\u3067\u306f %x \u3068\u3057\u3066\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u73fe\u5728\u306e\u30b9\u30b3\u30fc\u30d7\u306e\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3068\u540d\u524d\u304c\u885d\u7a81\u3057\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\u3067\u304d\u307e\u3059\u3002 \u307e\u305f\u3001 %var{key1, key2, ..., keyN} \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u4ed6\u306e AST \u30ce\u30fc\u30c9\u306b\u7d50\u3073\u3064\u3044\u305f\u30d5\u30ec\u30c3\u30b7\u30e5\u5909\u6570\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 macro fresh_vars_sample ( * names ) # \u307e\u305a\u5909\u6570\u3092\u5ba3\u8a00\u3059\u308b {% for name , index in names %} print \"Declaring: \" , \"%name{index}\" , '\\n' % name { index } = {{ index }} {% end %} # \u305d\u308c\u304b\u3089\u51fa\u529b\u3059\u308b {% for name , index in names %} print \"%name{index}: \" , % name { index }, '\\n' {% end %} end fresh_vars_sample a , b , c # \u51fa\u529b\u4f8b: # Declaring: __temp_255 # Declaring: __temp_256 # Declaring: __temp_257 # __temp_255: 0 # __temp_256: 1 # __temp_257: 2 \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u30013\u3064\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3055\u308c\u305f\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3001\u5024\u3092\u4ee3\u5165\u3057\u3066\u3001\u305d\u308c\u304b\u3089\u5404\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3064\u3044\u3066\u5bfe\u5fdc\u3059\u308b\u5024\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u30d5\u30ec\u30c3\u30b7\u30e5\u5909\u6570"},{"location":"syntax_and_semantics/macros/fresh_variables.html#_1","text":"\u30de\u30af\u30ed\u304c\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306f\u901a\u5e38\u306e Crystal \u30d1\u30fc\u30b5\u30fc\u3067\u30d1\u30fc\u30b9\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u3068\u304d\u3001\u30de\u30af\u30ed\u547c\u3073\u51fa\u3057\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5185\u306e\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002 \u4f8b\u3092\u898b\u3066\u307f\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002 macro update_x x = 1 end x = 0 update_x x # => 1 \u3053\u308c\u306f\u3001\u6545\u610f\u306b\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3092\u8aad\u307f\u66f8\u304d\u3059\u308b\u30b3\u30fc\u30c9\u3092\u7e70\u308a\u8fd4\u3057\u66f8\u304f\u306e\u3092\u907f\u3051\u308b\u3053\u3068\u306b\u6709\u52b9\u3067\u3059\u304c\u3001\u4e00\u65b9\u3067\u8aa4\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3092\u4e0a\u66f8\u304d\u3057\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u81ea\u4f53\u3092\u907f\u3051\u308b\u305f\u3081\u3001\u30d5\u30ec\u30c3\u30b7\u30e5\u5909\u6570\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3092 %name \u3067\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 macro dont_update_x % x = 1 puts % x end x = 0 dont_update_x # outputs 1 x # => 0 \u4e0a\u8a18\u306e\u4f8b\u3067\u306f %x \u3068\u3057\u3066\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u73fe\u5728\u306e\u30b9\u30b3\u30fc\u30d7\u306e\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3068\u540d\u524d\u304c\u885d\u7a81\u3057\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\u3067\u304d\u307e\u3059\u3002 \u307e\u305f\u3001 %var{key1, key2, ..., keyN} \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u4ed6\u306e AST \u30ce\u30fc\u30c9\u306b\u7d50\u3073\u3064\u3044\u305f\u30d5\u30ec\u30c3\u30b7\u30e5\u5909\u6570\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 macro fresh_vars_sample ( * names ) # \u307e\u305a\u5909\u6570\u3092\u5ba3\u8a00\u3059\u308b {% for name , index in names %} print \"Declaring: \" , \"%name{index}\" , '\\n' % name { index } = {{ index }} {% end %} # \u305d\u308c\u304b\u3089\u51fa\u529b\u3059\u308b {% for name , index in names %} print \"%name{index}: \" , % name { index }, '\\n' {% end %} end fresh_vars_sample a , b , c # \u51fa\u529b\u4f8b: # Declaring: __temp_255 # Declaring: __temp_256 # Declaring: __temp_257 # __temp_255: 0 # __temp_256: 1 # __temp_257: 2 \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u30013\u3064\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3055\u308c\u305f\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3001\u5024\u3092\u4ee3\u5165\u3057\u3066\u3001\u305d\u308c\u304b\u3089\u5404\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3064\u3044\u3066\u5bfe\u5fdc\u3059\u308b\u5024\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u30d5\u30ec\u30c3\u30b7\u30e5\u5909\u6570"},{"location":"syntax_and_semantics/macros/hooks.html","text":"\u30d5\u30c3\u30af \u3042\u308b\u72b6\u6cc1\u306b\u304a\u3044\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3001\u30d5\u30c3\u30af\u3068\u3044\u3046\u7279\u5225\u306a\u30de\u30af\u30ed\u304c\u3042\u308a\u307e\u3059\u3002 inherited \u306f\u30b5\u30d6\u30af\u30e9\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 @type \u306f\u7d99\u627f\u3055\u308c\u305f\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u578b\u3068\u306a\u308a\u307e\u3059\u3002 included \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 @type \u306f\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u5074\u306e\u578b\u3068\u306a\u308a\u307e\u3059\u3002 extended \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u304c extend \u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 @type \u306f extend \u3059\u308b\u5074\u306e\u578b\u306b\u306a\u308a\u307e\u3059\u3002 method_missing \u306f\u30e1\u30bd\u30c3\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 method_added \u306f\u73fe\u5728\u306e\u30b9\u30b3\u30fc\u30d7\u306b\u65b0\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 finished is invoked after parsing finished, so all types and their methods are known. inherited \u306e\u4f8b\u3067\u3059\u3002 class Parent macro inherited def lineage \"{{@type.name.id}} < Parent\" end end end class Child < Parent end Child . new . lineage # => \"Child < Parent\" method_missing \u306e\u4f8b\u3067\u3059\u3002 macro method_missing ( call ) print \"Got \" , {{ call . name . id . stringify }} , \" with \" , {{ call . args . size }} , \" arguments\" , '\\n' end foo # Prints: Got foo with 0 arguments bar 'a' , 'b' # Prints: Got bar with 2 arguments method_added \u306e\u4f8b\u3067\u3059\u3002 macro method_added ( method ) {% puts \"Method added:\" , method . name . stringify %} end def generate_random_number 4 end # => Method added: generate_random_number method_missing \u3068 method_added \u306f\u30de\u30af\u30ed\u306e\u5b9a\u7fa9\u3055\u308c\u305f\u30af\u30e9\u30b9\u3068\u540c\u3058\u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u547c\u3073\u51fa\u3057\u3001\u3082\u3057\u304f\u306f\u5b9a\u7fa9\u306b\u5bfe\u3057\u3066\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u3042\u308b\u3044\u306f\u3001\u3053\u306e\u30de\u30af\u30ed\u304c\u30af\u30e9\u30b9\u306e\u5916\u5074\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306f\u3001\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u3082\u306e\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 macro method_missing ( call ) puts \"In outer scope, got call: \" , {{ call . name . stringify }} end class SomeClass macro method_missing ( call ) puts \"Inside SomeClass, got call: \" , {{ call . name . stringify }} end end class OtherClass end # \u3053\u306e\u547c\u3073\u51fa\u3057\u306f\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e `method_missing` \u306b\u3088\u3063\u3066\u51e6\u7406\u3055\u308c\u308b foo # => In outer scope, got call: foo obj = SomeClass . new # \u3053\u306e\u547c\u3073\u51fa\u3057\u306f SomeClass \u306b\u3088\u3063\u3066\u51e6\u7406\u3055\u308c\u308b obj . bar # => Inside SomeClass, got call: bar other = OtherClass . new # \u4e00\u65b9\u3001OtherClass \u306b\u306f `method_missing` \u30de\u30af\u30ed\u3092\u6301\u305f\u306a\u3044\u306e\u3067\u3001 other . baz # => Error: Undefined method 'baz' for OtherClass finished \u306f\u578b\u304c\u5b8c\u5168\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u3064\u307e\u308a\u305d\u306e\u578b\u306e\u62e1\u5f35\u3092\u3059\u3079\u3066\u542b\u3081\u3066\u3001\u3061\u3087\u3046\u3069\u4e00\u5ea6\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u6b21\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 macro print_methods {% puts @type . methods . map &. name %} end class Foo macro finished {% puts @type . methods . map &. name %} end print_methods end class Foo def bar puts \"I'm a method!\" end end Foo . new . bar print_methods \u30de\u30af\u30ed\u306f\u73fe\u308c\u305f\u3068\u3053\u308d\u3067\u3059\u3050\u3055\u307e\u5b9f\u884c\u3055\u308c\u3001\u7a7a\u306e\u914d\u5217\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u3053\u306e\u6642\u70b9\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u306f\u4f55\u3082\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u30022\u756a\u76ee\u306e Foo \u306e\u5ba3\u8a00\u304c\u51e6\u7406\u3055\u308c\u305f\u306e\u3061\u3001 finished \u30de\u30af\u30ed\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u4eca\u5ea6\u306f [bar] \u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30d5\u30c3\u30af"},{"location":"syntax_and_semantics/macros/hooks.html#_1","text":"\u3042\u308b\u72b6\u6cc1\u306b\u304a\u3044\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3001\u30d5\u30c3\u30af\u3068\u3044\u3046\u7279\u5225\u306a\u30de\u30af\u30ed\u304c\u3042\u308a\u307e\u3059\u3002 inherited \u306f\u30b5\u30d6\u30af\u30e9\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 @type \u306f\u7d99\u627f\u3055\u308c\u305f\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u578b\u3068\u306a\u308a\u307e\u3059\u3002 included \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 @type \u306f\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u5074\u306e\u578b\u3068\u306a\u308a\u307e\u3059\u3002 extended \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u304c extend \u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 @type \u306f extend \u3059\u308b\u5074\u306e\u578b\u306b\u306a\u308a\u307e\u3059\u3002 method_missing \u306f\u30e1\u30bd\u30c3\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 method_added \u306f\u73fe\u5728\u306e\u30b9\u30b3\u30fc\u30d7\u306b\u65b0\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 finished is invoked after parsing finished, so all types and their methods are known. inherited \u306e\u4f8b\u3067\u3059\u3002 class Parent macro inherited def lineage \"{{@type.name.id}} < Parent\" end end end class Child < Parent end Child . new . lineage # => \"Child < Parent\" method_missing \u306e\u4f8b\u3067\u3059\u3002 macro method_missing ( call ) print \"Got \" , {{ call . name . id . stringify }} , \" with \" , {{ call . args . size }} , \" arguments\" , '\\n' end foo # Prints: Got foo with 0 arguments bar 'a' , 'b' # Prints: Got bar with 2 arguments method_added \u306e\u4f8b\u3067\u3059\u3002 macro method_added ( method ) {% puts \"Method added:\" , method . name . stringify %} end def generate_random_number 4 end # => Method added: generate_random_number method_missing \u3068 method_added \u306f\u30de\u30af\u30ed\u306e\u5b9a\u7fa9\u3055\u308c\u305f\u30af\u30e9\u30b9\u3068\u540c\u3058\u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u547c\u3073\u51fa\u3057\u3001\u3082\u3057\u304f\u306f\u5b9a\u7fa9\u306b\u5bfe\u3057\u3066\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u3042\u308b\u3044\u306f\u3001\u3053\u306e\u30de\u30af\u30ed\u304c\u30af\u30e9\u30b9\u306e\u5916\u5074\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306f\u3001\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u3082\u306e\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 macro method_missing ( call ) puts \"In outer scope, got call: \" , {{ call . name . stringify }} end class SomeClass macro method_missing ( call ) puts \"Inside SomeClass, got call: \" , {{ call . name . stringify }} end end class OtherClass end # \u3053\u306e\u547c\u3073\u51fa\u3057\u306f\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e `method_missing` \u306b\u3088\u3063\u3066\u51e6\u7406\u3055\u308c\u308b foo # => In outer scope, got call: foo obj = SomeClass . new # \u3053\u306e\u547c\u3073\u51fa\u3057\u306f SomeClass \u306b\u3088\u3063\u3066\u51e6\u7406\u3055\u308c\u308b obj . bar # => Inside SomeClass, got call: bar other = OtherClass . new # \u4e00\u65b9\u3001OtherClass \u306b\u306f `method_missing` \u30de\u30af\u30ed\u3092\u6301\u305f\u306a\u3044\u306e\u3067\u3001 other . baz # => Error: Undefined method 'baz' for OtherClass finished \u306f\u578b\u304c\u5b8c\u5168\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u3064\u307e\u308a\u305d\u306e\u578b\u306e\u62e1\u5f35\u3092\u3059\u3079\u3066\u542b\u3081\u3066\u3001\u3061\u3087\u3046\u3069\u4e00\u5ea6\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u6b21\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 macro print_methods {% puts @type . methods . map &. name %} end class Foo macro finished {% puts @type . methods . map &. name %} end print_methods end class Foo def bar puts \"I'm a method!\" end end Foo . new . bar print_methods \u30de\u30af\u30ed\u306f\u73fe\u308c\u305f\u3068\u3053\u308d\u3067\u3059\u3050\u3055\u307e\u5b9f\u884c\u3055\u308c\u3001\u7a7a\u306e\u914d\u5217\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u3053\u306e\u6642\u70b9\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u306f\u4f55\u3082\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u30022\u756a\u76ee\u306e Foo \u306e\u5ba3\u8a00\u304c\u51e6\u7406\u3055\u308c\u305f\u306e\u3061\u3001 finished \u30de\u30af\u30ed\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u4eca\u5ea6\u306f [bar] \u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30d5\u30c3\u30af"},{"location":"syntax_and_semantics/macros/macro_methods.html","text":"\u30de\u30af\u30ed\u30e1\u30bd\u30c3\u30c9 \u30de\u30af\u30ed def \u3092\u4f7f\u3046\u3068\u3001\u5404\u30b5\u30d6\u30bf\u30a4\u30d7\u306e\u5b9f\u4f53\u306b\u5fdc\u3058\u305f\u30af\u30e9\u30b9\u968e\u5c64\u306b\u3064\u3044\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def \u306f @type \u3092\u53c2\u7167\u3059\u308b\u30de\u30af\u30ed\u5f0f\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u304d\u306b macro def \u3068\u3057\u3066\u8003\u616e\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Object def instance_vars_names {{ @type . instance_vars . map &. name . stringify }} end end class Person def initialize ( @name : String , @age : Int32 ) end end person = Person . new \"John\" , 30 person . instance_vars_names # => [\"name\", \"age\"] \u30de\u30af\u30ed\u5b9a\u7fa9\u3067\u306f\u3001\u5f15\u6570\u306f\u305d\u308c\u81ea\u8eab\u306e AST \u30ce\u30fc\u30c9\u3068\u3057\u3066\u6e21\u3055\u308c {{some_macro_argument}} \u306e\u3088\u3046\u306b\u3057\u3066\u305d\u308c\u3089\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u30de\u30af\u30ed def \u3067\u306f\u305d\u308c\u306f\u7570\u306a\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u5f15\u6570\u30ea\u30b9\u30c8\u306f\u30de\u30af\u30ed def \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u305d\u308c\u3089\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 class Object def has_instance_var? ( name ) : Bool # \u3053\u3053\u3067\u3001\u30de\u30af\u30ed\u5c55\u958b\u306b\u3088\u3063\u3066 name \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044 # \u305d\u306e\u4ee3\u308f\u308a\u306b\u3001\u30de\u30af\u30ed\u306e\u8a18\u6cd5\u3092\u4f7f\u3063\u3066\u914d\u5217\u3092\u69cb\u7bc9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b # \u305d\u3057\u3066\u3001\u305d\u308c\u3092\u542b\u3093\u3067\u3044\u308b\u304b\u306e\u30c1\u30a7\u30c3\u30af\u3092\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b {{ @type . instance_vars . map &. name . stringify }} . includes?name end end person = Person . new \"John\" , 30 person . has_instance_var? ( \"name\" ) # => true person . has_instance_var? ( \"birthday\" ) # => false","title":"\u30de\u30af\u30ed\u30e1\u30bd\u30c3\u30c9"},{"location":"syntax_and_semantics/macros/macro_methods.html#_1","text":"\u30de\u30af\u30ed def \u3092\u4f7f\u3046\u3068\u3001\u5404\u30b5\u30d6\u30bf\u30a4\u30d7\u306e\u5b9f\u4f53\u306b\u5fdc\u3058\u305f\u30af\u30e9\u30b9\u968e\u5c64\u306b\u3064\u3044\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 def \u306f @type \u3092\u53c2\u7167\u3059\u308b\u30de\u30af\u30ed\u5f0f\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u304d\u306b macro def \u3068\u3057\u3066\u8003\u616e\u3055\u308c\u307e\u3059\u3002\u4f8b\u3092\u3042\u3052\u307e\u3059\u3002 class Object def instance_vars_names {{ @type . instance_vars . map &. name . stringify }} end end class Person def initialize ( @name : String , @age : Int32 ) end end person = Person . new \"John\" , 30 person . instance_vars_names # => [\"name\", \"age\"] \u30de\u30af\u30ed\u5b9a\u7fa9\u3067\u306f\u3001\u5f15\u6570\u306f\u305d\u308c\u81ea\u8eab\u306e AST \u30ce\u30fc\u30c9\u3068\u3057\u3066\u6e21\u3055\u308c {{some_macro_argument}} \u306e\u3088\u3046\u306b\u3057\u3066\u305d\u308c\u3089\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u30de\u30af\u30ed def \u3067\u306f\u305d\u308c\u306f\u7570\u306a\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u5f15\u6570\u30ea\u30b9\u30c8\u306f\u30de\u30af\u30ed def \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u305d\u308c\u3089\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 class Object def has_instance_var? ( name ) : Bool # \u3053\u3053\u3067\u3001\u30de\u30af\u30ed\u5c55\u958b\u306b\u3088\u3063\u3066 name \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044 # \u305d\u306e\u4ee3\u308f\u308a\u306b\u3001\u30de\u30af\u30ed\u306e\u8a18\u6cd5\u3092\u4f7f\u3063\u3066\u914d\u5217\u3092\u69cb\u7bc9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b # \u305d\u3057\u3066\u3001\u305d\u308c\u3092\u542b\u3093\u3067\u3044\u308b\u304b\u306e\u30c1\u30a7\u30c3\u30af\u3092\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b {{ @type . instance_vars . map &. name . stringify }} . includes?name end end person = Person . new \"John\" , 30 person . has_instance_var? ( \"name\" ) # => true person . has_instance_var? ( \"birthday\" ) # => false","title":"\u30de\u30af\u30ed\u30e1\u30bd\u30c3\u30c9"},{"location":"the_shards_command/index.html","text":"shards \u30b3\u30de\u30f3\u30c9 Crystal \u306b\u306f\u901a\u5e38\u3001\u4f9d\u5b58\u95a2\u4fc2\u7ba1\u7406\u30c4\u30fc\u30eb\u3068\u3057\u3066 Shards \u304c\u4ed8\u968f\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u306f Crystal \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u7ba1\u7406\u3057\u3066\u3001\u3042\u308b\u30b7\u30b9\u30c6\u30e0\u3084\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u307e\u305f\u304c\u3063\u3066\u518d\u73fe\u53ef\u80fd\u306a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5 Shards \u901a\u5e38\u3067\u3042\u308c\u3070 Crystal \u81ea\u8eab\u3068\u5171\u306b\u914d\u5e03\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001\u5206\u5272\u3055\u308c\u305f shards \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u306a\u305f\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u6709\u52b9\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306b\u306f\u3001 \u30ea\u30dd\u30b8\u30c8\u30ea \u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304b\u30af\u30ed\u30fc\u30f3\u3057\u3066\u304d\u3066\u3001 make CRFLAGS=--release \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u306f bin/shards \u306b\u3042\u308b\u306e\u3067\u3001 PATH \u306b\u305d\u308c\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4f7f\u3044\u65b9 shards \u306f shard.yml \u304c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a9\u30eb\u30c0 (\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea) \u306b\u7f6e\u3044\u3066\u3042\u308b\u3053\u3068\u3092\u8981\u6c42\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3068\u3001\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306a\u4f9d\u5b58\u95a2\u4fc2\u306e\u30ea\u30b9\u30c8\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u306f shards init \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u751f\u6210\u3067\u304d\u307e\u3059\u3002 \u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306f Shard \u306e\u66f8\u304d\u65b9 \u3068\u3044\u3046\u30ac\u30a4\u30c9 \u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u3066\u3001\u8a73\u7d30\u306a\u8aac\u660e\u306f shard.yml \u306e\u4ed5\u69d8 (\u82f1\u8a9e) \u306b\u3042\u308a\u307e\u3059\u3002 shards install \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u884c\u306a\u308f\u308c\u307e\u3059\u3002 shards install \u304c\u3082\u3046\u4e00\u5ea6\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u540c\u3058\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u305f\u3081\u306b\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306f shard.lock \u306b\u66f8\u304d\u51fa\u3055\u308c\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u518d\u73fe\u53ef\u80fd\u306a\u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001 shard.yml \u3068 shard.lock \u3092\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u4e0b\u306b\u7f6e\u3044\u3066\u304f\u3060\u3055\u3044\u3002 \u4ed6\u306eshard\u304b\u3089\u4f9d\u5b58\u3055\u308c\u308b\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u5834\u5408 shard.lock \u306f\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u4e0b\u306b\u7f6e\u304f\u3079\u304d \u3067\u306f\u3042\u3042\u308a\u307e\u305b\u3093 \u3002 shard.yml \u306e\u307f\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\u3002 .gitignore \u306b\u305d\u308c\u3092\u542b\u3081\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059 ( crystal init \u306f lib \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u521d\u671f\u5316\u3059\u308b\u969b\u306b\u305d\u308c\u3092\u81ea\u52d5\u7684\u306b\u884c\u3044\u307e\u3059). shards \u30b3\u30de\u30f3\u30c9 shards [ <options>... ] [ <command> ] \u30b3\u30de\u30f3\u30c9\u304c\u6307\u5b9a\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001 install \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 shards build : \u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u30d3\u30eb\u30c9 shards check : \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u4f9d\u5b58\u95a2\u4fc2\u306e\u691c\u8a3c shards init : shard.yml \u3092\u65b0\u898f\u306b\u751f\u6210 shards install : \u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb shards list : \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u306e\u4e00\u89a7\u3092\u8868\u793a shards prune : \u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u4f9d\u5b58\u95a2\u4fc2\u306e\u524a\u9664 shards update : \u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3068\u66f4\u65b0 shards version : shard \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a \u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u306e\u6709\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30b3\u30de\u30f3\u30c9\u540d\u306e\u3042\u3068\u306b --help \u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: --version : shards \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a -h, --help : \u4f7f\u7528\u65b9\u6cd5\u3092\u304a\u304a\u3056\u3063\u3071\u306b\u8868\u793a --no-color : \u8272\u4ed8\u3051\u3055\u308c\u305f\u51fa\u529b\u3092\u7121\u52b9\u306b\u3059\u308b --production : \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3002\u958b\u767a\u7528\u306e\u4f9d\u5b58\u95a2\u4fc2\u306f\u5b9f\u884c\u3055\u308c\u305a\u30ed\u30c3\u30af\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u306e\u307f\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002 shard.yml \u3068 shard.lock \u306e\u4f9d\u5b58\u95a2\u4fc2\u306e\u540c\u671f\u304c\u53d6\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306b\u30b3\u30de\u30f3\u30c9\u306f\u5931\u6557\u3057\u307e\u3059 ( install \u3001 update \u3001 check \u304a\u3088\u3073 list \u306e\u5834\u5408) -q, --quiet : \u30ed\u30b0\u306e\u5197\u9577\u3055\u3092\u6e1b\u3089\u3057\u3066\u3001\u8b66\u544a\u304a\u3088\u3073\u30a8\u30e9\u30fc\u306e\u307f\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3059\u308b -v, --verbose : \u30ed\u30b0\u306e\u5197\u9577\u3055\u3092\u5897\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u30c7\u30d0\u30c3\u30b0\u7528\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3082\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3059\u308b shards build shards build [ <targets> ] [ <options>... ] bin \u306b\u3042\u308b\u6307\u5b9a\u3057\u305f\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u3059\u3079\u3066\u304c\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30d3\u30eb\u30c9\u524d\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u3067\u3001 shards install \u3092\u4e8b\u524d\u306b\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30b3\u30de\u30f3\u30c9\u306b\u7d9a\u304f\u3059\u3079\u3066\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f crystal build \u306b\u6e21\u3055\u308c\u307e\u3059\u3002 shards check shards check \u3059\u3079\u3066\u306e\u4f9d\u5b58\u95a2\u4fc2\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u3066\u3001\u8981\u6c42\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u304b\u691c\u8a3c\u3057\u307e\u3059\u3002 \u7d42\u4e86\u30b3\u30fc\u30c9: 0 : \u4f9d\u5b58\u95a2\u4fc2\u306f\u5145\u8db3\u3055\u308c\u3066\u3044\u307e\u3059 1 : \u4f9d\u5b58\u95a2\u4fc2\u306f\u5145\u8db3\u3055\u308c\u3066\u3044\u307e\u305b\u3093 shards init shards init shard\u7528\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u751f\u6210\u3057\u3066 shard.yml \u3092\u751f\u6210\u3057\u307e\u3059\u3002 shards install shards install \u4f9d\u5b58\u95a2\u4fc2\u3092\u89e3\u6c7a\u3057\u3066\u3001\u305d\u308c\u3089\u3092 lib \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 shard.lock \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u89e3\u6c7a\u3057\u305f\u4f9d\u5b58\u95a2\u4fc2\u3001\u30ed\u30c3\u30af\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u3057\u304f\u306fGit\u30b3\u30df\u30c3\u30c8\u304b\u3089\u751f\u6210\u3057\u307e\u3059\u3002 shard.lock \u304c\u3042\u308b\u5834\u5408\u306f\u3001\u305d\u3053\u304b\u3089\u30ed\u30c3\u30af\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u30b3\u30df\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5f37\u5236\u3057\u307e\u3059\u3002\u30ed\u30c3\u30af\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8981\u6c42\u306b\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u3001\u30b3\u30de\u30f3\u30c9\u306f\u5931\u6557\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u885d\u7a81\u3059\u308b\u3053\u3068\u306a\u304f\u65b0\u3057\u3044\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3067\u304d\u308c\u3070\u3001\u65b0\u305f\u306a shard.lock \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u30b3\u30de\u30f3\u30c9\u306f\u6210\u529f\u3057\u307e\u3059\u3002 shards list shards list \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u3068\u305d\u308c\u3089\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u8868\u793a\u3057\u307e\u3059\u3002 shards prune shards prune \u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u4f9d\u5b58\u95a2\u4fc2\u3092lib\u30d5\u30a9\u30eb\u30c0\u304b\u3089\u524a\u9664\u3057\u307e\u3059\u3002 shards update shards update shard.lock \u306b\u30ed\u30c3\u30af\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3084\u30b3\u30df\u30c3\u30c8\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u306b\u95a2\u308f\u3089\u305a\u3001\u3059\u3079\u3066\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u89e3\u6c7a\u3057\u3066lib\u30d5\u30a9\u30eb\u30c0\u306e\u5185\u5bb9\u3092\u518d\u5ea6\u66f4\u65b0\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u306f\u65b0\u305f\u306a shard.lock \u3092\u751f\u6210\u3057\u307e\u3059\u3002 shards version shards version [ <path> ] shard \u30b3\u30de\u30f3\u30c9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"shards \u30b3\u30de\u30f3\u30c9"},{"location":"the_shards_command/index.html#shards","text":"Crystal \u306b\u306f\u901a\u5e38\u3001\u4f9d\u5b58\u95a2\u4fc2\u7ba1\u7406\u30c4\u30fc\u30eb\u3068\u3057\u3066 Shards \u304c\u4ed8\u968f\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u306f Crystal \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u7ba1\u7406\u3057\u3066\u3001\u3042\u308b\u30b7\u30b9\u30c6\u30e0\u3084\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u307e\u305f\u304c\u3063\u3066\u518d\u73fe\u53ef\u80fd\u306a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002","title":"shards \u30b3\u30de\u30f3\u30c9"},{"location":"the_shards_command/index.html#_1","text":"Shards \u901a\u5e38\u3067\u3042\u308c\u3070 Crystal \u81ea\u8eab\u3068\u5171\u306b\u914d\u5e03\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001\u5206\u5272\u3055\u308c\u305f shards \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u306a\u305f\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u6709\u52b9\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306b\u306f\u3001 \u30ea\u30dd\u30b8\u30c8\u30ea \u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304b\u30af\u30ed\u30fc\u30f3\u3057\u3066\u304d\u3066\u3001 make CRFLAGS=--release \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u306f bin/shards \u306b\u3042\u308b\u306e\u3067\u3001 PATH \u306b\u305d\u308c\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5"},{"location":"the_shards_command/index.html#_2","text":"shards \u306f shard.yml \u304c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a9\u30eb\u30c0 (\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea) \u306b\u7f6e\u3044\u3066\u3042\u308b\u3053\u3068\u3092\u8981\u6c42\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3068\u3001\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306a\u4f9d\u5b58\u95a2\u4fc2\u306e\u30ea\u30b9\u30c8\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u306f shards init \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u751f\u6210\u3067\u304d\u307e\u3059\u3002 \u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306f Shard \u306e\u66f8\u304d\u65b9 \u3068\u3044\u3046\u30ac\u30a4\u30c9 \u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u3066\u3001\u8a73\u7d30\u306a\u8aac\u660e\u306f shard.yml \u306e\u4ed5\u69d8 (\u82f1\u8a9e) \u306b\u3042\u308a\u307e\u3059\u3002 shards install \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u884c\u306a\u308f\u308c\u307e\u3059\u3002 shards install \u304c\u3082\u3046\u4e00\u5ea6\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u540c\u3058\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u305f\u3081\u306b\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306f shard.lock \u306b\u66f8\u304d\u51fa\u3055\u308c\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u518d\u73fe\u53ef\u80fd\u306a\u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001 shard.yml \u3068 shard.lock \u3092\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u4e0b\u306b\u7f6e\u3044\u3066\u304f\u3060\u3055\u3044\u3002 \u4ed6\u306eshard\u304b\u3089\u4f9d\u5b58\u3055\u308c\u308b\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u5834\u5408 shard.lock \u306f\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u4e0b\u306b\u7f6e\u304f\u3079\u304d \u3067\u306f\u3042\u3042\u308a\u307e\u305b\u3093 \u3002 shard.yml \u306e\u307f\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\u3002 .gitignore \u306b\u305d\u308c\u3092\u542b\u3081\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059 ( crystal init \u306f lib \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u521d\u671f\u5316\u3059\u308b\u969b\u306b\u305d\u308c\u3092\u81ea\u52d5\u7684\u306b\u884c\u3044\u307e\u3059).","title":"\u4f7f\u3044\u65b9"},{"location":"the_shards_command/index.html#shards_1","text":"shards [ <options>... ] [ <command> ] \u30b3\u30de\u30f3\u30c9\u304c\u6307\u5b9a\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001 install \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 shards build : \u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u30d3\u30eb\u30c9 shards check : \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u4f9d\u5b58\u95a2\u4fc2\u306e\u691c\u8a3c shards init : shard.yml \u3092\u65b0\u898f\u306b\u751f\u6210 shards install : \u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb shards list : \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u306e\u4e00\u89a7\u3092\u8868\u793a shards prune : \u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u4f9d\u5b58\u95a2\u4fc2\u306e\u524a\u9664 shards update : \u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3068\u66f4\u65b0 shards version : shard \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a \u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u306e\u6709\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30b3\u30de\u30f3\u30c9\u540d\u306e\u3042\u3068\u306b --help \u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: --version : shards \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a -h, --help : \u4f7f\u7528\u65b9\u6cd5\u3092\u304a\u304a\u3056\u3063\u3071\u306b\u8868\u793a --no-color : \u8272\u4ed8\u3051\u3055\u308c\u305f\u51fa\u529b\u3092\u7121\u52b9\u306b\u3059\u308b --production : \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3002\u958b\u767a\u7528\u306e\u4f9d\u5b58\u95a2\u4fc2\u306f\u5b9f\u884c\u3055\u308c\u305a\u30ed\u30c3\u30af\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u306e\u307f\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002 shard.yml \u3068 shard.lock \u306e\u4f9d\u5b58\u95a2\u4fc2\u306e\u540c\u671f\u304c\u53d6\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306b\u30b3\u30de\u30f3\u30c9\u306f\u5931\u6557\u3057\u307e\u3059 ( install \u3001 update \u3001 check \u304a\u3088\u3073 list \u306e\u5834\u5408) -q, --quiet : \u30ed\u30b0\u306e\u5197\u9577\u3055\u3092\u6e1b\u3089\u3057\u3066\u3001\u8b66\u544a\u304a\u3088\u3073\u30a8\u30e9\u30fc\u306e\u307f\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3059\u308b -v, --verbose : \u30ed\u30b0\u306e\u5197\u9577\u3055\u3092\u5897\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u30c7\u30d0\u30c3\u30b0\u7528\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3082\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3059\u308b","title":"shards \u30b3\u30de\u30f3\u30c9"},{"location":"the_shards_command/index.html#shards-build","text":"shards build [ <targets> ] [ <options>... ] bin \u306b\u3042\u308b\u6307\u5b9a\u3057\u305f\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u3059\u3079\u3066\u304c\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30d3\u30eb\u30c9\u524d\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u3067\u3001 shards install \u3092\u4e8b\u524d\u306b\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u5fc5\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30b3\u30de\u30f3\u30c9\u306b\u7d9a\u304f\u3059\u3079\u3066\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f crystal build \u306b\u6e21\u3055\u308c\u307e\u3059\u3002","title":"shards build"},{"location":"the_shards_command/index.html#shards-check","text":"shards check \u3059\u3079\u3066\u306e\u4f9d\u5b58\u95a2\u4fc2\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u3066\u3001\u8981\u6c42\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u304b\u691c\u8a3c\u3057\u307e\u3059\u3002 \u7d42\u4e86\u30b3\u30fc\u30c9: 0 : \u4f9d\u5b58\u95a2\u4fc2\u306f\u5145\u8db3\u3055\u308c\u3066\u3044\u307e\u3059 1 : \u4f9d\u5b58\u95a2\u4fc2\u306f\u5145\u8db3\u3055\u308c\u3066\u3044\u307e\u305b\u3093","title":"shards check"},{"location":"the_shards_command/index.html#shards-init","text":"shards init shard\u7528\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u751f\u6210\u3057\u3066 shard.yml \u3092\u751f\u6210\u3057\u307e\u3059\u3002","title":"shards init"},{"location":"the_shards_command/index.html#shards-install","text":"shards install \u4f9d\u5b58\u95a2\u4fc2\u3092\u89e3\u6c7a\u3057\u3066\u3001\u305d\u308c\u3089\u3092 lib \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 shard.lock \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u89e3\u6c7a\u3057\u305f\u4f9d\u5b58\u95a2\u4fc2\u3001\u30ed\u30c3\u30af\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u3057\u304f\u306fGit\u30b3\u30df\u30c3\u30c8\u304b\u3089\u751f\u6210\u3057\u307e\u3059\u3002 shard.lock \u304c\u3042\u308b\u5834\u5408\u306f\u3001\u305d\u3053\u304b\u3089\u30ed\u30c3\u30af\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u30b3\u30df\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5f37\u5236\u3057\u307e\u3059\u3002\u30ed\u30c3\u30af\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8981\u6c42\u306b\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u3001\u30b3\u30de\u30f3\u30c9\u306f\u5931\u6557\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u885d\u7a81\u3059\u308b\u3053\u3068\u306a\u304f\u65b0\u3057\u3044\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3067\u304d\u308c\u3070\u3001\u65b0\u305f\u306a shard.lock \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u30b3\u30de\u30f3\u30c9\u306f\u6210\u529f\u3057\u307e\u3059\u3002","title":"shards install"},{"location":"the_shards_command/index.html#shards-list","text":"shards list \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u3068\u305d\u308c\u3089\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"shards list"},{"location":"the_shards_command/index.html#shards-prune","text":"shards prune \u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u4f9d\u5b58\u95a2\u4fc2\u3092lib\u30d5\u30a9\u30eb\u30c0\u304b\u3089\u524a\u9664\u3057\u307e\u3059\u3002","title":"shards prune"},{"location":"the_shards_command/index.html#shards-update","text":"shards update shard.lock \u306b\u30ed\u30c3\u30af\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3084\u30b3\u30df\u30c3\u30c8\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u306b\u95a2\u308f\u3089\u305a\u3001\u3059\u3079\u3066\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u89e3\u6c7a\u3057\u3066lib\u30d5\u30a9\u30eb\u30c0\u306e\u5185\u5bb9\u3092\u518d\u5ea6\u66f4\u65b0\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u306f\u65b0\u305f\u306a shard.lock \u3092\u751f\u6210\u3057\u307e\u3059\u3002","title":"shards update"},{"location":"the_shards_command/index.html#shards-version","text":"shards version [ <path> ] shard \u30b3\u30de\u30f3\u30c9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"shards version"},{"location":"using_the_compiler/index.html","text":"\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4f7f\u3044\u65b9 \u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u540c\u6642\u306b\u5b9f\u884c\u3059\u308b \u30d5\u30a1\u30a4\u30eb\u540d\u30921\u3064\u6307\u5b9a\u3057\u3066 crystal run \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u3092\u4e00\u767a\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 $ echo 'puts \"Hello World!\"' > hello_world.cr $ crystal run hello_world.cr Hello World! run \u30b3\u30de\u30f3\u30c9\u306f hello_world.cr \u3068\u3044\u3046\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u305d\u306e\u5834\u9650\u308a\u306e\u5b9f\u884c\u53ef\u80fd\u30d0\u30a4\u30ca\u30ea\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3001\u5373\u6642\u306b\u305d\u308c\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210 crystal build \u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u53ef\u80fd\u30d0\u30a4\u30ca\u30ea\u304c\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002 \u51fa\u529b\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u304b\u3089 .cr \u3068\u3044\u3046\u62e1\u5f35\u5b50\u3092\u9664\u3044\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 $ crystal build hello_world.cr $ ./hello_world Hello World! \u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306f\u5b8c\u5168\u306b\u306f\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 --release \u3068\u3044\u3046\u30d5\u30e9\u30b0\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u6700\u9069\u5316\u3092\u6709\u52b9\u306b\u3067\u304d\u307e\u3059\u3002 $ crystal build hello_world.cr --release \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3067\u306a\u3044\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u5341\u5206\u306b\u65e9\u304f\u3001\u307e\u305f\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u3082\u305d\u308c\u306a\u308a\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3067\u306f\u3042\u308a\u307e\u3059\u3002 \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3067\u306e\u30d3\u30eb\u30c9\u306f\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u306e\u5229\u7528\u3084\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306e\u6e2c\u5b9a\u306e\u969b\u306b\u7528\u3044\u3066\u304f\u3060\u3055\u3044\u3002 \u958b\u767a\u6642\u306e\u30d3\u30eb\u30c9\u3067\u3042\u308c\u3070\u3001\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u3092\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u914d\u5e03\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u306b\u306f\u3001 --no-debug \u30d5\u30e9\u30b0\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u6709\u52b9\u3067\u3059\u3002\u3053\u308c\u306f\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u30c7\u30d0\u30c3\u30b0\u30b7\u30f3\u30dc\u30eb\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u524a\u9664\u3057\u307e\u3059\u304c\u3001\u4e00\u65b9\u3001\u5f53\u7136\u306b\u30c7\u30d0\u30c3\u30b0\u306f\u56f0\u96e3\u306b\u306a\u308a\u307e\u3059\u3002 \u9759\u7684\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210 --static \u30d5\u30e9\u30b0\u306f\u3001\u9759\u7684\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u306b\u7528\u3044\u307e\u3059\u3002 $ crystal build hello_world.cr --release --static Note \u9759\u7684\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u30d3\u30eb\u30c9\u306f\u73fe\u5728Alpine Linux\u4e0a\u3067\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u9759\u7684\u30ea\u30f3\u30af\u306b\u3064\u3044\u3066\u306e\u3088\u308a\u8a73\u7d30\u306a\u60c5\u5831\u306f \u300c\u9759\u7684\u30ea\u30f3\u30af\u300d\u306b\u3064\u3044\u3066\u306e\u30ac\u30a4\u30c9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f CRYSTAL_LIBRARY_PATH \u3068\u3044\u3046\u74b0\u5883\u5909\u6570\u3092\u3001\u9759\u7684\u3082\u3057\u304f\u306f\u52d5\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6700\u521d\u306b\u63a2\u7d22\u3059\u308b\u5834\u6240\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3082\u6709\u52b9\u306a\u3001\u9759\u7684\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u306b\u4f7f\u3048\u307e\u3059\u3002 Crystal \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210 crystal init \u30b3\u30de\u30f3\u30c9\u306f\u57fa\u672c\u7684\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u6301\u3063\u305f Crystal \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u521d\u671f\u5316\u3092\u3059\u308b\u306e\u306b\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 crystal init app <name> \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5411\u3051\u3067\u3001 crystal init lib <name> \u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u5411\u3051\u3067\u3059\u3002 $ crystal init app myapp create myapp/.gitignore create myapp/.editorconfig create myapp/LICENSE create myapp/README.md create myapp/.travis.yml create myapp/shard.yml create myapp/src/myapp.cr create myapp/src/myapp/version.cr create myapp/spec/spec_helper.cr create myapp/spec/myapp_spec.cr Initialized empty Git repository in /home/crystal/myapp/.git/ \u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3089\u3086\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5fc5\u8981\u306b\u306a\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u5fc5\u8981\u306b\u611f\u3058\u308b\u5834\u5408\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u3001 crystal init \u306f Crystal \u306el\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u958b\u767a\u306b\u5341\u5206\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u74b0\u5883\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 crystal init : \u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210 crystal build : \u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u30d3\u30eb\u30c9 crystal docs : \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u751f\u6210 crystal env : Crystal \u74b0\u5883\u306e\u60c5\u5831\u3092\u8868\u793a crystal eval : \u5f15\u6570\u3084\u6a19\u6e96\u5165\u529b\u304b\u3089\u30b3\u30fc\u30c9\u3092\u8a55\u4fa1 crystal play : Crystal \u30d7\u30ec\u30a4\u30b0\u30e9\u30a6\u30f3\u30c9\u3092\u8d77\u52d5 crystal run : \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d3\u30eb\u30c9\u3057\u3066\u5b9f\u884c crystal spec : spec \u3092\u30d3\u30eb\u30c9\u3057\u3066\u5b9f\u884c crystal tool : \u30c4\u30fc\u30eb\u306e\u5b9f\u884c crystal help : \u30b3\u30de\u30f3\u30c9\u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d8\u30eb\u30d7\u306e\u8868\u793a crystal version : \u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u8868\u793a \u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u306e\u6709\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30b3\u30de\u30f3\u30c9\u540d\u306e\u3042\u3068\u306b --help \u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002 crystal run run \u30b3\u30de\u30f3\u30c9\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u53ef\u80fd\u30d0\u30a4\u30ca\u30ea\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3001\u5373\u6642\u306b\u305d\u308c\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 crystal [run] [<options>] <programfile> [-- <argument>...] \u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u3078\u306e\u5f15\u6570\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u3078\u306e\u5f15\u6570\u306e\u3042\u3068\u306b2\u3064\u306e\u30cf\u30a4\u30d5\u30f3 ( -- ) \u3067\u533a\u5207\u3063\u3066\u6e21\u3057\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u306e\u9593\u3001\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306f\u4e00\u6642\u7684\u306a\u5834\u6240\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4f8b: $ echo 'puts \"Hello #{ARGV[0]?}!\"' > hello_world.cr $ crystal run hello_world.cr -- Crystal Hello Crystal! \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: --release : \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306b\u6700\u9069\u5316\u3092\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b --progress : \u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u9032\u6357\u3092\u9010\u6b21\u8868\u793a\u3059\u308b --static : \u9759\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b \u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u7d71\u5408\u3055\u308c\u305f\u30d8\u30eb\u30d7\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 crystal run --help \u3092\u4f7f\u3046\u304b\u3001 man crystal \u3067 man \u30da\u30fc\u30b8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002 crystal build crystal build \u30b3\u30de\u30f3\u30c9\u306f\u52d5\u7684\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d0\u30a4\u30ca\u30ea\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002 crystal build [<options>] <programfile> \u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u3001\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u304b\u3089 .cr \u3068\u3044\u3046\u62e1\u5f35\u5b50\u3092\u9664\u3044\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u4f8b: $ echo 'puts \"Hello #{ARGV[0]?}!\"' > hello_world.cr $ crystal build hello_world.cr $ ./hello_world Crystal Hello Crystal! \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: --cross-compile : .o \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u3001\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3092\u8868\u793a\u3059\u308b -D FLAG, --define FLAG : \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3059\u308b -o <output_file> : \u51fa\u529b\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b --release : \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306b\u6700\u9069\u5316\u3092\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b --link-flags FLAGS : \u30ea\u30f3\u30ab\u306b\u6e21\u3059\u8ffd\u52a0\u306e\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3059\u308b --lto=thin : \u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306b ThinLTO \u3092\u5229\u7528\u3059\u308b\u3002 --no-debug : \u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u30c7\u30d0\u30c3\u30b0\u30b7\u30f3\u30dc\u30eb\u306e\u751f\u6210\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b --progress : \u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u9032\u6357\u3092\u9010\u6b21\u8868\u793a\u3059\u308b --static : \u9759\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b --verbose : \u5185\u90e8\u7684\u306b\u5b9f\u884c\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092\u8868\u793a\u3059\u308b \u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u7d71\u5408\u3055\u308c\u305f\u30d8\u30eb\u30d7\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 crystal build --help \u3092\u4f7f\u3046\u304b\u3001 man crystal \u3067 man \u30da\u30fc\u30b8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002 crystal eval crystal eval \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3067\u3001\u305d\u308c\u3092\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5373\u6642\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002 crystal eval [<options>] [<source>] source \u304c\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u306e\u9593\u3001\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306f\u4e00\u6642\u7684\u306a\u5834\u6240\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4f8b: $ crystal eval 'puts \"Hello World\"' Hello World! $ echo 'puts \"Hello World\"' | crystal eval Hello World! Note \u5bfe\u8a71\u7684\u306b\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u3001\u4e00\u822c\u7684\u306b\u306f Ctrl+D \u3092\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u6a19\u6e96\u5165\u529b\u3092\u9589\u3058\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: -o <output_file> : \u51fa\u529b\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b --release : \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306b\u6700\u9069\u5316\u3092\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b --lto=thin : \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306b ThinLTO \u3092\u5229\u7528\u3059\u308b\u3002 --no-debug : \u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u30c7\u30d0\u30c3\u30b0\u30b7\u30f3\u30dc\u30eb\u306e\u751f\u6210\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b --progress : \u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u9032\u6357\u3092\u9010\u6b21\u8868\u793a\u3059\u308b --static : \u9759\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b lgst\u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u7d71\u5408\u3055\u308c\u305f\u30d8\u30eb\u30d7\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 crystal eval --help \u3092\u4f7f\u3046\u304b\u3001 man crystal \u3067 man \u30da\u30fc\u30b8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002 crystal version crystal version \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3084 LLVM \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3001\u305d\u3057\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u3046\u30bf\u30fc\u30b2\u30c3\u30c8\u30c8\u30ea\u30d7\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 crystal version \u4f8b: $ crystal version --8<-- \"crystal-version.txt\" crystal init crystal init \u30b3\u30de\u30f3\u30c9\u306f Crystal \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u4f7f\u3046\u30d5\u30a9\u30eb\u30c0\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002 crystal init (lib|app) <name> [<dir>] \u6700\u521d\u306e\u5f15\u6570\u306f lib \u304b app \u306e\u3044\u305a\u308c\u304b\u3067\u3059\u3002 lib \u306f\u518d\u5229\u7528\u53ef\u80fd\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001 app \u306f\u4f9d\u5b58\u95a2\u4fc2\u306b\u542b\u3081\u308b\u3053\u3068\u306e\u306a\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u308b\u3053\u3068\u3092\u610f\u56f3\u3057\u3066\u3044\u307e\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u81ea\u8eab\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b shard.lock \u3092\u542b\u3081\u305a\u3001 shard.yml \u306b\u30d3\u30eb\u30c9\u76ee\u6a19\u3092\u6301\u3061\u307e\u305b\u3093\u304c\u3001\u4f9d\u5b58\u95a2\u4fc2\u3068\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u5229\u7528\u3059\u308b\u304b\u306e\u8aac\u660e\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b: $ crystal init lib my_cool_lib create my_cool_lib/.gitignore create my_cool_lib/.editorconfig create my_cool_lib/LICENSE create my_cool_lib/README.md create my_cool_lib/.travis.yml create my_cool_lib/shard.yml create my_cool_lib/src/my_cool_lib.cr create my_cool_lib/spec/spec_helper.cr create my_cool_lib/spec/my_cool_lib_spec.cr Initialized empty Git repository in ~/my_cool_lib/.git/ crystal docs crystal docs \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306e\u30b3\u30e1\u30f3\u30c8\u304b\u3089 API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u307e\u3059 (\u8a73\u3057\u304f\u306f \u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u3092\u53c2\u7167)\u3002 crystal docs [ --output = <output_dir> ] [ --canonical-base-url = <url> ] [ <source_file>... ] \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f output_dir (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f ./docs ) \u306b\u3001 Crystal \u3067\u306e\u540d\u524d\u3092\u53cd\u6620\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3067\u3001\u5404 HTML \u30d5\u30a1\u30a4\u30eb\u304c1\u30641\u3064\u306e\u578b\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306a\u3001\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002Web \u30d6\u30e9\u30a6\u30b6\u3067\u898b\u308b\u969b\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306f docs/index.html \u306b\u306a\u308a\u307e\u3059\u3002 API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5168\u4f53\u306f JSON \u3068\u3057\u3066 $output_dir/index.json \u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001 ./src \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210\u3092\u3057\u307e\u3059 (\u3064\u307e\u308a src/**/*.cr \u304c\u6307\u5b9a\u3055\u308c\u305f\u3088\u3046\u306a\u6319\u52d5\u3067\u3059)\u3002 \u8aad\u3080\u8fbc\u3080\u9806\u5e8f\u306b\u4f9d\u5b58\u3059\u308b\u5834\u5408\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306b\u660e\u793a\u7684\u306b1\u3064 (\u306a\u3044\u3057\u8907\u6570) \u306e source_file \u3092\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3057\u3066\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 crystal docs src/my_app.cr \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: --project-name=NAME : \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3092\u8a2d\u5b9a\u3059\u308b\u3002\u53ef\u80fd\u306a\u5834\u5408 shard.yml \u306b\u3042\u308b\u540d\u524d\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u3001\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u5fc5\u9808\u3067\u3059 --project-version=VERSION : \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u53ef\u80fd\u306a\u5834\u5408 shard.yml \u306b\u6307\u5b9a\u3055\u308c\u305f\u3082\u306e\u304bgit\u306e\u30b3\u30df\u30c3\u30c8\u304b\u3089\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u3001\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u5fc5\u9808\u3067\u3059 --output=DIR, -o DIR : \u51fa\u529b\u5148\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b (\u30c7\u30d5\u30a9\u30eb\u30c8: ./docs ) --canonical-base-url=URL, -b URL : canonical \u306a\u30d9\u30fc\u30b9 URL \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u306fcanonical\u306a\u30d9\u30fc\u30b9URL\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u305f\u4e0a\u3067\u3001 public \u3092\u51fa\u529b\u5148\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3057\u3066, \u305d\u3057\u3066 src/my_app.cr \u3092\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002 crystal docs --output public --canonical-base-url http://example.com/ src/my_app.cr crystal env crystal env \u30b3\u30de\u30f3\u30c9\u306f Crystal \u304c\u4f7f\u3046\u74b0\u5883\u5909\u6570\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 crystal env [ <var>... ] \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u3088\u3046\u306b\u60c5\u5831\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\u3082\u3057\u3044\u304f\u3064\u304b\u306e var \u5f15\u6570\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u3001\u305d\u308c\u3089\u306e\u5909\u6570\u306e\u5024\u304c\u305d\u308c\u305e\u308c\u306e\u884c\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 \u4f8b: $ crystal env CRYSTAL_CACHE_DIR=\"/home/crystal/.cache/crystal\" CRYSTAL_PATH=\"/usr/bin/../share/crystal/src:lib\" CRYSTAL_VERSION=\"0.28.0\" CRYSTAL_LIBRARY_PATH=\"/usr/bin/../lib/crystal/lib\" $ crystal env CRYSTAL_VERSION 0.28.0 crystal spec crystal spec \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e spec \u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u3092\u4e00\u5ea6\u306b\u884c\u3044\u307e\u3059\u3002 crystal spec [<options>] [<file>...] [-- [<runner_options>]] files \u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u306f1\u3064\u306e Crystal \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u3057\u3066\u7d50\u5408\u3055\u308c\u307e\u3059\u3002\u5f15\u6570\u304c\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u305d\u306e\u30d5\u30a9\u30eb\u30c0\u4e2d\u306e spec \u3092\u307e\u3068\u3081\u3066\u6307\u5b9a\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4f55\u3082 files \u5f15\u6570\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066 ./spec \u304c\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f : \u3068\u884c\u756a\u53f7\u3092\u3042\u3068\u306b\u7d9a\u3051\u308b\u3053\u3068\u3067\u3001spec \u30e9\u30f3\u30ca\u30fc\u306b\u5bfe\u3057\u3066 --location \u3067\u6307\u5b9a\u3059\u308b\u5834\u5408\u3068\u540c\u69d8\u306e\u6307\u5b9a\u304c\u3067\u304d\u307e\u3059 (\u3053\u306e\u5f8c\u306b\u8a73\u7d30)\u3002 crystal spec --options \u3067\u53ef\u80fd\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 spec \u30e9\u30f3\u30ca\u30fc\u306b\u5bfe\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3: runner_options \u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f spec \u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u6e21\u3059\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u4ed6\u306e\u5f15\u6570\u3068\u306f -- \u3067\u533a\u5207\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 --verbose : \u3059\u3079\u3066\u306e spec \u540d\u3092\u542b\u3080\u3088\u3046\u306a\u8a73\u7d30\u306a\u51fa\u529b\u3092\u3059\u308b --profile : \u5b9f\u884c\u306b\u6642\u9593\u306e\u304b\u304b\u3063\u305f spec \u309210\u500b\u307e\u3067\u8868\u793a\u3059\u308b --fail-fast : \u3069\u308c\u304b1\u3064\u3067\u3082 spec \u304c\u5931\u6557\u3057\u305f\u3089\u5373\u5ea7\u306b\u4e2d\u65ad\u3059\u308b --junit_output <output_dir> : JUnit XML \u3092\u751f\u6210\u3059\u308b \u6b21\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u5b9f\u884c\u3059\u308b spec \u306e\u4e00\u89a7\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3059\u308b\u305f\u3081\u306b\u7d44\u307f\u5408\u308f\u305b\u3089\u308c\u307e\u3059\u3002 --example <name> : name \u3092\u542b\u3080\u3088\u3046\u306a spec \u3092\u5b9f\u884c\u3059\u308b --line <line> : \u884c\u756a\u53f7\u304c line \u306b\u4e00\u81f4\u3057\u305f spec \u3092\u5b9f\u884c\u3059\u308b --location <file>:<line> : file \u306e line \u306b\u3042\u308b spec \u3092\u5b9f\u884c\u3059\u308b (\u8907\u6570\u6307\u5b9a\u53ef\u80fd) --tag <tag> : \u6307\u5b9a\u3055\u308c\u305f\u30bf\u30b0\u3092\u6301\u3064 spec \u3092\u5b9f\u884c\u3059\u308b\u3001\u3082\u3057\u304f\u306f ~ \u306b\u7d9a\u3051\u305f\u30bf\u30b0\u3092\u6301\u3064 spec \u3092\u5b9f\u884c\u3059\u308b spec \u306e\u4e00\u89a7\u304b\u3089\u9664\u304f\u3002 --tag a --tag b \u3068\u3044\u3046\u6307\u5b9a\u306f\u3001\u30bf\u30b0 a \u3082\u3057\u304f\u306f\u30bf\u30b0 b \u3092\u6301\u3064 spec \u3092\u542b\u3081\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 --tag ~a --tag ~b \u3068\u3044\u3046\u6307\u5b9a\u306f \u30bf\u30b0 a \u3082\u30bf\u30b0 b \u3082\u6301\u305f\u306a\u3044 spec \u3092\u542b\u3081\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 --tag a --tag ~b \u3068\u3044\u3046\u6307\u5b9a\u306f\u3001\u30bf\u30b0 a \u3092\u6301\u3064\u304c\u30bf\u30b0 b \u3092\u6301\u305f\u306a\u3044\u3088\u3046\u306a spec \u3092\u542b\u3081\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u4f8b: $ crystal spec F Failures: 1) Myapp works Failure/Error: false.should eq(true) Expected: true got: false # spec/myapp_spec.cr:7 Finished in 880 microseconds 1 examples, 1 failures, 0 errors, 0 pending Failed examples: crystal spec spec/myapp_spec.cr:6 # Myapp works crystal play crystal play \u30b3\u30de\u30f3\u30c9\u306f\u5bfe\u8a71\u7684\u306a Crystal \u306e\u30d7\u30ec\u30a4\u30b0\u30e9\u30a6\u30f3\u30c9\u3092\u63d0\u4f9b\u3059\u308b Web \u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 crystal play [--port <port>] [--binding <host>] [--verbose] [file] crystal tool crystal tool context : \u4e0e\u3048\u3089\u308c\u305f\u4f4d\u7f6e\u3067\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a crystal tool expand : \u4e0e\u3048\u3089\u308c\u305f\u4f4d\u7f6e\u306e\u30de\u30af\u30ed\u3092\u5c55\u958b crystal tool format : Crystal \u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 crystal tool hierarchy : \u578b\u306e\u968e\u5c64\u3092\u8868\u793a crystal tool implementations : \u6307\u5b9a\u3055\u308c\u305f\u4f4d\u7f6e\u3067\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u304c\u3069\u3053\u306b\u3042\u308b\u304b\u3092\u8868\u793a crystal tool types : \u4e3b\u8981\u306a\u5909\u6570\u306e\u578b\u3092\u8868\u793a crystal tool format crystal tool format \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u6a19\u6e96\u7684\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u9069\u7528\u3057\u307e\u3059\u3002 crystal tool format [--check] [<path>...] path \u306b\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u304b\u30d5\u30a9\u30eb\u30c0\u540d\u304c\u6307\u5b9a\u3067\u304d\u3066\u3001\u30d5\u30a9\u30eb\u30c0\u540d\u306e\u5834\u5408\u305d\u306e\u30d5\u30a9\u30eb\u30c0\u4e2d\u306e Crystal \u30d5\u30a1\u30a4\u30eb\u3092\u518d\u5e30\u7684\u306b\u8fbf\u308a\u307e\u3059\u3002 path \u304c\u6307\u5b9a\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u73fe\u5728\u306e\u30c7\u30a4\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u305f\u3082\u306e\u3068\u3057\u307e\u3059\u3002 \u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u306f\u30b3\u30e1\u30f3\u30c8\u4e2d\u306e Crystal \u306e\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306b\u3082\u9069\u7528\u3055\u308c\u307e\u3059 (see \u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u3092\u53c2\u7167)\u3002 \u74b0\u5883\u5909\u6570 \u3053\u308c\u3089\u306e\u74b0\u5883\u5909\u6570\u306f\u3001\u3082\u3057\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308c\u3070 Crystal \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u5024\u306f crystal env \u3092\u4f7f\u3046\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 CRYSTAL_CACHE_DIR : \u7d9a\u304f\u30d3\u30eb\u30c9\u3092\u9ad8\u901f\u5316\u3059\u308b\u305f\u3081\u306b Crystal \u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u308b\u90e8\u5206\u7684\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u30d1\u30b9\u306f crystal run \u3067\u4e00\u6642\u7684\u306b\u4fdd\u5b58\u3055\u308c\u308b\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3059\u308b\u5148\u3068\u3057\u3066\u3082\u5229\u7528\u3055\u308c\u307e\u3059 ( crystal build \u3067\u306f\u5229\u7528\u3057\u307e\u305b\u3093)\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u6b21\u306b\u4e0a\u3052\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u3046\u3061\u6700\u521d\u306b\u898b\u3064\u304b\u3063\u305f\u304b\u4f5c\u6210\u53ef\u80fd\u3060\u3063\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059: ${XDG_CACHE_HOME}/crystal ( XDG_CACHE_HOME \u304c\u3042\u308b\u5834\u5408)\u3001 ${HOME}/.cache/crystal \u3001 ${HOME}/.crystal \u3001\u3082\u3057\u304f\u306f ./.crystal \u3002 CRYSTAL_CACHE_DIR \u3067\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u304c\u66f8\u304d\u8fbc\u307f\u4e0d\u53ef\u80fd\u3060\u3063\u305f\u5834\u5408\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u4ee3\u308f\u308a\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002 CRYSTAL_PATH : Crystal \u304c require \u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u63a2\u7d22\u3059\u308b\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 CRYSTAL_VERSION \u306f crystal env \u306e\u51fa\u529b\u3068\u3057\u3066\u306e\u307f\u6709\u52b9\u3067\u3059\u3002\u3053\u308c\u3092\u660e\u793a\u7684\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u305a\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u306e\u5909\u6570\u3092\u5b9f\u969b\u306b\u306f\u5229\u7528\u3057\u307e\u305b\u3093\u3002 CRYSTAL_LIBRARY_PATH : \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u306e\u5909\u6570\u306b\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u3092\u3001\u9759\u7684\u3082\u3057\u304f\u306f\u52d5\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6700\u521d\u306b\u63a2\u7d22\u3059\u308b\u5834\u6240\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u304c build/libs \u306b\u7f6e\u304b\u308c\u3066\u3044\u305f\u3068\u3059\u308b\u3068\u3001\u74b0\u5883\u5909\u6570\u3092\u305d\u308c\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u305d\u3053\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u7d22\u3057\u306b\u884c\u304f\u3088\u3046\u306b\u4f1d\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4f7f\u3044\u65b9"},{"location":"using_the_compiler/index.html#_1","text":"","title":"\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4f7f\u3044\u65b9"},{"location":"using_the_compiler/index.html#_2","text":"\u30d5\u30a1\u30a4\u30eb\u540d\u30921\u3064\u6307\u5b9a\u3057\u3066 crystal run \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u3092\u4e00\u767a\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 $ echo 'puts \"Hello World!\"' > hello_world.cr $ crystal run hello_world.cr Hello World! run \u30b3\u30de\u30f3\u30c9\u306f hello_world.cr \u3068\u3044\u3046\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u305d\u306e\u5834\u9650\u308a\u306e\u5b9f\u884c\u53ef\u80fd\u30d0\u30a4\u30ca\u30ea\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3001\u5373\u6642\u306b\u305d\u308c\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002","title":"\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u540c\u6642\u306b\u5b9f\u884c\u3059\u308b"},{"location":"using_the_compiler/index.html#_3","text":"crystal build \u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u53ef\u80fd\u30d0\u30a4\u30ca\u30ea\u304c\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002 \u51fa\u529b\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u304b\u3089 .cr \u3068\u3044\u3046\u62e1\u5f35\u5b50\u3092\u9664\u3044\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 $ crystal build hello_world.cr $ ./hello_world Hello World!","title":"\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210"},{"location":"using_the_compiler/index.html#_4","text":"\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306f\u5b8c\u5168\u306b\u306f\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 --release \u3068\u3044\u3046\u30d5\u30e9\u30b0\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u6700\u9069\u5316\u3092\u6709\u52b9\u306b\u3067\u304d\u307e\u3059\u3002 $ crystal build hello_world.cr --release \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3067\u306a\u3044\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u5341\u5206\u306b\u65e9\u304f\u3001\u307e\u305f\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u3082\u305d\u308c\u306a\u308a\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3067\u306f\u3042\u308a\u307e\u3059\u3002 \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3067\u306e\u30d3\u30eb\u30c9\u306f\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u306e\u5229\u7528\u3084\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306e\u6e2c\u5b9a\u306e\u969b\u306b\u7528\u3044\u3066\u304f\u3060\u3055\u3044\u3002 \u958b\u767a\u6642\u306e\u30d3\u30eb\u30c9\u3067\u3042\u308c\u3070\u3001\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u3092\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u914d\u5e03\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u306b\u306f\u3001 --no-debug \u30d5\u30e9\u30b0\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u6709\u52b9\u3067\u3059\u3002\u3053\u308c\u306f\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u30c7\u30d0\u30c3\u30b0\u30b7\u30f3\u30dc\u30eb\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u524a\u9664\u3057\u307e\u3059\u304c\u3001\u4e00\u65b9\u3001\u5f53\u7136\u306b\u30c7\u30d0\u30c3\u30b0\u306f\u56f0\u96e3\u306b\u306a\u308a\u307e\u3059\u3002","title":"\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9"},{"location":"using_the_compiler/index.html#_5","text":"--static \u30d5\u30e9\u30b0\u306f\u3001\u9759\u7684\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u306b\u7528\u3044\u307e\u3059\u3002 $ crystal build hello_world.cr --release --static Note \u9759\u7684\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u30d3\u30eb\u30c9\u306f\u73fe\u5728Alpine Linux\u4e0a\u3067\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u9759\u7684\u30ea\u30f3\u30af\u306b\u3064\u3044\u3066\u306e\u3088\u308a\u8a73\u7d30\u306a\u60c5\u5831\u306f \u300c\u9759\u7684\u30ea\u30f3\u30af\u300d\u306b\u3064\u3044\u3066\u306e\u30ac\u30a4\u30c9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f CRYSTAL_LIBRARY_PATH \u3068\u3044\u3046\u74b0\u5883\u5909\u6570\u3092\u3001\u9759\u7684\u3082\u3057\u304f\u306f\u52d5\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6700\u521d\u306b\u63a2\u7d22\u3059\u308b\u5834\u6240\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3082\u6709\u52b9\u306a\u3001\u9759\u7684\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u306b\u4f7f\u3048\u307e\u3059\u3002","title":"\u9759\u7684\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210"},{"location":"using_the_compiler/index.html#crystal","text":"crystal init \u30b3\u30de\u30f3\u30c9\u306f\u57fa\u672c\u7684\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u6301\u3063\u305f Crystal \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u521d\u671f\u5316\u3092\u3059\u308b\u306e\u306b\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 crystal init app <name> \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5411\u3051\u3067\u3001 crystal init lib <name> \u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u5411\u3051\u3067\u3059\u3002 $ crystal init app myapp create myapp/.gitignore create myapp/.editorconfig create myapp/LICENSE create myapp/README.md create myapp/.travis.yml create myapp/shard.yml create myapp/src/myapp.cr create myapp/src/myapp/version.cr create myapp/spec/spec_helper.cr create myapp/spec/myapp_spec.cr Initialized empty Git repository in /home/crystal/myapp/.git/ \u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3089\u3086\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5fc5\u8981\u306b\u306a\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u5fc5\u8981\u306b\u611f\u3058\u308b\u5834\u5408\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u3001 crystal init \u306f Crystal \u306el\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u958b\u767a\u306b\u5341\u5206\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u74b0\u5883\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002","title":"Crystal \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210"},{"location":"using_the_compiler/index.html#_6","text":"crystal init : \u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210 crystal build : \u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u30d3\u30eb\u30c9 crystal docs : \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u751f\u6210 crystal env : Crystal \u74b0\u5883\u306e\u60c5\u5831\u3092\u8868\u793a crystal eval : \u5f15\u6570\u3084\u6a19\u6e96\u5165\u529b\u304b\u3089\u30b3\u30fc\u30c9\u3092\u8a55\u4fa1 crystal play : Crystal \u30d7\u30ec\u30a4\u30b0\u30e9\u30a6\u30f3\u30c9\u3092\u8d77\u52d5 crystal run : \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d3\u30eb\u30c9\u3057\u3066\u5b9f\u884c crystal spec : spec \u3092\u30d3\u30eb\u30c9\u3057\u3066\u5b9f\u884c crystal tool : \u30c4\u30fc\u30eb\u306e\u5b9f\u884c crystal help : \u30b3\u30de\u30f3\u30c9\u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d8\u30eb\u30d7\u306e\u8868\u793a crystal version : \u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u8868\u793a \u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u306e\u6709\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30b3\u30de\u30f3\u30c9\u540d\u306e\u3042\u3068\u306b --help \u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"using_the_compiler/index.html#crystal-run","text":"run \u30b3\u30de\u30f3\u30c9\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u53ef\u80fd\u30d0\u30a4\u30ca\u30ea\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3001\u5373\u6642\u306b\u305d\u308c\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 crystal [run] [<options>] <programfile> [-- <argument>...] \u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u3078\u306e\u5f15\u6570\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u3078\u306e\u5f15\u6570\u306e\u3042\u3068\u306b2\u3064\u306e\u30cf\u30a4\u30d5\u30f3 ( -- ) \u3067\u533a\u5207\u3063\u3066\u6e21\u3057\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u306e\u9593\u3001\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306f\u4e00\u6642\u7684\u306a\u5834\u6240\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4f8b: $ echo 'puts \"Hello #{ARGV[0]?}!\"' > hello_world.cr $ crystal run hello_world.cr -- Crystal Hello Crystal! \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: --release : \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306b\u6700\u9069\u5316\u3092\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b --progress : \u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u9032\u6357\u3092\u9010\u6b21\u8868\u793a\u3059\u308b --static : \u9759\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b \u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u7d71\u5408\u3055\u308c\u305f\u30d8\u30eb\u30d7\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 crystal run --help \u3092\u4f7f\u3046\u304b\u3001 man crystal \u3067 man \u30da\u30fc\u30b8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002","title":"crystal run"},{"location":"using_the_compiler/index.html#crystal-build","text":"crystal build \u30b3\u30de\u30f3\u30c9\u306f\u52d5\u7684\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d0\u30a4\u30ca\u30ea\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002 crystal build [<options>] <programfile> \u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u3001\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u304b\u3089 .cr \u3068\u3044\u3046\u62e1\u5f35\u5b50\u3092\u9664\u3044\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002 \u4f8b: $ echo 'puts \"Hello #{ARGV[0]?}!\"' > hello_world.cr $ crystal build hello_world.cr $ ./hello_world Crystal Hello Crystal! \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: --cross-compile : .o \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u3001\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3092\u8868\u793a\u3059\u308b -D FLAG, --define FLAG : \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3059\u308b -o <output_file> : \u51fa\u529b\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b --release : \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306b\u6700\u9069\u5316\u3092\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b --link-flags FLAGS : \u30ea\u30f3\u30ab\u306b\u6e21\u3059\u8ffd\u52a0\u306e\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3059\u308b --lto=thin : \u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306b ThinLTO \u3092\u5229\u7528\u3059\u308b\u3002 --no-debug : \u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u30c7\u30d0\u30c3\u30b0\u30b7\u30f3\u30dc\u30eb\u306e\u751f\u6210\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b --progress : \u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u9032\u6357\u3092\u9010\u6b21\u8868\u793a\u3059\u308b --static : \u9759\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b --verbose : \u5185\u90e8\u7684\u306b\u5b9f\u884c\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092\u8868\u793a\u3059\u308b \u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u7d71\u5408\u3055\u308c\u305f\u30d8\u30eb\u30d7\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 crystal build --help \u3092\u4f7f\u3046\u304b\u3001 man crystal \u3067 man \u30da\u30fc\u30b8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002","title":"crystal build"},{"location":"using_the_compiler/index.html#crystal-eval","text":"crystal eval \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3067\u3001\u305d\u308c\u3092\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5373\u6642\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002 crystal eval [<options>] [<source>] source \u304c\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u306e\u9593\u3001\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306f\u4e00\u6642\u7684\u306a\u5834\u6240\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4f8b: $ crystal eval 'puts \"Hello World\"' Hello World! $ echo 'puts \"Hello World\"' | crystal eval Hello World! Note \u5bfe\u8a71\u7684\u306b\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u3001\u4e00\u822c\u7684\u306b\u306f Ctrl+D \u3092\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u6a19\u6e96\u5165\u529b\u3092\u9589\u3058\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: -o <output_file> : \u51fa\u529b\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b --release : \u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u306b\u6700\u9069\u5316\u3092\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b --lto=thin : \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306b ThinLTO \u3092\u5229\u7528\u3059\u308b\u3002 --no-debug : \u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u30c7\u30d0\u30c3\u30b0\u30b7\u30f3\u30dc\u30eb\u306e\u751f\u6210\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b --progress : \u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u9032\u6357\u3092\u9010\u6b21\u8868\u793a\u3059\u308b --static : \u9759\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b lgst\u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u7d71\u5408\u3055\u308c\u305f\u30d8\u30eb\u30d7\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 crystal eval --help \u3092\u4f7f\u3046\u304b\u3001 man crystal \u3067 man \u30da\u30fc\u30b8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002","title":"crystal eval"},{"location":"using_the_compiler/index.html#crystal-version","text":"crystal version \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3084 LLVM \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3001\u305d\u3057\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u3046\u30bf\u30fc\u30b2\u30c3\u30c8\u30c8\u30ea\u30d7\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 crystal version \u4f8b: $ crystal version --8<-- \"crystal-version.txt\"","title":"crystal version"},{"location":"using_the_compiler/index.html#crystal-init","text":"crystal init \u30b3\u30de\u30f3\u30c9\u306f Crystal \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u4f7f\u3046\u30d5\u30a9\u30eb\u30c0\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002 crystal init (lib|app) <name> [<dir>] \u6700\u521d\u306e\u5f15\u6570\u306f lib \u304b app \u306e\u3044\u305a\u308c\u304b\u3067\u3059\u3002 lib \u306f\u518d\u5229\u7528\u53ef\u80fd\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001 app \u306f\u4f9d\u5b58\u95a2\u4fc2\u306b\u542b\u3081\u308b\u3053\u3068\u306e\u306a\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u308b\u3053\u3068\u3092\u610f\u56f3\u3057\u3066\u3044\u307e\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u81ea\u8eab\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b shard.lock \u3092\u542b\u3081\u305a\u3001 shard.yml \u306b\u30d3\u30eb\u30c9\u76ee\u6a19\u3092\u6301\u3061\u307e\u305b\u3093\u304c\u3001\u4f9d\u5b58\u95a2\u4fc2\u3068\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u5229\u7528\u3059\u308b\u304b\u306e\u8aac\u660e\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b: $ crystal init lib my_cool_lib create my_cool_lib/.gitignore create my_cool_lib/.editorconfig create my_cool_lib/LICENSE create my_cool_lib/README.md create my_cool_lib/.travis.yml create my_cool_lib/shard.yml create my_cool_lib/src/my_cool_lib.cr create my_cool_lib/spec/spec_helper.cr create my_cool_lib/spec/my_cool_lib_spec.cr Initialized empty Git repository in ~/my_cool_lib/.git/","title":"crystal init"},{"location":"using_the_compiler/index.html#crystal-docs","text":"crystal docs \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306e\u30b3\u30e1\u30f3\u30c8\u304b\u3089 API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u307e\u3059 (\u8a73\u3057\u304f\u306f \u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u3092\u53c2\u7167)\u3002 crystal docs [ --output = <output_dir> ] [ --canonical-base-url = <url> ] [ <source_file>... ] \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f output_dir (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f ./docs ) \u306b\u3001 Crystal \u3067\u306e\u540d\u524d\u3092\u53cd\u6620\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3067\u3001\u5404 HTML \u30d5\u30a1\u30a4\u30eb\u304c1\u30641\u3064\u306e\u578b\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306a\u3001\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002Web \u30d6\u30e9\u30a6\u30b6\u3067\u898b\u308b\u969b\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306f docs/index.html \u306b\u306a\u308a\u307e\u3059\u3002 API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5168\u4f53\u306f JSON \u3068\u3057\u3066 $output_dir/index.json \u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001 ./src \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210\u3092\u3057\u307e\u3059 (\u3064\u307e\u308a src/**/*.cr \u304c\u6307\u5b9a\u3055\u308c\u305f\u3088\u3046\u306a\u6319\u52d5\u3067\u3059)\u3002 \u8aad\u3080\u8fbc\u3080\u9806\u5e8f\u306b\u4f9d\u5b58\u3059\u308b\u5834\u5408\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306b\u660e\u793a\u7684\u306b1\u3064 (\u306a\u3044\u3057\u8907\u6570) \u306e source_file \u3092\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3057\u3066\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 crystal docs src/my_app.cr \u3088\u304f\u4f7f\u3046\u30aa\u30d7\u30b7\u30e7\u30f3: --project-name=NAME : \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3092\u8a2d\u5b9a\u3059\u308b\u3002\u53ef\u80fd\u306a\u5834\u5408 shard.yml \u306b\u3042\u308b\u540d\u524d\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u3001\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u5fc5\u9808\u3067\u3059 --project-version=VERSION : \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u53ef\u80fd\u306a\u5834\u5408 shard.yml \u306b\u6307\u5b9a\u3055\u308c\u305f\u3082\u306e\u304bgit\u306e\u30b3\u30df\u30c3\u30c8\u304b\u3089\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u3001\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u5fc5\u9808\u3067\u3059 --output=DIR, -o DIR : \u51fa\u529b\u5148\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b (\u30c7\u30d5\u30a9\u30eb\u30c8: ./docs ) --canonical-base-url=URL, -b URL : canonical \u306a\u30d9\u30fc\u30b9 URL \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u306fcanonical\u306a\u30d9\u30fc\u30b9URL\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u305f\u4e0a\u3067\u3001 public \u3092\u51fa\u529b\u5148\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3057\u3066, \u305d\u3057\u3066 src/my_app.cr \u3092\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002 crystal docs --output public --canonical-base-url http://example.com/ src/my_app.cr","title":"crystal docs"},{"location":"using_the_compiler/index.html#crystal-env","text":"crystal env \u30b3\u30de\u30f3\u30c9\u306f Crystal \u304c\u4f7f\u3046\u74b0\u5883\u5909\u6570\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 crystal env [ <var>... ] \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u3088\u3046\u306b\u60c5\u5831\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\u3082\u3057\u3044\u304f\u3064\u304b\u306e var \u5f15\u6570\u304c\u6e21\u3055\u308c\u305f\u5834\u5408\u3001\u305d\u308c\u3089\u306e\u5909\u6570\u306e\u5024\u304c\u305d\u308c\u305e\u308c\u306e\u884c\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 \u4f8b: $ crystal env CRYSTAL_CACHE_DIR=\"/home/crystal/.cache/crystal\" CRYSTAL_PATH=\"/usr/bin/../share/crystal/src:lib\" CRYSTAL_VERSION=\"0.28.0\" CRYSTAL_LIBRARY_PATH=\"/usr/bin/../lib/crystal/lib\" $ crystal env CRYSTAL_VERSION 0.28.0","title":"crystal env"},{"location":"using_the_compiler/index.html#crystal-spec","text":"crystal spec \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e spec \u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u3092\u4e00\u5ea6\u306b\u884c\u3044\u307e\u3059\u3002 crystal spec [<options>] [<file>...] [-- [<runner_options>]] files \u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u306f1\u3064\u306e Crystal \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u3057\u3066\u7d50\u5408\u3055\u308c\u307e\u3059\u3002\u5f15\u6570\u304c\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u305d\u306e\u30d5\u30a9\u30eb\u30c0\u4e2d\u306e spec \u3092\u307e\u3068\u3081\u3066\u6307\u5b9a\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4f55\u3082 files \u5f15\u6570\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066 ./spec \u304c\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f : \u3068\u884c\u756a\u53f7\u3092\u3042\u3068\u306b\u7d9a\u3051\u308b\u3053\u3068\u3067\u3001spec \u30e9\u30f3\u30ca\u30fc\u306b\u5bfe\u3057\u3066 --location \u3067\u6307\u5b9a\u3059\u308b\u5834\u5408\u3068\u540c\u69d8\u306e\u6307\u5b9a\u304c\u3067\u304d\u307e\u3059 (\u3053\u306e\u5f8c\u306b\u8a73\u7d30)\u3002 crystal spec --options \u3067\u53ef\u80fd\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 spec \u30e9\u30f3\u30ca\u30fc\u306b\u5bfe\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3: runner_options \u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f spec \u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u6e21\u3059\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u4ed6\u306e\u5f15\u6570\u3068\u306f -- \u3067\u533a\u5207\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 --verbose : \u3059\u3079\u3066\u306e spec \u540d\u3092\u542b\u3080\u3088\u3046\u306a\u8a73\u7d30\u306a\u51fa\u529b\u3092\u3059\u308b --profile : \u5b9f\u884c\u306b\u6642\u9593\u306e\u304b\u304b\u3063\u305f spec \u309210\u500b\u307e\u3067\u8868\u793a\u3059\u308b --fail-fast : \u3069\u308c\u304b1\u3064\u3067\u3082 spec \u304c\u5931\u6557\u3057\u305f\u3089\u5373\u5ea7\u306b\u4e2d\u65ad\u3059\u308b --junit_output <output_dir> : JUnit XML \u3092\u751f\u6210\u3059\u308b \u6b21\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u5b9f\u884c\u3059\u308b spec \u306e\u4e00\u89a7\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3059\u308b\u305f\u3081\u306b\u7d44\u307f\u5408\u308f\u305b\u3089\u308c\u307e\u3059\u3002 --example <name> : name \u3092\u542b\u3080\u3088\u3046\u306a spec \u3092\u5b9f\u884c\u3059\u308b --line <line> : \u884c\u756a\u53f7\u304c line \u306b\u4e00\u81f4\u3057\u305f spec \u3092\u5b9f\u884c\u3059\u308b --location <file>:<line> : file \u306e line \u306b\u3042\u308b spec \u3092\u5b9f\u884c\u3059\u308b (\u8907\u6570\u6307\u5b9a\u53ef\u80fd) --tag <tag> : \u6307\u5b9a\u3055\u308c\u305f\u30bf\u30b0\u3092\u6301\u3064 spec \u3092\u5b9f\u884c\u3059\u308b\u3001\u3082\u3057\u304f\u306f ~ \u306b\u7d9a\u3051\u305f\u30bf\u30b0\u3092\u6301\u3064 spec \u3092\u5b9f\u884c\u3059\u308b spec \u306e\u4e00\u89a7\u304b\u3089\u9664\u304f\u3002 --tag a --tag b \u3068\u3044\u3046\u6307\u5b9a\u306f\u3001\u30bf\u30b0 a \u3082\u3057\u304f\u306f\u30bf\u30b0 b \u3092\u6301\u3064 spec \u3092\u542b\u3081\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 --tag ~a --tag ~b \u3068\u3044\u3046\u6307\u5b9a\u306f \u30bf\u30b0 a \u3082\u30bf\u30b0 b \u3082\u6301\u305f\u306a\u3044 spec \u3092\u542b\u3081\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 --tag a --tag ~b \u3068\u3044\u3046\u6307\u5b9a\u306f\u3001\u30bf\u30b0 a \u3092\u6301\u3064\u304c\u30bf\u30b0 b \u3092\u6301\u305f\u306a\u3044\u3088\u3046\u306a spec \u3092\u542b\u3081\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u4f8b: $ crystal spec F Failures: 1) Myapp works Failure/Error: false.should eq(true) Expected: true got: false # spec/myapp_spec.cr:7 Finished in 880 microseconds 1 examples, 1 failures, 0 errors, 0 pending Failed examples: crystal spec spec/myapp_spec.cr:6 # Myapp works","title":"crystal spec"},{"location":"using_the_compiler/index.html#crystal-play","text":"crystal play \u30b3\u30de\u30f3\u30c9\u306f\u5bfe\u8a71\u7684\u306a Crystal \u306e\u30d7\u30ec\u30a4\u30b0\u30e9\u30a6\u30f3\u30c9\u3092\u63d0\u4f9b\u3059\u308b Web \u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 crystal play [--port <port>] [--binding <host>] [--verbose] [file]","title":"crystal play"},{"location":"using_the_compiler/index.html#crystal-tool","text":"crystal tool context : \u4e0e\u3048\u3089\u308c\u305f\u4f4d\u7f6e\u3067\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u8868\u793a crystal tool expand : \u4e0e\u3048\u3089\u308c\u305f\u4f4d\u7f6e\u306e\u30de\u30af\u30ed\u3092\u5c55\u958b crystal tool format : Crystal \u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 crystal tool hierarchy : \u578b\u306e\u968e\u5c64\u3092\u8868\u793a crystal tool implementations : \u6307\u5b9a\u3055\u308c\u305f\u4f4d\u7f6e\u3067\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u304c\u3069\u3053\u306b\u3042\u308b\u304b\u3092\u8868\u793a crystal tool types : \u4e3b\u8981\u306a\u5909\u6570\u306e\u578b\u3092\u8868\u793a","title":"crystal tool"},{"location":"using_the_compiler/index.html#crystal-tool-format","text":"crystal tool format \u30b3\u30de\u30f3\u30c9\u306f Crystal \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u6a19\u6e96\u7684\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u9069\u7528\u3057\u307e\u3059\u3002 crystal tool format [--check] [<path>...] path \u306b\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u304b\u30d5\u30a9\u30eb\u30c0\u540d\u304c\u6307\u5b9a\u3067\u304d\u3066\u3001\u30d5\u30a9\u30eb\u30c0\u540d\u306e\u5834\u5408\u305d\u306e\u30d5\u30a9\u30eb\u30c0\u4e2d\u306e Crystal \u30d5\u30a1\u30a4\u30eb\u3092\u518d\u5e30\u7684\u306b\u8fbf\u308a\u307e\u3059\u3002 path \u304c\u6307\u5b9a\u3055\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u73fe\u5728\u306e\u30c7\u30a4\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u305f\u3082\u306e\u3068\u3057\u307e\u3059\u3002 \u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u306f\u30b3\u30e1\u30f3\u30c8\u4e2d\u306e Crystal \u306e\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u306b\u3082\u9069\u7528\u3055\u308c\u307e\u3059 (see \u30b3\u30fc\u30c9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u3092\u53c2\u7167)\u3002","title":"crystal tool format"},{"location":"using_the_compiler/index.html#_7","text":"\u3053\u308c\u3089\u306e\u74b0\u5883\u5909\u6570\u306f\u3001\u3082\u3057\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308c\u3070 Crystal \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u5024\u306f crystal env \u3092\u4f7f\u3046\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 CRYSTAL_CACHE_DIR : \u7d9a\u304f\u30d3\u30eb\u30c9\u3092\u9ad8\u901f\u5316\u3059\u308b\u305f\u3081\u306b Crystal \u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u308b\u90e8\u5206\u7684\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u30d1\u30b9\u306f crystal run \u3067\u4e00\u6642\u7684\u306b\u4fdd\u5b58\u3055\u308c\u308b\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3059\u308b\u5148\u3068\u3057\u3066\u3082\u5229\u7528\u3055\u308c\u307e\u3059 ( crystal build \u3067\u306f\u5229\u7528\u3057\u307e\u305b\u3093)\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u6b21\u306b\u4e0a\u3052\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u3046\u3061\u6700\u521d\u306b\u898b\u3064\u304b\u3063\u305f\u304b\u4f5c\u6210\u53ef\u80fd\u3060\u3063\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059: ${XDG_CACHE_HOME}/crystal ( XDG_CACHE_HOME \u304c\u3042\u308b\u5834\u5408)\u3001 ${HOME}/.cache/crystal \u3001 ${HOME}/.crystal \u3001\u3082\u3057\u304f\u306f ./.crystal \u3002 CRYSTAL_CACHE_DIR \u3067\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u304c\u66f8\u304d\u8fbc\u307f\u4e0d\u53ef\u80fd\u3060\u3063\u305f\u5834\u5408\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u4ee3\u308f\u308a\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002 CRYSTAL_PATH : Crystal \u304c require \u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u63a2\u7d22\u3059\u308b\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 CRYSTAL_VERSION \u306f crystal env \u306e\u51fa\u529b\u3068\u3057\u3066\u306e\u307f\u6709\u52b9\u3067\u3059\u3002\u3053\u308c\u3092\u660e\u793a\u7684\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u305a\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u306e\u5909\u6570\u3092\u5b9f\u969b\u306b\u306f\u5229\u7528\u3057\u307e\u305b\u3093\u3002 CRYSTAL_LIBRARY_PATH : \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u306e\u5909\u6570\u306b\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u3092\u3001\u9759\u7684\u3082\u3057\u304f\u306f\u52d5\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6700\u521d\u306b\u63a2\u7d22\u3059\u308b\u5834\u6240\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u304c build/libs \u306b\u7f6e\u304b\u308c\u3066\u3044\u305f\u3068\u3059\u308b\u3068\u3001\u74b0\u5883\u5909\u6570\u3092\u305d\u308c\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u305d\u3053\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u7d22\u3057\u306b\u884c\u304f\u3088\u3046\u306b\u4f1d\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u74b0\u5883\u5909\u6570"}]}